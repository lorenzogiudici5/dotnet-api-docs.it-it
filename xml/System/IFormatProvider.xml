<Type Name="IFormatProvider" FullName="System.IFormatProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="380cd37c1402c4dcf42f0e57f7d4df8be500b69c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430874" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.IFormatProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormatProvider" />
  <TypeSignature Language="F#" Value="type IFormatProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce un meccanismo per il recupero di un oggetto allo scopo di controllare la formattazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IFormatProvider> interfaccia fornisce un oggetto che fornisce informazioni di formattazione per le operazioni di analisi e formattazione. Operazioni di formattazione convertono il valore di un tipo per la rappresentazione di stringa del valore. Metodi di formattazione tipici sono il `ToString` metodi di un tipo, nonché <xref:System.String.Format%2A>. Le operazioni di analisi convertono la rappresentazione di stringa di un valore a un tipo con tale valore. Metodi di analisi tipici sono `Parse` e `TryParse`.  
  
 Il <xref:System.IFormatProvider> interfaccia è costituito da un singolo metodo, <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>. <xref:System.IFormatProvider.GetFormat%2A> è un metodo di callback: l'analisi o al metodo di formattazione viene chiamato e lo passa a un <xref:System.Type> oggetto che rappresenta il tipo di oggetto che è prevista la formattazione o l'analisi del metodo fornirà informazioni di formattazione. Il <xref:System.IFormatProvider.GetFormat%2A> metodo è responsabile della restituzione di un oggetto di tale tipo.  
  
 <xref:System.IFormatProvider> le implementazioni vengono spesso utilizzate in modo implicito dai metodi di analisi e formattazione. Ad esempio, il <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> metodo utilizza in modo implicito un <xref:System.IFormatProvider> implementazione che rappresenta impostazioni cultura correnti del sistema. <xref:System.IFormatProvider> le implementazioni possono anche essere specificate in modo esplicito dai metodi che includono un parametro di tipo <xref:System.IFormatProvider>, ad esempio <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> e <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 .NET Framework include i seguenti tre predefiniti <xref:System.IFormatProvider> implementazioni per fornire informazioni specifiche delle impostazioni cultura che viene utilizzate per la formattazione o analisi dei valori numerici e data e ora:  
  
-   Il <xref:System.Globalization.NumberFormatInfo> (classe), che fornisce informazioni che viene utilizzate per formattare i numeri, ad esempio valuta, migliaia separatore e i simboli di separatore decimale per impostazioni cultura specifiche. Per informazioni sulle stringhe di formato predefiniti riconosciuti da un <xref:System.Globalization.NumberFormatInfo> dell'oggetto e utilizzati in operazioni di formattazione numerica, vedere [stringhe di formato numerico Standard](~/docs/standard/base-types/standard-numeric-format-strings.md) e [stringhe di formato numerico personalizzato](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Il <xref:System.Globalization.DateTimeFormatInfo> (classe), che fornisce informazioni che viene usate per formattare date e ore, ad esempio i simboli dei separatori di data e ora per impostazioni cultura specifiche o l'ordine e il formato di una data anno, mese e giorno componenti. Per informazioni sulle stringhe di formato predefiniti riconosciuti da un <xref:System.Globalization.DateTimeFormatInfo> dell'oggetto e utilizzati in operazioni di formattazione numerica, vedere [stringhe di formato di ora e data Standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date e stringhe di formato di ora ](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Il <xref:System.Globalization.CultureInfo> (classe), che rappresenta determinate impostazioni cultura. Il relativo <xref:System.IFormatProvider.GetFormat%2A> metodo restituisce un oggetto specifico delle impostazioni cultura <xref:System.Globalization.NumberFormatInfo> o <xref:System.Globalization.DateTimeFormatInfo> oggetto, a seconda che il <xref:System.Globalization.CultureInfo> oggetto viene utilizzato in una formattazione o l'operazione che include numeri o date e ore di analisi.  
  
 .NET Framework supporta anche la formattazione personalizzata. Questo comportamento implica la creazione di una classe di formattazione che implementa sia <xref:System.IFormatProvider> e <xref:System.ICustomFormatter>. Un'istanza di questa classe viene quindi passata come parametro a un metodo che esegue un'operazione di formattazione personalizzata, ad esempio <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> nell'esempio viene illustrata una situazione di questo tipo un'implementazione personalizzata che consenta di formattare un numero come un numero di account a 12 cifre.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come un <xref:System.IFormatProvider> implementazione può modificare la rappresentazione di un valore data e ora. In questo caso, viene visualizzata una singola data tramite <xref:System.Globalization.CultureInfo> gli oggetti che rappresentano quattro diverse impostazioni cultura.  
  
 [!code-csharp[System.IFormatProvider.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/provider2.cs#3)]
 [!code-vb[System.IFormatProvider.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/provider2.vb#3)]  
  
 Nell'esempio seguente viene illustrato l'utilizzo di una classe che implementa il <xref:System.IFormatProvider> interfaccia e il <xref:System.IFormatProvider.GetFormat%2A> metodo. Il `AcctNumberFormat` classe converte un <xref:System.Int64> valore che rappresenta un numero di conto in un numero di account a 12 cifre formattato. Il relativo `GetFormat` metodo restituisce un riferimento all'oggetto corrente `AcctNumberFormat` dell'istanza se il `formatType` parametro fa riferimento a una classe che implementa <xref:System.ICustomFormatter>; in caso contrario, `GetFormat` restituisce `null`.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 La classe che implementa <xref:System.IFormatProvider> può quindi essere utilizzato in una chiamata a una formattazione e l'operazione di analisi. Ad esempio, il codice seguente chiama il <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> per generare una stringa che contiene un numero di account a 12 cifre formattato.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ICustomFormatter" />
    <altmember cref="T:System.IFormattable" />
  </Docs>
  <Members>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormatProvider.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj" Usage="iFormatProvider.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Oggetto in cui si specifica il tipo di oggetto Format da restituire.</param>
        <summary>Restituisce un oggetto che fornisce servizi di formattazione per il tipo specificato.</summary>
        <returns>Istanza dell'oggetto specificato da <paramref name="formatType" />, se l'implementazione di <see cref="T:System.IFormatProvider" /> è in grado di fornire quel tipo di oggetto; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormatProvider.GetFormat%2A> è un metodo di callback che richiamano i metodi di analisi e formattazione per recuperare le informazioni sul formato della stringa di input in operazioni di analisi o il formato della stringa di output nelle operazioni di formattazione. Nel `formatType` parametro, la formattazione o l'analisi del metodo passa il tipo di oggetto di cui necessita per eseguire l'operazione. Se il <xref:System.IFormatProvider> implementazione può fornire questo formattazione o analisi di oggetti, restituisce l'oggetto. Se non viene restituito `null`.  
  
 Ad esempio, nella chiamata ai <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> metodo, l'argomento del metodo è un <xref:System.IFormatProvider> oggetto che fornisce informazioni sul modo in cui può essere formattata la rappresentazione di stringa dell'istanza corrente di integer. Quando il runtime esegue il metodo, chiama il <xref:System.IFormatProvider> dell'oggetto <xref:System.IFormatProvider.GetFormat%2A> metodo e lo passa a un <xref:System.Type> oggetto che rappresenta il <xref:System.Globalization.NumberFormatInfo> tipo. Se il <xref:System.IFormatProvider> oggetto può fornire un <xref:System.Globalization.NumberFormatInfo> dell'oggetto, restituisce l'oggetto. Se non può fornire un oggetto di tale tipo, restituisce `null`.  
  
 È possibile implementare il <xref:System.IFormatProvider> interfaccia e il <xref:System.IFormatProvider.GetFormat%2A> metodo nelle classi che forniscono formattazione o analisi di servizi personalizzati. Il <xref:System.IFormatProvider> implementazione viene quindi passata come argomento a un overload del metodo con un parametro di tipo di formattazione o un'analisi <xref:System.IFormatProvider>, ad esempio <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, o <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo di una classe che implementa il <xref:System.IFormatProvider> interfaccia e il <xref:System.IFormatProvider.GetFormat%2A> metodo. Il `AcctNumberFormat` classe converte un <xref:System.Int64> valore che rappresenta un numero di conto in un numero di account a 12 cifre formattato. Il relativo `GetFormat` metodo restituisce un riferimento a se stessa se il `formatType` parametro fa riferimento a una classe che implementa <xref:System.ICustomFormatter>; in caso contrario, `GetFormat` restituisce `null`.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 Un'istanza di `AcctNumberFormat` classe può essere passata come argomento a un metodo che fornisce formattazione o analisi di servizi. Ad esempio, il codice seguente passa un `AcctNumberFormat` classe per il <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metodo per generare un numero di account a 12 cifre formattato.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>