<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07986ea157c411c7d8d2b8f8cc8045b040e5c96a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36431290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Origine dell'evento.</param>
    <param name="e">Oggetto che non contiene dati dell'evento.</param>
    <summary>Rappresenta il metodo che gestirà un evento senza dati sugli eventi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il modello di eventi in .NET Framework è basato su un delegato dell'evento che si connette a un evento con il relativo gestore. Per generare un evento, sono necessari due elementi:  
  
-   Un delegato che identifica il metodo che fornisce la risposta all'evento.  
  
-   Facoltativamente, una classe che trattiene i dati dell'evento, se l'evento fornisce i dati.  
  
 Il delegato è un tipo che definisce una firma, vale a dire, il tipo di valore restituito e i tipi di elenco di parametri per un metodo. È possibile utilizzare il tipo delegato per dichiarare una variabile che può fare riferimento a qualsiasi metodo con la stessa firma del delegato.  
  
 La firma standard di un delegato del gestore eventi definisce un metodo che non restituisce un valore. Il primo parametro del metodo è di tipo <xref:System.Object> e fa riferimento all'istanza che genera l'evento. Il secondo parametro viene derivato dal tipo <xref:System.EventArgs> e trattiene i dati dell'evento. Se l'evento non genera dati relativi all'evento, il secondo parametro è semplicemente il valore del campo <xref:System.EventArgs.Empty?displayProperty=nameWithType>. In caso contrario, il secondo parametro è un tipo derivato da <xref:System.EventArgs> e fornisce i campi e le proprietà necessarie per trattenere i dati dell'evento.  
  
 Il delegato <xref:System.EventHandler> è un delegato predefinito che rappresenta in modo specifico un metodo del gestore eventi per un evento che non genera dati. Se l'evento genera dati, è necessario utilizzare la classe delegata generica <xref:System.EventHandler%601>.  
  
 Per associare l'evento con il metodo che gestirà l'evento, aggiungere un'istanza del delegato all'evento. Il gestore eventi viene chiamato ogni volta che si verifica l'evento, a meno che non venga rimosso il delegato.  
  
 Per ulteriori informazioni sui delegati del gestore eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un evento denominato `ThresholdReached` associato a un delegato <xref:System.EventHandler>. Il metodo assegnato al delegato <xref:System.EventHandler> viene chiamato nel metodo `OnThresholdReached`.  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>