<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeInitializationException.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54e010e0c78c65b529ed1ad5c97ca2f1013dd01bc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e010e0c78c65b529ed1ad5c97ca2f1013dd01bc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.TypeInitializationException">
          <source>The exception that is thrown as a wrapper around the exception thrown by the class initializer.</source>
          <target state="translated">Eccezione generata come wrapper per l'eccezione generata dall'inizializzatore di classi.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.TypeInitializationException">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>When a class initializer fails to initialize a type, a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> is created and passed a reference to the exception thrown by the type's class initializer.</source>
          <target state="translated">Quando un inizializzatore di classi non inizializza un tipo, viene creata un'eccezione <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> che viene passata come riferimento all'eccezione generata dall'inizializzatore di classi del tipo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> holds the underlying exception.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> proprietà <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> contiene l'eccezione sottostante.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Typically, the <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception reflects a catastrophic condition (the runtime is unable to instantiate a type) that prevents an application from continuing.</source>
          <target state="translated">In genere, il <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> eccezione riflette una condizione irreversibile (il runtime non è in grado di creare un'istanza di un tipo) che impedisce di un'applicazione non potrà continuare.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Most commonly, the <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> is thrown in response to some change in the executing environment of the application.</source>
          <target state="translated">In genere, il <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> viene generata in risposta a alcune modifiche nell'ambiente di esecuzione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Consequently, other than possibly for troubleshooting debug code, the exception should not be handled in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">Di conseguenza, diverso da eventualmente per la risoluzione dei problemi di debug di codice, l'eccezione non deve essere gestito un <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> blocco.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Instead, the cause of the exception should be investigated and eliminated.</source>
          <target state="translated">Al contrario, la causa dell'eccezione deve essere esaminata ed eliminata.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source><ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> uses the HRESULT COR_E_TYPEINITIALIZATION, which has the value 0x80131534.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> utilizza HRESULT COR_E_TYPEINITIALIZATION, il cui valore 0x80131534.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.TypeInitializationException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">Per un elenco di valori di proprietà iniziali per un'istanza di <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph>, vedere il <ph id="ph2">&lt;xref:System.TypeInitializationException.%23ctor%2A&gt;</ph> costruttori.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The following sections describe some of the situations in which a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception is thrown.</source>
          <target state="translated">Nelle sezioni seguenti vengono descritte alcune delle situazioni in cui un <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source><bpt id="p1">[</bpt>Static constructors and the TypeInitializationException exception<ept id="p1">](#Static)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Costruttori statici e TypeInitializationException (eccezione)<ept id="p1">](#Static)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source><bpt id="p1">[</bpt>Regular expression match timeout values<ept id="p1">](#Timeout)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Valori di timeout di corrispondenza di espressione regolare<ept id="p1">](#Timeout)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source><bpt id="p1">[</bpt>Calendars and cultural data<ept id="p1">](#Calendars)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Calendari e i dati relativi alla lingua<ept id="p1">](#Calendars)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Static constructors and the TypeInitializationException exception</source>
          <target state="translated">Costruttori statici e TypeInitializationException (eccezione)</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>A static constructor, if one exists, is called automatically by the runtime before creating a new instance of a type.</source>
          <target state="translated">Un costruttore statico, se presente, viene chiamato automaticamente dal runtime prima di creare una nuova istanza di un tipo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Static constructors can be explicitly defined by a developer.</source>
          <target state="translated">Costruttori statici possono essere definiti in modo esplicito da uno sviluppatore.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>If a static  constructor is not explicitly defined, compilers automatically create one to initialize any <ph id="ph1">`static`</ph> (in C#) or <ph id="ph2">`Shared`</ph> (in Visual Basic) members of the type.</source>
          <target state="translated">Se un costruttore statico non è definito in modo esplicito, i compilatori creano automaticamente una per inizializzare qualsiasi <ph id="ph1">`static`</ph> (in c#) o <ph id="ph2">`Shared`</ph> (in Visual Basic) membri del tipo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>For more information on static constructors, see <bpt id="p1">[</bpt>Static Constructors<ept id="p1">](~/docs/csharp/programming-guide/classes-and-structs/static-constructors.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su costruttori statici, vedere <bpt id="p1">[</bpt>costruttori statici<ept id="p1">](~/docs/csharp/programming-guide/classes-and-structs/static-constructors.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Most commonly, a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception is thrown when a static constructor is unable to instantiate a type.</source>
          <target state="translated">In genere, un <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> eccezione viene generata quando un costruttore statico non è in grado di creare un'istanza di un tipo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property indicates why the static constructor was unable to instantiate the type.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> proprietà indica perché il costruttore statico non è riuscito a creare un'istanza del tipo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Some of the more common causes of a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception are:</source>
          <target state="translated">Alcune delle cause più comuni di un <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> eccezione è:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>An unhandled exception in a static constructor</source>
          <target state="translated">Un'eccezione non gestita in un costruttore statico</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>If an exception is thrown in a static constructor, that exception is wrapped in a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception, and the type cannot be instantiated.</source>
          <target state="translated">Se viene generata un'eccezione in un costruttore statico, tale eccezione viene inserita in un <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> eccezione e il tipo non può essere creata un'istanza.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>What often makes this exception difficult to troubleshoot is that static constructors are not always explicitly defined in source code.</source>
          <target state="translated">Cosa spesso difficile questa eccezione risolvere i problemi è che i costruttori statici non sono definiti sempre in modo esplicito nel codice sorgente.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>A static constructor exists in a type if:</source>
          <target state="translated">Un costruttore statico esiste in un tipo se:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>It has been explicitly defined as a member of a type.</source>
          <target state="translated">Si è stato definito in modo esplicito come membro di un tipo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The type has  <ph id="ph1">`static`</ph> (in C#) or <ph id="ph2">`Shared`</ph> (in Visual Basic) variables that are declared and initialized in a single statement.</source>
          <target state="translated">Il tipo è <ph id="ph1">`static`</ph> (in c#) o <ph id="ph2">`Shared`</ph> (in Visual Basic) variabili che vengono dichiarate e inizializzate in una singola istruzione.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>In this case, the language compiler generates a static constructor for the type.</source>
          <target state="translated">In questo caso, il compilatore genera un costruttore statico per il tipo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>You can inspect it by using a utility such as <bpt id="p1">[</bpt>IL Disassembler<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>.</source>
          <target state="translated">È possibile verificarlo utilizzando un'utilità, ad esempio <bpt id="p1">[</bpt>Disassembler IL<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>For instance, when the C# and VB compilers compile the following example, they generate the IL for a static constructor that is similar to this:</source>
          <target state="translated">Ad esempio, i compilatori c# e VB compilano l'esempio seguente, vengono generati il codice IL di un costruttore statico che è simile al seguente:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception thrown by a compiler-generated static constructor.</source>
          <target state="translated">Nell'esempio seguente un <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> eccezione generata da un costruttore statico generato dal compilatore.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The <ph id="ph1">`Example`</ph> class includes a <ph id="ph2">`static`</ph> (in C#) or <ph id="ph3">`Shared`</ph> (in Visual Basic) field of type <ph id="ph4">`TestClass`</ph> that is instantiated by passing a value of 3 to its class constructor.</source>
          <target state="translated">Il <ph id="ph1">`Example`</ph> classe include un <ph id="ph2">`static`</ph> (in c#) o <ph id="ph3">`Shared`</ph> (in Visual Basic) campo di tipo <ph id="ph4">`TestClass`</ph> che viene creata un'istanza, passando un valore pari a 3 al costruttore della classe.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>That value, however, is illegal; only values of 0 or 1 are permitted.</source>
          <target state="translated">Tale valore, tuttavia, non è valido; sono consentiti solo valori pari a 0 o 1.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>As a result, the <ph id="ph1">`TestClass`</ph> class constructor throws an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">Di conseguenza, il <ph id="ph1">`TestClass`</ph> classe costruttore genera un <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Since this exception is not handled, it is wrapped in a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception.</source>
          <target state="translated">Poiché non viene gestita l'eccezione, che viene eseguito il wrapping un <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Note that the exception message displays information about the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Si noti che il messaggio dell'eccezione vengono visualizzate informazioni sul <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>A missing assembly or data file</source>
          <target state="translated">Un file di dati o di assembly mancante</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>A common cause of a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception is that an assembly or data file that was present in an application's development and test environments is missing from its runtime environment.</source>
          <target state="translated">Una causa comune di un <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> eccezione è che un file di assembly o dati che è presente in ambienti di sviluppo e test dell'applicazione manca il relativo ambiente di runtime.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>For example, you can compile the following example to an assembly named Missing1a.dll by using the this command-line syntax:</source>
          <target state="translated">Ad esempio, è possibile compilare l'esempio seguente in un assembly denominato Missing1a.dll utilizzando la sintassi della riga di comando:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>You can then compile the following example to an executable named Missing1.exe by including a reference to Missing1a.dll:</source>
          <target state="translated">È quindi possibile compilare l'esempio seguente in un file eseguibile denominato Missing1.exe includendo un riferimento a Missing1a.dll:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>However, if you rename, move, or delete Missing1a.dll and run the example, it throws a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception and displays the output shown in the example.</source>
          <target state="translated">Tuttavia, se si, rinominare, spostare o eliminare Missing1a.dll ed eseguire l'esempio, genera un <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> eccezione e viene visualizzato l'output illustrato nell'esempio.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Note that the exception message includes information about the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Si noti che il messaggio di eccezione sono incluse informazioni sul <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>In this case,  the inner exception is a <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph> that is thrown because the runtime cannot find the dependent assembly.</source>
          <target state="translated">In questo caso, l'eccezione interna è un <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph> che viene generata perché il runtime non è possibile trovare l'assembly dipendente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>In this example, a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception was thrown because an assembly could not be loaded.</source>
          <target state="translated">In questo esempio, un <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> è stata generata l'eccezione perché non è stato possibile caricare un assembly.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The exception can also be thrown if a static constructor attempts to open a data file, such as a configuration file, an XML file, or a file containing serialized data, that it cannot find.</source>
          <target state="translated">L'eccezione può anche essere generata se un costruttore statico tenta di aprire un file di dati, ad esempio un file di configurazione, un file XML o un file contenente i dati, che non è possibile trovare serializzati.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Regular expression match timeout values</source>
          <target state="translated">Valori di timeout di corrispondenza di espressione regolare</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>You can set the default timeout value for a regular expression pattern matching operation on a per-application domain basis.</source>
          <target state="translated">È possibile impostare il valore di timeout predefinito per un criterio di espressione regolare corrispondenza funzionamento in base a livello di dominio applicazione.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The timeout is defined by a specifying a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property to the  <ph id="ph2">&lt;xref:System.AppDomain.SetData%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Il timeout viene definito un specificando un <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> valore per la proprietà "REGEX_DEFAULT_MATCH_TIMEOUT" per il <ph id="ph2">&lt;xref:System.AppDomain.SetData%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The time interval must be a valid <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> object that is greater than zero and less than approximately 24 days.</source>
          <target state="translated">L'intervallo di tempo deve essere valido <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> oggetto che è maggiore di zero e minore di circa 24 giorni.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>If these requirements are not met, the attempt to set the default timeout value throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, which in turn is wrapped in a <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> exception.</source>
          <target state="translated">Se non vengono soddisfatti questi requisiti, il tentativo di impostare il valore di timeout predefinito genera un <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, che a sua volta viene eseguito il wrapping un <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> that is thrown when the value assigned to the "REGEX_DEFAULT_MATCH_TIMEOUT" property is invalid.</source>
          <target state="translated">Nell'esempio seguente il <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> che viene generata quando il valore assegnato alla proprietà "REGEX_DEFAULT_MATCH_TIMEOUT" non è valido.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>To eliminate the exception, set the"REGEX_DEFAULT_MATCH_TIMEOUT" property to a  <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value that is greater than zero and less than approximately 24 days.</source>
          <target state="translated">Per eliminare l'eccezione, impostare la proprietà "REGEX_DEFAULT_MATCH_TIMEOUT" su un <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> valore maggiore di zero e minore di circa 24 giorni.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Calendars and cultural data</source>
          <target state="translated">Calendari e i dati relativi alla lingua</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>If you attempt to instantiate a calendar but the runtime is unable to instantiate  the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to that calendar, it throws a <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> exception.</source>
          <target state="translated">Se si tenta di creare un'istanza di un calendario, ma il runtime è in grado di creare un'istanza di <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> oggetto che corrisponde al calendario, genera un <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>This exception can be thrown by the following calendar class constructors:</source>
          <target state="translated">Questa eccezione può essere generata da costruttori di classe di calendario seguenti:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The default constructor of the <ph id="ph1">&lt;xref:System.Globalization.JapaneseCalendar&gt;</ph> class.</source>
          <target state="translated">Il costruttore predefinito di <ph id="ph1">&lt;xref:System.Globalization.JapaneseCalendar&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The default constructor of the <ph id="ph1">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> class.</source>
          <target state="translated">Il costruttore predefinito di <ph id="ph1">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The default constructor of the <ph id="ph1">&lt;xref:System.Globalization.TaiwanCalendar&gt;</ph> class.</source>
          <target state="translated">Il costruttore predefinito di <ph id="ph1">&lt;xref:System.Globalization.TaiwanCalendar&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Since cultural data for these cultures should be available on all systems, you should rarely, if ever, encounter this exception.</source>
          <target state="translated">Poiché i dati relativi alla lingua per queste impostazioni cultura devono essere disponibili in tutti i sistemi, se applicabile, viene visualizzato di frequente questa eccezione.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The fully qualified name of the type that fails to initialize.</source>
          <target state="translated">Nome completo del tipo che non riesce a eseguire l'inizializzazione.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Eccezione che ha determinato l'eccezione corrente.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Se il parametro <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> non è un riferimento Null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), l'eccezione corrente viene generata in un blocco <ph id="ph2">&lt;see langword="catch" /&gt;</ph> che gestisce l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeInitializationException" /&gt;</ph> class with the default error message, the specified type name, and a reference to the inner exception that is the root cause of this exception.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.TypeInitializationException" /&gt;</ph> con il messaggio di errore predefinito, il nome del tipo specificato e un riferimento all'eccezione interna che è la causa radice dell'eccezione corrente.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Un'eccezione generata come risultato diretto di un'eccezione precedente può includere un riferimento all'eccezione precedente nella proprietà <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> restituisce lo stesso valore che viene passato al costruttore o un riferimento null (<ph id="ph2">`Nothing`</ph> in Visual Basic), se la proprietà <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> non fornisce al costruttore il valore dell'eccezione interna.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph>.</source>
          <target state="translated">Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">Riferimento all'eccezione interna.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The localized error message string.</source>
          <target state="translated">Stringa del messaggio di errore localizzato.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The name of the type.</source>
          <target state="translated">Nome del tipo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> che contiene i dati oggetto serializzati relativi all'eccezione generata.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> contenente le informazioni contestuali sull'origine o sulla destinazione.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the type name and additional exception information.</source>
          <target state="translated">Imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> con il nome del tipo e informazioni aggiuntive sull'eccezione.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.TypeInitializationException.TypeName">
          <source>Gets the fully qualified name of the type that fails to initialize.</source>
          <target state="translated">Ottiene il nome completo del tipo che non riesce ad eseguire l'inizializzazione.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeInitializationException.TypeName">
          <source>The fully qualified name of the type that fails to initialize.</source>
          <target state="translated">Nome completo del tipo che non riesce a eseguire l'inizializzazione.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>