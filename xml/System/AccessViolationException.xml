<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AccessViolationException.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eb360adfc3670886a06c5f3ab2daa2470318896a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb360adfc3670886a06c5f3ab2daa2470318896a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AccessViolationException">
          <source>The exception that is thrown when there is an attempt to read or write protected memory.</source>
          <target state="translated">Eccezione generata quando viene eseguito un tentativo di leggere o scrivere nella memoria protetta.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An access violation occurs in unmanaged or unsafe code when the code attempts to read or write to memory that has not been allocated, or to which it does not have access.</source>
          <target state="translated">Quando il codice tenta di leggere o scrivere nella memoria che non è stata allocata o a cui si ha accesso, si verifica una violazione di accesso nel codice non gestito o unsafe.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>This usually occurs because a pointer has a bad value.</source>
          <target state="translated">Ciò si verifica in genere perché il valore non valido è un puntatore.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Not all reads or writes through bad pointers lead to access violations, so an access violation usually indicates that several reads or writes have occurred through bad pointers, and that memory might be corrupted.</source>
          <target state="translated">Poiché non tutte le operazioni di lettura o scrittura tramite puntatori non validi generano violazioni di accesso, quando si verifica una violazione di accesso in genere significa che sono state eseguite numerose operazioni di lettura o scrittura tramite puntatori non validi e che la memoria potrebbe essere danneggiata.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Thus, access violations almost always indicate serious programming errors.</source>
          <target state="translated">Di conseguenza, le violazioni di accesso è quasi sempre indicano errori gravi di programmazione.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> clearly identifies these serious errors.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> identifica chiaramente tali errori gravi.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>In programs consisting entirely of verifiable managed code, all references are either valid or null, and access violations are impossible.</source>
          <target state="translated">Nei programmi costituite solo da codice gestito verificabile, tutti i riferimenti sono validi o null e le violazioni di accesso sono impossibili.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Any operation that attempts to reference a null reference in verifiable code throws a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">Qualsiasi operazione che tenta di utilizzare un riferimento null in codice verificabile genera un <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> occurs only when verifiable managed code interacts with unmanaged code or with unsafe managed code.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> si verifica solo quando il codice gestito verificabile interagisce con codice non gestito o con codice gestito unsafe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Troubleshooting AccessViolationException exceptions</source>
          <target state="translated">Risoluzione dei problemi relativi a eccezioni AccessViolationException</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exception can occur only in unsafe managed code or when verifiable managed code interacts with unmanaged code:</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> eccezione può verificarsi solo in codice gestito unsafe o gestito verificabile codice interagisce con codice non gestito:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An access violation that occurs in unsafe managed code can be expressed as either a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception or an <ph id="ph2">&lt;xref:System.AccessViolationException&gt;</ph> exception, depending on the platform.</source>
          <target state="translated">Una violazione di accesso che si verifica in codice gestito unsafe può essere espresso come un <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> eccezione o un <ph id="ph2">&lt;xref:System.AccessViolationException&gt;</ph> eccezione, a seconda della piattaforma.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An access violation in unmanaged code that bubbles up to managed code is always wrapped in an <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exception.</source>
          <target state="translated">Viene sempre eseguito il wrapping di una violazione di accesso di codice non gestito che viene propagato a codice gestito un <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>In either case, you can identify and correct the cause of the <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exception as follows:</source>
          <target state="translated">In entrambi i casi, è possibile identificare e correggere la causa dei <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> eccezione come indicato di seguito:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Make sure that the memory that you are attempting to access has been allocated.</source>
          <target state="translated">Assicurarsi che la memoria a cui si sta tentando di accedere sia stata allocata.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exception is always thrown by an attempt to access protected memory -- that is, to access memory that is not allocated or that is not owned by a process.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> viene sempre generata dal tentativo di accedere memoria protetta, ovvero, per accedere alla memoria non allocata o che non appartiene a un processo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Automatic memory management is one of the services that the common language runtime provides.</source>
          <target state="translated">La gestione automatica della memoria è uno dei servizi forniti da Common Language Runtime.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>If managed code provides the same functionality as your unmanagede code, you may wish to move to managed code to take advantage of this functionality.</source>
          <target state="translated">Se il codice gestito fornisce la stessa funzionalità come il codice unmanagede, si consiglia di spostare il codice gestito per poter sfruttare questa funzionalità.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>For more information, see <bpt id="p1">[</bpt>Automatic Memory Management<ept id="p1">](~/docs/standard/automatic-memory-management.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione automatica della memoria<ept id="p1">](~/docs/standard/automatic-memory-management.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Make sure that the memory that you are attempting to access has not been corrupted.</source>
          <target state="translated">Assicurarsi che la memoria a cui si sta tentando di accedere non sia danneggiata.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>If several read or write operations have occurred through bad pointers, memory may be corrupted.</source>
          <target state="translated">Se sono state eseguite numerose operazioni di lettura o scrittura tramite puntatori non validi, è possibile che la memoria sia danneggiata.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>This typically occurs when reading or writing to addresses outside of a predefined buffer.</source>
          <target state="translated">Ciò si verifica in genere durante la lettura o scrittura agli indirizzi di fuori di un buffer predefinito.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>AccessViolationException and try/catch blocks</source>
          <target state="translated">Blocchi try/catch e di AccessViolationException</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.AccessViolationException&gt;</ph> exceptions thrown by the common language runtime are not handled by the <ph id="ph3">`catch`</ph> statement in a structured exception handler if the exception occurs outside of the memory reserved by the common language runtime.</source>
          <target state="translated">A partire da <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, le eccezioni <ph id="ph2">&lt;xref:System.AccessViolationException&gt;</ph> generate da Common Language Runtime non vengono gestite dall'istruzione <ph id="ph3">`catch`</ph> in un gestore di eccezioni strutturato se l'eccezione si verifica all'esterno della memoria riservata da Common Language Runtime.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>To handle such an <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exception, you should apply the  <ph id="ph2">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> attribute to the method in which the exception is thrown.</source>
          <target state="translated">Per gestire tale eccezione <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>, è necessario applicare l'attributo <ph id="ph2">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> al metodo in cui viene generata l'eccezione.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>This change does not affect <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exceptions thrown by user code, which can continue to be caught by a <ph id="ph2">`catch`</ph> statement.</source>
          <target state="translated">Questa modifica non influisce sulle eccezioni <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> generate dal codice utente, che possono continuare a essere rilevate da un'istruzione <ph id="ph2">`catch`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>For code written for previous versions of the .NET Framework that you want to recompile and run without modification on the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, you can add the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>legacyCorruptedStateExceptionsPolicy&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/legacycorruptedstateexceptionspolicy-element.md)</ept> element to your app's configuration file.</source>
          <target state="translated">Per il codice scritto per le versioni precedenti di .NET Framework che si desidera ricompilare ed eseguite senza modifiche sul <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, è possibile aggiungere il <bpt id="p1">[</bpt> <ph id="ph2">\&lt;</ph>legacyCorruptedStateExceptionsPolicy &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/legacycorruptedstateexceptionspolicy-element.md)</ept> elemento per il file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Note that you can also receive notification of the exceptions if you have defined a handler for the <ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Si noti che è possibile ricevere la notifica delle eccezioni se è stato definito un gestore per l'evento <ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Version Information</source>
          <target state="translated">Informazioni sulla versione</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>This exception is thrown in the .NET Framework 2.0 and later versions.</source>
          <target state="translated">Questa eccezione viene generata in .NET Framework 2.0 e nelle versioni successive.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>In earlier versions of the .NET Framework, an access violation in unmanaged code or unsafe managed code is represented by a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> in managed code.</source>
          <target state="translated">Nelle versioni precedenti di .NET Framework, una violazione di accesso in codice non gestito o codice gestito unsafe è rappresentata da un <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> nel codice gestito.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>A <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> is also thrown when a null reference is dereferenced in verifiable managed code, an occurrence that does not involve data corruption, and there is no way to distinguish between the two situations in versions 1.0 or 1.1.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> viene inoltre generata quando viene dereferenziato un riferimento null nel codice gestito verificabile, un'occorrenza che non comporta il danneggiamento dei dati, e non vi è alcun modo per distinguere tra le due situazioni nelle versioni 1.0 o 1.1.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Administrators can allow selected applications to revert to the behavior of the .NET Framework version 1.1.</source>
          <target state="translated">Amministratore può consentire alle applicazioni selezionate ripristinare il comportamento di .NET Framework versione 1.1.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Place the following line in the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>runtime<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of the configuration file for the application:</source>
          <target state="translated">Inserire la riga seguente nel <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>runtime<ph id="ph2">&amp;gt;</ph> elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> sezione del file di configurazione per l'applicazione:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.AccessViolationException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> class with a system-supplied message that describes the error.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> con un messaggio fornito dal sistema in cui viene descritto l'errore.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Attempted to read or write protected memory.</source>
          <target state="translated">Questo costruttore inizializza la <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> proprietà della nuova istanza di un messaggio fornito dal sistema che descrive l'errore, ad esempio "ha tentato di leggere o scrivere nella memoria protetta.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>This is often an indication that other memory has been corrupted."</source>
          <target state="translated">Ciò indica spesso che altri memoria è stata danneggiata."</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Questo messaggio prende in considerazione le impostazioni cultura correnti del sistema.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>.</source>
          <target state="translated">Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">Stringa del messaggio di errore localizzato.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>The message that describes the exception.</source>
          <target state="translated">Messaggio in cui viene descritta l'eccezione.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> class with a specified message that describes the error.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> con un messaggio specificato in cui viene descritto l'errore.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>.</source>
          <target state="translated">Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated">Stringa del messaggio di errore specificata in <ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> contenente i dati serializzati dell'oggetto.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> contenente le informazioni contestuali sull'origine o sulla destinazione.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> con dati serializzati.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Questo costruttore viene chiamato durante la deserializzazione per ricostituire l'oggetto eccezione trasmesso su un flusso.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>serializzazione XML e SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The message that describes the exception.</source>
          <target state="translated">Messaggio in cui viene descritta l'eccezione.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Eccezione che ha determinato l'eccezione corrente.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Se il parametro <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> non è <ph id="ph1">&lt;see langword="null" /&gt;</ph>, l'eccezione corrente viene generata in un blocco <ph id="ph2">&lt;see langword="catch" /&gt;</ph> in cui viene gestita l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Un'eccezione generata come risultato diretto di un'eccezione precedente deve includere un riferimento all'eccezione precedente nella proprietà <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> restituisce lo stesso valore passato al costruttore oppure <ph id="ph2">`null`</ph> nel caso in cui la proprietà <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> non fornisca il valore di eccezione interna al costruttore.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>.</source>
          <target state="translated">Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated">Stringa del messaggio di errore specificata in <ph id="ph1">`message`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>