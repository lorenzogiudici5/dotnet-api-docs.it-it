<Type Name="Math" FullName="System.Math">
  <TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a4512-101">Vengono forniti costanti e metodi statici per eseguire funzioni trigonometriche, logaritmiche e normali funzioni matematiche.</span><span class="sxs-lookup"><span data-stu-id="a4512-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-102">L'esempio seguente usa diverse funzioni matematiche e trigonometriche di <xref:System.Math> classe per calcolare gli angoli interni di un trapezio.</span><span class="sxs-lookup"><span data-stu-id="a4512-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4512-103">Restituisce il valore assoluto di un numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-103">Returns the absolute value of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-104">Numero maggiore o uguale a <see cref="F:System.Decimal.MinValue" />, ma minore o uguale a <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="a4512-105">Restituisce il valore assoluto di un numero <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span></span></summary>
        <returns><span data-ttu-id="a4512-106">Un numero decimale, x, tale che 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-107">Il valore assoluto di un <xref:System.Decimal> è un valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="a4512-108">Ad esempio, il valore assoluto di 1,2 e -1,2 è 1.2.</span><span class="sxs-lookup"><span data-stu-id="a4512-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-109">L'esempio seguente usa il <xref:System.Math.Abs%28System.Decimal%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Decimal> valori.</span><span class="sxs-lookup"><span data-stu-id="a4512-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-110">Numero maggiore o uguale a <see cref="F:System.Double.MinValue" />, ma minore o uguale a <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="a4512-111">Restituisce il valore assoluto di un numero a virgola mobile e precisione doppia.</span><span class="sxs-lookup"><span data-stu-id="a4512-111">Returns the absolute value of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="a4512-112">Numero a virgola mobile e precisione doppia, x, tale che 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-113">Il valore assoluto di un <xref:System.Double> è un valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="a4512-114">Ad esempio, il valore assoluto di 1, 2e03 sia - 1, 2e03 è 1, 2e03.</span><span class="sxs-lookup"><span data-stu-id="a4512-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="a4512-115">Se `value` è uguale a <xref:System.Double.NegativeInfinity> o <xref:System.Double.PositiveInfinity>, il valore restituito è <xref:System.Double.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="a4512-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="a4512-116">Se `value` è uguale a <xref:System.Double.NaN>, il valore restituito è <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="a4512-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-117">L'esempio seguente usa il <xref:System.Math.Abs%28System.Double%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="a4512-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-118">Numero maggiore di <see cref="F:System.Int16.MinValue" />, ma minore o uguale a <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="a4512-119">Restituisce il valore assoluto di un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-119">Returns the absolute value of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="a4512-120">Intero con segno a 16 bit, x, tale che 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-121">Il valore assoluto di un <xref:System.Int16> è un valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="a4512-122">Ad esempio, il valore assoluto di 123 e -123 è 123.</span><span class="sxs-lookup"><span data-stu-id="a4512-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-123">L'esempio seguente usa il <xref:System.Math.Abs%28System.Int16%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Int16> valori.</span><span class="sxs-lookup"><span data-stu-id="a4512-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a4512-124"><paramref name="value" /> è uguale a <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-124"><paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-125">Numero maggiore di <see cref="F:System.Int32.MinValue" />, ma minore o uguale a <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="a4512-126">Restituisce il valore assoluto di un intero con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-126">Returns the absolute value of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="a4512-127">Intero con segno a 32 bit, x, tale che 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-128">Il valore assoluto di un <xref:System.Int32> è un valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="a4512-129">Ad esempio, il valore assoluto di 123 e -123 è 123.</span><span class="sxs-lookup"><span data-stu-id="a4512-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-130">L'esempio seguente usa il <xref:System.Math.Abs%28System.Int32%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Int32> valori.</span><span class="sxs-lookup"><span data-stu-id="a4512-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a4512-131"><paramref name="value" /> è uguale a <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-131"><paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-132">Numero maggiore di <see cref="F:System.Int64.MinValue" />, ma minore o uguale a <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="a4512-133">Restituisce il valore assoluto di un intero con segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-133">Returns the absolute value of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="a4512-134">Intero con segno a 64 bit, x, tale che 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-135">Il valore assoluto di un <xref:System.Int64> è un valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="a4512-136">Ad esempio, il valore assoluto di 123 e -123 è 123.</span><span class="sxs-lookup"><span data-stu-id="a4512-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-137">L'esempio seguente usa il <xref:System.Math.Abs%28System.Int64%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Int64> valori.</span><span class="sxs-lookup"><span data-stu-id="a4512-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a4512-138"><paramref name="value" /> è uguale a <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-138"><paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-139">Numero maggiore di <see cref="F:System.SByte.MinValue" />, ma minore o uguale a <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="a4512-140">Restituisce il valore assoluto di un intero con segno a 8 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-140">Returns the absolute value of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="a4512-141">Intero con segno a 8 bit, x, tale che 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-142">Il valore assoluto di un byte con segno è il valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="a4512-143">Ad esempio, il valore assoluto di 12 sia -12 è 12.</span><span class="sxs-lookup"><span data-stu-id="a4512-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-144">L'esempio seguente usa il <xref:System.Math.Abs%28System.SByte%29> metodo per ottenere il valore assoluto di un numero di <xref:System.SByte> valori.</span><span class="sxs-lookup"><span data-stu-id="a4512-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a4512-145"><paramref name="value" /> è uguale a <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-145"><paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-146">Numero maggiore o uguale a <see cref="F:System.Single.MinValue" />, ma minore o uguale a <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="a4512-147">Restituisce il valore assoluto di un numero a virgola mobile e precisione singola.</span><span class="sxs-lookup"><span data-stu-id="a4512-147">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="a4512-148">Numero a virgola mobile e precisione singola, x, tale che 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-149">Il valore assoluto di un <xref:System.Single> è un valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="a4512-150">Ad esempio, il valore assoluto di 1, 2E-03 e-1, 2e03 è 1, 2e03.</span><span class="sxs-lookup"><span data-stu-id="a4512-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="a4512-151">Se `value` è uguale a <xref:System.Single.NegativeInfinity> o <xref:System.Single.PositiveInfinity>, il valore restituito è <xref:System.Single.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="a4512-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="a4512-152">Se `value` è uguale a <xref:System.Single.NaN>, il valore restituito è <xref:System.Single.NaN>.</span><span class="sxs-lookup"><span data-stu-id="a4512-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-153">L'esempio seguente usa il <xref:System.Math.Abs%28System.Single%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Single> valori.</span><span class="sxs-lookup"><span data-stu-id="a4512-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-154">Numero che rappresenta un coseno, dove <c>d</c> deve essere maggiore o uguale a -1, ma minore o uguale a 1.</span><span class="sxs-lookup"><span data-stu-id="a4512-154">A number representing a cosine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="a4512-155">Restituisce l'angolo il cui coseno è il numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-155">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="a4512-156">Un angolo, θ, misurato in radianti, tale che 0 ≤θ≤π</span><span class="sxs-lookup"><span data-stu-id="a4512-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span></span>  
  
 <span data-ttu-id="a4512-157">oppure</span><span class="sxs-lookup"><span data-stu-id="a4512-157">-or-</span></span>  
  
 <span data-ttu-id="a4512-158"><see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 o <paramref name="d" /> &gt; 1 o <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-158"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-159">Moltiplicare il valore restituito per 180 /<xref:System.Math.PI?displayProperty=nameWithType> per convertire da radianti in gradi.</span><span class="sxs-lookup"><span data-stu-id="a4512-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-160">L'esempio seguente usa il <xref:System.Math.Acos%2A> metodo per facilitare il calcolo degli angoli interni di un trapezio.</span><span class="sxs-lookup"><span data-stu-id="a4512-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static double Acosh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acosh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acosh(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-161">Un numero che rappresenta un seno, dove <c>d</c> deve essere maggiore o uguale a -1, ma minore o uguale a 1.</span><span class="sxs-lookup"><span data-stu-id="a4512-161">A number representing a sine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="a4512-162">Restituisce l'angolo il cui seno è il numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-162">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="a4512-163">Un angolo, θ, misurato in radianti, tale che -π/2 ≤θ≤π/2</span><span class="sxs-lookup"><span data-stu-id="a4512-163">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span></span>  
  
 <span data-ttu-id="a4512-164">oppure</span><span class="sxs-lookup"><span data-stu-id="a4512-164">-or-</span></span>  
  
 <span data-ttu-id="a4512-165"><see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 o <paramref name="d" /> &gt; 1 o <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-165"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-166">Un valore positivo restituito rappresenta un angolo in senso antiorario rispetto all'asse x; un valore negativo restituito rappresenta un angolo in senso orario.</span><span class="sxs-lookup"><span data-stu-id="a4512-166">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="a4512-167">Moltiplicare il valore restituito per 180 /<xref:System.Math.PI?displayProperty=nameWithType> per convertire da radianti in gradi.</span><span class="sxs-lookup"><span data-stu-id="a4512-167">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-168">L'esempio seguente usa <xref:System.Math.Asin%2A> per facilitare il calcolo degli angoli interni di un trapezio.</span><span class="sxs-lookup"><span data-stu-id="a4512-168">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static double Asinh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asinh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asinh(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-169">Numero che rappresenta una tangente.</span><span class="sxs-lookup"><span data-stu-id="a4512-169">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="a4512-170">Restituisce l'angolo la cui tangente è il numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-170">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="a4512-171">Un angolo, θ, misurato in radianti, tale che -π/2 ≤θ≤π/2.</span><span class="sxs-lookup"><span data-stu-id="a4512-171">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span></span>  
  
 <span data-ttu-id="a4512-172">oppure</span><span class="sxs-lookup"><span data-stu-id="a4512-172">-or-</span></span>  
  
 <span data-ttu-id="a4512-173"><see cref="F:System.Double.NaN" /> se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />, -π/2 arrotondato al valore a precisione doppia (-1,5707963267949) se <paramref name="d" /> è uguale a <see cref="F:System.Double.NegativeInfinity" /> o π/2 arrotondato al valore a precisione doppia (1,5707963267949) se <paramref name="d" /> è uguale a <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-173"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-174">Un valore positivo restituito rappresenta un angolo in senso antiorario rispetto all'asse x; un valore negativo restituito rappresenta un angolo in senso orario.</span><span class="sxs-lookup"><span data-stu-id="a4512-174">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="a4512-175">Moltiplicare il valore restituito per 180 /<xref:System.Math.PI?displayProperty=nameWithType> per convertire da radianti in gradi.</span><span class="sxs-lookup"><span data-stu-id="a4512-175">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-176">Nell'esempio seguente viene illustrato come calcolare l'arcotangente di un valore e la visualizza nella console.</span><span class="sxs-lookup"><span data-stu-id="a4512-176">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="a4512-177">Coordinata y di un punto.</span><span class="sxs-lookup"><span data-stu-id="a4512-177">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="a4512-178">Coordinata x di un punto.</span><span class="sxs-lookup"><span data-stu-id="a4512-178">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="a4512-179">Restituisce l'angolo la cui tangente è il quoziente di due numeri specificati.</span><span class="sxs-lookup"><span data-stu-id="a4512-179">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-180">Un angolo, θ, misurato in radianti, tale che -π≤θ≤π, e tan(θ) = <paramref name="y" /> / <paramref name="x" />, dove (<paramref name="x" />, <paramref name="y" />) è un punto nel piano cartesiano.</span><span class="sxs-lookup"><span data-stu-id="a4512-180">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="a4512-181">Osservare quanto segue:</span><span class="sxs-lookup"><span data-stu-id="a4512-181">Observe the following:</span></span>  
  
-   <span data-ttu-id="a4512-182">Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 1, 0 &lt; θ &lt; π/2.</span><span class="sxs-lookup"><span data-stu-id="a4512-182">For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
-   <span data-ttu-id="a4512-183">Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 2, π/2 &lt; θ≤π.</span><span class="sxs-lookup"><span data-stu-id="a4512-183">For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span></span>  
  
-   <span data-ttu-id="a4512-184">Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 3, -π &lt; θ &lt; -π/2.</span><span class="sxs-lookup"><span data-stu-id="a4512-184">For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
-   <span data-ttu-id="a4512-185">Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 4, -π/2 &lt; θ &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="a4512-185">For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
 <span data-ttu-id="a4512-186">Per i punti sui limiti dei quadranti, il valore restituito è il seguente:</span><span class="sxs-lookup"><span data-stu-id="a4512-186">For points on the boundaries of the quadrants, the return value is the following:</span></span>  
  
-   <span data-ttu-id="a4512-187">Se y è 0 e x non è negativo, θ = 0.</span><span class="sxs-lookup"><span data-stu-id="a4512-187">If y is 0 and x is not negative, θ = 0.</span></span>  
  
-   <span data-ttu-id="a4512-188">Se y è 0 e x è negativo, θ = π.</span><span class="sxs-lookup"><span data-stu-id="a4512-188">If y is 0 and x is negative, θ = π.</span></span>  
  
-   <span data-ttu-id="a4512-189">Se y è positivo e x è 0, θ = π/2.</span><span class="sxs-lookup"><span data-stu-id="a4512-189">If y is positive and x is 0, θ = π/2.</span></span>  
  
-   <span data-ttu-id="a4512-190">Se y è negativo e x è 0, θ = -π/2.</span><span class="sxs-lookup"><span data-stu-id="a4512-190">If y is negative and x is 0, θ = -π/2.</span></span>  
  
-   <span data-ttu-id="a4512-191">Se y è 0 e x è θ = 0.</span><span class="sxs-lookup"><span data-stu-id="a4512-191">If y is 0 and x is 0, θ = 0.</span></span>  
  
 <span data-ttu-id="a4512-192">Se <paramref name="x" /> o <paramref name="y" /> è <see cref="F:System.Double.NaN" /> o se <paramref name="x" /> e <paramref name="y" /> sono <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" />, il metodo restituisce <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-192">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-193">Il valore restituito è l'angolo del piano cartesiano formato dall'asse x e un vettore a partire dall'origine (0,0) e termina nel punto, (x, y).</span><span class="sxs-lookup"><span data-stu-id="a4512-193">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-194">Nell'esempio seguente viene illustrato come calcolare l'arcotangente di un angolo e da un vettore.</span><span class="sxs-lookup"><span data-stu-id="a4512-194">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="a4512-195">Il valore risultante viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="a4512-195">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static double Atanh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atanh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atanh(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="a4512-196">Primo numero da moltiplicare.</span><span class="sxs-lookup"><span data-stu-id="a4512-196">The first number to multiply.</span></span></param>
        <param name="b"><span data-ttu-id="a4512-197">Secondo numero da moltiplicare.</span><span class="sxs-lookup"><span data-stu-id="a4512-197">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="a4512-198">Restituisce il prodotto completo di due numeri a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-198">Produces the full product of two 32-bit numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-199">Numero contenente il prodotto dei numeri specificati.</span><span class="sxs-lookup"><span data-stu-id="a4512-199">The number containing the product of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-200">Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Math.BigMul%2A> metodo per calcolare il prodotto di due valori integer.</span><span class="sxs-lookup"><span data-stu-id="a4512-200">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static double Cbrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cbrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cbrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cbrt(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4512-201">Restituisce il valore integrale minimo maggiore o uguale al numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-201">Returns the smallest integral value greater than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-202">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="a4512-202">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a4512-203">Questo tipo di arrotondamento viene talvolta denominato arrotondamento verso l'infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="a4512-203">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-204">Numero decimale.</span><span class="sxs-lookup"><span data-stu-id="a4512-204">A decimal number.</span></span></param>
        <summary><span data-ttu-id="a4512-205">Restituisce il valore integrale minimo maggiore o uguale al numero decimale specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-205">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="a4512-206">Valore intero minimo maggiore o uguale a <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-206">The smallest integral value that is greater than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="a4512-207">Si noti che questo metodo restituisce <see cref="T:System.Decimal" /> anziché un tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="a4512-207">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-208">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="a4512-208">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a4512-209">Questo tipo di arrotondamento viene talvolta denominato arrotondamento verso l'infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="a4512-209">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="a4512-210">In altre parole, se `d` è positivo, la presenza di componenti frazionari determina `d` arrotondare all'intero più elevato successivo.</span><span class="sxs-lookup"><span data-stu-id="a4512-210">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="a4512-211">Se `d` è negativo, l'operazione di arrotondamento fa sì che qualsiasi componente frazionario di `d` verranno ignorati.</span><span class="sxs-lookup"><span data-stu-id="a4512-211">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="a4512-212">L'operazione di questo metodo è diverso dal <xref:System.Math.Floor%28System.Decimal%29> metodo, che supporta l'arrotondamento verso l'infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="a4512-212">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-213">Nell'esempio seguente viene illustrato il <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> metodo quindi messo a confronto con il <xref:System.Math.Floor%28System.Decimal%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="a4512-213">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="a4512-214">Numero a virgola mobile a precisione doppia.</span><span class="sxs-lookup"><span data-stu-id="a4512-214">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="a4512-215">Restituisce il valore integrale minimo maggiore del o uguale al numero a virgola mobile e con precisione doppia specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-215">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="a4512-216">Valore intero minimo maggiore o uguale a <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-216">The smallest integral value that is greater than or equal to <paramref name="a" />.</span></span> <span data-ttu-id="a4512-217">Se <paramref name="a" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito tale valore.</span><span class="sxs-lookup"><span data-stu-id="a4512-217">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="a4512-218">Si noti che questo metodo restituisce <see cref="T:System.Double" /> anziché un tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="a4512-218">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-219">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="a4512-219">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a4512-220">Questo tipo di arrotondamento viene talvolta denominato arrotondamento verso l'infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="a4512-220">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="a4512-221">In altre parole, se `a` è positivo, la presenza di componenti frazionari determina `a` arrotondare all'intero più elevato successivo.</span><span class="sxs-lookup"><span data-stu-id="a4512-221">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="a4512-222">Se `a` è negativo, l'operazione di arrotondamento fa sì che qualsiasi componente frazionario di `a` verranno ignorati.</span><span class="sxs-lookup"><span data-stu-id="a4512-222">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="a4512-223">L'operazione di questo metodo è diverso dal <xref:System.Math.Floor%28System.Double%29> metodo, che supporta l'arrotondamento verso l'infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="a4512-223">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-224">Nell'esempio seguente viene illustrato il <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> metodo quindi messo a confronto con il <xref:System.Math.Floor%28System.Double%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="a4512-224">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="min" Type="System.Byte" />
        <Parameter Name="max" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="min" Type="System.Decimal" />
        <Parameter Name="max" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="min" Type="System.Int16" />
        <Parameter Name="max" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="min" Type="System.SByte" />
        <Parameter Name="max" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="min" Type="System.UInt16" />
        <Parameter Name="max" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="min" Type="System.UInt32" />
        <Parameter Name="max" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="min" Type="System.UInt64" />
        <Parameter Name="max" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-225">Angolo, espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-225">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="a4512-226">Restituisce il coseno dell'angolo specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-226">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="a4512-227">Coseno di <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-227">The cosine of <paramref name="d" />.</span></span> <span data-ttu-id="a4512-228">Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-228">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-229">L'angolo, `d`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-229">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="a4512-230">Moltiplicare per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-230">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="a4512-231">I valori accettabili per `d` compresi tra circa -9223372036854775295 a circa 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="a4512-231">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="a4512-232">Per i valori di fuori di questo intervallo, il <xref:System.Math.Cos%2A> restituisce `d` invariato anziché generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="a4512-232">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-233">L'esempio seguente usa <xref:System.Math.Cos%2A> per valutare alcune identità trigonometriche per angoli selezionati.</span><span class="sxs-lookup"><span data-stu-id="a4512-233">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-234">Angolo, espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-234">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="a4512-235">Restituisce il coseno iperbolico dell'angolo specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-235">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="a4512-236">Coseno iperbolico di <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-236">The hyperbolic cosine of <paramref name="value" />.</span></span> <span data-ttu-id="a4512-237">Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-237">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="a4512-238">Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-238">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-239">L'angolo, `value`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-239">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="a4512-240">Moltiplicare per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-240">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-241">L'esempio seguente usa <xref:System.Math.Cosh%2A> per valutare alcune identità iperboliche per valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="a4512-241">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4512-242">Calcola il quoziente di due numeri e restituisce il resto come parametro di output.</span><span class="sxs-lookup"><span data-stu-id="a4512-242">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="a4512-243">Dividendo.</span><span class="sxs-lookup"><span data-stu-id="a4512-243">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="a4512-244">Divisore.</span><span class="sxs-lookup"><span data-stu-id="a4512-244">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="a4512-245">Resto.</span><span class="sxs-lookup"><span data-stu-id="a4512-245">The remainder.</span></span></param>
        <summary><span data-ttu-id="a4512-246">Calcola il quoziente di due interi con segno a 32 bit e restituisce il resto come parametro di output.</span><span class="sxs-lookup"><span data-stu-id="a4512-246">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="a4512-247">Quoziente dei numeri specificati.</span><span class="sxs-lookup"><span data-stu-id="a4512-247">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-248">Il resto viene calcolato tramite l'operazione di modulo.</span><span class="sxs-lookup"><span data-stu-id="a4512-248">The remainder is calculated by using the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-249">Nell'esempio seguente viene illustrato il <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="a4512-249">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="a4512-250"><paramref name="b" /> è zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-250"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
        <Parameter Name="result" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="a4512-251">Dividendo.</span><span class="sxs-lookup"><span data-stu-id="a4512-251">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="a4512-252">Divisore.</span><span class="sxs-lookup"><span data-stu-id="a4512-252">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="a4512-253">Resto.</span><span class="sxs-lookup"><span data-stu-id="a4512-253">The remainder.</span></span></param>
        <summary><span data-ttu-id="a4512-254">Calcola il quoziente di due interi con segno a 64 bit e restituisce il resto come parametro di output.</span><span class="sxs-lookup"><span data-stu-id="a4512-254">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="a4512-255">Quoziente dei numeri specificati.</span><span class="sxs-lookup"><span data-stu-id="a4512-255">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-256">Il resto viene calcolato tramite l'operazione di modulo.</span><span class="sxs-lookup"><span data-stu-id="a4512-256">The remainder is calculated by using the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-257">Nell'esempio seguente viene illustrato il <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="a4512-257">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="a4512-258"><paramref name="b" /> è zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-258"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4512-259">Rappresenta la base logaritmica naturale, specificata dalla costante, <see langword="e" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-259">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-260">Il valore di questo campo è 2.7182818284590452354.</span><span class="sxs-lookup"><span data-stu-id="a4512-260">The value of this field is 2.7182818284590452354.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-261">Nell'esempio seguente vengono confrontate <xref:System.Math.E> con il valore calcolato da una serie di risparmio energia.</span><span class="sxs-lookup"><span data-stu-id="a4512-261">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-262">Numero che specifica una potenza.</span><span class="sxs-lookup"><span data-stu-id="a4512-262">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="a4512-263">Restituisce <see langword="e" /> elevato alla potenza specificata.</span><span class="sxs-lookup"><span data-stu-id="a4512-263">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="a4512-264">Numero <see langword="e" /> elevato alla potenza <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-264">The number <see langword="e" /> raised to the power <paramref name="d" />.</span></span> <span data-ttu-id="a4512-265">Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito il valore.</span><span class="sxs-lookup"><span data-stu-id="a4512-265">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="a4512-266">Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NegativeInfinity" />, verrà restituito 0.</span><span class="sxs-lookup"><span data-stu-id="a4512-266">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-267">`e` è una costante matematica il cui valore è di circa 2,71828.</span><span class="sxs-lookup"><span data-stu-id="a4512-267">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="a4512-268">Utilizzare il <xref:System.Math.Pow%2A> metodo per calcolare le potenze di altre basi.</span><span class="sxs-lookup"><span data-stu-id="a4512-268">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="a4512-269"><xref:System.Math.Exp%2A> è l'inverso del <xref:System.Math.Log%2A>.</span><span class="sxs-lookup"><span data-stu-id="a4512-269"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-270">L'esempio seguente usa <xref:System.Math.Exp%2A> per valutare identità esponenziali e logaritmica per valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="a4512-270">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4512-271">Restituisce il valore integrale massimo minore o uguale al numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-271">Returns the largest integral value less than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-272">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="a4512-272">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a4512-273">Questo tipo di arrotondamento viene talvolta denominato arrotondamento verso l'infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="a4512-273">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-274">Numero decimale.</span><span class="sxs-lookup"><span data-stu-id="a4512-274">A decimal number.</span></span></param>
        <summary><span data-ttu-id="a4512-275">Restituisce il valore integrale massimo minore o uguale al numero decimale specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-275">Returns the largest integral value less than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="a4512-276">Valore integrale massimo minore o uguale a <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-276">The largest integral value less than or equal to <paramref name="d" />.</span></span>  <span data-ttu-id="a4512-277">Si noti che il metodo restituisce un valore intero del tipo <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-277">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-278">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="a4512-278">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a4512-279">Questo tipo di arrotondamento viene talvolta denominato arrotondamento verso l'infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="a4512-279">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="a4512-280">In altre parole, se `d` è positivo, qualsiasi componente frazionario viene troncato.</span><span class="sxs-lookup"><span data-stu-id="a4512-280">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="a4512-281">Se `d` è negativo, la presenza di qualsiasi componente frazionario fa sì che possa essere arrotondato all'intero più piccolo.</span><span class="sxs-lookup"><span data-stu-id="a4512-281">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="a4512-282">L'operazione di questo metodo è diverso dal <xref:System.Math.Ceiling%2A> metodo, che supporta l'arrotondamento verso l'infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="a4512-282">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-283">Nell'esempio seguente viene illustrato il <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> metodo quindi messo a confronto con il <xref:System.Math.Ceiling%28System.Decimal%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="a4512-283">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-284">Numero a virgola mobile a precisione doppia.</span><span class="sxs-lookup"><span data-stu-id="a4512-284">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="a4512-285">Restituisce il valore integrale massimo minore o uguale al numero a virgola mobile a precisione doppia specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-285">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="a4512-286">Valore integrale massimo minore o uguale a <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-286">The largest integral value less than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="a4512-287">Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito tale valore.</span><span class="sxs-lookup"><span data-stu-id="a4512-287">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-288">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="a4512-288">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a4512-289">Questo tipo di arrotondamento viene talvolta denominato arrotondamento verso l'infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="a4512-289">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="a4512-290">In altre parole, se `d` è positivo, qualsiasi componente frazionario viene troncato.</span><span class="sxs-lookup"><span data-stu-id="a4512-290">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="a4512-291">Se `d` è negativo, la presenza di qualsiasi componente frazionario fa sì che possa essere arrotondato all'intero più piccolo.</span><span class="sxs-lookup"><span data-stu-id="a4512-291">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="a4512-292">L'operazione di questo metodo è diverso dal <xref:System.Math.Ceiling%2A> metodo, che supporta l'arrotondamento verso l'infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="a4512-292">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-293">Nell'esempio seguente viene illustrato il <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> metodo quindi messo a confronto con il <xref:System.Math.Ceiling%28System.Double%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="a4512-293">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a4512-294">Dividendo.</span><span class="sxs-lookup"><span data-stu-id="a4512-294">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="a4512-295">Divisore.</span><span class="sxs-lookup"><span data-stu-id="a4512-295">A divisor.</span></span></param>
        <summary><span data-ttu-id="a4512-296">Restituisce il resto della divisione tra il numero specificato e un altro numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-296">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="a4512-297">Un numero uguale a <paramref name="x" /> - (<paramref name="y" /> Q), dove Q è il quoziente di <paramref name="x" /> / <paramref name="y" /> arrotondato all'intero più vicino; se <paramref name="x" /> / <paramref name="y" /> è contenuto tra due interi, verrà restituito l'intero pari.</span><span class="sxs-lookup"><span data-stu-id="a4512-297">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
 <span data-ttu-id="a4512-298">Se <paramref name="x" /> - (<paramref name="y" /> Q) è zero, verrà restituito il valore +0 se <paramref name="x" /> è positivo oppure -0 se <paramref name="x" /> è negativo.</span><span class="sxs-lookup"><span data-stu-id="a4512-298">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
 <span data-ttu-id="a4512-299">Se <paramref name="y" /> = 0, verrà restituito <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-299">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-300">Questa operazione è conforme con l'operazione di resto definita nella sezione 5.1 di ANSI/IEEE Std 754-1985; Standard IEEE per i calcoli a virgola mobile binario; Institute of elettrica ed Electronics Engineers, Inc; 1985.</span><span class="sxs-lookup"><span data-stu-id="a4512-300">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="a4512-301">Il <xref:System.Math.IEEERemainder%2A> (metodo) non corrisponde all'operatore modulo.</span><span class="sxs-lookup"><span data-stu-id="a4512-301">The <xref:System.Math.IEEERemainder%2A> method is not the same as the modulus operator.</span></span> <span data-ttu-id="a4512-302">Sebbene entrambi restituiscono il resto dopo la divisione, le formule utilizzate sono diverse.</span><span class="sxs-lookup"><span data-stu-id="a4512-302">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="a4512-303">La formula per il <xref:System.Math.IEEERemainder%2A> metodo:</span><span class="sxs-lookup"><span data-stu-id="a4512-303">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="a4512-304">Al contrario, la formula per l'operatore modulo è:</span><span class="sxs-lookup"><span data-stu-id="a4512-304">In contrast, the formula for the modulus operator is:</span></span>  
  
```  
Modulus = (Math.Abs(dividend) - (Math.Abs(divisor) *   
          (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
          Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="a4512-305">Nell'esempio seguente viene eseguito il confronto fra il resto restituito dal <xref:System.Math.IEEERemainder%2A> metodo con il resto restituito dall'operatore di divisione del modulo.</span><span class="sxs-lookup"><span data-stu-id="a4512-305">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the modulus division operator.</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4512-306">Restituisce il logaritmo del numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-306">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-307">Numero di cui è necessario trovare il logaritmo.</span><span class="sxs-lookup"><span data-stu-id="a4512-307">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="a4512-308">Restituisce il logaritmo naturale (in base <see langword="e" />) di un numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-308">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="a4512-309">Uno dei valori della tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-309">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="a4512-310">parametro <list type="table"><listheader><term><paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="a4512-310"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="a4512-311"></term><description> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-311"></term><description> Return value</span></span>  
  
 <span data-ttu-id="a4512-312"></description></listheader><item><term> Positivo</span><span class="sxs-lookup"><span data-stu-id="a4512-312"></description></listheader><item><term> Positive</span></span>  
  
 <span data-ttu-id="a4512-313"></term><description> Logaritmo naturale di <paramref name="d" />: In <paramref name="d" />, o log e <paramref name="d" /></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="a4512-313"></term><description> The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="a4512-314"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negativo</span><span class="sxs-lookup"><span data-stu-id="a4512-314"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="a4512-315"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> è uguale a <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> è uguale a <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="a4512-315"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-316">Parametro `d` viene specificato come un numero in base 10.</span><span class="sxs-lookup"><span data-stu-id="a4512-316">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-317">Nell'esempio seguente viene illustrato il <xref:System.Math.Log%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a4512-317">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="a4512-318">Numero di cui è necessario trovare il logaritmo.</span><span class="sxs-lookup"><span data-stu-id="a4512-318">The number whose logarithm is to be found.</span></span></param>
        <param name="newBase"><span data-ttu-id="a4512-319">Base del logaritmo.</span><span class="sxs-lookup"><span data-stu-id="a4512-319">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="a4512-320">Restituisce il logaritmo del numero specificato in una base specificata.</span><span class="sxs-lookup"><span data-stu-id="a4512-320">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="a4512-321">Uno dei valori della tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-321">One of the values in the following table.</span></span> <span data-ttu-id="a4512-322">(+Infinito indica <see cref="F:System.Double.PositiveInfinity" />, -Infinito indica <see cref="F:System.Double.NegativeInfinity" /> e NaN indica <see cref="F:System.Double.NaN" />).</span><span class="sxs-lookup"><span data-stu-id="a4512-322">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span></span>  
  
 <span data-ttu-id="a4512-323"><list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-323"><list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> Return value</span></span>  
  
 <span data-ttu-id="a4512-324"></description></listheader><item><term><paramref name="a" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="a4512-324"></description></listheader><item><term><paramref name="a" />&gt; 0</span></span>  
  
 <span data-ttu-id="a4512-325"></term><description> (0 &lt;<paramref name="newBase" />&lt; 1) -o-(<paramref name="newBase" />&gt; 1)</span><span class="sxs-lookup"><span data-stu-id="a4512-325"></term><description> (0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span>  
  
 <span data-ttu-id="a4512-326"></description><description> lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="a4512-326"></description><description> lognewBase(a)</span></span>  
  
 <span data-ttu-id="a4512-327"></description></item><item><term><paramref name="a" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="a4512-327"></description></item><item><term><paramref name="a" />&lt; 0</span></span>  
  
 <span data-ttu-id="a4512-328"></term><description> (qualsiasi valore)</span><span class="sxs-lookup"><span data-stu-id="a4512-328"></term><description> (any value)</span></span>  
  
 <span data-ttu-id="a4512-329"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="a4512-329"></description><description> NaN</span></span>  
  
 <span data-ttu-id="a4512-330"></description></item><item><term> (qualsiasi valore)</span><span class="sxs-lookup"><span data-stu-id="a4512-330"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="a4512-331"></term><description><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="a4512-331"></term><description><paramref name="newBase" />&lt; 0</span></span>  
  
 <span data-ttu-id="a4512-332"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="a4512-332"></description><description> NaN</span></span>  
  
 <span data-ttu-id="a4512-333"></description></item><item><term><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="a4512-333"></description></item><item><term><paramref name="a" /> != 1</span></span>  
  
 <span data-ttu-id="a4512-334"></term><description><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="a4512-334"></term><description><paramref name="newBase" /> = 0</span></span>  
  
 <span data-ttu-id="a4512-335"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="a4512-335"></description><description> NaN</span></span>  
  
 <span data-ttu-id="a4512-336"></description></item><item><term><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="a4512-336"></description></item><item><term><paramref name="a" /> != 1</span></span>  
  
 <span data-ttu-id="a4512-337"></term><description><paramref name="newBase" /> = +Infinito</span><span class="sxs-lookup"><span data-stu-id="a4512-337"></term><description><paramref name="newBase" /> = +Infinity</span></span>  
  
 <span data-ttu-id="a4512-338"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="a4512-338"></description><description> NaN</span></span>  
  
 <span data-ttu-id="a4512-339"></description></item><item><term><paramref name="a" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="a4512-339"></description></item><item><term><paramref name="a" /> = NaN</span></span>  
  
 <span data-ttu-id="a4512-340"></term><description> (qualsiasi valore)</span><span class="sxs-lookup"><span data-stu-id="a4512-340"></term><description> (any value)</span></span>  
  
 <span data-ttu-id="a4512-341"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="a4512-341"></description><description> NaN</span></span>  
  
 <span data-ttu-id="a4512-342"></description></item><item><term> (qualsiasi valore)</span><span class="sxs-lookup"><span data-stu-id="a4512-342"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="a4512-343"></term><description><paramref name="newBase" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="a4512-343"></term><description><paramref name="newBase" /> = NaN</span></span>  
  
 <span data-ttu-id="a4512-344"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="a4512-344"></description><description> NaN</span></span>  
  
 <span data-ttu-id="a4512-345"></description></item><item><term> (qualsiasi valore)</span><span class="sxs-lookup"><span data-stu-id="a4512-345"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="a4512-346"></term><description><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="a4512-346"></term><description><paramref name="newBase" /> = 1</span></span>  
  
 <span data-ttu-id="a4512-347"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="a4512-347"></description><description> NaN</span></span>  
  
 <span data-ttu-id="a4512-348"></description></item><item><term><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="a4512-348"></description></item><item><term><paramref name="a" /> = 0</span></span>  
  
 <span data-ttu-id="a4512-349"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="a4512-349"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span></span>  
  
 <span data-ttu-id="a4512-350"></description><description> +Infinito</span><span class="sxs-lookup"><span data-stu-id="a4512-350"></description><description> +Infinity</span></span>  
  
 <span data-ttu-id="a4512-351"></description></item><item><term><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="a4512-351"></description></item><item><term><paramref name="a" /> = 0</span></span>  
  
 <span data-ttu-id="a4512-352"></term><description><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="a4512-352"></term><description><paramref name="newBase" />&gt; 1</span></span>  
  
 <span data-ttu-id="a4512-353"></description><description> -Infinito</span><span class="sxs-lookup"><span data-stu-id="a4512-353"></description><description> -Infinity</span></span>  
  
 <span data-ttu-id="a4512-354"></description></item><item><term><paramref name="a" /> =  +Infinito</span><span class="sxs-lookup"><span data-stu-id="a4512-354"></description></item><item><term><paramref name="a" /> =  +Infinity</span></span>  
  
 <span data-ttu-id="a4512-355"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="a4512-355"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span></span>  
  
 <span data-ttu-id="a4512-356"></description><description> -Infinito</span><span class="sxs-lookup"><span data-stu-id="a4512-356"></description><description> -Infinity</span></span>  
  
 <span data-ttu-id="a4512-357"></description></item><item><term><paramref name="a" /> =  +Infinito</span><span class="sxs-lookup"><span data-stu-id="a4512-357"></description></item><item><term><paramref name="a" /> =  +Infinity</span></span>  
  
 <span data-ttu-id="a4512-358"></term><description><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="a4512-358"></term><description><paramref name="newBase" />&gt; 1</span></span>  
  
 <span data-ttu-id="a4512-359"></description><description> +Infinito</span><span class="sxs-lookup"><span data-stu-id="a4512-359"></description><description> +Infinity</span></span>  
  
 <span data-ttu-id="a4512-360"></description></item><item><term><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="a4512-360"></description></item><item><term><paramref name="a" /> = 1</span></span>  
  
 <span data-ttu-id="a4512-361"></term><description><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="a4512-361"></term><description><paramref name="newBase" /> = 0</span></span>  
  
 <span data-ttu-id="a4512-362"></description><description> 0</span><span class="sxs-lookup"><span data-stu-id="a4512-362"></description><description> 0</span></span>  
  
 <span data-ttu-id="a4512-363"></description></item><item><term><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="a4512-363"></description></item><item><term><paramref name="a" /> = 1</span></span>  
  
 <span data-ttu-id="a4512-364"></term><description><paramref name="newBase" /> = +Infinito</span><span class="sxs-lookup"><span data-stu-id="a4512-364"></term><description><paramref name="newBase" /> = +Infinity</span></span>  
  
 <span data-ttu-id="a4512-365"></description><description> 0</span><span class="sxs-lookup"><span data-stu-id="a4512-365"></description><description> 0</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-366">L'esempio seguente usa <xref:System.Math.Log%2A> per valutare alcune identità logaritmiche per valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="a4512-366">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-367">Numero di cui trovare il logaritmo.</span><span class="sxs-lookup"><span data-stu-id="a4512-367">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="a4512-368">Restituisce il logaritmo in base 10 del numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-368">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="a4512-369">Uno dei valori della tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-369">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="a4512-370">parametro <list type="table"><listheader><term><paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="a4512-370"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="a4512-371"></term><description> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-371"></term><description> Return value</span></span>  
  
 <span data-ttu-id="a4512-372"></description></listheader><item><term> Positivo</span><span class="sxs-lookup"><span data-stu-id="a4512-372"></description></listheader><item><term> Positive</span></span>  
  
 <span data-ttu-id="a4512-373"></term><description>Logaritmo in base 10 di <paramref name="d" />: log 10<paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-373"></term><description> The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span></span>  
  
 <span data-ttu-id="a4512-374"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="a4512-374"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="a4512-375"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negativo</span><span class="sxs-lookup"><span data-stu-id="a4512-375"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="a4512-376"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> è uguale a <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> è uguale a <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="a4512-376"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-377">Parametro `d` viene specificato come un numero in base 10.</span><span class="sxs-lookup"><span data-stu-id="a4512-377">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-378">L'esempio seguente usa il <xref:System.Math.Log10%2A> per restituire il logaritmo in base 10 per i valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="a4512-378">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4512-379">Restituisce il più elevato tra due numeri specificati.</span><span class="sxs-lookup"><span data-stu-id="a4512-379">Returns the larger of two specified numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-380">Primo di due interi senza segno a 8 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-380">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-381">Secondo di due interi senza segno a 8 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-381">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-382">Restituisce il più elevato tra due interi senza segno a 8 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-382">Returns the larger of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-383">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-383">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-384">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-384">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-385">Primo di due numeri decimali da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-385">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-386">Secondo di due numeri decimali da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-386">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-387">Restituisce il più elevato tra due numeri decimali.</span><span class="sxs-lookup"><span data-stu-id="a4512-387">Returns the larger of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-388">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-388">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-389">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-389">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-390">Primo di due numeri a virgola mobile e precisione doppia da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-390">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-391">Secondo di due numeri a virgola mobile e precisione doppia da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-391">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-392">Restituisce il più elevato tra due numeri a virgola mobile e precisione doppia.</span><span class="sxs-lookup"><span data-stu-id="a4512-392">Returns the larger of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-393">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-393">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="a4512-394">Se <paramref name="val1" />, <paramref name="val2" /> o sia <paramref name="val1" /> che <paramref name="val2" /> sono uguali a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-394">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-395">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-395">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-396">Primo di due interi con segno a 16 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-396">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-397">Secondo di due interi con segno a 16 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-397">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-398">Restituisce il più elevato tra due interi con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-398">Returns the larger of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-399">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-399">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-400">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-400">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-401">Primo di due interi con segno a 32 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-401">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-402">Secondo di due interi con segno a 32 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-402">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-403">Restituisce il più elevato tra due interi con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-403">Returns the larger of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-404">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-404">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-405">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-405">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-406">Primo di due interi con segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-406">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-407">Secondo di due interi con segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-407">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-408">Restituisce il più elevato tra due interi con segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-408">Returns the larger of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-409">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-409">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-410">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-410">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-411">Primo di due interi con segno a 8 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-411">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-412">Secondo di due interi con segno a 8 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-412">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-413">Restituisce il più elevato tra due interi con segno a 8 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-413">Returns the larger of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-414">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-414">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-415">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-415">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-416">Primo di due numeri a virgola mobile e precisione singola da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-416">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-417">Secondo di due numeri a virgola mobile e precisione singola da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-417">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-418">Restituisce il più elevato tra due numeri a virgola mobile e precisione singola.</span><span class="sxs-lookup"><span data-stu-id="a4512-418">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-419">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-419">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="a4512-420">Se <paramref name="val1" />, <paramref name="val2" /> o entrambi <paramref name="val1" /> e <paramref name="val2" /> sono uguali a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-420">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-421">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-421">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-422">Primo di due interi senza segno a 16 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-422">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-423">Secondo di due interi senza segno a 16 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-423">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-424">Restituisce il più elevato tra due interi senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-424">Returns the larger of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-425">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-425">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-426">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-426">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-427">Primo di due interi senza segno a 32 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-427">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-428">Secondo di due interi senza segno a 32 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-428">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-429">Restituisce il più elevato tra due interi senza segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-429">Returns the larger of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-430">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-430">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-431">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-431">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-432">Primo di due interi senza segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-432">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-433">Secondo di due interi senza segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-433">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-434">Restituisce il più elevato tra due interi senza segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-434">Returns the larger of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-435">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-435">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-436">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il maggiore tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-436">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4512-437">Restituisce il meno elevato tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="a4512-437">Returns the smaller of two numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-438">Primo di due interi senza segno a 8 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-438">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-439">Secondo di due interi senza segno a 8 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-439">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-440">Restituisce il meno elevato tra due interi senza segno a 8 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-440">Returns the smaller of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-441">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-441">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-442">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-442">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-443">Primo di due numeri decimali da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-443">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-444">Secondo di due numeri decimali da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-444">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-445">Restituisce il meno elevato tra due numeri decimali.</span><span class="sxs-lookup"><span data-stu-id="a4512-445">Returns the smaller of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-446">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-446">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-447">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-447">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-448">Primo di due numeri a virgola mobile e precisione doppia da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-448">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-449">Secondo di due numeri a virgola mobile e precisione doppia da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-449">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-450">Restituisce il meno elevato tra due numeri a virgola mobile e precisione doppia.</span><span class="sxs-lookup"><span data-stu-id="a4512-450">Returns the smaller of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-451">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-451">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="a4512-452">Se <paramref name="val1" />, <paramref name="val2" /> o sia <paramref name="val1" /> che <paramref name="val2" /> sono uguali a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-452">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-453">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-453">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-454">Primo di due interi con segno a 16 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-454">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-455">Secondo di due interi con segno a 16 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-455">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-456">Restituisce il meno elevato tra due interi con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-456">Returns the smaller of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-457">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-457">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-458">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-458">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-459">Primo di due interi con segno a 32 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-459">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-460">Secondo di due interi con segno a 32 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-460">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-461">Restituisce il meno elevato tra due interi con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-461">Returns the smaller of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-462">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-462">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-463">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-463">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-464">Primo di due interi con segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-464">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-465">Secondo di due interi con segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-465">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-466">Restituisce il meno elevato tra due interi con segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-466">Returns the smaller of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-467">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-467">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-468">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-468">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-469">Primo di due interi con segno a 8 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-469">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-470">Secondo di due interi con segno a 8 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-470">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-471">Restituisce il meno elevato tra due interi con segno a 8 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-471">Returns the smaller of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-472">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-472">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-473">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-473">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-474">Primo di due numeri a virgola mobile e precisione singola da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-474">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-475">Secondo di due numeri a virgola mobile e precisione singola da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-475">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-476">Restituisce il meno elevato tra due numeri a virgola mobile e precisione singola.</span><span class="sxs-lookup"><span data-stu-id="a4512-476">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-477">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-477">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="a4512-478">Se <paramref name="val1" />, <paramref name="val2" /> o sia <paramref name="val1" /> che <paramref name="val2" /> sono uguali a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-478">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-479">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-479">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-480">Primo di due interi senza segno a 16 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-480">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-481">Secondo di due interi senza segno a 16 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-481">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-482">Restituisce il meno elevato tra due interi senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-482">Returns the smaller of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-483">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-483">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-484">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-484">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-485">Primo di due interi senza segno a 32 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-485">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-486">Secondo di due interi senza segno a 32 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-486">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-487">Restituisce il meno elevato tra due interi senza segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-487">Returns the smaller of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-488">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-488">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-489">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-489">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="a4512-490">Primo di due interi senza segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-490">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="a4512-491">Secondo di due interi senza segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="a4512-491">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="a4512-492">Restituisce il meno elevato tra due interi senza segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-492">Returns the smaller of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="a4512-493">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="a4512-493">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-494">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="a4512-494">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4512-495">Rappresenta il rapporto tra la circonferenza del cerchio e il relativo diametro, specificato dalla costante π.</span><span class="sxs-lookup"><span data-stu-id="a4512-495">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-496">Il valore di questo campo è 3.14159265358979323846.</span><span class="sxs-lookup"><span data-stu-id="a4512-496">The value of this field is 3.14159265358979323846.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-497">L'esempio seguente usa <xref:System.Math.PI> per facilitare il calcolo degli angoli interni di un trapezio.</span><span class="sxs-lookup"><span data-stu-id="a4512-497">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a4512-498">Numero a virgola mobile e precisione doppia da elevare a potenza.</span><span class="sxs-lookup"><span data-stu-id="a4512-498">A double-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="a4512-499">Numero a virgola mobile a precisione doppia che specifica una potenza.</span><span class="sxs-lookup"><span data-stu-id="a4512-499">A double-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="a4512-500">Restituisce il numero specificato elevato alla potenza specificata.</span><span class="sxs-lookup"><span data-stu-id="a4512-500">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="a4512-501">Numero <paramref name="x" /> elevato alla potenza <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-501">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-502">Nella tabella seguente indica il valore restituito quando diversi valori o intervalli di valori vengono specificati per il `x` e `y` parametri.</span><span class="sxs-lookup"><span data-stu-id="a4512-502">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="a4512-503">Per altre informazioni, vedere <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> e <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a4512-503">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="a4512-504">Parametri</span><span class="sxs-lookup"><span data-stu-id="a4512-504">Parameters</span></span>|<span data-ttu-id="a4512-505">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-505">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="a4512-506">`x` o `y`  =  `NaN`.</span><span class="sxs-lookup"><span data-stu-id="a4512-506">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="a4512-507">`x` = Qualsiasi valore eccetto `NaN`; `y` = 0.</span><span class="sxs-lookup"><span data-stu-id="a4512-507">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="a4512-508">1</span><span class="sxs-lookup"><span data-stu-id="a4512-508">1</span></span>|  
|<span data-ttu-id="a4512-509">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="a4512-509">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="a4512-510">0</span><span class="sxs-lookup"><span data-stu-id="a4512-510">0</span></span>|  
|<span data-ttu-id="a4512-511">`x` = `NegativeInfinity`; `y` è un numero intero dispari positivo.</span><span class="sxs-lookup"><span data-stu-id="a4512-511">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="a4512-512">`x` = `NegativeInfinity`; `y` è positivo, ma non un numero intero dispari.</span><span class="sxs-lookup"><span data-stu-id="a4512-512">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="a4512-513">`x` < 0, ma non `NegativeInfinity`; `y` non è un numero intero, `NegativeInfinity`, o `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a4512-513">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="a4512-514">`x` = -1. `y`  =  `NegativeInfinity` o `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a4512-514">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="a4512-515">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a4512-515">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="a4512-516">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a4512-516">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="a4512-517">0</span><span class="sxs-lookup"><span data-stu-id="a4512-517">0</span></span>|  
|<span data-ttu-id="a4512-518">`x` < -1 o `x` > 1. `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a4512-518">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="a4512-519">0</span><span class="sxs-lookup"><span data-stu-id="a4512-519">0</span></span>|  
|<span data-ttu-id="a4512-520">`x` < -1 o `x` > 1. `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a4512-520">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="a4512-521">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="a4512-521">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="a4512-522">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="a4512-522">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="a4512-523">0</span><span class="sxs-lookup"><span data-stu-id="a4512-523">0</span></span>|  
|<span data-ttu-id="a4512-524">`x` = 1. `y` è qualsiasi valore eccetto `NaN`.</span><span class="sxs-lookup"><span data-stu-id="a4512-524">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="a4512-525">1</span><span class="sxs-lookup"><span data-stu-id="a4512-525">1</span></span>|  
|<span data-ttu-id="a4512-526">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="a4512-526">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="a4512-527">0</span><span class="sxs-lookup"><span data-stu-id="a4512-527">0</span></span>|  
|<span data-ttu-id="a4512-528">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="a4512-528">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="a4512-529">L'esempio seguente usa il <xref:System.Math.Pow%2A> metodo per calcolare il valore risultante dalla generazione 2 alla potenza comprese tra 0 e 32.</span><span class="sxs-lookup"><span data-stu-id="a4512-529">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4512-530">Arrotonda un valore all'intero più vicino o al numero specificato di cifre frazionarie.</span><span class="sxs-lookup"><span data-stu-id="a4512-530">Rounds a value to the nearest integer or to the specified number of fractional digits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-531">Contenuto della sezione:</span><span class="sxs-lookup"><span data-stu-id="a4512-531">In this section:</span></span>  
  
 <span data-ttu-id="a4512-532">[Sintassi del metodo di overload](#Syntax) </span><span class="sxs-lookup"><span data-stu-id="a4512-532">[Overloaded method syntax](#Syntax) </span></span>  
 <span data-ttu-id="a4512-533">[Parametri](#Params) </span><span class="sxs-lookup"><span data-stu-id="a4512-533">[Parameters](#Params) </span></span>  
 <span data-ttu-id="a4512-534">[Valore restituito](#Returns) </span><span class="sxs-lookup"><span data-stu-id="a4512-534">[Return value](#Returns) </span></span>  
 <span data-ttu-id="a4512-535">[Eccezioni](#Exceptions) </span><span class="sxs-lookup"><span data-stu-id="a4512-535">[Exceptions](#Exceptions) </span></span>  
 <span data-ttu-id="a4512-536">[Quale metodo si chiama?](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="a4512-536">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="a4512-537">[I valori punto intermedio e le convenzioni di arrotondamento](#Midpoint) </span><span class="sxs-lookup"><span data-stu-id="a4512-537">[Midpoint values and rounding conventions](#Midpoint) </span></span>  
 <span data-ttu-id="a4512-538">[Arrotondamento e la precisione](#Precision) </span><span class="sxs-lookup"><span data-stu-id="a4512-538">[Rounding and precision](#Precision) </span></span>  
 <span data-ttu-id="a4512-539">[Arrotondamento e precisione singola valori a virgola mobile](#Single) </span><span class="sxs-lookup"><span data-stu-id="a4512-539">[Rounding and single-precision floating-point values](#Single) </span></span>  
 <span data-ttu-id="a4512-540">Esempi:</span><span class="sxs-lookup"><span data-stu-id="a4512-540">Examples:</span></span>   
 [<span data-ttu-id="a4512-541">Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="a4512-541">Math.Round(Decimal)</span></span>](#Round1_Example)  
 [<span data-ttu-id="a4512-542">Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="a4512-542">Math.Round(Double)</span></span>](#Round2_Example)  
 [<span data-ttu-id="a4512-543">Math.Round(Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="a4512-543">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
 [<span data-ttu-id="a4512-544">Math. Round (decimale, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a4512-544">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
 [<span data-ttu-id="a4512-545">Math.Round(Double, Int32)</span><span class="sxs-lookup"><span data-stu-id="a4512-545">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
 [<span data-ttu-id="a4512-546">Math. Round (Double, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a4512-546">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
 [<span data-ttu-id="a4512-547">Math. Round (Int32, Decimal MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a4512-547">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
 [<span data-ttu-id="a4512-548">Math. Round (Double, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a4512-548">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  
[<span data-ttu-id="a4512-549">Informazioni sulla versione</span><span class="sxs-lookup"><span data-stu-id="a4512-549">Version information</span></span>](#Round_Versions)  
  
<a name="Syntax"></a>   
## <a name="overloaded-method-syntax"></a><span data-ttu-id="a4512-550">Sintassi del metodo di overload</span><span class="sxs-lookup"><span data-stu-id="a4512-550">Overloaded method syntax</span></span>  
 <span data-ttu-id="a4512-551">Per informazioni aggiuntive sulla scelta di un overload, vedere [quale metodo chiamato?](#Tasks)</span><span class="sxs-lookup"><span data-stu-id="a4512-551">For additional guidance on choosing an overload, see [Which method do I call?](#Tasks)</span></span>  
  
 <span data-ttu-id="a4512-552">`Decimal Math.Round(Decimal` `d` `)`</span><span class="sxs-lookup"><span data-stu-id="a4512-552">`Decimal Math.Round(Decimal` `d` `)`</span></span>  
 <span data-ttu-id="a4512-553">Arrotonda un valore decimale all'intero più vicino e arrotondato al numero pari più vicino punto medio ([esempio](#Round1_Example)).</span><span class="sxs-lookup"><span data-stu-id="a4512-553">Rounds a decimal value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round1_Example)).</span></span>  
  
 <span data-ttu-id="a4512-554">`Double Math.Round(Double` `a` `)`</span><span class="sxs-lookup"><span data-stu-id="a4512-554">`Double Math.Round(Double` `a` `)`</span></span>  
 <span data-ttu-id="a4512-555">Arrotonda un valore a virgola mobile a precisione doppia all'intero più vicino e arrotondato al numero pari più vicino punto medio ([esempio](#Round2_Example)).</span><span class="sxs-lookup"><span data-stu-id="a4512-555">Rounds a double-precision floating-point value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round2_Example)).</span></span>  
  
 <span data-ttu-id="a4512-556">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span><span class="sxs-lookup"><span data-stu-id="a4512-556">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span></span>  
 <span data-ttu-id="a4512-557">Arrotonda un valore decimale a un numero specificato di cifre frazionarie e arrotondato al numero pari più vicino punto medio ([esempio](#Round3_Example)).</span><span class="sxs-lookup"><span data-stu-id="a4512-557">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round3_Example)).</span></span>  
  
 <span data-ttu-id="a4512-558">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span><span class="sxs-lookup"><span data-stu-id="a4512-558">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span></span>  
 <span data-ttu-id="a4512-559">Arrotonda un valore a virgola mobile a precisione doppia a un numero specificato di cifre frazionarie e arrotondato al numero pari più vicino punto medio ([esempio](#Round4_Example)).</span><span class="sxs-lookup"><span data-stu-id="a4512-559">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round4_Example)).</span></span>  
  
 <span data-ttu-id="a4512-560">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="a4512-560">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="a4512-561">Arrotonda un valore decimale all'intero più vicino e utilizza la convenzione di arrotondamento specificata per i valori del punto centrale ([esempio](#Round5_Example)).</span><span class="sxs-lookup"><span data-stu-id="a4512-561">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round5_Example)).</span></span>  
  
 <span data-ttu-id="a4512-562">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="a4512-562">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="a4512-563">Arrotonda un valore a virgola mobile a precisione doppia all'intero più vicino e utilizza la convenzione di arrotondamento specificata per i valori del punto centrale ([esempio](#Round6_Example)).</span><span class="sxs-lookup"><span data-stu-id="a4512-563">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round6_Example)).</span></span>  
  
 <span data-ttu-id="a4512-564">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="a4512-564">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="a4512-565">Arrotonda un valore decimale a un numero specificato di cifre frazionarie e utilizza la convenzione di arrotondamento specificata per i valori del punto centrale ([esempio](#Round7_Example)).</span><span class="sxs-lookup"><span data-stu-id="a4512-565">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round7_Example)).</span></span>  
  
 <span data-ttu-id="a4512-566">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="a4512-566">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="a4512-567">Arrotonda un valore a virgola mobile a precisione doppia a un numero specificato di cifre frazionarie e utilizza la convenzione di arrotondamento specificata per i valori del punto centrale ([esempio](#Round8_Example)).</span><span class="sxs-lookup"><span data-stu-id="a4512-567">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round8_Example)).</span></span>  
  
<a name="Params"></a>   
## <a name="parameters"></a><span data-ttu-id="a4512-568">Parametri</span><span class="sxs-lookup"><span data-stu-id="a4512-568">Parameters</span></span>  
 <span data-ttu-id="a4512-569">Si tratta di un elenco completo dei parametri per il <xref:System.Math.Round%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a4512-569">This is a complete list of parameters for the <xref:System.Math.Round%2A> method.</span></span> <span data-ttu-id="a4512-570">Per i parametri utilizzati da ogni overload, vedere la sintassi di overload precedente.</span><span class="sxs-lookup"><span data-stu-id="a4512-570">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="a4512-571">Parametro</span><span class="sxs-lookup"><span data-stu-id="a4512-571">Parameter</span></span>|<span data-ttu-id="a4512-572">Tipo</span><span class="sxs-lookup"><span data-stu-id="a4512-572">Type</span></span>|<span data-ttu-id="a4512-573">Descrizione</span><span class="sxs-lookup"><span data-stu-id="a4512-573">Description</span></span>|  
|---------------|----------|-----------------|  
|`d`|<xref:System.Decimal>|<span data-ttu-id="a4512-574">Un numero da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-574">A number to be rounded.</span></span>|  
|`a`<br /><br /> <span data-ttu-id="a4512-575">oppure</span><span class="sxs-lookup"><span data-stu-id="a4512-575">-or-</span></span><br /><br /> `value`|<xref:System.Double>|<span data-ttu-id="a4512-576">Numero a virgola mobile e precisione doppia da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-576">A double-precision floating-point number to be rounded.</span></span>|  
|`decimals`<br /><br /> <span data-ttu-id="a4512-577">oppure</span><span class="sxs-lookup"><span data-stu-id="a4512-577">-or-</span></span><br /><br /> `digits`|<xref:System.Int32>|<span data-ttu-id="a4512-578">Numero di cifre frazionarie nel valore restituito.</span><span class="sxs-lookup"><span data-stu-id="a4512-578">The number of fractional digits in the return value.</span></span> <span data-ttu-id="a4512-579">Per <xref:System.Decimal> i valori, può variare da 0 a 28.</span><span class="sxs-lookup"><span data-stu-id="a4512-579">For <xref:System.Decimal> values, it can range from 0 to 28.</span></span> <span data-ttu-id="a4512-580">Per <xref:System.Double> valori, è possibile compreso tra 0 e 15.</span><span class="sxs-lookup"><span data-stu-id="a4512-580">For <xref:System.Double> values, it can range from 0 to 15.</span></span> <span data-ttu-id="a4512-581">Si noti che 15 è il numero massimo di cifre integrali e frazionarie supportati dal <xref:System.Double> tipo.</span><span class="sxs-lookup"><span data-stu-id="a4512-581">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span><br /><br /> <span data-ttu-id="a4512-582">Il valore predefinito: 0, che consente di arrotondare un numero intero</span><span class="sxs-lookup"><span data-stu-id="a4512-582">Default value: 0, which rounds to an integer</span></span>|  
|`mode`|<xref:System.MidpointRounding>|<span data-ttu-id="a4512-583">Flag che specifica la convenzione da utilizzare per arrotondare i valori del punto centrale.</span><span class="sxs-lookup"><span data-stu-id="a4512-583">A flag that specifies the convention to use for rounding midpoint values.</span></span> <span data-ttu-id="a4512-584">Vedere [valori punto intermedio e le convenzioni di arrotondamento](#Midpoint).</span><span class="sxs-lookup"><span data-stu-id="a4512-584">See [Midpoint values and rounding conventions](#Midpoint).</span></span><br /><br /> <span data-ttu-id="a4512-585">Valore predefinito: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a4512-585">Default value: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span></span>|  
  
<a name="Returns"></a>   
## <a name="return-value"></a><span data-ttu-id="a4512-586">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-586">Return value</span></span>  
 <span data-ttu-id="a4512-587">Tipo: <xref:System.Decimal> o <xref:System.Double>, a seconda del tipo del valore da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-587">Type: <xref:System.Decimal> or <xref:System.Double>, depending on the type of the value to be rounded.</span></span>   
<span data-ttu-id="a4512-588">Un valore numerico dello stesso tipo `d`, `a`, o `value`, ma arrotondati in un intero o al numero specificato di cifre decimali.</span><span class="sxs-lookup"><span data-stu-id="a4512-588">A numeric value of the same type as `d`, `a`, or `value`, but rounded either to an integer or to the specified number of decimal digits.</span></span> <span data-ttu-id="a4512-589">Vedere [valori punto intermedio e le convenzioni di arrotondamento](#Midpoint) per informazioni su arrotondamento dei numeri con i valori del punto centrale.</span><span class="sxs-lookup"><span data-stu-id="a4512-589">See [Midpoint values and rounding conventions](#Midpoint) for information about rounding numbers with midpoint values.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="a4512-590">Quando i valori punto intermedio di arrotondamento, l'algoritmo di arrotondamento esegue un test di uguaglianza.</span><span class="sxs-lookup"><span data-stu-id="a4512-590">When rounding midpoint values, the rounding algorithm performs an equality test.</span></span> <span data-ttu-id="a4512-591">A causa di problemi di rappresentazione binaria e nel formato a virgola mobile a precisione, il valore restituito dal metodo può essere imprevisto.</span><span class="sxs-lookup"><span data-stu-id="a4512-591">Because of problems of binary representation and precision in the floating-point format, the value returned by the method can be unexpected.</span></span> <span data-ttu-id="a4512-592">Per ulteriori informazioni, vedere [arrotondamento e la precisione](#Precision).</span><span class="sxs-lookup"><span data-stu-id="a4512-592">For more information, see [Rounding and precision](#Precision).</span></span>  
  
 <span data-ttu-id="a4512-593">Se un overload con un <xref:System.Double> parametro viene chiamato con <xref:System.Double.NaN?displayProperty=nameWithType>, il metodo restituisce <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a4512-593">If an overload with a <xref:System.Double> parameter is called with <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a4512-594">Se viene chiamato con <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> o <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, il metodo restituisce <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> o <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="a4512-594">If it is called with <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
<a name="Exceptions"></a>   
## <a name="exceptions"></a><span data-ttu-id="a4512-595">Eccezioni</span><span class="sxs-lookup"><span data-stu-id="a4512-595">Exceptions</span></span>  
  
|<span data-ttu-id="a4512-596">Eccezione</span><span class="sxs-lookup"><span data-stu-id="a4512-596">Exception</span></span>|<span data-ttu-id="a4512-597">Condizione</span><span class="sxs-lookup"><span data-stu-id="a4512-597">Condition</span></span>|<span data-ttu-id="a4512-598">Generata dal</span><span class="sxs-lookup"><span data-stu-id="a4512-598">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.OverflowException>|<span data-ttu-id="a4512-599">Il risultato è compreso nell'intervallo del <xref:System.Decimal> tipo.</span><span class="sxs-lookup"><span data-stu-id="a4512-599">The result is outside the range of the <xref:System.Decimal> type.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="a4512-600">`decimals` è minore di 0 o maggiore di 28.</span><span class="sxs-lookup"><span data-stu-id="a4512-600">`decimals` is less than 0 or greater than 28.</span></span><br /><br /> <span data-ttu-id="a4512-601">oppure</span><span class="sxs-lookup"><span data-stu-id="a4512-601">-or-</span></span><br /><br /> <span data-ttu-id="a4512-602">`digits` è minore di 0 o maggiore di 15.</span><span class="sxs-lookup"><span data-stu-id="a4512-602">`digits` is less than 0 or greater than 15.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentException>|<span data-ttu-id="a4512-603">`mode` non è un valore di <xref:System.MidpointRounding> valido.</span><span class="sxs-lookup"><span data-stu-id="a4512-603">`mode` is not a valid value of <xref:System.MidpointRounding>.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
  
<a name="Tasks"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="a4512-604">Quale metodo si chiama?</span><span class="sxs-lookup"><span data-stu-id="a4512-604">Which method do I call?</span></span>  
  
|<span data-ttu-id="a4512-605">A</span><span class="sxs-lookup"><span data-stu-id="a4512-605">To</span></span>|<span data-ttu-id="a4512-606">Call</span><span class="sxs-lookup"><span data-stu-id="a4512-606">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="a4512-607">Arrotondare un numero in un intero con arrotondamento per convenzione più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-607">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="a4512-608">oppure</span><span class="sxs-lookup"><span data-stu-id="a4512-608">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="a4512-609">Arrotondare un numero in un intero con un arrotondamento convenzione.</span><span class="sxs-lookup"><span data-stu-id="a4512-609">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="a4512-610">oppure</span><span class="sxs-lookup"><span data-stu-id="a4512-610">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="a4512-611">Arrotondare un numero al numero specificato di cifre frazionarie utilizzando l'arrotondamento per convenzione più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-611">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="a4512-612">oppure</span><span class="sxs-lookup"><span data-stu-id="a4512-612">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="a4512-613">Arrotondare un numero a un numero specificato di cifre frazionarie utilizzando un oggetto specificato arrotondamento convenzione.</span><span class="sxs-lookup"><span data-stu-id="a4512-613">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="a4512-614">oppure</span><span class="sxs-lookup"><span data-stu-id="a4512-614">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="a4512-615">Arrotonda un <xref:System.Single> valore a un numero specificato di cifre frazionarie utilizzando una convenzione di arrotondamento e riducendo al minimo la perdita di precisione specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-615">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="a4512-616">Convertire il <xref:System.Single> per un <xref:System.Decimal> e chiamare <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span><span class="sxs-lookup"><span data-stu-id="a4512-616">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="a4512-617">Arrotondare un numero al numero specificato di cifre frazionarie riducendo al minimo i problemi di precisione in valori punto intermedio di arrotondamento.</span><span class="sxs-lookup"><span data-stu-id="a4512-617">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="a4512-618">Chiamare un metodo che implementa un confronto "maggiore di o approssimativamente uguale a".</span><span class="sxs-lookup"><span data-stu-id="a4512-618">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="a4512-619">Vedere [arrotondamento e la precisione](#Precision).</span><span class="sxs-lookup"><span data-stu-id="a4512-619">See [Rounding and precision](#Precision).</span></span>|  
|<span data-ttu-id="a4512-620">Arrotondare un valore decimale in un valore integer che è maggiore del valore frazionario.</span><span class="sxs-lookup"><span data-stu-id="a4512-620">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="a4512-621">Ad esempio, arrotondare 3.1 a 4.</span><span class="sxs-lookup"><span data-stu-id="a4512-621">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="a4512-622">Arrotondare un valore decimale in un valore integer che è minore del valore frazionario.</span><span class="sxs-lookup"><span data-stu-id="a4512-622">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="a4512-623">Ad esempio, arrotondare 3.9 a 3.</span><span class="sxs-lookup"><span data-stu-id="a4512-623">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  
  
<a name="Midpoint"></a>   
## <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="a4512-624">I valori punto intermedio e le convenzioni di arrotondamento</span><span class="sxs-lookup"><span data-stu-id="a4512-624">Midpoint values and rounding conventions</span></span>  
 <span data-ttu-id="a4512-625">Arrotondamento comporta la conversione di un valore numerico con una precisione specificata al valore più vicino con una precisione inferiore.</span><span class="sxs-lookup"><span data-stu-id="a4512-625">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="a4512-626">Ad esempio, è possibile utilizzare il <xref:System.Math.Round%28System.Double%29> metodo per arrotondare un valore di 3.4 3.0 e <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> metodo per arrotondare un valore di 3,579-3.58.</span><span class="sxs-lookup"><span data-stu-id="a4512-626">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
 <span data-ttu-id="a4512-627">In un valore medio, il valore dopo la cifra meno significativo del risultato è esattamente metà tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="a4512-627">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="a4512-628">Ad esempio, 3.47500 è un valore medio se deve essere arrotondato a due cifre decimali e 7.500 è un valore medio se deve essere arrotondato all'intero.</span><span class="sxs-lookup"><span data-stu-id="a4512-628">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="a4512-629">In questi casi, è Impossibile identificare facilmente il valore più vicino senza una convenzione di arrotondamento.</span><span class="sxs-lookup"><span data-stu-id="a4512-629">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
 <span data-ttu-id="a4512-630">Il <xref:System.Math.Round%2A> metodo supporta due convenzioni di arrotondamento per la gestione dei valori punto intermedio:</span><span class="sxs-lookup"><span data-stu-id="a4512-630">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
 <span data-ttu-id="a4512-631">**Arrotondamento lontano da zero**</span><span class="sxs-lookup"><span data-stu-id="a4512-631">**Rounding away from zero**</span></span>  
 <span data-ttu-id="a4512-632">Punto centrale valori vengono arrotondati al numero successivo lontano da zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-632">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="a4512-633">Ad esempio, consente di arrotondare 3,75 a 3.8, 3,85 arrotonda al 3.9,-3.75 viene arrotondato a-3.8, e-3.85 viene arrotondato a-3.9.</span><span class="sxs-lookup"><span data-stu-id="a4512-633">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="a4512-634">Questa modalità di arrotondamento è rappresentata dal <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> membro di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="a4512-634">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="a4512-635">Arrotondamento lontano da zero è il form più noto di arrotondamento.</span><span class="sxs-lookup"><span data-stu-id="a4512-635">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="a4512-636">**Al valore più vicino o arrotondamento**</span><span class="sxs-lookup"><span data-stu-id="a4512-636">**Rounding to nearest, or banker's rounding**</span></span>  
 <span data-ttu-id="a4512-637">Punto centrale valori vengono arrotondati al numero pari più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-637">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="a4512-638">Ad esempio, 3,75 sia 3.85 arrotondare 3.8 e-3.75 sia-3.85 arrotondare-3.8.</span><span class="sxs-lookup"><span data-stu-id="a4512-638">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="a4512-639">Questa modalità di arrotondamento è rappresentata dal <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> membro di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="a4512-639">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="a4512-640">Al valore più vicino è il formato standard di arrotondamento utilizzato nelle operazioni finanziarie e statistiche.</span><span class="sxs-lookup"><span data-stu-id="a4512-640">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="a4512-641">È conforme allo Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="a4512-641">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a4512-642">Quando utilizzato in più operazioni di arrotondamento, riduce l'errore di arrotondamento causato da valori punto intermedio in un'unica direzione di arrotondamento coerente.</span><span class="sxs-lookup"><span data-stu-id="a4512-642">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="a4512-643">In alcuni casi, l'errore di arrotondamento può essere significativo.</span><span class="sxs-lookup"><span data-stu-id="a4512-643">In some cases, this rounding error can be significant.</span></span>  
  
 <span data-ttu-id="a4512-644">L'esempio seguente illustra la differenza che può essere causato da valori punto intermedio in un'unica direzione di arrotondamento coerente.</span><span class="sxs-lookup"><span data-stu-id="a4512-644">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="a4512-645">L'esempio calcola la media reale di una matrice di <xref:System.Decimal> valori e quindi calcola la media quando i valori nella matrice vengono arrotondati usando le convenzioni di due.</span><span class="sxs-lookup"><span data-stu-id="a4512-645">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="a4512-646">In questo esempio, la media reale e la media che risulta quando l'arrotondamento al più vicino sono gli stessi.</span><span class="sxs-lookup"><span data-stu-id="a4512-646">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="a4512-647">Tuttavia, la media che risulta quando l'arrotondamento per eccesso varia tramite.05 (o % 3.6) dal valore medio true.</span><span class="sxs-lookup"><span data-stu-id="a4512-647">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
 [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
 <span data-ttu-id="a4512-648">Per impostazione predefinita, il <xref:System.Math.Round%2A> metodo utilizza l'arrotondamento per convenzione più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-648">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="a4512-649">La tabella seguente elenca gli overload di <xref:System.Math.Round%2A> metodo e la convenzione di arrotondamento che ognuno utilizza.</span><span class="sxs-lookup"><span data-stu-id="a4512-649">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="a4512-650">Overload</span><span class="sxs-lookup"><span data-stu-id="a4512-650">Overload</span></span>|<span data-ttu-id="a4512-651">Convenzione di arrotondamento</span><span class="sxs-lookup"><span data-stu-id="a4512-651">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="a4512-652">Determinato dal `mode` parametro.</span><span class="sxs-lookup"><span data-stu-id="a4512-652">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="a4512-653">Determinato dal `mode` parametro</span><span class="sxs-lookup"><span data-stu-id="a4512-653">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="a4512-654">Determinato dal `mode` parametro</span><span class="sxs-lookup"><span data-stu-id="a4512-654">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="a4512-655">Determinato dal `mode` parametro</span><span class="sxs-lookup"><span data-stu-id="a4512-655">Determined by `mode` parameter</span></span>|  
  
<a name="Precision"></a>   
## <a name="rounding-and-precision"></a><span data-ttu-id="a4512-656">Arrotondamento e la precisione</span><span class="sxs-lookup"><span data-stu-id="a4512-656">Rounding and precision</span></span>  
 <span data-ttu-id="a4512-657">Per determinare se un'operazione di arrotondamento prevede un valore medio, il <xref:System.Math.Round%2A> metodo Moltiplica il valore originale di arrotondare da 10<sup>n</sup>, dove *n* è il numero desiderato di frazionari cifre nel valore restituito e quindi stabilisce se la rimanente parte frazionaria del valore maggiore o uguale a. 5.</span><span class="sxs-lookup"><span data-stu-id="a4512-657">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="a4512-658">Si tratta di una leggera variazione in un test per verificarne l'uguaglianza e, come illustrato nella sezione "Test di uguaglianza" del <xref:System.Double> argomento di riferimento, verifica l'uguaglianza con valori a virgola mobile è problematici a causa di problemi del formato a virgola mobile con binario rappresentazione e la precisione.</span><span class="sxs-lookup"><span data-stu-id="a4512-658">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="a4512-659">Ciò significa che qualsiasi parte frazionaria di un numero che è leggermente inferiore a,5 (a causa di una perdita di precisione) non sarà arrotondato verso l'alto.</span><span class="sxs-lookup"><span data-stu-id="a4512-659">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  
  
 <span data-ttu-id="a4512-660">Nell'esempio che segue viene illustrato il problema.</span><span class="sxs-lookup"><span data-stu-id="a4512-660">The following example illustrates the problem.</span></span> <span data-ttu-id="a4512-661">Ripetutamente aggiunge.1 a 11.0 e Arrotonda il risultato all'intero più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-661">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="a4512-662">Indipendentemente dalla convenzione di arrotondamento, 11.5 devono essere arrotondati a 12.</span><span class="sxs-lookup"><span data-stu-id="a4512-662">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="a4512-663">Tuttavia, come nell'esempio viene illustrato dall'output, questo non accade.</span><span class="sxs-lookup"><span data-stu-id="a4512-663">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="a4512-664">Nell'esempio viene utilizzato "R" [stringa di formato numerico standard](~/docs/standard/base-types/standard-numeric-format-strings.md) per visualizzare la virgola mobile massima precisione del valore e mostra che il valore da arrotondare ha perso la precisione durante le aggiunte ripetute e il relativo valore sia effettivamente 11.499999999999998.</span><span class="sxs-lookup"><span data-stu-id="a4512-664">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="a4512-665">Poiché.499999999999998 è minore di,5, il valore non viene arrotondato all'intero più elevato successivo.</span><span class="sxs-lookup"><span data-stu-id="a4512-665">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="a4512-666">Come nell'esempio viene inoltre, il problema non si verifica se è sufficiente assegnare il valore costante 11.5 da un <xref:System.Double> variabile.</span><span class="sxs-lookup"><span data-stu-id="a4512-666">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
 [!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
 <span data-ttu-id="a4512-667">I problemi di precisione in arrotondando i valori punto medio sono più probabili nelle condizioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="a4512-667">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
-   <span data-ttu-id="a4512-668">Quando un valore frazionario non può essere espresse con precisione in formato binario del tipo a virgola mobile.</span><span class="sxs-lookup"><span data-stu-id="a4512-668">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
-   <span data-ttu-id="a4512-669">Quando il valore da arrotondare viene calcolato da uno o più operazioni a virgola mobile.</span><span class="sxs-lookup"><span data-stu-id="a4512-669">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
-   <span data-ttu-id="a4512-670">Quando il valore da arrotondare è un <xref:System.Single> anziché <xref:System.Double> o <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="a4512-670">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="a4512-671">Per ulteriori informazioni, vedere la sezione successiva, [arrotondamento e valori a virgola mobile e precisione singola](#Single).</span><span class="sxs-lookup"><span data-stu-id="a4512-671">For more information, see the next section, [Rounding and single-precision floating-point values](#Single).</span></span>  
  
 <span data-ttu-id="a4512-672">Nei casi in cui la mancanza di precisione in operazioni di arrotondamento è problematica, è possibile eseguire le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="a4512-672">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
-   <span data-ttu-id="a4512-673">Se l'operazione di arrotondamento chiama un overload che consente di arrotondare un <xref:System.Double> valore, è possibile modificare il <xref:System.Double> per un <xref:System.Decimal> valore e chiamare un overload che consente di arrotondare un <xref:System.Decimal> invece opportuno.</span><span class="sxs-lookup"><span data-stu-id="a4512-673">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="a4512-674">Sebbene il <xref:System.Decimal> tipo di dati presenta anche i problemi della rappresentazione e la perdita di precisione, questi problemi sono molto meno comuni.</span><span class="sxs-lookup"><span data-stu-id="a4512-674">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
-   <span data-ttu-id="a4512-675">Definire un algoritmo di arrotondamento personalizzato che esegue un test di "quasi uguale" per determinare se il valore da arrotondare è accettabile vicino a un valore del punto centrale.</span><span class="sxs-lookup"><span data-stu-id="a4512-675">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="a4512-676">L'esempio seguente definisce un `RoundApproximate` metodo che se un valore frazionario è sufficientemente nelle vicinanze di un valore del punto centrale per essere soggetti a punto centrale di arrotondamento.</span><span class="sxs-lookup"><span data-stu-id="a4512-676">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="a4512-677">Come illustrato nell'output dell'esempio, risolve il problema di arrotondamento illustrato nell'esempio precedente.</span><span class="sxs-lookup"><span data-stu-id="a4512-677">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
<a name="Single"></a>   
## <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="a4512-678">Arrotondamento e precisione singola valori a virgola mobile</span><span class="sxs-lookup"><span data-stu-id="a4512-678">Rounding and single-precision floating-point values</span></span>  
 <span data-ttu-id="a4512-679">Il <xref:System.Math.Round%2A> metodo include gli overload che accettano argomenti di tipo <xref:System.Decimal> e <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="a4512-679">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="a4512-680">Non sono metodi di arrotondamento dei valori di tipo <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="a4512-680">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="a4512-681">Se si passa un <xref:System.Single> valore per uno degli overload di <xref:System.Math.Round%2A> metodo, viene eseguito il cast (in c#) o convertito (in Visual Basic) per un <xref:System.Double>e i corrispondenti <xref:System.Math.Round%2A> overload con un <xref:System.Double> parametro viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="a4512-681">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="a4512-682">Si tratta di una conversione widening, spesso comporta una perdita di precisione, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-682">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="a4512-683">Quando un <xref:System.Single> 16.325 valore viene passato per il <xref:System.Math.Round%2A> metodo e arrotondato a due cifre decimali, utilizzando l'arrotondamento più vicino convenzione, il risultato è risultato 16.32 16.33 e non previsto.</span><span class="sxs-lookup"><span data-stu-id="a4512-683">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
 [!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
 <span data-ttu-id="a4512-684">Questo risultato è dovuto a una perdita di precisione nella conversione del <xref:System.Single> valore un <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="a4512-684">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="a4512-685">Poiché il valore risultante <xref:System.Double> valore 16.325000762939453 non è un valore medio è maggiore di 16.325 e viene sempre arrotondato verso l'alto.</span><span class="sxs-lookup"><span data-stu-id="a4512-685">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
 <span data-ttu-id="a4512-686">In molti casi, come illustrato nell'esempio, la perdita di precisione può essere ridotto a icona o eliminata dall'esecuzione del cast o conversione di <xref:System.Single> valore un <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="a4512-686">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="a4512-687">Si noti che, poiché si tratta di una conversione di narrowing, richiede tramite un operatore di cast o la chiamata di un metodo di conversione.</span><span class="sxs-lookup"><span data-stu-id="a4512-687">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  
  
<a name="Round1_Example"></a>   
## <a name="mathrounddecimal-example"></a><span data-ttu-id="a4512-688">Esempio Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="a4512-688">Math.Round(Decimal) example</span></span>  
 <span data-ttu-id="a4512-689">Nell'esempio seguente viene illustrato il <xref:System.Math.Round%28System.Decimal%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="a4512-689">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="a4512-690">Si noti che il <xref:System.Decimal> valore 4.5 viene arrotondato a 4 anziché 5, perché questo overload viene utilizzato il valore predefinito <xref:System.MidpointRounding.ToEven> convenzione.</span><span class="sxs-lookup"><span data-stu-id="a4512-690">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
 [!code-csharp[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
 [!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  
  
<a name="Round2_Example"></a>   
## <a name="mathrounddouble-example"></a><span data-ttu-id="a4512-691">Esempio Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="a4512-691">Math.Round(Double) example</span></span>  
 <span data-ttu-id="a4512-692">Nell'esempio seguente viene illustrato un arrotondamento al valore integer più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-692">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
 [!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  
  
<a name="Round3_Example"></a>   
## <a name="mathrounddecimal-int32-example"></a><span data-ttu-id="a4512-693">Esempio Math. Round (decimale, Int32)</span><span class="sxs-lookup"><span data-stu-id="a4512-693">Math.Round(Decimal, Int32) example</span></span>  
 <span data-ttu-id="a4512-694">Nell'esempio seguente consente di arrotondare i valori decimali con due cifre frazionarie ai valori con una sola cifra frazionaria.</span><span class="sxs-lookup"><span data-stu-id="a4512-694">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
 [!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
<a name="Round4_Example"></a>   
## <a name="mathrounddouble-int32-example"></a><span data-ttu-id="a4512-695">Math. Round (Double, Int32), esempio</span><span class="sxs-lookup"><span data-stu-id="a4512-695">Math.Round(Double, Int32) example</span></span>  
 <span data-ttu-id="a4512-696">Nell'esempio seguente Arrotonda valori double con due cifre frazionarie a Double con una sola cifra frazionaria.</span><span class="sxs-lookup"><span data-stu-id="a4512-696">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
 [!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
<a name="Round5_Example"></a>   
## <a name="mathrounddecimal-midpointrounding-example"></a><span data-ttu-id="a4512-697">Esempio Math. Round (decimale, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a4512-697">Math.Round(Decimal, MidpointRounding) example</span></span>  
 <span data-ttu-id="a4512-698">L'esempio seguente mostra i valori restituiti dal <xref:System.Math.Round%28System.Decimal%29> (metodo), il <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> metodo con un `mode` argomento di <xref:System.MidpointRounding.ToEven>e <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> metodo con un `mode` argomento di <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="a4512-698">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
<a name="Round6_Example"></a>   
## <a name="mathrounddouble-midpointrounding-example"></a><span data-ttu-id="a4512-699">Math. Round (Double, MidpointRounding), esempio</span><span class="sxs-lookup"><span data-stu-id="a4512-699">Math.Round(Double, MidpointRounding) example</span></span>  
 <span data-ttu-id="a4512-700">L'esempio seguente mostra i valori restituiti dal <xref:System.Math.Round%28System.Double%29> (metodo), il <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> metodo con un `mode` argomento di <xref:System.MidpointRounding.ToEven>e <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> metodo con un `mode` argomento di <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="a4512-700">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
 [!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
<a name="Round7_Example"></a>   
## <a name="mathrounddecimal-int32-midpointrounding-example"></a><span data-ttu-id="a4512-701">Esempio Math. Round (Int32, Decimal MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a4512-701">Math.Round(Decimal, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="a4512-702">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Round%2A> metodo con il <xref:System.MidpointRounding> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="a4512-702">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
<a name="Round8_Example"></a>   
## <a name="mathrounddouble-int32-midpointrounding-example"></a><span data-ttu-id="a4512-703">Esempio Math. Round (Double, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a4512-703">Math.Round(Double, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="a4512-704">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> metodo con il <xref:System.MidpointRounding> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="a4512-704">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
 [!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
<a name="Round_Versions"></a>   
## <a name="version-information"></a><span data-ttu-id="a4512-705">Informazioni sulla versione</span><span class="sxs-lookup"><span data-stu-id="a4512-705">Version information</span></span>  
 <span data-ttu-id="a4512-706">.NET Framework</span><span class="sxs-lookup"><span data-stu-id="a4512-706">.NET Framework</span></span>  
 <span data-ttu-id="a4512-707">Esegue l'overload senza un <xref:System.MidpointRounding> parametro sono supportati in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span><span class="sxs-lookup"><span data-stu-id="a4512-707">Overloads without a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span></span>  
<span data-ttu-id="a4512-708">Esegue l'overload con un <xref:System.MidpointRounding> parametro sono supportati in: 4.5, 4, 3.5, 3.0, 2.0</span><span class="sxs-lookup"><span data-stu-id="a4512-708">Overloads with a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0</span></span>  
  
 <span data-ttu-id="a4512-709">.NET Framework Client Profile</span><span class="sxs-lookup"><span data-stu-id="a4512-709">.NET Framework Client Profile</span></span>  
 <span data-ttu-id="a4512-710">Tutti gli overload sono supportati in: 4, 3.5 SP1</span><span class="sxs-lookup"><span data-stu-id="a4512-710">All overloads are supported in: 4, 3.5 SP1</span></span>  
  
 <span data-ttu-id="a4512-711">Libreria di classi portabile</span><span class="sxs-lookup"><span data-stu-id="a4512-711">Portable Class Library</span></span>  
 <span data-ttu-id="a4512-712">Tutti gli overload sono supportati</span><span class="sxs-lookup"><span data-stu-id="a4512-712">All overloads are supported</span></span>  
  
 <span data-ttu-id="a4512-713">.NET per applicazioni Windows Store</span><span class="sxs-lookup"><span data-stu-id="a4512-713">.NET for Windows Store apps</span></span>  
 <span data-ttu-id="a4512-714">Tutti gli overload sono supportati in: Windows 8</span><span class="sxs-lookup"><span data-stu-id="a4512-714">All overloads are supported in: Windows 8</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-715">Numero decimale da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-715">A decimal number to be rounded.</span></span></param>
        <summary><span data-ttu-id="a4512-716">Arrotonda un valore decimale al valore integrale più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-716">Rounds a decimal value to the nearest integral value.</span></span></summary>
        <returns><span data-ttu-id="a4512-717">Parametro più vicino all'intero <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-717">The integer nearest parameter <paramref name="d" />.</span></span> <span data-ttu-id="a4512-718">Se il componente frazionario di <paramref name="d" /> è a metà fra due interi, uno pari e uno dispari, viene restituito il numero pari.</span><span class="sxs-lookup"><span data-stu-id="a4512-718">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span> <span data-ttu-id="a4512-719">Si noti che questo metodo restituisce <see cref="T:System.Decimal" /> anziché un tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="a4512-719">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a4512-720">Per esempi e informazioni complete sull'utilizzo per questo e altri overload di `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="a4512-720">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a4512-721">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-721">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="a4512-722">Numero a virgola mobile e precisione doppia da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-722">A double-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="a4512-723">Arrotonda un valore a virgola mobile e precisione doppia al valore integrale più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-723">Rounds a double-precision floating-point value to the nearest integral value.</span></span></summary>
        <returns><span data-ttu-id="a4512-724">Il <paramref name="a" /> più vicino all'intero.</span><span class="sxs-lookup"><span data-stu-id="a4512-724">The integer nearest <paramref name="a" />.</span></span> <span data-ttu-id="a4512-725">Se il componente frazionario di <paramref name="a" /> è compreso tra due interi, di cui uno è pari e l'altro dispari, allora viene restituito il numero pari.</span><span class="sxs-lookup"><span data-stu-id="a4512-725">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="a4512-726">Si noti che questo metodo restituisce <see cref="T:System.Double" /> anziché un tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="a4512-726">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a4512-727">Per esempi e informazioni complete sull'utilizzo per questo e altri overload di `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="a4512-727">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="a4512-728">A causa della perdita di precisione che può essere causato da una rappresentazione di valori decimali come numeri a virgola mobile o l'esecuzione di operazioni aritmetiche su valori a virgola mobile, in alcuni casi il <see cref="M:System.Math.Round(System.Double)" /> metodo potrebbe non venire arrotondamento dei valori di punto centrale per il numero intero pari più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-728">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="a4512-729">Nell'esempio seguente, perché il valore a virgola mobile.1 non ha finito rappresentazione binaria, la prima chiamata al <see cref="M:System.Math.Round(System.Double)" /> metodo con il valore 11,5 restituisce 11 anziché 12.</span><span class="sxs-lookup"><span data-stu-id="a4512-729">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
 [!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)]
 [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-730">Numero decimale da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-730">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="a4512-731">Numero di posizioni decimali nel valore restituito.</span><span class="sxs-lookup"><span data-stu-id="a4512-731">The number of decimal places in the return value.</span></span></param>
        <summary><span data-ttu-id="a4512-732">Arrotonda un valore decimale a un numero di cifre frazionarie specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-732">Rounds a decimal value to a specified number of fractional digits.</span></span></summary>
        <returns><span data-ttu-id="a4512-733">Numero più vicino a <paramref name="d" /> contenente un numero di cifre frazionarie pari a <paramref name="decimals" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-733">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a4512-734">Per esempi e informazioni complete sull'utilizzo per questo e altri overload di `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="a4512-734">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4512-735"><paramref name="decimals" /> è minore di 0 o maggiore di 28.</span><span class="sxs-lookup"><span data-stu-id="a4512-735"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a4512-736">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-736">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-737">Numero decimale da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-737">A decimal number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="a4512-738">Spiegazione della modalità di arrotondamento di <c>d</c> se si trova a metà tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="a4512-738">Specification for how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="a4512-739">Arrotonda un valore decimale all'intero più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-739">Rounds a decimal value to the nearest integer.</span></span> <span data-ttu-id="a4512-740">Un parametro specifica come arrotondare il valore se si trova a metà tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="a4512-740">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-741">Il <paramref name="d" /> più vicino all'intero.</span><span class="sxs-lookup"><span data-stu-id="a4512-741">The integer nearest <paramref name="d" />.</span></span> <span data-ttu-id="a4512-742">Se <paramref name="d" /> è contenuto tra due numeri, di cui per definizione uno è pari e l'altro dispari, <paramref name="mode" /> determina quale dei due numeri deve essere restituito.</span><span class="sxs-lookup"><span data-stu-id="a4512-742">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a4512-743">Per esempi e informazioni complete sull'utilizzo per questo e altri overload di `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="a4512-743">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a4512-744"><paramref name="mode" /> non è un valore di <see cref="T:System.MidpointRounding" /> valido.</span><span class="sxs-lookup"><span data-stu-id="a4512-744"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a4512-745">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-745">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-746">Numero a virgola mobile e precisione doppia da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-746">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="a4512-747">Numero di cifre frazionarie nel valore restituito.</span><span class="sxs-lookup"><span data-stu-id="a4512-747">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="a4512-748">Arrotonda un valore a virgola mobile e precisione doppia a un numero di cifre frazionarie specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-748">Rounds a double-precision floating-point value to a specified number of fractional digits.</span></span></summary>
        <returns><span data-ttu-id="a4512-749">Numero più vicino a <paramref name="value" /> contenente un numero di cifre frazionarie pari a <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-749">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a4512-750">Per esempi e informazioni complete sull'utilizzo per questo e altri overload di `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="a4512-750">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4512-751"><paramref name="digits" /> è minore di 0 o maggiore di 15.</span><span class="sxs-lookup"><span data-stu-id="a4512-751"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="a4512-752">A causa della perdita di precisione che può essere causato da una rappresentazione di valori decimali come numeri a virgola mobile o l'esecuzione di operazioni aritmetiche su valori a virgola mobile, in alcuni casi il <see cref="M:System.Math.Round(System.Double,System.Int32)" /> metodo potrebbe non venire arrotondamento dei valori di punto centrale per il più vicino valore anche il <paramref name="digits" /> posizione decimale.</span><span class="sxs-lookup"><span data-stu-id="a4512-752">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span></span> <span data-ttu-id="a4512-753">Come illustrato nell'esempio seguente, in cui viene arrotondato 2.135 2.13 anziché 2.14.</span><span class="sxs-lookup"><span data-stu-id="a4512-753">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="a4512-754">Questo errore si verifica perché internamente il metodo Moltiplica <paramref name="value" /> da 10<sup>cifre</sup>, e l'operazione di moltiplicazione in questo caso presenta una perdita di precisione.</span><span class="sxs-lookup"><span data-stu-id="a4512-754">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
 [!code-csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)]
 [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-755">Numero a virgola mobile e precisione doppia da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-755">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="a4512-756">Spiegazione della modalità di arrotondamento di <c>value</c> se si trova a metà tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="a4512-756">Specification for how to round <c>value</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="a4512-757">Arrotonda un valore a virgola mobile e precisione doppia all'intero più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-757">Rounds a double-precision floating-point value to the nearest integer.</span></span> <span data-ttu-id="a4512-758">Un parametro specifica come arrotondare il valore se si trova a metà tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="a4512-758">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-759">Il <paramref name="value" /> più vicino all'intero.</span><span class="sxs-lookup"><span data-stu-id="a4512-759">The integer nearest <paramref name="value" />.</span></span> <span data-ttu-id="a4512-760">Se <paramref name="value" /> è contenuto tra due interi, di cui per definizione uno è pari e l'altro dispari, <paramref name="mode" /> determina quale dei due numeri deve essere restituito.</span><span class="sxs-lookup"><span data-stu-id="a4512-760">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a4512-761">Per esempi e informazioni complete sull'utilizzo per questo e altri overload di `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="a4512-761">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a4512-762"><paramref name="mode" /> non è un valore di <see cref="T:System.MidpointRounding" /> valido.</span><span class="sxs-lookup"><span data-stu-id="a4512-762"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="a4512-763">A causa della perdita di precisione che può essere causato da una rappresentazione di valori decimali come numeri a virgola mobile o l'esecuzione di operazioni aritmetiche su valori a virgola mobile, in alcuni casi il <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> metodo potrebbe non venire arrotondamento dei valori di punto centrale per il numero intero pari più vicino.</span><span class="sxs-lookup"><span data-stu-id="a4512-763">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="a4512-764">Nell'esempio seguente, perché il valore a virgola mobile.1 non ha finito rappresentazione binaria, la prima chiamata al <see cref="M:System.Math.Round(System.Double)" /> metodo con il valore 11,5 restituisce 11 anziché 12.</span><span class="sxs-lookup"><span data-stu-id="a4512-764">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
 [!code-csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)]
 [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-765">Numero decimale da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-765">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="a4512-766">Numero di posizioni decimali nel valore restituito.</span><span class="sxs-lookup"><span data-stu-id="a4512-766">The number of decimal places in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="a4512-767">Spiegazione della modalità di arrotondamento di <c>d</c> se si trova a metà tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="a4512-767">Specification for how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="a4512-768">Arrotonda un valore decimale a un numero di cifre frazionarie specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-768">Rounds a decimal value to a specified number of fractional digits.</span></span> <span data-ttu-id="a4512-769">Un parametro specifica come arrotondare il valore se si trova a metà tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="a4512-769">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-770">Numero più vicino a <paramref name="d" /> contenente un numero di cifre frazionarie pari a <paramref name="decimals" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-770">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span> <span data-ttu-id="a4512-771">Se <paramref name="d" /> ha meno cifre frazionarie di <paramref name="decimals" />, <paramref name="d" /> viene restituito invariato.</span><span class="sxs-lookup"><span data-stu-id="a4512-771">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a4512-772">Per esempi e informazioni complete sull'utilizzo per questo e altri overload di `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="a4512-772">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4512-773"><paramref name="decimals" /> è minore di 0 o maggiore di 28.</span><span class="sxs-lookup"><span data-stu-id="a4512-773"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a4512-774"><paramref name="mode" /> non è un valore di <see cref="T:System.MidpointRounding" /> valido.</span><span class="sxs-lookup"><span data-stu-id="a4512-774"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a4512-775">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-775">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-776">Numero a virgola mobile e precisione doppia da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="a4512-776">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="a4512-777">Numero di cifre frazionarie nel valore restituito.</span><span class="sxs-lookup"><span data-stu-id="a4512-777">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="a4512-778">Spiegazione della modalità di arrotondamento di <c>value</c> se si trova a metà tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="a4512-778">Specification for how to round <c>value</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="a4512-779">Arrotonda un valore a virgola mobile e precisione doppia a un numero di cifre frazionarie specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-779">Rounds a double-precision floating-point value to a specified number of fractional digits.</span></span> <span data-ttu-id="a4512-780">Un parametro specifica come arrotondare il valore se si trova a metà tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="a4512-780">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="a4512-781">Numero più vicino a <paramref name="value" /> contenente un numero di cifre frazionarie pari a <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-781">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="a4512-782">Se <paramref name="value" /> ha meno cifre frazionarie di <paramref name="digits" />, <paramref name="value" /> viene restituito invariato.</span><span class="sxs-lookup"><span data-stu-id="a4512-782">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a4512-783">Per esempi e informazioni complete sull'utilizzo per questo e altri overload di `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="a4512-783">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4512-784"><paramref name="digits" /> è minore di 0 o maggiore di 15.</span><span class="sxs-lookup"><span data-stu-id="a4512-784"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a4512-785"><paramref name="mode" /> non è un valore di <see cref="T:System.MidpointRounding" /> valido.</span><span class="sxs-lookup"><span data-stu-id="a4512-785"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="a4512-786">A causa della perdita di precisione che può essere causato da una rappresentazione di valori decimali come numeri a virgola mobile o l'esecuzione di operazioni aritmetiche su valori a virgola mobile, in alcuni casi il <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> metodo potrebbe non venire arrotondamento dei valori di punto centrale specificato per il <paramref name="mode" /> parametro.</span><span class="sxs-lookup"><span data-stu-id="a4512-786">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span></span> <span data-ttu-id="a4512-787">Come illustrato nell'esempio seguente, in cui viene arrotondato 2.135 2.13 anziché 2.14.</span><span class="sxs-lookup"><span data-stu-id="a4512-787">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="a4512-788">Questo errore si verifica perché internamente il metodo Moltiplica <paramref name="value" /> da 10<sup>cifre</sup>, e l'operazione di moltiplicazione in questo caso presenta una perdita di precisione.</span><span class="sxs-lookup"><span data-stu-id="a4512-788">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
 [!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)]
 [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4512-789">Restituisce un intero che indica il segno di un numero.</span><span class="sxs-lookup"><span data-stu-id="a4512-789">Returns an integer that indicates the sign of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-790">Numero decimale con segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-790">A signed decimal number.</span></span></param>
        <summary><span data-ttu-id="a4512-791">Restituisce un intero che indica il segno di un numero decimale.</span><span class="sxs-lookup"><span data-stu-id="a4512-791">Returns an integer that indicates the sign of a decimal number.</span></span></summary>
        <returns><span data-ttu-id="a4512-792">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-792">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="a4512-793"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-793"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="a4512-794"></term><description> Significato</span><span class="sxs-lookup"><span data-stu-id="a4512-794"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="a4512-795"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="a4512-795"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="a4512-796"></term><description><paramref name="value" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-796"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a4512-797"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="a4512-797"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="a4512-798"></term><description><paramref name="value" /> è uguale a zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-798"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="a4512-799"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="a4512-799"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="a4512-800"></term><description><paramref name="value" /> è maggiore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-800"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-801">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Sign%28System.Decimal%29> metodo per determinare il segno di un <xref:System.Decimal> valore e la visualizza nella console.</span><span class="sxs-lookup"><span data-stu-id="a4512-801">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-802">Numero con segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-802">A signed number.</span></span></param>
        <summary><span data-ttu-id="a4512-803">Restituisce un intero che indica il segno di un numero a virgola mobile e a precisione doppia.</span><span class="sxs-lookup"><span data-stu-id="a4512-803">Returns an integer that indicates the sign of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="a4512-804">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-804">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="a4512-805"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-805"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="a4512-806"></term><description> Significato</span><span class="sxs-lookup"><span data-stu-id="a4512-806"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="a4512-807"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="a4512-807"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="a4512-808"></term><description><paramref name="value" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-808"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a4512-809"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="a4512-809"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="a4512-810"></term><description><paramref name="value" /> è uguale a zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-810"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="a4512-811"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="a4512-811"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="a4512-812"></term><description><paramref name="value" /> è maggiore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-812"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-813">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Sign%28System.Double%29> metodo per determinare il segno di un <xref:System.Double> valore e la visualizza nella console.</span><span class="sxs-lookup"><span data-stu-id="a4512-813">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="a4512-814"><paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-814"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-815">Numero con segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-815">A signed number.</span></span></param>
        <summary><span data-ttu-id="a4512-816">Restituisce un intero che indica il segno di un intero con firma a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-816">Returns an integer that indicates the sign of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="a4512-817">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-817">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="a4512-818"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-818"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="a4512-819"></term><description> Significato</span><span class="sxs-lookup"><span data-stu-id="a4512-819"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="a4512-820"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="a4512-820"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="a4512-821"></term><description><paramref name="value" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-821"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a4512-822"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="a4512-822"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="a4512-823"></term><description><paramref name="value" /> è uguale a zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-823"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="a4512-824"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="a4512-824"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="a4512-825"></term><description><paramref name="value" /> è maggiore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-825"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-826">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Sign%28System.Int16%29> metodo per determinare il segno di un <xref:System.Int16> valore e la visualizza nella console.</span><span class="sxs-lookup"><span data-stu-id="a4512-826">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-827">Numero con segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-827">A signed number.</span></span></param>
        <summary><span data-ttu-id="a4512-828">Restituisce un intero che indica il segno di un intero con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-828">Returns an integer that indicates the sign of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="a4512-829">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-829">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="a4512-830"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-830"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="a4512-831"></term><description> Significato</span><span class="sxs-lookup"><span data-stu-id="a4512-831"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="a4512-832"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="a4512-832"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="a4512-833"></term><description><paramref name="value" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-833"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a4512-834"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="a4512-834"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="a4512-835"></term><description><paramref name="value" /> è uguale a zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-835"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="a4512-836"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="a4512-836"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="a4512-837"></term><description><paramref name="value" /> è maggiore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-837"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-838">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Sign%28System.Int32%29> metodo per determinare il segno di un <xref:System.Int32> valore e la visualizza nella console.</span><span class="sxs-lookup"><span data-stu-id="a4512-838">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-839">Numero con segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-839">A signed number.</span></span></param>
        <summary><span data-ttu-id="a4512-840">Restituisce un intero che indica il segno di un intero con segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-840">Returns an integer that indicates the sign of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="a4512-841">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-841">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="a4512-842"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-842"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="a4512-843"></term><description> Significato</span><span class="sxs-lookup"><span data-stu-id="a4512-843"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="a4512-844"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="a4512-844"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="a4512-845"></term><description><paramref name="value" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-845"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a4512-846"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="a4512-846"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="a4512-847"></term><description><paramref name="value" /> è uguale a zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-847"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="a4512-848"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="a4512-848"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="a4512-849"></term><description><paramref name="value" /> è maggiore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-849"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-850">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Sign%28System.Int64%29> metodo per determinare il segno di un <xref:System.Int64> valore e la visualizza nella console.</span><span class="sxs-lookup"><span data-stu-id="a4512-850">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-851">Numero con segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-851">A signed number.</span></span></param>
        <summary><span data-ttu-id="a4512-852">Restituisce un intero che indica il segno di un intero con segno a 8 bit.</span><span class="sxs-lookup"><span data-stu-id="a4512-852">Returns an integer that indicates the sign of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="a4512-853">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-853">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="a4512-854"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-854"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="a4512-855"></term><description> Significato</span><span class="sxs-lookup"><span data-stu-id="a4512-855"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="a4512-856"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="a4512-856"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="a4512-857"></term><description><paramref name="value" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-857"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a4512-858"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="a4512-858"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="a4512-859"></term><description><paramref name="value" /> è uguale a zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-859"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="a4512-860"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="a4512-860"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="a4512-861"></term><description><paramref name="value" /> è maggiore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-861"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-862">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Sign%28System.SByte%29> metodo per determinare il segno di un <xref:System.SByte> valore e la visualizza nella console.</span><span class="sxs-lookup"><span data-stu-id="a4512-862">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-863">Numero con segno.</span><span class="sxs-lookup"><span data-stu-id="a4512-863">A signed number.</span></span></param>
        <summary><span data-ttu-id="a4512-864">Restituisce un intero che indica il segno di un numero a virgola mobile e a precisione singola.</span><span class="sxs-lookup"><span data-stu-id="a4512-864">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="a4512-865">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-865">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="a4512-866"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-866"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="a4512-867"></term><description> Significato</span><span class="sxs-lookup"><span data-stu-id="a4512-867"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="a4512-868"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="a4512-868"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="a4512-869"></term><description><paramref name="value" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-869"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a4512-870"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="a4512-870"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="a4512-871"></term><description><paramref name="value" /> è uguale a zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-871"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="a4512-872"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="a4512-872"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="a4512-873"></term><description><paramref name="value" /> è maggiore di zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-873"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-874">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Sign%28System.Single%29> metodo per determinare il segno di un <xref:System.Single> valore e la visualizza nella console.</span><span class="sxs-lookup"><span data-stu-id="a4512-874">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="a4512-875"><paramref name="value" /> è uguale a <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-875"><paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="a4512-876">Angolo, espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-876">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="a4512-877">Restituisce il seno dell'angolo specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-877">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="a4512-878">Seno di <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-878">The sine of <paramref name="a" />.</span></span> <span data-ttu-id="a4512-879">Se <paramref name="a" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-879">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-880">L'angolo, `a`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-880">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="a4512-881">Moltiplicare per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-881">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="a4512-882">I valori accettabili per `a` compresi tra circa -9223372036854775295 a circa 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="a4512-882">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="a4512-883">Per i valori di fuori di questo intervallo, il <xref:System.Math.Sin%2A> restituisce `a` invariato anziché generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="a4512-883">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-884">L'esempio seguente usa <xref:System.Math.Sin%2A> per valutare alcune identità trigonometriche per angoli selezionati.</span><span class="sxs-lookup"><span data-stu-id="a4512-884">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-885">Angolo, espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-885">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="a4512-886">Restituisce il seno iperbolico dell'angolo specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-886">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="a4512-887">Seno iperbolico di <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-887">The hyperbolic sine of <paramref name="value" />.</span></span> <span data-ttu-id="a4512-888">Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NaN" />, verrà restituito dal metodo un oggetto <see cref="T:System.Double" /> uguale a <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-888">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-889">L'angolo, `value`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-889">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="a4512-890">Moltiplicare per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-890">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-891">L'esempio seguente usa <xref:System.Math.Sinh%2A> per valutare alcune identità iperboliche per valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="a4512-891">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-892">Numero di cui è necessario trovare la radice quadrata.</span><span class="sxs-lookup"><span data-stu-id="a4512-892">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="a4512-893">Restituisce la radice quadrata del numero specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-893">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="a4512-894">Uno dei valori della tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="a4512-894">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="a4512-895">parametro <list type="table"><listheader><term><paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="a4512-895"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="a4512-896"></term><description> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-896"></term><description> Return value</span></span>  
  
 <span data-ttu-id="a4512-897"></description></listheader><item><term> Zero o positivo</span><span class="sxs-lookup"><span data-stu-id="a4512-897"></description></listheader><item><term> Zero or positive</span></span>  
  
 <span data-ttu-id="a4512-898"></term><description>Radice quadrata positiva di <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-898"></term><description> The positive square root of <paramref name="d" />.</span></span>  
  
 <span data-ttu-id="a4512-899"></description></item><item><term> Negativo</span><span class="sxs-lookup"><span data-stu-id="a4512-899"></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="a4512-900"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term>È uguale a <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> è uguale a<see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="a4512-900"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equals <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equals <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4512-901">La radice quadrata dell'area di un quadrato rappresenta la lunghezza di qualsiasi lato del quadrato.</span><span class="sxs-lookup"><span data-stu-id="a4512-901">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="a4512-902">Nell'esempio seguente viene visualizzata l'area di alcune città negli Stati Uniti e offre una visione delle dimensioni di ogni città, se sono stati rappresentata da un quadrato.</span><span class="sxs-lookup"><span data-stu-id="a4512-902">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="a4512-903">Angolo, espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-903">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="a4512-904">Restituisce la tangente dell'angolo specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-904">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="a4512-905">Tangente di <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-905">The tangent of <paramref name="a" />.</span></span> <span data-ttu-id="a4512-906">Se <paramref name="a" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-906">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-907">L'angolo, `a`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-907">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="a4512-908">Moltiplicare per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-908">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-909">Nell'esempio seguente viene illustrato come calcolare la tangente di un angolo e la visualizza nella console.</span><span class="sxs-lookup"><span data-stu-id="a4512-909">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4512-910">Angolo, espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-910">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="a4512-911">Restituisce la tangente iperbolica dell'angolo specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-911">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="a4512-912">Tangente iperbolica di <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-912">The hyperbolic tangent of <paramref name="value" />.</span></span> <span data-ttu-id="a4512-913">Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NegativeInfinity" />, il metodo restituirà -1.</span><span class="sxs-lookup"><span data-stu-id="a4512-913">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="a4512-914">Se il valore è uguale a <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituirà 1.</span><span class="sxs-lookup"><span data-stu-id="a4512-914">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="a4512-915">Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="a4512-915">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-916">L'angolo, `value`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-916">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="a4512-917">Moltiplicare per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="a4512-917">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-918">L'esempio seguente usa <xref:System.Math.Tanh%2A> per valutare alcune identità iperboliche per valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="a4512-918">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4512-919">Calcola la parte integrale di un numero.</span><span class="sxs-lookup"><span data-stu-id="a4512-919">Calculates the integral part of a number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-920">Il numero viene arrotondato all'intero più vicino allo zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-920">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-921">Numero da troncare.</span><span class="sxs-lookup"><span data-stu-id="a4512-921">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="a4512-922">Calcola la parte integrale di un numero decimale specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-922">Calculates the integral part of a specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="a4512-923">Parte integrale di <paramref name="d" />, vale a dire il numero che rimane dopo l'eliminazione delle cifre frazionarie.</span><span class="sxs-lookup"><span data-stu-id="a4512-923">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-924"><xref:System.Math.Truncate%2A> Arrotonda `d` all'intero più vicino allo zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-924"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-925">L'esempio seguente chiama il <xref:System.Math.Truncate%28System.Decimal%29> metodo troncare sia un numero positivo e negativo <xref:System.Decimal> valore.</span><span class="sxs-lookup"><span data-stu-id="a4512-925">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a4512-926">Numero da troncare.</span><span class="sxs-lookup"><span data-stu-id="a4512-926">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="a4512-927">Calcola la parte integrale di un numero a virgola mobile e precisione doppia specificato.</span><span class="sxs-lookup"><span data-stu-id="a4512-927">Calculates the integral part of a specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="a4512-928">La parte integrale di <paramref name="d" />, vale a dire il numero che rimane dopo l'eliminazione delle cifre frazionarie o uno dei valori elencati nella seguente tabella.</span><span class="sxs-lookup"><span data-stu-id="a4512-928">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <span data-ttu-id="a4512-929"><list type="table"><listheader><term><paramref name="d" /></term><description> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="a4512-929"><list type="table"><listheader><term><paramref name="d" /></term><description> Return value</span></span>  
  
 </description></listheader><item><term><see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term><see cref="F:System.Double.NegativeInfinity" /></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term><see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4512-930"><xref:System.Math.Truncate%2A> Arrotonda `d` all'intero più vicino allo zero.</span><span class="sxs-lookup"><span data-stu-id="a4512-930"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4512-931">L'esempio seguente chiama il <xref:System.Math.Truncate%28System.Double%29> metodo troncare sia un numero positivo e negativo <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="a4512-931">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>