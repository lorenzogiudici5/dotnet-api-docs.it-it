<Type Name="Math" FullName="System.Math">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="273f8d3befa1144371cfd08ffc11e7b12069ede0" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50179342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <TypeSignature Language="F#" Value="type Math = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="136b1-101">Vengono forniti costanti e metodi statici per eseguire funzioni trigonometriche, logaritmiche e normali funzioni matematiche.</span>
      <span class="sxs-lookup">
        <span data-stu-id="136b1-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-102">L'esempio seguente usa diverse funzioni matematiche e trigonometriche di <xref:System.Math> classe per calcolare gli angoli interni di un trapezoid.</span><span class="sxs-lookup"><span data-stu-id="136b1-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-103">Restituisce il valore assoluto di un numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-103">Returns the absolute value of a specified number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Abs : decimal -&gt; decimal" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-104">Numero maggiore o uguale a <see cref="F:System.Decimal.MinValue" />, ma minore o uguale a <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-105">Restituisce il valore assoluto di un numero <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-106">Un numero decimale, x, tale che 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-107">Il valore assoluto di un <xref:System.Decimal> rappresentato dal valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="136b1-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="136b1-108">Ad esempio, il valore assoluto di sia 1.2 -1,2 è 1.2.</span><span class="sxs-lookup"><span data-stu-id="136b1-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-109">L'esempio seguente usa il <xref:System.Math.Abs%28System.Decimal%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Decimal> valori.</span><span class="sxs-lookup"><span data-stu-id="136b1-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberSignature Language="F#" Value="static member Abs : double -&gt; double" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-110">Numero maggiore o uguale a <see cref="F:System.Double.MinValue" />, ma minore o uguale a <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-111">Restituisce il valore assoluto di un numero a virgola mobile e precisione doppia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-111">Returns the absolute value of a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-112">Numero a virgola mobile e precisione doppia, x, tale che 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-113">Il valore assoluto di un <xref:System.Double> rappresentato dal valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="136b1-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="136b1-114">Ad esempio, il valore assoluto di 1, 2e03 sia - 1, 2e03 è 1, 2e03.</span><span class="sxs-lookup"><span data-stu-id="136b1-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="136b1-115">Se `value` è uguale a <xref:System.Double.NegativeInfinity> oppure <xref:System.Double.PositiveInfinity>, il valore restituito è <xref:System.Double.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="136b1-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="136b1-116">Se `value` è uguale a <xref:System.Double.NaN>, il valore restituito è <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="136b1-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-117">L'esempio seguente usa il <xref:System.Math.Abs%28System.Double%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="136b1-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberSignature Language="F#" Value="static member Abs : int16 -&gt; int16" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-118">Numero maggiore di <see cref="F:System.Int16.MinValue" />, ma minore o uguale a <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-119">Restituisce il valore assoluto di un intero con segno a 16 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-119">Returns the absolute value of a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-120">Intero con segno a 16 bit, x, tale che 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-121">Il valore assoluto di un <xref:System.Int16> rappresentato dal valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="136b1-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="136b1-122">Ad esempio, il valore assoluto di -123 e 123 corrisponde a 123.</span><span class="sxs-lookup"><span data-stu-id="136b1-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-123">L'esempio seguente usa il <xref:System.Math.Abs%28System.Int16%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Int16> valori.</span><span class="sxs-lookup"><span data-stu-id="136b1-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="136b1-124">
            <paramref name="value" /> è uguale a <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-124">
              <paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberSignature Language="F#" Value="static member Abs : int -&gt; int" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-125">Numero maggiore di <see cref="F:System.Int32.MinValue" />, ma minore o uguale a <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-126">Restituisce il valore assoluto di un intero con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-126">Returns the absolute value of a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-127">Intero con segno a 32 bit, x, tale che 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-128">Il valore assoluto di un <xref:System.Int32> rappresentato dal valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="136b1-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="136b1-129">Ad esempio, il valore assoluto di -123 e 123 corrisponde a 123.</span><span class="sxs-lookup"><span data-stu-id="136b1-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-130">L'esempio seguente usa il <xref:System.Math.Abs%28System.Int32%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Int32> valori.</span><span class="sxs-lookup"><span data-stu-id="136b1-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="136b1-131">
            <paramref name="value" /> è uguale a <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-131">
              <paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberSignature Language="F#" Value="static member Abs : int64 -&gt; int64" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-132">Numero maggiore di <see cref="F:System.Int64.MinValue" />, ma minore o uguale a <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-133">Restituisce il valore assoluto di un intero con segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-133">Returns the absolute value of a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-134">Intero con segno a 64 bit, x, tale che 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-135">Il valore assoluto di un <xref:System.Int64> rappresentato dal valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="136b1-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="136b1-136">Ad esempio, il valore assoluto di -123 e 123 corrisponde a 123.</span><span class="sxs-lookup"><span data-stu-id="136b1-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-137">L'esempio seguente usa il <xref:System.Math.Abs%28System.Int64%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Int64> valori.</span><span class="sxs-lookup"><span data-stu-id="136b1-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="136b1-138">
            <paramref name="value" /> è uguale a <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-138">
              <paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Abs : sbyte -&gt; sbyte" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-139">Numero maggiore di <see cref="F:System.SByte.MinValue" />, ma minore o uguale a <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-140">Restituisce il valore assoluto di un intero con segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-140">Returns the absolute value of an 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-141">Intero con segno a 8 bit, x, tale che 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-142">Il valore assoluto di un byte con segno rappresentato dal valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="136b1-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="136b1-143">Ad esempio, il valore assoluto di 12 e -12 è 12.</span><span class="sxs-lookup"><span data-stu-id="136b1-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-144">L'esempio seguente usa il <xref:System.Math.Abs%28System.SByte%29> metodo per ottenere il valore assoluto di un numero di <xref:System.SByte> valori.</span><span class="sxs-lookup"><span data-stu-id="136b1-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="136b1-145">
            <paramref name="value" /> è uguale a <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-145">
              <paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberSignature Language="F#" Value="static member Abs : single -&gt; single" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-146">Numero maggiore o uguale a <see cref="F:System.Single.MinValue" />, ma minore o uguale a <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-147">Restituisce il valore assoluto di un numero a virgola mobile e precisione singola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-147">Returns the absolute value of a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-148">Numero a virgola mobile e precisione singola, x, tale che 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-149">Il valore assoluto di un <xref:System.Single> rappresentato dal valore numerico senza segno.</span><span class="sxs-lookup"><span data-stu-id="136b1-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="136b1-150">Ad esempio, il valore assoluto di entrambi 1.2e-03 e - 1, 2e03 è 1, 2e03.</span><span class="sxs-lookup"><span data-stu-id="136b1-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="136b1-151">Se `value` è uguale a <xref:System.Single.NegativeInfinity> oppure <xref:System.Single.PositiveInfinity>, il valore restituito è <xref:System.Single.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="136b1-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="136b1-152">Se `value` è uguale a <xref:System.Single.NaN>, il valore restituito è <xref:System.Single.NaN>.</span><span class="sxs-lookup"><span data-stu-id="136b1-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-153">L'esempio seguente usa il <xref:System.Math.Abs%28System.Single%29> metodo per ottenere il valore assoluto di un numero di <xref:System.Single> valori.</span><span class="sxs-lookup"><span data-stu-id="136b1-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberSignature Language="F#" Value="static member Acos : double -&gt; double" Usage="System.Math.Acos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-154">Numero che rappresenta un coseno, dove <c>d</c> deve essere maggiore o uguale a -1, ma minore o uguale a 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-154">A number representing a cosine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-155">Restituisce l'angolo il cui coseno è il numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-155">Returns the angle whose cosine is the specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-156">Un angolo, θ, misurato in radianti, tale che 0 ≤θ≤π</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span>
          </span>
          <span data-ttu-id="136b1-157">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-157">-or-</span>
          </span>
          <span data-ttu-id="136b1-158">
            <see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 o <paramref name="d" /> &gt; 1 o <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-158">
              <see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-159">Moltiplicare il valore restituito da 180 /<xref:System.Math.PI?displayProperty=nameWithType> per convertire da radianti in gradi.</span><span class="sxs-lookup"><span data-stu-id="136b1-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-160">L'esempio seguente usa il <xref:System.Math.Acos%2A> metodo per semplificare il calcolo degli angoli interni di un specificata trapezoid.</span><span class="sxs-lookup"><span data-stu-id="136b1-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static double Acosh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acosh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acosh(double d);" />
      <MemberSignature Language="F#" Value="static member Acosh : double -&gt; double" Usage="System.Math.Acosh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberSignature Language="F#" Value="static member Asin : double -&gt; double" Usage="System.Math.Asin d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-161">Un numero che rappresenta un seno, dove <c>d</c> deve essere maggiore o uguale a -1, ma minore o uguale a 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-161">A number representing a sine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-162">Restituisce l'angolo il cui seno è il numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-162">Returns the angle whose sine is the specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-163">Un angolo, θ, misurato in radianti, tale che -π/2 ≤θ≤π/2</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-163">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span>
          </span>
          <span data-ttu-id="136b1-164">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-164">-or-</span>
          </span>
          <span data-ttu-id="136b1-165">
            <see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 o <paramref name="d" /> &gt; 1 o <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-165">
              <see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-166">Valore positivo restituito rappresenta un angolo in senso antiorario dall'asse y. valore restituito negativo rappresenta un angolo in senso orario.</span><span class="sxs-lookup"><span data-stu-id="136b1-166">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="136b1-167">Moltiplicare il valore restituito da 180 /<xref:System.Math.PI?displayProperty=nameWithType> per convertire da radianti in gradi.</span><span class="sxs-lookup"><span data-stu-id="136b1-167">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-168">L'esempio seguente usa <xref:System.Math.Asin%2A> per semplificare il calcolo degli angoli interni di un specificata trapezoid.</span><span class="sxs-lookup"><span data-stu-id="136b1-168">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static double Asinh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asinh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asinh(double d);" />
      <MemberSignature Language="F#" Value="static member Asinh : double -&gt; double" Usage="System.Math.Asinh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberSignature Language="F#" Value="static member Atan : double -&gt; double" Usage="System.Math.Atan d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-169">Numero che rappresenta una tangente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-169">A number representing a tangent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-170">Restituisce l'angolo la cui tangente è il numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-170">Returns the angle whose tangent is the specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-171">Un angolo, θ, misurato in radianti, tale che -π/2 ≤θ≤π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-171">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span>
          </span>
          <span data-ttu-id="136b1-172">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-172">-or-</span>
          </span>
          <span data-ttu-id="136b1-173">
            <see cref="F:System.Double.NaN" /> se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />, -π/2 arrotondato al valore a precisione doppia (-1,5707963267949) se <paramref name="d" /> è uguale a <see cref="F:System.Double.NegativeInfinity" /> o π/2 arrotondato al valore a precisione doppia (1,5707963267949) se <paramref name="d" /> è uguale a <see cref="F:System.Double.PositiveInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-173">
              <see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-174">Valore positivo restituito rappresenta un angolo in senso antiorario dall'asse y. valore restituito negativo rappresenta un angolo in senso orario.</span><span class="sxs-lookup"><span data-stu-id="136b1-174">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="136b1-175">Moltiplicare il valore restituito da 180 /<xref:System.Math.PI?displayProperty=nameWithType> per convertire da radianti in gradi.</span><span class="sxs-lookup"><span data-stu-id="136b1-175">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-176">Nell'esempio seguente viene illustrato come calcolare l'arcotangente di un valore e visualizzarlo sulla console.</span><span class="sxs-lookup"><span data-stu-id="136b1-176">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberSignature Language="F#" Value="static member Atan2 : double * double -&gt; double" Usage="System.Math.Atan2 (y, x)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y">
          <span data-ttu-id="136b1-177">Coordinata y di un punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-177">The y coordinate of a point.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="136b1-178">Coordinata x di un punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-178">The x coordinate of a point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-179">Restituisce l'angolo la cui tangente è il quoziente di due numeri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-179">Returns the angle whose tangent is the quotient of two specified numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-180">Un angolo, θ, misurato in radianti, tale che -π≤θ≤π, e tan(θ) = <paramref name="y" /> / <paramref name="x" />, dove (<paramref name="x" />, <paramref name="y" />) è un punto nel piano cartesiano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-180">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span>
          </span>
          <span data-ttu-id="136b1-181">Osservare quanto segue:</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-181">Observe the following:</span>
          </span>
          <span data-ttu-id="136b1-182">-   Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 1, 0 &lt; θ &lt; π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-182">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span>
          </span>
          <span data-ttu-id="136b1-183">-   Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 2, π/2 &lt; θ≤π.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-183">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span>
          </span>
          <span data-ttu-id="136b1-184">-   Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 3, -π &lt; θ &lt; -π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-184">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span>
          </span>
          <span data-ttu-id="136b1-185">-   Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 4, -π/2 &lt; θ &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-185">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span>
          </span>
          <span data-ttu-id="136b1-186">Per i punti sui limiti dei quadranti, il valore restituito è il seguente:</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-186">For points on the boundaries of the quadrants, the return value is the following:</span>
          </span>
          <span data-ttu-id="136b1-187">-   Se y è 0 e x non è negativo, θ = 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-187">-   If y is 0 and x is not negative, θ = 0.</span>
          </span>
          <span data-ttu-id="136b1-188">-   Se y è 0 e x è negativo, θ = π.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-188">-   If y is 0 and x is negative, θ = π.</span>
          </span>
          <span data-ttu-id="136b1-189">-   Se y è positivo e x è 0, θ = π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-189">-   If y is positive and x is 0, θ = π/2.</span>
          </span>
          <span data-ttu-id="136b1-190">-   Se y è negativo e x è 0, θ = -π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-190">-   If y is negative and x is 0, θ = -π/2.</span>
          </span>
          <span data-ttu-id="136b1-191">-   Se y è 0 e x è 0, θ = 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-191">-   If y is 0 and x is 0, θ = 0.</span>
          </span>
          <span data-ttu-id="136b1-192">Se <paramref name="x" /> o <paramref name="y" /> è <see cref="F:System.Double.NaN" /> o se <paramref name="x" /> e <paramref name="y" /> sono <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" />, il metodo restituisce <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-192">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-193">Il valore restituito è l'angolo del piano cartesiano formato partendo dall'asse x e un vettore a partire dall'origine (0,0) e termina nel punto, (x, y).</span><span class="sxs-lookup"><span data-stu-id="136b1-193">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-194">Nell'esempio seguente viene illustrato come calcolare l'arcotangente dell'angolo e un vettore.</span><span class="sxs-lookup"><span data-stu-id="136b1-194">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="136b1-195">Il valore risultante viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="136b1-195">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static double Atanh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atanh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atanh(double d);" />
      <MemberSignature Language="F#" Value="static member Atanh : double -&gt; double" Usage="System.Math.Atanh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberSignature Language="F#" Value="static member BigMul : int * int -&gt; int64" Usage="System.Math.BigMul (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="136b1-196">Primo numero da moltiplicare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-196">The first number to multiply.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="136b1-197">Secondo numero da moltiplicare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-197">The second number to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-198">Restituisce il prodotto completo di due numeri a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-198">Produces the full product of two 32-bit numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-199">Numero contenente il prodotto dei numeri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-199">The number containing the product of the specified numbers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-200">Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Math.BigMul%2A> metodo per la quale calcolare il prodotto dei due valori integer.</span><span class="sxs-lookup"><span data-stu-id="136b1-200">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static double Cbrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cbrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cbrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cbrt(double d);" />
      <MemberSignature Language="F#" Value="static member Cbrt : double -&gt; double" Usage="System.Math.Cbrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-201">Restituisce il valore integrale minimo maggiore o uguale al numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-201">Returns the smallest integral value greater than or equal to the specified number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-202">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="136b1-202">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="136b1-203">Questo tipo di arrotondamento viene talvolta chiamato arrotondamento verso l'infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="136b1-203">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.Math.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-204">Numero decimale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-204">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-205">Restituisce il valore integrale minimo maggiore o uguale al numero decimale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-205">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-206">Valore intero minimo maggiore o uguale a <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-206">The smallest integral value that is greater than or equal to <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="136b1-207">Si noti che questo metodo restituisce <see cref="T:System.Decimal" /> anziché un tipo integrale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-207">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-208">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="136b1-208">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="136b1-209">Questo tipo di arrotondamento viene talvolta chiamato arrotondamento verso l'infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="136b1-209">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="136b1-210">In altre parole, se `d` è positivo, la presenza di eventuali cause componente frazionario `d` arrotondare all'intero più alto successivo.</span><span class="sxs-lookup"><span data-stu-id="136b1-210">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="136b1-211">Se `d` è negativo, l'operazione di arrotondamento fa in modo che qualsiasi componente frazionario di `d` per essere eliminato.</span><span class="sxs-lookup"><span data-stu-id="136b1-211">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="136b1-212">L'operazione di questo metodo è diverso dal <xref:System.Math.Floor%28System.Decimal%29> metodo, che supporta l'arrotondamento verso l'infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="136b1-212">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-213">Nell'esempio seguente viene illustrato il <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> metodo e mette a confronto con la <xref:System.Math.Floor%28System.Decimal%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="136b1-213">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberSignature Language="F#" Value="static member Ceiling : double -&gt; double" Usage="System.Math.Ceiling a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="136b1-214">Numero a virgola mobile a precisione doppia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-214">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-215">Restituisce il valore integrale minimo maggiore del o uguale al numero a virgola mobile e con precisione doppia specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-215">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-216">Valore intero minimo maggiore o uguale a <paramref name="a" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-216">The smallest integral value that is greater than or equal to <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="136b1-217">Se <paramref name="a" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito tale valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-217">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span>
          </span>
          <span data-ttu-id="136b1-218">Si noti che questo metodo restituisce <see cref="T:System.Double" /> anziché un tipo integrale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-218">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-219">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="136b1-219">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="136b1-220">Questo tipo di arrotondamento viene talvolta chiamato arrotondamento verso l'infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="136b1-220">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="136b1-221">In altre parole, se `a` è positivo, la presenza di eventuali cause componente frazionario `a` arrotondare all'intero più alto successivo.</span><span class="sxs-lookup"><span data-stu-id="136b1-221">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="136b1-222">Se `a` è negativo, l'operazione di arrotondamento fa in modo che qualsiasi componente frazionario di `a` per essere eliminato.</span><span class="sxs-lookup"><span data-stu-id="136b1-222">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="136b1-223">L'operazione di questo metodo è diverso dal <xref:System.Math.Floor%28System.Double%29> metodo, che supporta l'arrotondamento verso l'infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="136b1-223">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-224">Nell'esempio seguente viene illustrato il <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> metodo e mette a confronto con la <xref:System.Math.Floor%28System.Double%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="136b1-224">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : byte * byte * byte -&gt; byte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="min" Type="System.Byte" />
        <Parameter Name="max" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberSignature Language="F#" Value="static member Clamp : decimal * decimal * decimal -&gt; decimal" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="min" Type="System.Decimal" />
        <Parameter Name="max" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberSignature Language="F#" Value="static member Clamp : double * double * double -&gt; double" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int16 * int16 * int16 -&gt; int16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="min" Type="System.Int16" />
        <Parameter Name="max" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int * int * int -&gt; int" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int64 * int64 * int64 -&gt; int64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : sbyte * sbyte * sbyte -&gt; sbyte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="min" Type="System.SByte" />
        <Parameter Name="max" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberSignature Language="F#" Value="static member Clamp : single * single * single -&gt; single" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint16 * uint16 * uint16 -&gt; uint16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="min" Type="System.UInt16" />
        <Parameter Name="max" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint32 * uint32 * uint32 -&gt; uint32" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="min" Type="System.UInt32" />
        <Parameter Name="max" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint64 * uint64 * uint64 -&gt; uint64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="min" Type="System.UInt64" />
        <Parameter Name="max" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberSignature Language="F#" Value="static member Cos : double -&gt; double" Usage="System.Math.Cos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-225">Angolo, espresso in radianti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-225">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-226">Restituisce il coseno dell'angolo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-226">Returns the cosine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-227">Coseno di <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-227">The cosine of <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="136b1-228">Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-228">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-229">L'angolo, `d`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-229">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="136b1-230">Moltiplicata per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-230">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="136b1-231">I valori accettabili per `d` compreso tra circa -9223372036854775295 e circa 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="136b1-231">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="136b1-232">Per i valori di fuori di questo intervallo, il <xref:System.Math.Cos%2A> restituzione del metodo `d` invariata anziché generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="136b1-232">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-233">L'esempio seguente usa <xref:System.Math.Cos%2A> per valutare trigonometrico identità per gli angoli selezionati.</span><span class="sxs-lookup"><span data-stu-id="136b1-233">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberSignature Language="F#" Value="static member Cosh : double -&gt; double" Usage="System.Math.Cosh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-234">Angolo, espresso in radianti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-234">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-235">Restituisce il coseno iperbolico dell'angolo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-235">Returns the hyperbolic cosine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-236">Coseno iperbolico di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-236">The hyperbolic cosine of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="136b1-237">Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito <see cref="F:System.Double.PositiveInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-237">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span>
          </span>
          <span data-ttu-id="136b1-238">Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-238">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-239">L'angolo, `value`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-239">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="136b1-240">Moltiplicata per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-240">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-241">L'esempio seguente usa <xref:System.Math.Cosh%2A> per valutare iperbolica identità per i valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="136b1-241">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-242">Calcola il quoziente di due numeri e restituisce il resto come parametro di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-242">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int * int *  -&gt; int" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="136b1-243">Dividendo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-243">The dividend.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="136b1-244">Divisore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-244">The divisor.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="136b1-245">Resto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-245">The remainder.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-246">Calcola il quoziente di due interi con segno a 32 bit e restituisce il resto come parametro di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-246">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-247">Quoziente dei numeri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-247">The quotient of the specified numbers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-248">Il valore del resto è uguale al risultato del [operatore di resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="136b1-248">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
   
## Examples  
 <span data-ttu-id="136b1-249">Nell'esempio seguente viene illustrato il <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="136b1-249">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="136b1-250">
            <paramref name="b" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-250">
              <paramref name="b" /> is zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int64 * int64 *  -&gt; int64" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="136b1-251">Dividendo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-251">The dividend.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="136b1-252">Divisore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-252">The divisor.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="136b1-253">Resto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-253">The remainder.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-254">Calcola il quoziente di due interi con segno a 64 bit e restituisce il resto come parametro di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-254">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-255">Quoziente dei numeri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-255">The quotient of the specified numbers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-256">Il valore del resto è uguale al risultato del [operatore di resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="136b1-256">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-257">Nell'esempio seguente viene illustrato il <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="136b1-257">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="136b1-258">
            <paramref name="b" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-258">
              <paramref name="b" /> is zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberSignature Language="F#" Value="val mutable E : double" Usage="System.Math.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-259">Rappresenta la base logaritmica naturale, specificata dalla costante, <see langword="e" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-259">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-260">Il valore di questo campo è 2.7182818284590452354.</span><span class="sxs-lookup"><span data-stu-id="136b1-260">The value of this field is 2.7182818284590452354.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-261">Nell'esempio seguente vengono confrontate <xref:System.Math.E> con il valore calcolato da una serie di risparmio energia.</span><span class="sxs-lookup"><span data-stu-id="136b1-261">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberSignature Language="F#" Value="static member Exp : double -&gt; double" Usage="System.Math.Exp d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-262">Numero che specifica una potenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-262">A number specifying a power.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-263">Restituisce <see langword="e" /> elevato alla potenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-263">Returns <see langword="e" /> raised to the specified power.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-264">Numero <see langword="e" /> elevato alla potenza <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-264">The number <see langword="e" /> raised to the power <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="136b1-265">Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-265">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span>
          </span>
          <span data-ttu-id="136b1-266">Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NegativeInfinity" />, verrà restituito 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-266">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-267">`e` è una costante matematica il cui valore è circa 2,71828.</span><span class="sxs-lookup"><span data-stu-id="136b1-267">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="136b1-268">Usare il <xref:System.Math.Pow%2A> metodo per calcolare le potenze di altre basi.</span><span class="sxs-lookup"><span data-stu-id="136b1-268">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="136b1-269"><xref:System.Math.Exp%2A> è l'inverso di <xref:System.Math.Log%2A>.</span><span class="sxs-lookup"><span data-stu-id="136b1-269"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-270">L'esempio seguente usa <xref:System.Math.Exp%2A> per valutare esponenziali e logaritmiche identità per i valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="136b1-270">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-271">Restituisce il valore integrale massimo minore o uguale al numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-271">Returns the largest integral value less than or equal to the specified number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-272">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="136b1-272">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="136b1-273">Questo tipo di arrotondamento viene talvolta chiamato arrotondamento verso l'infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="136b1-273">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-274">Numero decimale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-274">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-275">Restituisce il valore integrale massimo minore o uguale al numero decimale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-275">Returns the largest integral value less than or equal to the specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-276">Valore integrale massimo minore o uguale a <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-276">The largest integral value less than or equal to <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="136b1-277">Si noti che il metodo restituisce un valore intero del tipo <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-277">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-278">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="136b1-278">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="136b1-279">Questo tipo di arrotondamento viene talvolta chiamato arrotondamento verso l'infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="136b1-279">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="136b1-280">In altre parole, se `d` è positivo, qualsiasi componente frazionario viene troncato.</span><span class="sxs-lookup"><span data-stu-id="136b1-280">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="136b1-281">Se `d` è negativo, la presenza di qualsiasi componente frazionario provoca la arrotondato all'intero più piccolo.</span><span class="sxs-lookup"><span data-stu-id="136b1-281">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="136b1-282">L'operazione di questo metodo è diverso dal <xref:System.Math.Ceiling%2A> metodo, che supporta l'arrotondamento verso l'infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="136b1-282">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-283">Nell'esempio seguente viene illustrato il <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> metodo e mette a confronto con la <xref:System.Math.Ceiling%28System.Decimal%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="136b1-283">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberSignature Language="F#" Value="static member Floor : double -&gt; double" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-284">Numero a virgola mobile a precisione doppia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-284">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-285">Restituisce il valore integrale massimo minore o uguale al numero a virgola mobile a precisione doppia specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-285">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-286">Valore integrale massimo minore o uguale a <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-286">The largest integral value less than or equal to <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="136b1-287">Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito tale valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-287">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-288">Il comportamento di questo metodo segue Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="136b1-288">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="136b1-289">Questo tipo di arrotondamento viene talvolta chiamato arrotondamento verso l'infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="136b1-289">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="136b1-290">In altre parole, se `d` è positivo, qualsiasi componente frazionario viene troncato.</span><span class="sxs-lookup"><span data-stu-id="136b1-290">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="136b1-291">Se `d` è negativo, la presenza di qualsiasi componente frazionario provoca la arrotondato all'intero più piccolo.</span><span class="sxs-lookup"><span data-stu-id="136b1-291">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="136b1-292">L'operazione di questo metodo è diverso dal <xref:System.Math.Ceiling%2A> metodo, che supporta l'arrotondamento verso l'infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="136b1-292">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-293">Nell'esempio seguente viene illustrato il <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> metodo e mette a confronto con la <xref:System.Math.Ceiling%28System.Double%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="136b1-293">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberSignature Language="F#" Value="static member IEEERemainder : double * double -&gt; double" Usage="System.Math.IEEERemainder (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="136b1-294">Dividendo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-294">A dividend.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="136b1-295">Divisore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-295">A divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-296">Restituisce il resto della divisione tra il numero specificato e un altro numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-296">Returns the remainder resulting from the division of a specified number by another specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-297">Un numero uguale a <paramref name="x" /> - (<paramref name="y" /> Q), dove Q è il quoziente di <paramref name="x" /> / <paramref name="y" /> arrotondato all'intero più vicino; se <paramref name="x" /> / <paramref name="y" /> è contenuto tra due interi, verrà restituito l'intero pari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-297">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span>
          </span>
          <span data-ttu-id="136b1-298">Se <paramref name="x" /> - (<paramref name="y" /> Q) è zero, verrà restituito il valore +0 se <paramref name="x" /> è positivo oppure -0 se <paramref name="x" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-298">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span>
          </span>
          <span data-ttu-id="136b1-299">Se <paramref name="y" /> = 0, verrà restituito <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-299">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-300">Questa operazione è conforme con l'operazione di resto definita nella sezione 5.1 del 754-1985 ANSI/IEEE Std; Standard IEEE per l'aritmetica binaria a virgola mobile; Institute of Electrical ed Electronics Engineers, Inc.; 1985.</span><span class="sxs-lookup"><span data-stu-id="136b1-300">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="136b1-301">Il <xref:System.Math.IEEERemainder%2A> metodo non è quello utilizzato per il [dell'operatore di resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="136b1-301">The <xref:System.Math.IEEERemainder%2A> method is not the same as the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span> <span data-ttu-id="136b1-302">Sebbene entrambi restituiscono il resto dopo la divisione, le formule utilizzate sono diverse.</span><span class="sxs-lookup"><span data-stu-id="136b1-302">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="136b1-303">La formula per il <xref:System.Math.IEEERemainder%2A> metodo è:</span><span class="sxs-lookup"><span data-stu-id="136b1-303">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="136b1-304">Al contrario, la formula per l'operatore di resto è:</span><span class="sxs-lookup"><span data-stu-id="136b1-304">In contrast, the formula for the remainder operator is:</span></span>  
  
```  
Remainder = (Math.Abs(dividend) - (Math.Abs(divisor) *   
            (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
            Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="136b1-305">Nell'esempio seguente vengono messe a confronto il resto restituito dal <xref:System.Math.IEEERemainder%2A> con il resto restituito dal metodo di [dell'operatore di resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="136b1-305">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-306">Restituisce il logaritmo del numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-306">Returns the logarithm of a specified number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberSignature Language="F#" Value="static member Log : double -&gt; double" Usage="System.Math.Log d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-307">Numero di cui è necessario trovare il logaritmo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-307">The number whose logarithm is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-308">Restituisce il logaritmo naturale (in base <see langword="e" />) di un numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-308">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-309">Uno dei valori della tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-309">One of the values in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="136b1-310">Parametro <paramref name="d" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-310">
                    <paramref name="d" /> parameter</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-311">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-311">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-312">Positivo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-312">Positive</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-313">Logaritmo naturale di <paramref name="d" />: ln <paramref name="d" /> o log e <paramref name="d" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-313">The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-314">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-314">Zero</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NegativeInfinity" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-315">Negativo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-315">Negative</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-316">Uguale a <see cref="F:System.Double.NaN" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-316">Equal to <see cref="F:System.Double.NaN" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-317">Uguale a <see cref="F:System.Double.PositiveInfinity" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-317">Equal to <see cref="F:System.Double.PositiveInfinity" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-318">Parametro `d` viene specificato come un numero in base 10.</span><span class="sxs-lookup"><span data-stu-id="136b1-318">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-319">Nell'esempio seguente viene illustrato il <xref:System.Math.Log%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="136b1-319">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberSignature Language="F#" Value="static member Log : double * double -&gt; double" Usage="System.Math.Log (a, newBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="136b1-320">Numero di cui è necessario trovare il logaritmo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-320">The number whose logarithm is to be found.</span>
          </span>
        </param>
        <param name="newBase">
          <span data-ttu-id="136b1-321">Base del logaritmo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-321">The base of the logarithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-322">Restituisce il logaritmo del numero specificato in una base specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-322">Returns the logarithm of a specified number in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-323">Uno dei valori della tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-323">One of the values in the following table.</span>
          </span>
          <span data-ttu-id="136b1-324">(+Infinito indica <see cref="F:System.Double.PositiveInfinity" />, -Infinito indica <see cref="F:System.Double.NegativeInfinity" /> e NaN indica <see cref="F:System.Double.NaN" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-324">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <paramref name="a" />
              </term>
              <description>
                <paramref name="newBase" />
              </description>
              <description>
                <span data-ttu-id="136b1-325">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-325">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-326">
                  <paramref name="a" />&gt; 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-326">
                    <paramref name="a" />&gt; 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-327">(0 &lt;<paramref name="newBase" />&lt; 1) -o-(<paramref name="newBase" />&gt; 1)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-327">(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-328">lognewBase(a)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-328">lognewBase(a)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-329">
                  <paramref name="a" />&lt; 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-329">
                    <paramref name="a" />&lt; 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-330">(qualsiasi valore)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-330">(any value)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-331">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-331">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-332">(qualsiasi valore)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-332">(any value)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-333">
                  <paramref name="newBase" />&lt; 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-333">
                    <paramref name="newBase" />&lt; 0</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-334">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-334">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-335">
                  <paramref name="a" /> != 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-335">
                    <paramref name="a" /> != 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-336">
                  <paramref name="newBase" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-336">
                    <paramref name="newBase" /> = 0</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-337">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-337">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-338">
                  <paramref name="a" /> != 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-338">
                    <paramref name="a" /> != 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-339">
                  <paramref name="newBase" /> = +Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-339">
                    <paramref name="newBase" /> = +Infinity</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-340">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-340">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-341">
                  <paramref name="a" /> = NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-341">
                    <paramref name="a" /> = NaN</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-342">(qualsiasi valore)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-342">(any value)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-343">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-343">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-344">(qualsiasi valore)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-344">(any value)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-345">
                  <paramref name="newBase" /> = NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-345">
                    <paramref name="newBase" /> = NaN</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-346">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-346">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-347">(qualsiasi valore)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-347">(any value)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-348">
                  <paramref name="newBase" /> = 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-348">
                    <paramref name="newBase" /> = 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-349">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-349">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-350">
                  <paramref name="a" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-350">
                    <paramref name="a" /> = 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-351">0 &lt;<paramref name="newBase" />&lt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-351">0 &lt;<paramref name="newBase" />&lt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-352">+Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-352">+Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-353">
                  <paramref name="a" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-353">
                    <paramref name="a" /> = 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-354">
                  <paramref name="newBase" />&gt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-354">
                    <paramref name="newBase" />&gt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-355">-Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-355">-Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-356">
                  <paramref name="a" /> =  +Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-356">
                    <paramref name="a" /> =  +Infinity</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-357">0 &lt;<paramref name="newBase" />&lt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-357">0 &lt;<paramref name="newBase" />&lt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-358">-Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-358">-Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-359">
                  <paramref name="a" /> =  +Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-359">
                    <paramref name="a" /> =  +Infinity</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-360">
                  <paramref name="newBase" />&gt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-360">
                    <paramref name="newBase" />&gt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-361">+Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-361">+Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-362">
                  <paramref name="a" /> = 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-362">
                    <paramref name="a" /> = 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-363">
                  <paramref name="newBase" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-363">
                    <paramref name="newBase" /> = 0</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-364">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-364">0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-365">
                  <paramref name="a" /> = 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-365">
                    <paramref name="a" /> = 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-366">
                  <paramref name="newBase" /> = +Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-366">
                    <paramref name="newBase" /> = +Infinity</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="136b1-367">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-367">0</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-368">L'esempio seguente usa <xref:System.Math.Log%2A> per valutare logaritmica identità per i valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="136b1-368">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberSignature Language="F#" Value="static member Log10 : double -&gt; double" Usage="System.Math.Log10 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-369">Numero di cui trovare il logaritmo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-369">A number whose logarithm is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-370">Restituisce il logaritmo in base 10 del numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-370">Returns the base 10 logarithm of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-371">Uno dei valori della tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-371">One of the values in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="136b1-372">Parametro <paramref name="d" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-372">
                    <paramref name="d" /> parameter</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-373">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-373">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-374">Positivo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-374">Positive</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-375">Logaritmo in base 10 di <paramref name="d" />: log 10<paramref name="d" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-375">The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-376">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-376">Zero</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NegativeInfinity" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-377">Negativo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-377">Negative</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-378">Uguale a <see cref="F:System.Double.NaN" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-378">Equal to <see cref="F:System.Double.NaN" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-379">Uguale a <see cref="F:System.Double.PositiveInfinity" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-379">Equal to <see cref="F:System.Double.PositiveInfinity" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-380">Parametro `d` viene specificato come un numero in base 10.</span><span class="sxs-lookup"><span data-stu-id="136b1-380">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-381">L'esempio seguente usa il <xref:System.Math.Log10%2A> per restituire il logaritmo in base 10 per i valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="136b1-381">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-382">Restituisce il più elevato tra due numeri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-382">Returns the larger of two specified numbers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Max : byte * byte -&gt; byte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-383">Primo di due interi senza segno a 8 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-383">The first of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-384">Secondo di due interi senza segno a 8 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-384">The second of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-385">Restituisce il più elevato tra due interi senza segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-385">Returns the larger of two 8-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-386">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-386">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-387">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-387">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Max : decimal * decimal -&gt; decimal" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-388">Primo di due numeri decimali da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-388">The first of two decimal numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-389">Secondo di due numeri decimali da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-389">The second of two decimal numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-390">Restituisce il più elevato tra due numeri decimali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-390">Returns the larger of two decimal numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-391">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-391">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-392">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-392">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Max : double * double -&gt; double" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-393">Primo di due numeri a virgola mobile e precisione doppia da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-393">The first of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-394">Secondo di due numeri a virgola mobile e precisione doppia da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-394">The second of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-395">Restituisce il più elevato tra due numeri a virgola mobile e precisione doppia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-395">Returns the larger of two double-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-396">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-396">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
          <span data-ttu-id="136b1-397">Se <paramref name="val1" />, <paramref name="val2" /> o sia <paramref name="val1" /> che <paramref name="val2" /> sono uguali a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-397">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-398">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-398">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Max : int16 * int16 -&gt; int16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-399">Primo di due interi con segno a 16 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-399">The first of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-400">Secondo di due interi con segno a 16 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-400">The second of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-401">Restituisce il più elevato tra due interi con segno a 16 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-401">Returns the larger of two 16-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-402">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-402">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-403">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-403">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Max : int * int -&gt; int" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-404">Primo di due interi con segno a 32 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-404">The first of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-405">Secondo di due interi con segno a 32 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-405">The second of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-406">Restituisce il più elevato tra due interi con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-406">Returns the larger of two 32-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-407">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-407">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-408">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-408">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Max : int64 * int64 -&gt; int64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-409">Primo di due interi con segno a 64 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-409">The first of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-410">Secondo di due interi con segno a 64 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-410">The second of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-411">Restituisce il più elevato tra due interi con segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-411">Returns the larger of two 64-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-412">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-412">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-413">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-413">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Max : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-414">Primo di due interi con segno a 8 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-414">The first of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-415">Secondo di due interi con segno a 8 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-415">The second of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-416">Restituisce il più elevato tra due interi con segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-416">Returns the larger of two 8-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-417">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-417">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-418">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-418">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-419">Primo di due numeri a virgola mobile e precisione singola da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-419">The first of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-420">Secondo di due numeri a virgola mobile e precisione singola da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-420">The second of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-421">Restituisce il più elevato tra due numeri a virgola mobile e precisione singola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-421">Returns the larger of two single-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-422">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-422">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
          <span data-ttu-id="136b1-423">Se <paramref name="val1" />, <paramref name="val2" /> o entrambi <paramref name="val1" /> e <paramref name="val2" /> sono uguali a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-423">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-424">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-424">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint16 * uint16 -&gt; uint16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-425">Primo di due interi senza segno a 16 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-425">The first of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-426">Secondo di due interi senza segno a 16 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-426">The second of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-427">Restituisce il più elevato tra due interi senza segno a 16 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-427">Returns the larger of two 16-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-428">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-428">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-429">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-429">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint32 * uint32 -&gt; uint32" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-430">Primo di due interi senza segno a 32 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-430">The first of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-431">Secondo di due interi senza segno a 32 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-431">The second of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-432">Restituisce il più elevato tra due interi senza segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-432">Returns the larger of two 32-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-433">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-433">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-434">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-434">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint64 * uint64 -&gt; uint64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-435">Primo di due interi senza segno a 64 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-435">The first of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-436">Secondo di due interi senza segno a 64 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-436">The second of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-437">Restituisce il più elevato tra due interi senza segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-437">Returns the larger of two 64-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-438">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-438">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-439">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Max%2A> metodo per restituire e visualizzare il valore maggiore di due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-439">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-440">Restituisce il meno elevato tra due numeri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-440">Returns the smaller of two numbers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Min : byte * byte -&gt; byte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-441">Primo di due interi senza segno a 8 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-441">The first of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-442">Secondo di due interi senza segno a 8 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-442">The second of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-443">Restituisce il meno elevato tra due interi senza segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-443">Returns the smaller of two 8-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-444">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-444">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-445">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-445">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Min : decimal * decimal -&gt; decimal" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-446">Primo di due numeri decimali da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-446">The first of two decimal numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-447">Secondo di due numeri decimali da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-447">The second of two decimal numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-448">Restituisce il meno elevato tra due numeri decimali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-448">Returns the smaller of two decimal numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-449">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-449">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-450">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-450">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Min : double * double -&gt; double" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-451">Primo di due numeri a virgola mobile e precisione doppia da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-451">The first of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-452">Secondo di due numeri a virgola mobile e precisione doppia da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-452">The second of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-453">Restituisce il meno elevato tra due numeri a virgola mobile e precisione doppia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-453">Returns the smaller of two double-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-454">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-454">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
          <span data-ttu-id="136b1-455">Se <paramref name="val1" />, <paramref name="val2" /> o sia <paramref name="val1" /> che <paramref name="val2" /> sono uguali a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-455">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-456">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-456">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Min : int16 * int16 -&gt; int16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-457">Primo di due interi con segno a 16 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-457">The first of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-458">Secondo di due interi con segno a 16 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-458">The second of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-459">Restituisce il meno elevato tra due interi con segno a 16 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-459">Returns the smaller of two 16-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-460">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-460">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-461">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-461">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Min : int * int -&gt; int" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-462">Primo di due interi con segno a 32 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-462">The first of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-463">Secondo di due interi con segno a 32 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-463">The second of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-464">Restituisce il meno elevato tra due interi con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-464">Returns the smaller of two 32-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-465">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-465">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-466">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-466">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Min : int64 * int64 -&gt; int64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-467">Primo di due interi con segno a 64 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-467">The first of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-468">Secondo di due interi con segno a 64 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-468">The second of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-469">Restituisce il meno elevato tra due interi con segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-469">Returns the smaller of two 64-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-470">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-470">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-471">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-471">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Min : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-472">Primo di due interi con segno a 8 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-472">The first of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-473">Secondo di due interi con segno a 8 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-473">The second of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-474">Restituisce il meno elevato tra due interi con segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-474">Returns the smaller of two 8-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-475">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-475">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-476">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-476">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-477">Primo di due numeri a virgola mobile e precisione singola da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-477">The first of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-478">Secondo di due numeri a virgola mobile e precisione singola da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-478">The second of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-479">Restituisce il meno elevato tra due numeri a virgola mobile e precisione singola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-479">Returns the smaller of two single-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-480">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-480">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
          <span data-ttu-id="136b1-481">Se <paramref name="val1" />, <paramref name="val2" /> o sia <paramref name="val1" /> che <paramref name="val2" /> sono uguali a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-481">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-482">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-482">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint16 * uint16 -&gt; uint16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-483">Primo di due interi senza segno a 16 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-483">The first of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-484">Secondo di due interi senza segno a 16 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-484">The second of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-485">Restituisce il meno elevato tra due interi senza segno a 16 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-485">Returns the smaller of two 16-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-486">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-486">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-487">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-487">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint32 * uint32 -&gt; uint32" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-488">Primo di due interi senza segno a 32 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-488">The first of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-489">Secondo di due interi senza segno a 32 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-489">The second of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-490">Restituisce il meno elevato tra due interi senza segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-490">Returns the smaller of two 32-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-491">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-491">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-492">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-492">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint64 * uint64 -&gt; uint64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="136b1-493">Primo di due interi senza segno a 64 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-493">The first of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="136b1-494">Secondo di due interi senza segno a 64 bit da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-494">The second of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-495">Restituisce il meno elevato tra due interi senza segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-495">Returns the smaller of two 64-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-496">Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-496">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-497">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Math.Min%2A> metodo per restituire e visualizzare il meno elevato tra due variabili.</span><span class="sxs-lookup"><span data-stu-id="136b1-497">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberSignature Language="F#" Value="val mutable PI : double" Usage="System.Math.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-498">Rappresenta il rapporto tra la circonferenza del cerchio e il relativo diametro, specificato dalla costante π.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-498">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-499">Il valore di questo campo è 3.14159265358979323846.</span><span class="sxs-lookup"><span data-stu-id="136b1-499">The value of this field is 3.14159265358979323846.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-500">L'esempio seguente usa <xref:System.Math.PI> per semplificare il calcolo degli angoli interni di un specificata trapezoid.</span><span class="sxs-lookup"><span data-stu-id="136b1-500">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberSignature Language="F#" Value="static member Pow : double * double -&gt; double" Usage="System.Math.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="136b1-501">Numero a virgola mobile e precisione doppia da elevare a potenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-501">A double-precision floating-point number to be raised to a power.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="136b1-502">Numero a virgola mobile a precisione doppia che specifica una potenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-502">A double-precision floating-point number that specifies a power.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-503">Restituisce il numero specificato elevato alla potenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-503">Returns a specified number raised to the specified power.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-504">Numero <paramref name="x" /> elevato alla potenza <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-504">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-505">Nella tabella seguente indica il valore restituito quando diversi valori o intervalli di valori vengono specificati per il `x` e `y` parametri.</span><span class="sxs-lookup"><span data-stu-id="136b1-505">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="136b1-506">Per altre informazioni, vedere <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> e <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="136b1-506">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="136b1-507">Parametri</span><span class="sxs-lookup"><span data-stu-id="136b1-507">Parameters</span></span>|<span data-ttu-id="136b1-508">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="136b1-508">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="136b1-509">`x` oppure `y`  =  `NaN`.</span><span class="sxs-lookup"><span data-stu-id="136b1-509">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="136b1-510">`x` = Qualsiasi valore eccetto `NaN`; `y` = 0.</span><span class="sxs-lookup"><span data-stu-id="136b1-510">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="136b1-511">1</span><span class="sxs-lookup"><span data-stu-id="136b1-511">1</span></span>|  
|<span data-ttu-id="136b1-512">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="136b1-512">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="136b1-513">0</span><span class="sxs-lookup"><span data-stu-id="136b1-513">0</span></span>|  
|<span data-ttu-id="136b1-514">`x` = `NegativeInfinity`; `y` è un numero intero dispari positivo.</span><span class="sxs-lookup"><span data-stu-id="136b1-514">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="136b1-515">`x` = `NegativeInfinity`; `y` è positivo, ma non un numero intero dispari.</span><span class="sxs-lookup"><span data-stu-id="136b1-515">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="136b1-516">`x` < 0, ma non `NegativeInfinity`; `y` non è un integer `NegativeInfinity`, o `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="136b1-516">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="136b1-517">`x` = -1. `y`  =  `NegativeInfinity` o `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="136b1-517">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="136b1-518">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="136b1-518">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="136b1-519">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="136b1-519">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="136b1-520">0</span><span class="sxs-lookup"><span data-stu-id="136b1-520">0</span></span>|  
|<span data-ttu-id="136b1-521">`x` < -1 o `x` > 1. `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="136b1-521">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="136b1-522">0</span><span class="sxs-lookup"><span data-stu-id="136b1-522">0</span></span>|  
|<span data-ttu-id="136b1-523">`x` < -1 o `x` > 1. `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="136b1-523">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="136b1-524">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="136b1-524">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="136b1-525">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="136b1-525">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="136b1-526">0</span><span class="sxs-lookup"><span data-stu-id="136b1-526">0</span></span>|  
|<span data-ttu-id="136b1-527">`x` = 1. `y` è qualsiasi valore eccetto `NaN`.</span><span class="sxs-lookup"><span data-stu-id="136b1-527">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="136b1-528">1</span><span class="sxs-lookup"><span data-stu-id="136b1-528">1</span></span>|  
|<span data-ttu-id="136b1-529">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="136b1-529">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="136b1-530">0</span><span class="sxs-lookup"><span data-stu-id="136b1-530">0</span></span>|  
|<span data-ttu-id="136b1-531">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="136b1-531">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="136b1-532">L'esempio seguente usa il <xref:System.Math.Pow%2A> metodo per la quale calcolare il valore risultante dalla generazione 2 alla potenza compreso tra 0 e 32.</span><span class="sxs-lookup"><span data-stu-id="136b1-532">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-533">Arrotonda un valore all'intero più vicino o al numero specificato di cifre frazionarie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-533">Rounds a value to the nearest integer or to the specified number of fractional digits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-534">Contenuto della sezione:</span><span class="sxs-lookup"><span data-stu-id="136b1-534">In this section:</span></span>  
  
 <span data-ttu-id="136b1-535">[Sintassi di metodo di overload](#Syntax) </span><span class="sxs-lookup"><span data-stu-id="136b1-535">[Overloaded method syntax](#Syntax) </span></span>  
 <span data-ttu-id="136b1-536">[Parametri](#Params) </span><span class="sxs-lookup"><span data-stu-id="136b1-536">[Parameters](#Params) </span></span>  
 <span data-ttu-id="136b1-537">[Valore restituito](#Returns) </span><span class="sxs-lookup"><span data-stu-id="136b1-537">[Return value](#Returns) </span></span>  
 <span data-ttu-id="136b1-538">[Eccezioni](#Exceptions) </span><span class="sxs-lookup"><span data-stu-id="136b1-538">[Exceptions](#Exceptions) </span></span>  
 <span data-ttu-id="136b1-539">[Quale metodo viene chiamato?](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="136b1-539">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="136b1-540">[I valori punto intermedio e le convenzioni di arrotondamento](#Midpoint) </span><span class="sxs-lookup"><span data-stu-id="136b1-540">[Midpoint values and rounding conventions](#Midpoint) </span></span>  
 <span data-ttu-id="136b1-541">[Arrotondamento e la precisione](#Precision) </span><span class="sxs-lookup"><span data-stu-id="136b1-541">[Rounding and precision](#Precision) </span></span>  
 <span data-ttu-id="136b1-542">[Valori a virgola mobile e precisione singola e arrotondamento](#Single) </span><span class="sxs-lookup"><span data-stu-id="136b1-542">[Rounding and single-precision floating-point values](#Single) </span></span>  
 <span data-ttu-id="136b1-543">Esempi:</span><span class="sxs-lookup"><span data-stu-id="136b1-543">Examples:</span></span>   
 [<span data-ttu-id="136b1-544">Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="136b1-544">Math.Round(Decimal)</span></span>](#Round1_Example)  
 [<span data-ttu-id="136b1-545">Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="136b1-545">Math.Round(Double)</span></span>](#Round2_Example)  
 [<span data-ttu-id="136b1-546">Math.Round(Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="136b1-546">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
 [<span data-ttu-id="136b1-547">Math. Round (numero decimale, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="136b1-547">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
 [<span data-ttu-id="136b1-548">Math.Round(Double, Int32)</span><span class="sxs-lookup"><span data-stu-id="136b1-548">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
 [<span data-ttu-id="136b1-549">Math. Round (Double, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="136b1-549">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
 [<span data-ttu-id="136b1-550">Math. Round (numero decimale, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="136b1-550">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
 [<span data-ttu-id="136b1-551">Math. Round (Double, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="136b1-551">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  
[<span data-ttu-id="136b1-552">Informazioni sulla versione</span><span class="sxs-lookup"><span data-stu-id="136b1-552">Version information</span></span>](#Round_Versions)  
  
<a name="Syntax"></a>   
## <a name="overloaded-method-syntax"></a><span data-ttu-id="136b1-553">Sintassi di metodo di overload</span><span class="sxs-lookup"><span data-stu-id="136b1-553">Overloaded method syntax</span></span>  
 <span data-ttu-id="136b1-554">Per altro materiale sussidiario sulla scelta di un overload, vedere [quale metodo viene chiamato?](#Tasks)</span><span class="sxs-lookup"><span data-stu-id="136b1-554">For additional guidance on choosing an overload, see [Which method do I call?](#Tasks)</span></span>  
  
 <span data-ttu-id="136b1-555">`Decimal Math.Round(Decimal` `d` `)`</span><span class="sxs-lookup"><span data-stu-id="136b1-555">`Decimal Math.Round(Decimal` `d` `)`</span></span>  
 <span data-ttu-id="136b1-556">Arrotonda un valore decimale all'intero più vicino e arrotonda valori punto intermedio al numero pari più vicino ([esempio](#Round1_Example)).</span><span class="sxs-lookup"><span data-stu-id="136b1-556">Rounds a decimal value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round1_Example)).</span></span>  
  
 <span data-ttu-id="136b1-557">`Double Math.Round(Double` `a` `)`</span><span class="sxs-lookup"><span data-stu-id="136b1-557">`Double Math.Round(Double` `a` `)`</span></span>  
 <span data-ttu-id="136b1-558">Arrotonda un valore a virgola mobile a precisione doppia all'intero più vicino e arrotonda valori punto intermedio al numero pari più vicino ([esempio](#Round2_Example)).</span><span class="sxs-lookup"><span data-stu-id="136b1-558">Rounds a double-precision floating-point value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round2_Example)).</span></span>  
  
 <span data-ttu-id="136b1-559">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span><span class="sxs-lookup"><span data-stu-id="136b1-559">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span></span>  
 <span data-ttu-id="136b1-560">Arrotonda un valore decimale su un numero di cifre frazionarie specificato e consente di arrotondare i valori punto intermedio al numero pari più vicino ([esempio](#Round3_Example)).</span><span class="sxs-lookup"><span data-stu-id="136b1-560">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round3_Example)).</span></span>  
  
 <span data-ttu-id="136b1-561">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span><span class="sxs-lookup"><span data-stu-id="136b1-561">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span></span>  
 <span data-ttu-id="136b1-562">Arrotonda un valore a virgola mobile a precisione doppia su un numero di cifre frazionarie specificato e consente di arrotondare i valori punto intermedio al numero pari più vicino ([esempio](#Round4_Example)).</span><span class="sxs-lookup"><span data-stu-id="136b1-562">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round4_Example)).</span></span>  
  
 <span data-ttu-id="136b1-563">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="136b1-563">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="136b1-564">Arrotonda un valore decimale all'intero più vicino e utilizza la convenzione di arrotondamento specificata per i valori punto medio ([esempio](#Round5_Example)).</span><span class="sxs-lookup"><span data-stu-id="136b1-564">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round5_Example)).</span></span>  
  
 <span data-ttu-id="136b1-565">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="136b1-565">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="136b1-566">Arrotonda un valore a virgola mobile a precisione doppia all'intero più vicino e utilizza la convenzione di arrotondamento specificata per i valori punto medio ([esempio](#Round6_Example)).</span><span class="sxs-lookup"><span data-stu-id="136b1-566">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round6_Example)).</span></span>  
  
 <span data-ttu-id="136b1-567">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="136b1-567">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="136b1-568">Arrotonda un valore decimale su un numero di cifre frazionarie specificato e utilizza la convenzione di arrotondamento specificata per i valori punto medio ([esempio](#Round7_Example)).</span><span class="sxs-lookup"><span data-stu-id="136b1-568">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round7_Example)).</span></span>  
  
 <span data-ttu-id="136b1-569">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="136b1-569">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="136b1-570">Arrotonda un valore a virgola mobile a precisione doppia su un numero di cifre frazionarie specificato e utilizza la convenzione di arrotondamento specificata per i valori punto medio ([esempio](#Round8_Example)).</span><span class="sxs-lookup"><span data-stu-id="136b1-570">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round8_Example)).</span></span>  
  
<a name="Params"></a>   
## <a name="parameters"></a><span data-ttu-id="136b1-571">Parametri</span><span class="sxs-lookup"><span data-stu-id="136b1-571">Parameters</span></span>  
 <span data-ttu-id="136b1-572">Si tratta di un elenco completo dei parametri per il <xref:System.Math.Round%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="136b1-572">This is a complete list of parameters for the <xref:System.Math.Round%2A> method.</span></span> <span data-ttu-id="136b1-573">Per i parametri usati da ogni overload, vedere la sintassi di overload precedente.</span><span class="sxs-lookup"><span data-stu-id="136b1-573">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="136b1-574">Parametro</span><span class="sxs-lookup"><span data-stu-id="136b1-574">Parameter</span></span>|<span data-ttu-id="136b1-575">Tipo</span><span class="sxs-lookup"><span data-stu-id="136b1-575">Type</span></span>|<span data-ttu-id="136b1-576">Descrizione</span><span class="sxs-lookup"><span data-stu-id="136b1-576">Description</span></span>|  
|---------------|----------|-----------------|  
|`d`|<xref:System.Decimal>|<span data-ttu-id="136b1-577">Un numero da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="136b1-577">A number to be rounded.</span></span>|  
|`a`<br /><br /> <span data-ttu-id="136b1-578">oppure</span><span class="sxs-lookup"><span data-stu-id="136b1-578">-or-</span></span><br /><br /> `value`|<xref:System.Double>|<span data-ttu-id="136b1-579">Numero a virgola mobile e precisione doppia da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="136b1-579">A double-precision floating-point number to be rounded.</span></span>|  
|`decimals`<br /><br /> <span data-ttu-id="136b1-580">oppure</span><span class="sxs-lookup"><span data-stu-id="136b1-580">-or-</span></span><br /><br /> `digits`|<xref:System.Int32>|<span data-ttu-id="136b1-581">Numero di cifre frazionarie nel valore restituito.</span><span class="sxs-lookup"><span data-stu-id="136b1-581">The number of fractional digits in the return value.</span></span> <span data-ttu-id="136b1-582">Per <xref:System.Decimal> valori, può variare da 0 a 28.</span><span class="sxs-lookup"><span data-stu-id="136b1-582">For <xref:System.Decimal> values, it can range from 0 to 28.</span></span> <span data-ttu-id="136b1-583">Per <xref:System.Double> valori, può variare da 0 a 15.</span><span class="sxs-lookup"><span data-stu-id="136b1-583">For <xref:System.Double> values, it can range from 0 to 15.</span></span> <span data-ttu-id="136b1-584">Si noti che 15 è il numero massimo di cifre integrali e frazionarie supportati dal <xref:System.Double> tipo.</span><span class="sxs-lookup"><span data-stu-id="136b1-584">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span><br /><br /> <span data-ttu-id="136b1-585">Il valore predefinito: 0, che consente di arrotondare a un integer</span><span class="sxs-lookup"><span data-stu-id="136b1-585">Default value: 0, which rounds to an integer</span></span>|  
|`mode`|<xref:System.MidpointRounding>|<span data-ttu-id="136b1-586">Un flag che specifica le convenzioni da utilizzare per i valori punto intermedio di arrotondamento.</span><span class="sxs-lookup"><span data-stu-id="136b1-586">A flag that specifies the convention to use for rounding midpoint values.</span></span> <span data-ttu-id="136b1-587">Visualizzare [i valori punto intermedio e le convenzioni di arrotondamento](#Midpoint).</span><span class="sxs-lookup"><span data-stu-id="136b1-587">See [Midpoint values and rounding conventions](#Midpoint).</span></span><br /><br /> <span data-ttu-id="136b1-588">Valore predefinito: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="136b1-588">Default value: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span></span>|  
  
<a name="Returns"></a>   
## <a name="return-value"></a><span data-ttu-id="136b1-589">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="136b1-589">Return value</span></span>  
 <span data-ttu-id="136b1-590">Tipo: <xref:System.Decimal> o <xref:System.Double>, a seconda del tipo del valore da arrotondare.</span><span class="sxs-lookup"><span data-stu-id="136b1-590">Type: <xref:System.Decimal> or <xref:System.Double>, depending on the type of the value to be rounded.</span></span>   
<span data-ttu-id="136b1-591">Un valore numerico dello stesso tipo come `d`, `a`, o `value`, ma arrotondato a un numero intero o al numero specificato di cifre decimali.</span><span class="sxs-lookup"><span data-stu-id="136b1-591">A numeric value of the same type as `d`, `a`, or `value`, but rounded either to an integer or to the specified number of decimal digits.</span></span> <span data-ttu-id="136b1-592">Visualizzare [i valori punto intermedio e le convenzioni di arrotondamento](#Midpoint) per informazioni su arrotondamento dei numeri con i valori punto intermedio.</span><span class="sxs-lookup"><span data-stu-id="136b1-592">See [Midpoint values and rounding conventions](#Midpoint) for information about rounding numbers with midpoint values.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="136b1-593">Quando i valori punto intermedio di arrotondamento, l'algoritmo di arrotondamento esegue un test di uguaglianza.</span><span class="sxs-lookup"><span data-stu-id="136b1-593">When rounding midpoint values, the rounding algorithm performs an equality test.</span></span> <span data-ttu-id="136b1-594">A causa di problemi della rappresentazione binaria e la precisione nel formato a virgola mobile, il valore restituito dal metodo può essere imprevisto.</span><span class="sxs-lookup"><span data-stu-id="136b1-594">Because of problems of binary representation and precision in the floating-point format, the value returned by the method can be unexpected.</span></span> <span data-ttu-id="136b1-595">Per altre informazioni, vedere [arrotondamento e la precisione](#Precision).</span><span class="sxs-lookup"><span data-stu-id="136b1-595">For more information, see [Rounding and precision](#Precision).</span></span>  
  
 <span data-ttu-id="136b1-596">Se un overload con un <xref:System.Double> parametro viene chiamato con <xref:System.Double.NaN?displayProperty=nameWithType>, il metodo restituisce <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="136b1-596">If an overload with a <xref:System.Double> parameter is called with <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="136b1-597">Se viene chiamato con <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> oppure <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, il metodo restituisce <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> o <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="136b1-597">If it is called with <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
<a name="Exceptions"></a>   
## <a name="exceptions"></a><span data-ttu-id="136b1-598">Eccezioni</span><span class="sxs-lookup"><span data-stu-id="136b1-598">Exceptions</span></span>  
  
|<span data-ttu-id="136b1-599">Eccezione</span><span class="sxs-lookup"><span data-stu-id="136b1-599">Exception</span></span>|<span data-ttu-id="136b1-600">Condizione</span><span class="sxs-lookup"><span data-stu-id="136b1-600">Condition</span></span>|<span data-ttu-id="136b1-601">Generata da</span><span class="sxs-lookup"><span data-stu-id="136b1-601">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.OverflowException>|<span data-ttu-id="136b1-602">Il risultato è compreso nell'intervallo di <xref:System.Decimal> tipo.</span><span class="sxs-lookup"><span data-stu-id="136b1-602">The result is outside the range of the <xref:System.Decimal> type.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="136b1-603">`decimals` è minore di 0 o maggiore di 28.</span><span class="sxs-lookup"><span data-stu-id="136b1-603">`decimals` is less than 0 or greater than 28.</span></span><br /><br /> <span data-ttu-id="136b1-604">oppure</span><span class="sxs-lookup"><span data-stu-id="136b1-604">-or-</span></span><br /><br /> <span data-ttu-id="136b1-605">`digits` è minore di 0 o maggiore di 15.</span><span class="sxs-lookup"><span data-stu-id="136b1-605">`digits` is less than 0 or greater than 15.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentException>|<span data-ttu-id="136b1-606">`mode` non è un valore valido di <xref:System.MidpointRounding>.</span><span class="sxs-lookup"><span data-stu-id="136b1-606">`mode` is not a valid value of <xref:System.MidpointRounding>.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
  
<a name="Tasks"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="136b1-607">Quale metodo viene chiamato?</span><span class="sxs-lookup"><span data-stu-id="136b1-607">Which method do I call?</span></span>  
  
|<span data-ttu-id="136b1-608">A</span><span class="sxs-lookup"><span data-stu-id="136b1-608">To</span></span>|<span data-ttu-id="136b1-609">Call</span><span class="sxs-lookup"><span data-stu-id="136b1-609">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="136b1-610">Arrotonda un numero in un intero usando l'arrotondamento al più vicino convenzione.</span><span class="sxs-lookup"><span data-stu-id="136b1-610">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="136b1-611">oppure</span><span class="sxs-lookup"><span data-stu-id="136b1-611">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="136b1-612">Arrotondamento convenzione arrotondare un numero in un intero con un oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="136b1-612">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="136b1-613">oppure</span><span class="sxs-lookup"><span data-stu-id="136b1-613">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="136b1-614">Arrotondare un numero a un numero di cifre frazionarie specificato usando l'arrotondamento al più vicino convenzione.</span><span class="sxs-lookup"><span data-stu-id="136b1-614">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="136b1-615">oppure</span><span class="sxs-lookup"><span data-stu-id="136b1-615">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="136b1-616">Arrotondamento convenzione arrotondare un numero a un numero specificato di cifre frazionarie utilizzando un oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="136b1-616">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="136b1-617">oppure</span><span class="sxs-lookup"><span data-stu-id="136b1-617">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="136b1-618">Arrotondare un <xref:System.Single> valore su un numero specificato di cifre frazionarie con un arrotondamento convenzione e riducendo al minimo la perdita di precisione specificati.</span><span class="sxs-lookup"><span data-stu-id="136b1-618">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="136b1-619">Convertire le <xref:System.Single> a un <xref:System.Decimal> e chiamare <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span><span class="sxs-lookup"><span data-stu-id="136b1-619">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="136b1-620">Arrotonda un numero al numero specificato di cifre frazionarie, riducendo al minimo i problemi di precisione in arrotondando i valori punto intermedio.</span><span class="sxs-lookup"><span data-stu-id="136b1-620">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="136b1-621">Chiamare un metodo che implementa un confronto "maggiore o approssimativamente uguale a".</span><span class="sxs-lookup"><span data-stu-id="136b1-621">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="136b1-622">Visualizzare [arrotondamento e la precisione](#Precision).</span><span class="sxs-lookup"><span data-stu-id="136b1-622">See [Rounding and precision](#Precision).</span></span>|  
|<span data-ttu-id="136b1-623">Arrotonda un valore frazionario a un integer che è maggiore del valore frazionario.</span><span class="sxs-lookup"><span data-stu-id="136b1-623">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="136b1-624">Round, ad esempio, 3.1 e 4.</span><span class="sxs-lookup"><span data-stu-id="136b1-624">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="136b1-625">Arrotonda un valore frazionario a un integer che è minore del valore frazionario.</span><span class="sxs-lookup"><span data-stu-id="136b1-625">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="136b1-626">Ad esempio, arrotondare 3.9 a 3.</span><span class="sxs-lookup"><span data-stu-id="136b1-626">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  
  
<a name="Midpoint"></a>   
## <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="136b1-627">I valori punto intermedio e le convenzioni di arrotondamento</span><span class="sxs-lookup"><span data-stu-id="136b1-627">Midpoint values and rounding conventions</span></span>  
 <span data-ttu-id="136b1-628">Arrotondamento comporta la conversione di un valore numerico con una precisione specificata per il valore più vicino con precisione inferiore.</span><span class="sxs-lookup"><span data-stu-id="136b1-628">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="136b1-629">Ad esempio, è possibile usare la <xref:System.Math.Round%28System.Double%29> metodo per arrotondare un valore di 3.4 a 3.0 e il <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> metodo per arrotondare un valore di 3,579-3.58.</span><span class="sxs-lookup"><span data-stu-id="136b1-629">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
 <span data-ttu-id="136b1-630">In un valore del punto centrale, il valore dopo la cifra meno significativo del risultato è esattamente metà altezza tra due numeri.</span><span class="sxs-lookup"><span data-stu-id="136b1-630">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="136b1-631">Ad esempio, 3.47500 è un valore di punto centrale se deve essere arrotondato a due cifre decimali e 7.500 è un valore del punto centrale se deve essere arrotondato a un numero intero.</span><span class="sxs-lookup"><span data-stu-id="136b1-631">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="136b1-632">In questi casi, il valore più vicino Impossibile identificare con facilità senza una convenzione di arrotondamento.</span><span class="sxs-lookup"><span data-stu-id="136b1-632">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
 <span data-ttu-id="136b1-633">Il <xref:System.Math.Round%2A> metodo supporta due arrotondamento convenzioni per la gestione dei valori punto intermedio:</span><span class="sxs-lookup"><span data-stu-id="136b1-633">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
 <span data-ttu-id="136b1-634">**Arrotondamento lontano da zero**</span><span class="sxs-lookup"><span data-stu-id="136b1-634">**Rounding away from zero**</span></span>  
 <span data-ttu-id="136b1-635">I valori punto intermedio vengono arrotondati al numero successivo lontano da zero.</span><span class="sxs-lookup"><span data-stu-id="136b1-635">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="136b1-636">Ad esempio, consente di arrotondare 3,75 per 3.8, 3,85 viene arrotondato a 3.9,-3.75 viene arrotondato a-3.8, e-3.85 viene arrotondato a-3.9.</span><span class="sxs-lookup"><span data-stu-id="136b1-636">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="136b1-637">Questa forma di arrotondamento è rappresentata dal <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> membro di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="136b1-637">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="136b1-638">Arrotondamento lontano da zero è la forma più ampiamente conosciuta di arrotondamento.</span><span class="sxs-lookup"><span data-stu-id="136b1-638">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="136b1-639">**Arrotondamento al valore più vicino o arrotondamento**</span><span class="sxs-lookup"><span data-stu-id="136b1-639">**Rounding to nearest, or banker's rounding**</span></span>  
 <span data-ttu-id="136b1-640">I valori punto intermedio vengono arrotondati al numero pari più vicino.</span><span class="sxs-lookup"><span data-stu-id="136b1-640">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="136b1-641">Ad esempio, 3,75 sia 3.85 arrotondare a 3.8 e-3.75 sia-3.85 arrotondati-3.8.</span><span class="sxs-lookup"><span data-stu-id="136b1-641">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="136b1-642">Questa forma di arrotondamento è rappresentata dal <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> membro di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="136b1-642">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="136b1-643">Arrotondamento al valore più vicino è la forma standard dell'arrotondamento di utilizzati nelle operazioni finanziarie e statistiche.</span><span class="sxs-lookup"><span data-stu-id="136b1-643">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="136b1-644">È conforme allo Standard IEEE 754, sezione 4.</span><span class="sxs-lookup"><span data-stu-id="136b1-644">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="136b1-645">Quando usato in più operazioni di arrotondamento, riduce l'arrotondamento errore causato da valori punto intermedio in un'unica direzione di arrotondamento in modo coerente.</span><span class="sxs-lookup"><span data-stu-id="136b1-645">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="136b1-646">In alcuni casi, questo errore di arrotondamento può essere significativo.</span><span class="sxs-lookup"><span data-stu-id="136b1-646">In some cases, this rounding error can be significant.</span></span>  
  
 <span data-ttu-id="136b1-647">L'esempio seguente illustra la deviazione che può essere causato da valori punto intermedio in un'unica direzione di arrotondamento in modo coerente.</span><span class="sxs-lookup"><span data-stu-id="136b1-647">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="136b1-648">L'esempio calcola la media reale di una matrice di <xref:System.Decimal> valori e quindi calcola la media quando i valori nella matrice sono arrotondati usando le convenzioni di due.</span><span class="sxs-lookup"><span data-stu-id="136b1-648">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="136b1-649">In questo esempio, la media reale e la media risultante per l'arrotondamento al valore più vicino coincidono.</span><span class="sxs-lookup"><span data-stu-id="136b1-649">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="136b1-650">Tuttavia, la media risultante per l'arrotondamento lontano da zero differisce dal.05 (o % 3.6) dalla media reale.</span><span class="sxs-lookup"><span data-stu-id="136b1-650">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
 [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
 <span data-ttu-id="136b1-651">Per impostazione predefinita, il <xref:System.Math.Round%2A> metodo Usa l'arrotondamento al più vicino convenzione.</span><span class="sxs-lookup"><span data-stu-id="136b1-651">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="136b1-652">La tabella seguente elenca gli overload del <xref:System.Math.Round%2A> (metodo) e la convenzione di arrotondamento che ognuna Usa.</span><span class="sxs-lookup"><span data-stu-id="136b1-652">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="136b1-653">Overload</span><span class="sxs-lookup"><span data-stu-id="136b1-653">Overload</span></span>|<span data-ttu-id="136b1-654">Convenzione di arrotondamento</span><span class="sxs-lookup"><span data-stu-id="136b1-654">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="136b1-655">Determinato dal `mode` parametro.</span><span class="sxs-lookup"><span data-stu-id="136b1-655">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="136b1-656">Determinato dal `mode` parametro</span><span class="sxs-lookup"><span data-stu-id="136b1-656">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="136b1-657">Determinato dal `mode` parametro</span><span class="sxs-lookup"><span data-stu-id="136b1-657">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="136b1-658">Determinato dal `mode` parametro</span><span class="sxs-lookup"><span data-stu-id="136b1-658">Determined by `mode` parameter</span></span>|  
  
<a name="Precision"></a>   
## <a name="rounding-and-precision"></a><span data-ttu-id="136b1-659">Arrotondamento e la precisione</span><span class="sxs-lookup"><span data-stu-id="136b1-659">Rounding and precision</span></span>  
 <span data-ttu-id="136b1-660">Per determinare se un'operazione di arrotondamento prevede un valore del punto centrale, il <xref:System.Math.Round%2A> metodo Moltiplica il valore originale da arrotondare per 10<sup>n</sup>, dove *n* è il numero desiderato di frazionari cifre nel valore restituito e quindi determina se la rimanente parte frazionaria del valore è maggiore o uguale a. 5.</span><span class="sxs-lookup"><span data-stu-id="136b1-660">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="136b1-661">Si tratta di una leggera variazione in un test per verificarne l'uguaglianza e come indicato nella sezione "Test per verificarne l'uguaglianza" del <xref:System.Double> argomento di riferimento, test per verificarne l'uguaglianza con valori a virgola mobile sono problematici a causa di problemi del formato a virgola mobile con binario rappresentazione e la precisione.</span><span class="sxs-lookup"><span data-stu-id="136b1-661">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="136b1-662">Ciò significa che qualsiasi parte frazionaria di un numero leggermente minore,5 (a causa di una perdita di precisione) non sarà arrotondata verso l'alto.</span><span class="sxs-lookup"><span data-stu-id="136b1-662">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  
  
 <span data-ttu-id="136b1-663">Nell'esempio che segue viene illustrato il problema.</span><span class="sxs-lookup"><span data-stu-id="136b1-663">The following example illustrates the problem.</span></span> <span data-ttu-id="136b1-664">Aggiunge.1 a 11.0 ripetutamente e Arrotonda il risultato all'intero più vicino.</span><span class="sxs-lookup"><span data-stu-id="136b1-664">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="136b1-665">Indipendentemente dal fatto la convenzione di arrotondamento, dell'11,5 devono essere arrotondati a 12.</span><span class="sxs-lookup"><span data-stu-id="136b1-665">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="136b1-666">Tuttavia, come nell'esempio viene illustrato l'output, questo non accade.</span><span class="sxs-lookup"><span data-stu-id="136b1-666">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="136b1-667">Nell'esempio viene usato "R" [stringa di formato numerico standard](~/docs/standard/base-types/standard-numeric-format-strings.md) per visualizzare la virgola mobile massima precisione del valore e mostra che il valore da arrotondare ha perso precisione durante le aggiunte ripetute e il relativo valore sia effettivamente 11.499999999999998.</span><span class="sxs-lookup"><span data-stu-id="136b1-667">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="136b1-668">Poiché.499999999999998 è minore di,5, non il valore viene arrotondato all'intero più alto successivo.</span><span class="sxs-lookup"><span data-stu-id="136b1-668">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="136b1-669">Come illustrato anche nell'esempio, questo problema non si verifica se è sufficiente assegnare il valore costante dell'11,5 un <xref:System.Double> variabile.</span><span class="sxs-lookup"><span data-stu-id="136b1-669">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
 [!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
 <span data-ttu-id="136b1-670">Problemi di precisione in arrotondando i valori punto intermedio sono più probabile che si verificano le condizioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="136b1-670">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
-   <span data-ttu-id="136b1-671">Quando un valore frazionario non può essere espressi con precisione in formato binario del tipo a virgola mobile.</span><span class="sxs-lookup"><span data-stu-id="136b1-671">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
-   <span data-ttu-id="136b1-672">Quando il valore da arrotondare viene calcolato da uno o più operazioni a virgola mobile.</span><span class="sxs-lookup"><span data-stu-id="136b1-672">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
-   <span data-ttu-id="136b1-673">Quando il valore da arrotondare è un <xref:System.Single> piuttosto che un <xref:System.Double> o <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="136b1-673">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="136b1-674">Per altre informazioni, vedere la sezione successiva [arrotondamento e i valori a virgola mobile a precisione singola](#Single).</span><span class="sxs-lookup"><span data-stu-id="136b1-674">For more information, see the next section, [Rounding and single-precision floating-point values](#Single).</span></span>  
  
 <span data-ttu-id="136b1-675">Nei casi in cui la mancanza di precisione nelle operazioni di arrotondamento è problematica, è possibile eseguire le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="136b1-675">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
-   <span data-ttu-id="136b1-676">Se l'operazione di arrotondamento chiama un overload che consente di arrotondare un <xref:System.Double> valore, è possibile modificare il <xref:System.Double> a un <xref:System.Decimal> il valore e chiamare un overload che consente di arrotondare un <xref:System.Decimal> invece opportuno.</span><span class="sxs-lookup"><span data-stu-id="136b1-676">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="136b1-677">Sebbene il <xref:System.Decimal> tipo di dati ha anche i problemi della rappresentazione e la perdita di precisione, questi problemi sono molto meno comuni.</span><span class="sxs-lookup"><span data-stu-id="136b1-677">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
-   <span data-ttu-id="136b1-678">Definire un algoritmo di arrotondamento personalizzato che esegue un test "quasi equiparabile" per determinare se il valore da arrotondare siano accettabili è vicino al valore del punto centrale.</span><span class="sxs-lookup"><span data-stu-id="136b1-678">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="136b1-679">L'esempio seguente definisce un `RoundApproximate` metodo che passerà a esaminare se un valore frazionario è sufficientemente nelle vicinanze di un valore medio da eventuale arrotondamento intermedio.</span><span class="sxs-lookup"><span data-stu-id="136b1-679">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="136b1-680">Come illustrato nell'output dell'esempio, questo comando corregge il problema di arrotondamento illustrato nell'esempio precedente.</span><span class="sxs-lookup"><span data-stu-id="136b1-680">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
<a name="Single"></a>   
## <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="136b1-681">Valori a virgola mobile e precisione singola e arrotondamento</span><span class="sxs-lookup"><span data-stu-id="136b1-681">Rounding and single-precision floating-point values</span></span>  
 <span data-ttu-id="136b1-682">Il <xref:System.Math.Round%2A> metodo include gli overload che accettano argomenti di tipo <xref:System.Decimal> e <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="136b1-682">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="136b1-683">Non sono presenti metodi a cui arrotondare i valori di tipo <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="136b1-683">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="136b1-684">Se si passa una <xref:System.Single> valore su uno degli overload del <xref:System.Math.Round%2A> metodo, verrà eseguito il cast (in c#) o convertire (in Visual Basic) per una <xref:System.Double>e le corrispondenti <xref:System.Math.Round%2A> overload con un <xref:System.Double> parametro viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="136b1-684">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="136b1-685">Anche se si tratta di una conversione verso un, spesso implica una perdita di precisione, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="136b1-685">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="136b1-686">Quando un <xref:System.Single> valore di 16.325 viene passato al <xref:System.Math.Round%2A> (metodo) e arrotondato a due cifre decimali utilizzando l'arrotondamento al più vicino convenzione, il risultato è risultato 16.32 16.33 e non previsto.</span><span class="sxs-lookup"><span data-stu-id="136b1-686">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
 [!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
 <span data-ttu-id="136b1-687">Questo risultato imprevisto è dovuto a una perdita di precisione durante la conversione del <xref:System.Single> valore per un <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="136b1-687">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="136b1-688">Poiché l'oggetto risultante <xref:System.Double> valore 16.325000762939453 non è un valore del punto centrale ed è maggiore di quella 16.325, viene sempre arrotondato verso l'alto.</span><span class="sxs-lookup"><span data-stu-id="136b1-688">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
 <span data-ttu-id="136b1-689">In molti casi, come illustrato nell'esempio, la perdita di precisione può essere ridotta a icona o eliminata eseguendo il cast o conversione di <xref:System.Single> valore per un <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="136b1-689">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="136b1-690">Si noti che, poiché si tratta di una conversione di narrowing, Usa un operatore cast o la chiamata a un metodo di conversione.</span><span class="sxs-lookup"><span data-stu-id="136b1-690">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  
  
<a name="Round1_Example"></a>   
## <a name="mathrounddecimal-example"></a><span data-ttu-id="136b1-691">Esempio Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="136b1-691">Math.Round(Decimal) example</span></span>  
 <span data-ttu-id="136b1-692">Nell'esempio seguente viene illustrato il <xref:System.Math.Round%28System.Decimal%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="136b1-692">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="136b1-693">Si noti che il <xref:System.Decimal> valore di 4.5 viene arrotondato a 4 anziché a 5, perché questo overload viene utilizzato il valore predefinito <xref:System.MidpointRounding.ToEven> convenzione.</span><span class="sxs-lookup"><span data-stu-id="136b1-693">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
 [!code-csharp[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
 [!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  
  
<a name="Round2_Example"></a>   
## <a name="mathrounddouble-example"></a><span data-ttu-id="136b1-694">Esempio Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="136b1-694">Math.Round(Double) example</span></span>  
 <span data-ttu-id="136b1-695">Nell'esempio seguente viene illustrato un arrotondamento al valore integer più vicino.</span><span class="sxs-lookup"><span data-stu-id="136b1-695">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
 [!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  
  
<a name="Round3_Example"></a>   
## <a name="mathrounddecimal-int32-example"></a><span data-ttu-id="136b1-696">Esempio di Math. Round (numero decimale, Int32)</span><span class="sxs-lookup"><span data-stu-id="136b1-696">Math.Round(Decimal, Int32) example</span></span>  
 <span data-ttu-id="136b1-697">Nell'esempio seguente consente di arrotondare i valori decimali con due cifre frazionarie pari a valori con una sola cifra frazionaria.</span><span class="sxs-lookup"><span data-stu-id="136b1-697">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
 [!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
<a name="Round4_Example"></a>   
## <a name="mathrounddouble-int32-example"></a><span data-ttu-id="136b1-698">Math. Round (Double, Int32), esempio</span><span class="sxs-lookup"><span data-stu-id="136b1-698">Math.Round(Double, Int32) example</span></span>  
 <span data-ttu-id="136b1-699">Nell'esempio seguente Arrotonda valori doppi con due cifre frazionarie doppi con una sola cifra frazionaria.</span><span class="sxs-lookup"><span data-stu-id="136b1-699">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
 [!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
<a name="Round5_Example"></a>   
## <a name="mathrounddecimal-midpointrounding-example"></a><span data-ttu-id="136b1-700">Esempio di Math. Round (numero decimale, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="136b1-700">Math.Round(Decimal, MidpointRounding) example</span></span>  
 <span data-ttu-id="136b1-701">L'esempio seguente mostra i valori restituiti dal <xref:System.Math.Round%28System.Decimal%29> metodo, il <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> metodo con un `mode` argomento del <xref:System.MidpointRounding.ToEven>e il <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> metodo con un `mode` argomento di <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="136b1-701">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
<a name="Round6_Example"></a>   
## <a name="mathrounddouble-midpointrounding-example"></a><span data-ttu-id="136b1-702">Math. Round (Double, MidpointRounding) esempio</span><span class="sxs-lookup"><span data-stu-id="136b1-702">Math.Round(Double, MidpointRounding) example</span></span>  
 <span data-ttu-id="136b1-703">L'esempio seguente mostra i valori restituiti dal <xref:System.Math.Round%28System.Double%29> metodo, il <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> metodo con un `mode` argomento del <xref:System.MidpointRounding.ToEven>e il <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> metodo con un `mode` argomento di <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="136b1-703">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
 [!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
<a name="Round7_Example"></a>   
## <a name="mathrounddecimal-int32-midpointrounding-example"></a><span data-ttu-id="136b1-704">Esempio di Math. Round (numero decimale, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="136b1-704">Math.Round(Decimal, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="136b1-705">L'esempio seguente illustra come usare il <xref:System.Math.Round%2A> metodo con il <xref:System.MidpointRounding> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="136b1-705">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
<a name="Round8_Example"></a>   
## <a name="mathrounddouble-int32-midpointrounding-example"></a><span data-ttu-id="136b1-706">Esempio di Math. Round (Double, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="136b1-706">Math.Round(Double, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="136b1-707">L'esempio seguente illustra come usare il <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> metodo con il <xref:System.MidpointRounding> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="136b1-707">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
 [!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
<a name="Round_Versions"></a>   
## <a name="version-information"></a><span data-ttu-id="136b1-708">Informazioni sulla versione</span><span class="sxs-lookup"><span data-stu-id="136b1-708">Version information</span></span>  
 <span data-ttu-id="136b1-709">.NET Framework</span><span class="sxs-lookup"><span data-stu-id="136b1-709">.NET Framework</span></span>  
 <span data-ttu-id="136b1-710">Esegue l'overload senza un <xref:System.MidpointRounding> parametro sono supportati in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span><span class="sxs-lookup"><span data-stu-id="136b1-710">Overloads without a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span></span>  
<span data-ttu-id="136b1-711">Esegue l'overload con un <xref:System.MidpointRounding> parametro sono supportati in: 4.5, 4, 3.5, 3.0, 2.0</span><span class="sxs-lookup"><span data-stu-id="136b1-711">Overloads with a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0</span></span>  
  
 <span data-ttu-id="136b1-712">.NET Framework Client Profile</span><span class="sxs-lookup"><span data-stu-id="136b1-712">.NET Framework Client Profile</span></span>  
 <span data-ttu-id="136b1-713">Tutti gli overload sono supportati in: 4, 3.5 SP1</span><span class="sxs-lookup"><span data-stu-id="136b1-713">All overloads are supported in: 4, 3.5 SP1</span></span>  
  
 <span data-ttu-id="136b1-714">Libreria di classi portabile</span><span class="sxs-lookup"><span data-stu-id="136b1-714">Portable Class Library</span></span>  
 <span data-ttu-id="136b1-715">Tutti gli overload sono supportati</span><span class="sxs-lookup"><span data-stu-id="136b1-715">All overloads are supported</span></span>  
  
 <span data-ttu-id="136b1-716">.NET per applicazioni Windows Store</span><span class="sxs-lookup"><span data-stu-id="136b1-716">.NET for Windows Store apps</span></span>  
 <span data-ttu-id="136b1-717">Tutti gli overload sono supportati in: Windows 8</span><span class="sxs-lookup"><span data-stu-id="136b1-717">All overloads are supported in: Windows 8</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.Math.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-718">Numero decimale da arrotondare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-718">A decimal number to be rounded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-719">Arrotonda un valore decimale al valore integrale più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-719">Rounds a decimal value to the nearest integral value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-720">Parametro più vicino all'intero <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-720">The integer nearest parameter <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="136b1-721">Se il componente frazionario di <paramref name="d" /> è a metà fra due interi, uno pari e uno dispari, viene restituito il numero pari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-721">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span>
          </span>
          <span data-ttu-id="136b1-722">Si noti che questo metodo restituisce <see cref="T:System.Decimal" /> anziché un tipo integrale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-722">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="136b1-723">Per esempi e informazioni sull'utilizzo complete su questo e altri overload del `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="136b1-723">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="136b1-724">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-724">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberSignature Language="F#" Value="static member Round : double -&gt; double" Usage="System.Math.Round a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="136b1-725">Numero a virgola mobile e precisione doppia da arrotondare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-725">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-726">Arrotonda un valore a virgola mobile e precisione doppia al valore integrale più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-726">Rounds a double-precision floating-point value to the nearest integral value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-727">Il <paramref name="a" /> più vicino all'intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-727">The integer nearest <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="136b1-728">Se il componente frazionario di <paramref name="a" /> è compreso tra due interi, di cui uno è pari e l'altro dispari, allora viene restituito il numero pari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-728">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span>
          </span>
          <span data-ttu-id="136b1-729">Si noti che questo metodo restituisce <see cref="T:System.Double" /> anziché un tipo integrale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-729">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="136b1-730">Per esempi e informazioni sull'utilizzo complete su questo e altri overload del `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="136b1-730">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="136b1-731">A causa della perdita di precisione che può essere causato da che rappresentano i valori decimali sotto forma di numeri a virgola mobile o esecuzione di operazioni aritmetiche su valori a virgola mobile, in alcuni casi il <see cref="M:System.Math.Round(System.Double)" /> metodo può non sembrare arrotondare i valori punto intermedio di intero pari più vicino.</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-731">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span>
            </span>
            <span data-ttu-id="136b1-732">Nell'esempio seguente, perché il valore a virgola mobile.1 non dispone di alcuna rappresentazione binaria finito, la prima chiamata al <see cref="M:System.Math.Round(System.Double)" /> metodo con un valore di dell'11,5 restituisce 11 invece di 12.</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-732">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span>
            </span>
            <span data-ttu-id="136b1-733">[! codice-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [! codice vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-733">[!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.Math.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-734">Numero decimale da arrotondare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-734">A decimal number to be rounded.</span>
          </span>
        </param>
        <param name="decimals">
          <span data-ttu-id="136b1-735">Numero di posizioni decimali nel valore restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-735">The number of decimal places in the return value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-736">Arrotonda un valore decimale a un numero di cifre frazionarie specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-736">Rounds a decimal value to a specified number of fractional digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-737">Numero più vicino a <paramref name="d" /> contenente un numero di cifre frazionarie pari a <paramref name="decimals" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-737">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="136b1-738">Per esempi e informazioni sull'utilizzo complete su questo e altri overload del `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="136b1-738">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="136b1-739">
            <paramref name="decimals" /> è minore di 0 o maggiore di 28.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-739">
              <paramref name="decimals" /> is less than 0 or greater than 28.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="136b1-740">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-740">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-741">Numero decimale da arrotondare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-741">A decimal number to be rounded.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="136b1-742">Spiegazione della modalità di arrotondamento di <c>d</c> se si trova a metà tra due numeri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-742">Specification for how to round <c>d</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-743">Arrotonda un valore decimale all'intero più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-743">Rounds a decimal value to the nearest integer.</span>
          </span>
          <span data-ttu-id="136b1-744">Un parametro specifica come arrotondare il valore se si trova a metà tra due numeri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-744">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-745">Il <paramref name="d" /> più vicino all'intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-745">The integer nearest <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="136b1-746">Se <paramref name="d" /> è contenuto tra due numeri, di cui per definizione uno è pari e l'altro dispari, <paramref name="mode" /> determina quale dei due numeri deve essere restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-746">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="136b1-747">Per esempi e informazioni sull'utilizzo complete su questo e altri overload del `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="136b1-747">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="136b1-748">
            <paramref name="mode" /> non è un valore valido di <see cref="T:System.MidpointRounding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-748">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="136b1-749">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-749">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberSignature Language="F#" Value="static member Round : double * int -&gt; double" Usage="System.Math.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-750">Numero a virgola mobile e precisione doppia da arrotondare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-750">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="136b1-751">Numero di cifre frazionarie nel valore restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-751">The number of fractional digits in the return value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-752">Arrotonda un valore a virgola mobile e precisione doppia a un numero di cifre frazionarie specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-752">Rounds a double-precision floating-point value to a specified number of fractional digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-753">Numero più vicino a <paramref name="value" /> contenente un numero di cifre frazionarie pari a <paramref name="digits" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-753">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="136b1-754">Per esempi e informazioni sull'utilizzo complete su questo e altri overload del `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="136b1-754">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="136b1-755">
            <paramref name="digits" /> è minore di 0 o maggiore di 15.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-755">
              <paramref name="digits" /> is less than 0 or greater than 15.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="136b1-756">A causa della perdita di precisione che può essere causato da che rappresentano i valori decimali sotto forma di numeri a virgola mobile o esecuzione di operazioni aritmetiche su valori a virgola mobile, in alcuni casi il <see cref="M:System.Math.Round(System.Double,System.Int32)" /> metodo può non sembrare arrotondare i valori punto intermedio di più vicino al valore anche nel <paramref name="digits" /> posizione decimale.</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-756">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span>
            </span>
            <span data-ttu-id="136b1-757">Questa operazione è illustrata nell'esempio seguente, dove 2,135 viene arrotondato a 2.13 anziché 2.14.</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-757">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span>
            </span>
            <span data-ttu-id="136b1-758">Ciò si verifica perché internamente il metodo Moltiplica <paramref name="value" /> da 10<sup>cifre</sup>, e l'operazione di moltiplicazione in questo caso presenta una perdita di precisione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-758">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span>
            </span>
            <span data-ttu-id="136b1-759">[! codice-csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [! codice vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-759">[!code-csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * MidpointRounding -&gt; double" Usage="System.Math.Round (value, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-760">Numero a virgola mobile e precisione doppia da arrotondare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-760">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="136b1-761">Spiegazione della modalità di arrotondamento di <c>value</c> se si trova a metà tra due numeri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-761">Specification for how to round <c>value</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-762">Arrotonda un valore a virgola mobile e precisione doppia all'intero più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-762">Rounds a double-precision floating-point value to the nearest integer.</span>
          </span>
          <span data-ttu-id="136b1-763">Un parametro specifica come arrotondare il valore se si trova a metà tra due numeri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-763">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-764">Il <paramref name="value" /> più vicino all'intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-764">The integer nearest <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="136b1-765">Se <paramref name="value" /> è contenuto tra due interi, di cui per definizione uno è pari e l'altro dispari, <paramref name="mode" /> determina quale dei due numeri deve essere restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-765">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="136b1-766">Per esempi e informazioni sull'utilizzo complete su questo e altri overload del `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="136b1-766">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="136b1-767">
            <paramref name="mode" /> non è un valore valido di <see cref="T:System.MidpointRounding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-767">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="136b1-768">A causa della perdita di precisione che può essere causato da che rappresentano i valori decimali sotto forma di numeri a virgola mobile o esecuzione di operazioni aritmetiche su valori a virgola mobile, in alcuni casi il <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> metodo può non sembrare arrotondare i valori punto intermedio di intero pari più vicino.</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-768">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span>
            </span>
            <span data-ttu-id="136b1-769">Nell'esempio seguente, perché il valore a virgola mobile.1 non dispone di alcuna rappresentazione binaria finito, la prima chiamata al <see cref="M:System.Math.Round(System.Double)" /> metodo con un valore di dell'11,5 restituisce 11 invece di 12.</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-769">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span>
            </span>
            <span data-ttu-id="136b1-770">[! codice-csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [! codice vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-770">[!code-csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-771">Numero decimale da arrotondare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-771">A decimal number to be rounded.</span>
          </span>
        </param>
        <param name="decimals">
          <span data-ttu-id="136b1-772">Numero di posizioni decimali nel valore restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-772">The number of decimal places in the return value.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="136b1-773">Spiegazione della modalità di arrotondamento di <c>d</c> se si trova a metà tra due numeri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-773">Specification for how to round <c>d</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-774">Arrotonda un valore decimale a un numero di cifre frazionarie specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-774">Rounds a decimal value to a specified number of fractional digits.</span>
          </span>
          <span data-ttu-id="136b1-775">Un parametro specifica come arrotondare il valore se si trova a metà tra due numeri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-775">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-776">Numero più vicino a <paramref name="d" /> contenente un numero di cifre frazionarie pari a <paramref name="decimals" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-776">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span>
          </span>
          <span data-ttu-id="136b1-777">Se <paramref name="d" /> ha meno cifre frazionarie di <paramref name="decimals" />, <paramref name="d" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-777">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="136b1-778">Per esempi e informazioni sull'utilizzo complete su questo e altri overload del `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="136b1-778">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="136b1-779">
            <paramref name="decimals" /> è minore di 0 o maggiore di 28.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-779">
              <paramref name="decimals" /> is less than 0 or greater than 28.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="136b1-780">
            <paramref name="mode" /> non è un valore valido di <see cref="T:System.MidpointRounding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-780">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="136b1-781">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-781">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * int * MidpointRounding -&gt; double" Usage="System.Math.Round (value, digits, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-782">Numero a virgola mobile e precisione doppia da arrotondare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-782">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="136b1-783">Numero di cifre frazionarie nel valore restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-783">The number of fractional digits in the return value.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="136b1-784">Spiegazione della modalità di arrotondamento di <c>value</c> se si trova a metà tra due numeri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-784">Specification for how to round <c>value</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-785">Arrotonda un valore a virgola mobile e precisione doppia a un numero di cifre frazionarie specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-785">Rounds a double-precision floating-point value to a specified number of fractional digits.</span>
          </span>
          <span data-ttu-id="136b1-786">Un parametro specifica come arrotondare il valore se si trova a metà tra due numeri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-786">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-787">Numero più vicino a <paramref name="value" /> contenente un numero di cifre frazionarie pari a <paramref name="digits" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-787">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span>
          </span>
          <span data-ttu-id="136b1-788">Se <paramref name="value" /> ha meno cifre frazionarie di <paramref name="digits" />, <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-788">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="136b1-789">Per esempi e informazioni sull'utilizzo complete su questo e altri overload del `Round` metodo, vedere il <xref:System.Math.Round%2A> pagina di riferimento.</span><span class="sxs-lookup"><span data-stu-id="136b1-789">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="136b1-790">
            <paramref name="digits" /> è minore di 0 o maggiore di 15.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-790">
              <paramref name="digits" /> is less than 0 or greater than 15.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="136b1-791">
            <paramref name="mode" /> non è un valore valido di <see cref="T:System.MidpointRounding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-791">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="136b1-792">A causa della perdita di precisione che può essere causato da che rappresentano i valori decimali sotto forma di numeri a virgola mobile o esecuzione di operazioni aritmetiche su valori a virgola mobile, in alcuni casi il <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> metodo può non sembrare arrotondare i valori del punto centrale specificato per il <paramref name="mode" /> parametro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-792">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span>
            </span>
            <span data-ttu-id="136b1-793">Questa operazione è illustrata nell'esempio seguente, dove 2,135 viene arrotondato a 2.13 anziché 2.14.</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-793">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span>
            </span>
            <span data-ttu-id="136b1-794">Ciò si verifica perché internamente il metodo Moltiplica <paramref name="value" /> da 10<sup>cifre</sup>, e l'operazione di moltiplicazione in questo caso presenta una perdita di precisione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-794">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span>
            </span>
            <span data-ttu-id="136b1-795">[! codice-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [! codice vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="136b1-795">[!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-796">Restituisce un intero che indica il segno di un numero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-796">Returns an integer that indicates the sign of a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Sign : decimal -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-797">Numero decimale con segno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-797">A signed decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-798">Restituisce un intero che indica il segno di un numero decimale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-798">Returns an integer that indicates the sign of a decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-799">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-799">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="136b1-800">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-800">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-801">Significato</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-801">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-802">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-802">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-803">
                  <paramref name="value" /> è minore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-803">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-804">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-804">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-805">
                  <paramref name="value" /> è uguale a zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-805">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-806">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-806">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-807">
                  <paramref name="value" /> è maggiore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-807">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-808">L'esempio seguente illustra come usare il <xref:System.Math.Sign%28System.Decimal%29> metodo per determinare il segno di un <xref:System.Decimal> valore e visualizzarlo sulla console.</span><span class="sxs-lookup"><span data-stu-id="136b1-808">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberSignature Language="F#" Value="static member Sign : double -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-809">Numero con segno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-809">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-810">Restituisce un intero che indica il segno di un numero a virgola mobile e a precisione doppia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-810">Returns an integer that indicates the sign of a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-811">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-811">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="136b1-812">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-812">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-813">Significato</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-813">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-814">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-814">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-815">
                  <paramref name="value" /> è minore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-815">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-816">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-816">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-817">
                  <paramref name="value" /> è uguale a zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-817">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-818">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-818">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-819">
                  <paramref name="value" /> è maggiore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-819">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-820">L'esempio seguente illustra come usare il <xref:System.Math.Sign%28System.Double%29> metodo per determinare il segno di un <xref:System.Double> valore e visualizzarlo sulla console.</span><span class="sxs-lookup"><span data-stu-id="136b1-820">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="136b1-821">
            <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-821">
              <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberSignature Language="F#" Value="static member Sign : int16 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-822">Numero con segno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-822">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-823">Restituisce un intero che indica il segno di un intero con firma a 16 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-823">Returns an integer that indicates the sign of a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-824">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-824">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="136b1-825">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-825">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-826">Significato</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-826">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-827">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-827">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-828">
                  <paramref name="value" /> è minore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-828">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-829">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-829">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-830">
                  <paramref name="value" /> è uguale a zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-830">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-831">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-831">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-832">
                  <paramref name="value" /> è maggiore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-832">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-833">L'esempio seguente illustra come usare il <xref:System.Math.Sign%28System.Int16%29> metodo per determinare il segno di un <xref:System.Int16> valore e visualizzarlo sulla console.</span><span class="sxs-lookup"><span data-stu-id="136b1-833">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberSignature Language="F#" Value="static member Sign : int -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-834">Numero con segno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-834">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-835">Restituisce un intero che indica il segno di un intero con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-835">Returns an integer that indicates the sign of a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-836">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-836">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="136b1-837">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-837">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-838">Significato</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-838">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-839">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-839">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-840">
                  <paramref name="value" /> è minore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-840">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-841">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-841">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-842">
                  <paramref name="value" /> è uguale a zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-842">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-843">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-843">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-844">
                  <paramref name="value" /> è maggiore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-844">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-845">L'esempio seguente illustra come usare il <xref:System.Math.Sign%28System.Int32%29> metodo per determinare il segno di un <xref:System.Int32> valore e visualizzarlo sulla console.</span><span class="sxs-lookup"><span data-stu-id="136b1-845">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberSignature Language="F#" Value="static member Sign : int64 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-846">Numero con segno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-846">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-847">Restituisce un intero che indica il segno di un intero con segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-847">Returns an integer that indicates the sign of a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-848">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-848">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="136b1-849">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-849">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-850">Significato</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-850">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-851">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-851">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-852">
                  <paramref name="value" /> è minore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-852">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-853">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-853">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-854">
                  <paramref name="value" /> è uguale a zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-854">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-855">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-855">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-856">
                  <paramref name="value" /> è maggiore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-856">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-857">L'esempio seguente illustra come usare il <xref:System.Math.Sign%28System.Int64%29> metodo per determinare il segno di un <xref:System.Int64> valore e visualizzarlo sulla console.</span><span class="sxs-lookup"><span data-stu-id="136b1-857">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Sign : sbyte -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-858">Numero con segno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-858">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-859">Restituisce un intero che indica il segno di un intero con segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-859">Returns an integer that indicates the sign of an 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-860">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-860">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="136b1-861">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-861">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-862">Significato</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-862">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-863">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-863">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-864">
                  <paramref name="value" /> è minore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-864">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-865">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-865">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-866">
                  <paramref name="value" /> è uguale a zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-866">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-867">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-867">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-868">
                  <paramref name="value" /> è maggiore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-868">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-869">L'esempio seguente illustra come usare il <xref:System.Math.Sign%28System.SByte%29> metodo per determinare il segno di un <xref:System.SByte> valore e visualizzarlo sulla console.</span><span class="sxs-lookup"><span data-stu-id="136b1-869">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberSignature Language="F#" Value="static member Sign : single -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-870">Numero con segno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-870">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-871">Restituisce un intero che indica il segno di un numero a virgola mobile e a precisione singola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-871">Returns an integer that indicates the sign of a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-872">Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-872">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="136b1-873">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-873">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-874">Significato</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-874">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-875">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-875">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-876">
                  <paramref name="value" /> è minore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-876">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-877">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-877">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-878">
                  <paramref name="value" /> è uguale a zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-878">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-879">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-879">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-880">
                  <paramref name="value" /> è maggiore di zero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-880">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-881">L'esempio seguente illustra come usare il <xref:System.Math.Sign%28System.Single%29> metodo per determinare il segno di un <xref:System.Single> valore e visualizzarlo sulla console.</span><span class="sxs-lookup"><span data-stu-id="136b1-881">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="136b1-882">
            <paramref name="value" /> è uguale a <see cref="F:System.Single.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-882">
              <paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberSignature Language="F#" Value="static member Sin : double -&gt; double" Usage="System.Math.Sin a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="136b1-883">Angolo, espresso in radianti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-883">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-884">Restituisce il seno dell'angolo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-884">Returns the sine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-885">Seno di <paramref name="a" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-885">The sine of <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="136b1-886">Se <paramref name="a" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-886">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-887">L'angolo, `a`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-887">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="136b1-888">Moltiplicata per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-888">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="136b1-889">I valori accettabili per `a` compreso tra circa -9223372036854775295 e circa 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="136b1-889">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="136b1-890">Per i valori di fuori di questo intervallo, il <xref:System.Math.Sin%2A> restituzione del metodo `a` invariata anziché generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="136b1-890">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-891">L'esempio seguente usa <xref:System.Math.Sin%2A> per valutare trigonometrico identità per gli angoli selezionati.</span><span class="sxs-lookup"><span data-stu-id="136b1-891">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberSignature Language="F#" Value="static member Sinh : double -&gt; double" Usage="System.Math.Sinh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-892">Angolo, espresso in radianti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-892">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-893">Restituisce il seno iperbolico dell'angolo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-893">Returns the hyperbolic sine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-894">Seno iperbolico di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-894">The hyperbolic sine of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="136b1-895">Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NaN" />, verrà restituito dal metodo un oggetto <see cref="T:System.Double" /> uguale a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-895">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-896">L'angolo, `value`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-896">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="136b1-897">Moltiplicata per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-897">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-898">L'esempio seguente usa <xref:System.Math.Sinh%2A> per valutare iperbolica identità per i valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="136b1-898">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberSignature Language="F#" Value="static member Sqrt : double -&gt; double" Usage="System.Math.Sqrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-899">Numero di cui è necessario trovare la radice quadrata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-899">The number whose square root is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-900">Restituisce la radice quadrata del numero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-900">Returns the square root of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-901">Uno dei valori della tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-901">One of the values in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="136b1-902">Parametro <paramref name="d" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-902">
                    <paramref name="d" /> parameter</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-903">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-903">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="136b1-904">Zero o positivo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-904">Zero or positive</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="136b1-905">Radice quadrata positiva di <paramref name="d" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-905">The positive square root of <paramref name="d" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-906">Negativo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-906">Negative</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-907">Uguale a <see cref="F:System.Double.NaN" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-907">Equals <see cref="F:System.Double.NaN" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="136b1-908">Uguale a <see cref="F:System.Double.PositiveInfinity" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-908">Equals <see cref="F:System.Double.PositiveInfinity" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="136b1-909">La radice quadrata dell'area di un quadrato rappresenta la lunghezza di qualsiasi lato del quadrato.</span><span class="sxs-lookup"><span data-stu-id="136b1-909">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="136b1-910">Nell'esempio seguente viene visualizzata l'area di alcune città negli Stati Uniti e offre una visione di dimensioni di ogni città se sono stati rappresentata da un quadrato.</span><span class="sxs-lookup"><span data-stu-id="136b1-910">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberSignature Language="F#" Value="static member Tan : double -&gt; double" Usage="System.Math.Tan a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="136b1-911">Angolo, espresso in radianti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-911">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-912">Restituisce la tangente dell'angolo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-912">Returns the tangent of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-913">Tangente di <paramref name="a" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-913">The tangent of <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="136b1-914">Se <paramref name="a" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-914">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-915">L'angolo, `a`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-915">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="136b1-916">Moltiplicata per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-916">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-917">Nell'esempio seguente viene illustrato come calcolare la tangente di un angolo e visualizzarlo sulla console.</span><span class="sxs-lookup"><span data-stu-id="136b1-917">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberSignature Language="F#" Value="static member Tanh : double -&gt; double" Usage="System.Math.Tanh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="136b1-918">Angolo, espresso in radianti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-918">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-919">Restituisce la tangente iperbolica dell'angolo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-919">Returns the hyperbolic tangent of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-920">Tangente iperbolica di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-920">The hyperbolic tangent of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="136b1-921">Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NegativeInfinity" />, il metodo restituirà -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-921">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span>
          </span>
          <span data-ttu-id="136b1-922">Se il valore è uguale a <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituirà 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-922">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span>
          </span>
          <span data-ttu-id="136b1-923">Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-923">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-924">L'angolo, `value`, deve essere espresso in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-924">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="136b1-925">Moltiplicata per  <xref:System.Math.PI?displayProperty=nameWithType> /180 per convertire i gradi in radianti.</span><span class="sxs-lookup"><span data-stu-id="136b1-925">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-926">L'esempio seguente usa <xref:System.Math.Tanh%2A> per valutare determinate identità tangente iperbolica per i valori selezionati.</span><span class="sxs-lookup"><span data-stu-id="136b1-926">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="136b1-927">Calcola la parte integrale di un numero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-927">Calculates the integral part of a number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-928">Il numero viene arrotondato per difetto all'intero più vicino.</span><span class="sxs-lookup"><span data-stu-id="136b1-928">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-929">Numero da troncare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-929">A number to truncate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-930">Calcola la parte integrale di un numero decimale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-930">Calculates the integral part of a specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-931">Parte integrale di <paramref name="d" />, vale a dire il numero che rimane dopo l'eliminazione delle cifre frazionarie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-931">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-932"><xref:System.Math.Truncate%2A> Consente di arrotondare `d` all'intero più vicino allo zero.</span><span class="sxs-lookup"><span data-stu-id="136b1-932"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-933">L'esempio seguente chiama il <xref:System.Math.Truncate%28System.Decimal%29> metodo troncare sia un numero positivo e negativo <xref:System.Decimal> valore.</span><span class="sxs-lookup"><span data-stu-id="136b1-933">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberSignature Language="F#" Value="static member Truncate : double -&gt; double" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="136b1-934">Numero da troncare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-934">A number to truncate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b1-935">Calcola la parte integrale di un numero a virgola mobile e precisione doppia specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-935">Calculates the integral part of a specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b1-936">La parte integrale di <paramref name="d" />, vale a dire il numero che rimane dopo l'eliminazione delle cifre frazionarie o uno dei valori elencati nella seguente tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b1-936">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <paramref name="d" />
              </term>
              <description>
                <span data-ttu-id="136b1-937">Valore restituito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="136b1-937">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <see cref="F:System.Double.NaN" />
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <see cref="F:System.Double.NegativeInfinity" />
              </term>
              <description>
                <see cref="F:System.Double.NegativeInfinity" />
              </description>
            </item>
            <item>
              <term>
                <see cref="F:System.Double.PositiveInfinity" />
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b1-938"><xref:System.Math.Truncate%2A> Consente di arrotondare `d` all'intero più vicino allo zero.</span><span class="sxs-lookup"><span data-stu-id="136b1-938"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="136b1-939">L'esempio seguente chiama il <xref:System.Math.Truncate%28System.Double%29> metodo troncare sia un numero positivo e negativo <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="136b1-939">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>