<Type Name="DateTimeOffset" FullName="System.DateTimeOffset">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68a6dc4ee708c62b7b5cebb7b8adef44e1d6efe7" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52737399" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeOffset extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.DateTimeOffset&gt;, class System.IEquatable`1&lt;valuetype System.DateTimeOffset&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.DateTimeOffset" />
  <TypeSignature Language="VB.NET" Value="Public Structure DateTimeOffset&#xA;Implements IComparable, IComparable(Of DateTimeOffset), IDeserializationCallback, IEquatable(Of DateTimeOffset), IFormattable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type DateTimeOffset = struct&#xA;    interface IFormattable&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTimeOffset&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTimeOffset&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una data e un'ora, in genere espresse come data e ora del giorno rispetto all'ora UTC (Coordinated Universal Time).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset> struttura include un <xref:System.DateTime> valore, insieme a un <xref:System.DateTimeOffset.Offset%2A> proprietà che definisce la differenza tra l'oggetto corrente <xref:System.DateTimeOffset> data e ora e Coordinated Universal Time (UTC) dell'istanza. Dal momento che definisce esattamente una data e ora rispetto all'ora UTC, il <xref:System.DateTimeOffset> struttura non include un `Kind` membro, come il <xref:System.DateTime> struttura esegue. Rappresenta le date e ore con valori i cui UTC è compreso tra 12:00:00 mezzanotte del 1 ° gennaio 0001 cristiana DC (Era), a 11:: 59 le ore 23.59.59 del 31 dicembre 9999 D.C. (C.E.).  
  
 Il componente ora di un <xref:System.DateTimeOffset> valore viene misurato in unità di 100 nanosecondi denominate segni di graduazione e una determinata data è il numero di tick trascorsi dalla mezzanotte 12:00 del 1 ° gennaio 0001 D.C. (C.E.) nel <xref:System.Globalization.GregorianCalendar> calendario. Oggetto <xref:System.DateTimeOffset> valore è espresso sempre nel contesto di un'esplicita o calendario predefinito. Segni di graduazione sono attribuibili a secondi intercalari non sono inclusi il numero totale di segni di graduazione.  
  
> [!NOTE]
>  Se si lavora con un valore di tick che si desidera convertire in altro intervallo di tempo, ad esempio minuti o secondi, è consigliabile usare la <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>, o <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> costante per eseguire la conversione. Ad esempio, per aggiungere il numero di secondi rappresentato da un numero specificato di segni di graduazione per le <xref:System.DateTimeOffset.Second%2A> componente di un <xref:System.DateTimeOffset> valore, è possibile usare l'espressione `dateValue.Second + nTicks/Timespan.TicksPerSecond`.  
  
 Sebbene un <xref:System.DateTimeOffset> valore include un offset, non è una struttura di dati completamente compatibile con fuso orario. Mentre un offset rispetto all'ora UTC è una caratteristica di un fuso orario, non identifica in modo non ambiguo un fuso orario. Non solo fusi orari diversi condividono lo stesso offset rispetto all'ora UTC, ma l'offset di un singolo fuso orario viene modificato se utilizza l'ora legale. Ciò significa che, subito dopo un <xref:System.DateTimeOffset> valore viene dissociato dal proprio fuso orario, non può essere collegato non è più in modo non ambiguo al proprio fuso orario originale.  
  
 In quanto <xref:System.DateTimeOffset> è una struttura, un <xref:System.DateTimeOffset> oggetto che è stato dichiarato ma non altrimenti inizializzato contiene i valori predefiniti per ognuno dei relativi campi membro. Ciò significa che relativi <xref:System.DateTimeOffset.DateTime%2A> è impostata su <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> e il relativo <xref:System.DateTimeOffset.Offset%2A> è impostata su <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.  
  
 È possibile creare una nuova <xref:System.DateTimeOffset> valore chiamando uno degli overload del costruttore, che sono simili ai costruttori di overload per il <xref:System.DateTime> struttura. È anche possibile creare una nuova <xref:System.DateTimeOffset> valore assegnando alla VM un <xref:System.DateTime> valore. Si tratta di una conversione implicita; non richiede un operatore di cast (in c#) o le chiamate a un metodo di conversione (in Visual Basic). È anche possibile inizializzare un <xref:System.DateTimeOffset> valore dalla rappresentazione di stringa di data e ora tramite la chiamata di un numero di analisi ai metodi, che comprendono delle stringhe statiche <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.ParseExact%2A>, <xref:System.DateTimeOffset.TryParse%2A>, e <xref:System.DateTimeOffset.TryParseExact%2A>.  
  
 I membri del <xref:System.DateTimeOffset> struttura forniscono funzionalità nelle aree seguenti:  
  
-   Data e ora aritmetico.  
  
     È possibile aggiungere o sottrarre le date o intervalli di tempo da una particolare <xref:System.DateTimeOffset> valore. Operazioni aritmetiche con <xref:System.DateTimeOffset> valori, a differenza di quelli con <xref:System.DateTime> valori, regolare le differenze negli offset dell'ora quando viene restituito un risultato. Ad esempio, il codice seguente usa <xref:System.DateTime> variabili da cui sottrarre l'ora locale corrente dall'ora UTC corrente. Il codice Usa quindi <xref:System.DateTimeOffset> variabili per eseguire la stessa operazione. La sottrazione con <xref:System.DateTime> valori restituisce la differenza del fuso orario locale rispetto a UTC, mentre la sottrazione con <xref:System.DateTimeOffset> valori restituisce <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.  
  
     [!code-csharp[System.DateTimeOffset.Type#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Type/cs/Type.cs#1)]
     [!code-vb[System.DateTimeOffset.Type#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Type/vb/Type.vb#1)]  
  
-   Tipo di operazioni di conversione.  
  
     È possibile convertire <xref:System.DateTimeOffset> valori <xref:System.DateTimeOffset.DateTime%2A> valori e viceversa.  
  
-   Operazioni di estrazione e manipolazione ora.  
  
     È possibile estrarre la data o l'ora di un <xref:System.DateTimeOffset> valore. È anche possibile recuperare il valore di un determinato <xref:System.DateTimeOffset> componente, ad esempio l'anno o mese.  
  
-   Conversione di data e ora.  
  
     È possibile convertire qualsiasi <xref:System.DateTimeOffset> a un altro valore <xref:System.DateTimeOffset> valore che rappresenta lo stesso punto nel tempo in un altro fuso orario. Tuttavia, le regole di rettifica del fuso orario vengono applicate solo nel caso del <xref:System.DateTimeOffset.ToLocalTime%2A> metodo, che converte un <xref:System.DateTimeOffset> valore per la data e ora nella zona di sistema locale.  
  
-   Confronto di data e ora.  
  
     È possibile determinare se un particolare <xref:System.DateTimeOffset> valore è precedente, uguale o successiva rispetto a un altro <xref:System.DateTimeOffset> valore. Prima di eseguita il confronto, tutti i valori vengono convertiti in UTC.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/datetime/choosing-between-datetime.md">Scelta tra DateTime, DateTimeOffset, TimeSpan e TimeZoneInfo</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">Esempio: Utilità di formattazione in .NET Framework 4</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : DateTime -&gt; DateTimeOffset" Usage="new System.DateTimeOffset dateTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime">Data e ora.</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando il valore <see cref="T:System.DateTime" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comportamento di questo costruttore dipende dal valore della <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> proprietà del `dateTime` parametro:  
  
-   Se il valore di <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> viene <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, il <xref:System.DateTimeOffset.DateTime%2A> proprietà della nuova istanza è uguale a `dateTime`e il <xref:System.DateTimeOffset.Offset%2A> viene impostata su <xref:System.TimeSpan.Zero>.  
  
-   Se il valore di <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> viene <xref:System.DateTimeKind.Local?displayProperty=nameWithType> oppure <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, il <xref:System.DateTimeOffset.DateTime%2A> proprietà della nuova istanza è uguale a `dateTime`e il <xref:System.DateTimeOffset.Offset%2A> proprietà è uguale all'offset del fuso orario corrente del sistema locale.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come il valore della <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> proprietà del `dateTime` parametro ha effetto sul valore di data e ora restituito da questo costruttore.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#1)]
 [!code-vb[System.DateTimeOffset.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora UTC (Coordinated Universal Time) risultanti dall'applicazione dell'offset sono precedenti a <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
La data e l'ora UTC risultanti dall'applicazione dell'offset sono successive a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Creazione di un'istanza di un oggetto DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (DateTime dateTime, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime dateTime, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(DateTime dateTime, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : DateTime * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (dateTime, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dateTime">Data e ora.</param>
        <param name="offset">Offset dell'ora rispetto all'ora UTC (Coordinated Universal Time).</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando il valore e l'offset della struttura <see cref="T:System.DateTime" /> specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comportamento di questo costruttore dipende in parte sul valore della <xref:System.DateTime.Kind%2A> proprietà del `dateTime` parametro:  
  
-   Se il valore di <xref:System.DateTime.Kind%2A> viene <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, il valore della `offset` parametro deve essere 0 o un <xref:System.ArgumentException> viene generata un'eccezione.  
  
-   Se il valore di <xref:System.DateTime.Kind%2A> viene <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, il valore della `offset` parametro deve essere uguale all'offset del fuso orario locale dall'ora Coordinated Universal Time (UTC) per tale data particolare o un <xref:System.ArgumentException> viene generata un'eccezione.  
  
-   Se il valore di <xref:System.DateTime.Kind%2A> viene <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, il `offset` parametro può avere qualsiasi valore valido.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come inizializzare un <xref:System.DateTimeOffset> oggetto con una data e ora e l'offset del fuso orario locale quando tale fuso orario non è noto in anticipo.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#3)]
 [!code-vb[System.DateTimeOffset.Constructors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dateTime.Kind" /> è uguale a <see cref="F:System.DateTimeKind.Utc" /> e <paramref name="offset" /> non è uguale a zero.  
  
oppure 
 <paramref name="dateTime.Kind" /> è uguale a <see cref="F:System.DateTimeKind.Local" /> e <paramref name="offset" /> non è uguale all'offset del fuso orario locale del sistema.  
  
oppure 
 <paramref name="offset" /> non è specificato in minuti interi.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> è minore di -14 ore o maggiore di 14 ore.  
  
oppure 
 <see cref="P:System.DateTimeOffset.UtcDateTime" /> è minore di <see cref="F:System.DateTimeOffset.MinValue" /> o maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Creazione di un'istanza di un oggetto DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (long ticks, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(long ticks, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int64 * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (ticks, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ticks">Data e ora espresse come numero di intervalli da 100 nanosecondi trascorsi dalle ore 12.00.00, mezzanotte del 1 gennaio 0001.</param>
        <param name="offset">Offset dell'ora rispetto all'ora UTC (Coordinated Universal Time).</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando il numero di tick e l'offset specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, il tentativo di chiamare il <xref:System.DateTimeOffset.%23ctor%2A> costruttore per creare un'istanza di un <xref:System.DateTimeOffset> valore con un'ora locale e un offset oltre che dell'ora locale zona genera un <xref:System.ArgumentException>. È possibile utilizzare questo overload del metodo di <xref:System.DateTimeOffset> costruttore per aggirare questa limitazione. L'esempio seguente usa il numero dell'ora locale dei segni di graduazione per creare un'istanza di un <xref:System.DateTimeOffset> valore il cui offset non indica necessariamente che dell'ora locale:  
  
 [!code-csharp[System.DateTimeOffset.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#4)]
 [!code-vb[System.DateTimeOffset.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#4)]  
  
   
  
## Examples  
 Nell'esempio seguente viene inizializzato un <xref:System.DateTimeOffset> oggetto utilizzando il numero di tick in una data arbitraria (in questo caso, 16 luglio 2007, 1:32 PM) con un offset pari a -5.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#2)]
 [!code-vb[System.DateTimeOffset.Constructors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> non è specificato in minuti interi.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La proprietà <see cref="P:System.DateTimeOffset.UtcDateTime" /> è precedente a <see cref="F:System.DateTimeOffset.MinValue" /> o successiva a <see cref="F:System.DateTimeOffset.MaxValue" />.  
  
oppure 
 <paramref name="ticks" /> è minore di <see langword="DateTimeOffset.MinValue.Ticks" /> o maggiore di <see langword="DateTimeOffset.MaxValue.Ticks" />.  
  
oppure 
 <paramref name="Offset" /> è minore di -14 ore o maggiore di 14 ore.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Creazione di un'istanza di un oggetto DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year">Anno (da 1 a 9999).</param>
        <param name="month">Mese (da 1 a 12).</param>
        <param name="day">Giorno (da 1 al numero di giorni in <paramref name="month" />).</param>
        <param name="hour">Ore (da 0 a 23).</param>
        <param name="minute">Minuti (da 0 a 59).</param>
        <param name="second">Secondi (da 0 a 59).</param>
        <param name="offset">Offset dell'ora rispetto all'ora UTC (Coordinated Universal Time).</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando l'anno, il mese, il giorno, l'ora, il minuto, il secondo e l'offset specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore interpreta `year`, `month`, e `day` come un anno, mese e giorno del calendario gregoriano. Creare un'istanza di un <xref:System.DateTimeOffset> valore usando l'anno, mese e giorno in un altro calendario, chiamare il <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> costruttore.  
  
   
  
## Examples  
 Nell'esempio seguente crea una <xref:System.DateTimeOffset> oggetto utilizzando il <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType> overload del costruttore.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#5)]
 [!code-vb[System.DateTimeOffset.Constructors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> non rappresenta minuti interi.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> è minore di 1 o maggiore di 9999.  
  
oppure 
 <paramref name="month" /> è minore di 1 o maggiore di 12.  
  
oppure 
 <paramref name="day" /> è minore di 1 o maggiore del numero di giorni in <paramref name="month" />.  
  
oppure 
 <paramref name="hour" /> è minore di zero o maggiore di 23.  
  
oppure 
 <paramref name="minute" /> è minore di 0 o maggiore di 59.  
  
oppure 
 <paramref name="second" /> è minore di 0 o maggiore di 59.  
  
oppure 
 <paramref name="offset" /> è minore di -14 ore o maggiore di 14 ore.  
  
oppure 
La proprietà <see cref="P:System.DateTimeOffset.UtcDateTime" /> è precedente a <see cref="F:System.DateTimeOffset.MinValue" /> o successiva a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Creazione di un'istanza di un oggetto DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * int * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, millisecond, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year">Anno (da 1 a 9999).</param>
        <param name="month">Mese (da 1 a 12).</param>
        <param name="day">Giorno (da 1 al numero di giorni in <paramref name="month" />).</param>
        <param name="hour">Ore (da 0 a 23).</param>
        <param name="minute">Minuti (da 0 a 59).</param>
        <param name="second">Secondi (da 0 a 59).</param>
        <param name="millisecond">Millisecondi (da 0 a 999).</param>
        <param name="offset">Offset dell'ora rispetto all'ora UTC (Coordinated Universal Time).</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando l'anno, il mese, il giorno, l'ora, il minuto, il secondo, il millisecondo e l'offset specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore interpreta `year`, `month`, e `day` come un anno, mese e giorno del calendario gregoriano. Creare un'istanza di un <xref:System.DateTimeOffset> valore usando l'anno, mese e giorno in un altro calendario, chiamare il <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> costruttore.  
  
   
  
## Examples  
 Nell'esempio seguente crea una <xref:System.DateTimeOffset> oggetto utilizzando il <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType> overload del costruttore.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#7)]
 [!code-vb[System.DateTimeOffset.Constructors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> non rappresenta minuti interi.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> è minore di 1 o maggiore di 9999.  
  
oppure 
 <paramref name="month" /> è minore di 1 o maggiore di 12.  
  
oppure 
 <paramref name="day" /> è minore di 1 o maggiore del numero di giorni in <paramref name="month" />.  
  
oppure 
 <paramref name="hour" /> è minore di zero o maggiore di 23.  
  
oppure 
 <paramref name="minute" /> è minore di 0 o maggiore di 59.  
  
oppure 
 <paramref name="second" /> è minore di 0 o maggiore di 59.  
  
oppure 
 <paramref name="millisecond" /> è minore di 0 o maggiore di 999.  
  
oppure 
 <paramref name="offset" /> è minore di -14 o maggiore di 14.  
  
oppure 
La proprietà <see cref="P:System.DateTimeOffset.UtcDateTime" /> è precedente a <see cref="F:System.DateTimeOffset.MinValue" /> o successiva a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Creazione di un'istanza di un oggetto DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * int * System.Globalization.Calendar * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, millisecond, calendar, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year">Anno.</param>
        <param name="month">Mese (da 1 a 12).</param>
        <param name="day">Giorno (da 1 al numero di giorni in <paramref name="month" />).</param>
        <param name="hour">Ore (da 0 a 23).</param>
        <param name="minute">Minuti (da 0 a 59).</param>
        <param name="second">Secondi (da 0 a 59).</param>
        <param name="millisecond">Millisecondi (da 0 a 999).</param>
        <param name="calendar">Calendario usato per interpretare <paramref name="year" />, <paramref name="month" /> e <paramref name="day" />.</param>
        <param name="offset">Offset dell'ora rispetto all'ora UTC (Coordinated Universal Time).</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.DateTimeOffset" /> usando l'anno, il mese, il giorno, l'ora, il minuto, il secondo, il millisecondo e l'offset specificati di un determinato calendario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `year`, `month`, `day`, `hour`, `minute`, `second`, e `millisecond` parametri riflettono i valori espressi nel calendario specificato da di `calendar` parametro. Se questi valori costituiscono una data e ora in cui non può essere espresse usando questo calendario, viene generata un'eccezione.  
  
   
  
## Examples  
 L'esempio seguente usa le istanze di entrambe le <xref:System.Globalization.HebrewCalendar> classe e il <xref:System.Globalization.HijriCalendar> classe per creare un'istanza di un <xref:System.DateTimeOffset> valore. Tale data viene quindi visualizzata nella console usando i rispettivi calendari e al calendario gregoriano.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#8)]
 [!code-vb[System.DateTimeOffset.Constructors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> non rappresenta minuti interi.</exception>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="calendar" /> non può essere <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> è minore dell'oggetto <see langword="MinSupportedDateTime.Year" /> del parametro <paramref name="calendar" /> o maggiore di <see langword="MaxSupportedDateTime.Year" />.  
  
oppure 
 <paramref name="month" /> è minore o maggiore del numero di mesi in <paramref name="year" /> nell'oggetto <paramref name="calendar" />.  
  
oppure 
 <paramref name="day" /> è minore di 1 o maggiore del numero di giorni in <paramref name="month" />.  
  
oppure 
 <paramref name="hour" /> è minore di zero o maggiore di 23.  
  
oppure 
 <paramref name="minute" /> è minore di 0 o maggiore di 59.  
  
oppure 
 <paramref name="second" /> è minore di 0 o maggiore di 59.  
  
oppure 
 <paramref name="millisecond" /> è minore di 0 o maggiore di 999.  
  
oppure 
 <paramref name="offset" /> è minore di -14 ore o maggiore di 14 ore.  
  
oppure 
I parametri <paramref name="year" />, <paramref name="month" /> e <paramref name="day" /> non possono essere rappresentati come valore di data e ora.  
  
oppure 
La proprietà <see cref="P:System.DateTimeOffset.UtcDateTime" /> è precedente a <see cref="F:System.DateTimeOffset.MinValue" /> o successiva a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Creazione di un'istanza di un oggetto DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public DateTimeOffset Add (TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset Add(valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Add(System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset Add(TimeSpan timeSpan);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.Add timeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeSpan">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta un intervallo di tempo positivo o negativo.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge un intervallo di tempo specificato al valore dell'istanza.</summary>
        <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e dell'intervallo di tempo rappresentato da <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare il <xref:System.DateTimeOffset.Add%2A> metodo per aggiungere più di un tipo di intervallo di tempo (giorni, ore, minuti, secondi o millisecondi) in un'unica operazione. Comportamento di questo metodo è identico all'operatore di addizione. Il <xref:System.DateTimeOffset> struttura supporta anche i metodi di aggiunta specializzati (ad esempio <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, e <xref:System.DateTimeOffset.AddMinutes%2A>) per ogni intervallo di tempo.  
  
> [!NOTE]
>  Questo metodo restituisce un nuovo <xref:System.DateTimeOffset> oggetto. Non modifica il valore dell'oggetto corrente aggiungendo `timeSpan` alla data e ora.  
  
 Il <xref:System.DateTimeOffset.Add%2A> metodo non influisce sul valore dell'oggetto corrente <xref:System.DateTimeOffset> dell'oggetto <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 Poiché un <xref:System.DateTimeOffset> oggetto non rappresenta la data e ora in un fuso orario specifico, il <xref:System.DateTimeOffset.Add%2A> metodo non prende in considerazione le regole di rettifica del fuso orario specifico durante l'esecuzione di data e ora aritmetico.  
  
 Se il `timeSpan` parametro è `null`, questo metodo restituisce il valore dell'oggetto originale <xref:System.DateTimeOffset> oggetto non modificato.  
  
   
  
## Examples  
 L'esempio seguente crea una matrice di <xref:System.TimeSpan> gli oggetti che rappresentano i tempi dei voli tra le destinazioni. Il <xref:System.DateTimeOffset.Add%2A> metodo aggiunge quindi questi tempi a un <xref:System.DateTimeOffset> oggetto che rappresenta decollo ora un volo. Il risultato riflette l'ora di arrivo pianificato a ogni destinazione.  
  
 [!code-csharp[System.DateTimeOffset.Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#1)]
 [!code-vb[System.DateTimeOffset.Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddDays (double days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddDays(float64 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDays (days As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddDays(double days);" />
      <MemberSignature Language="F#" Value="member this.AddDays : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddDays days" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="days">Numero di giorni interi e frazionari. Il numero può essere positivo o negativo.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge un numero specificato di giorni interi e frazionari al valore dell'istanza.</summary>
        <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di giorni rappresentato da <paramref name="days" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La parte frazionaria del `days` parametro è la parte frazionaria di un giorno. Ad esempio 4.5 è equivalente a 4 giorni, 12 ore, 0 minuti, 0 secondi, 0 millisecondi. Il `days` parametro viene arrotondato al millisecondo più vicino.  
  
> [!NOTE]
>  Questo metodo restituisce un nuovo <xref:System.DateTimeOffset> oggetto. Non modifica il valore dell'oggetto corrente aggiungendo `days` alla data e ora.  
  
 Poiché un <xref:System.DateTimeOffset> oggetto non rappresenta la data e ora in un fuso orario specifico, il <xref:System.DateTimeOffset.AddDays%2A> metodo non prende in considerazione le regole di rettifica del fuso orario specifico durante l'esecuzione di data e ora aritmetico.  
  
 La conversione di intervalli di tempo di meno di un giorno a una frazione può comportare una perdita di precisione. Se si verificano problemi, è possibile usare il <xref:System.DateTimeOffset.Add%2A> metodo, che consente di specificare più di un tipo di intervallo di tempo in una singola chiamata al metodo ed elimina la necessità di convertire gli intervalli di tempo in parte frazionaria di un giorno.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.DateTimeOffset.AddDays%2A> metodo per elencare le date comprese lunedì e l'inizio della settimana lavorativa, marzo 2008.  
  
 [!code-csharp[System.DateTimeOffset.Methods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#2)]
 [!code-vb[System.DateTimeOffset.Methods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddHours (double hours);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddHours(float64 hours) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHours (hours As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddHours(double hours);" />
      <MemberSignature Language="F#" Value="member this.AddHours : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddHours hours" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hours" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="hours">Numero di ore intere e frazionarie. Il numero può essere positivo o negativo.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge un numero specificato di ore intere e frazionarie al valore dell'istanza.</summary>
        <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di ore rappresentato da <paramref name="hours" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La parte frazionaria del `hours` parametro è la parte frazionaria di un'ora. Ad esempio 4.5 è equivalente a 4 ore, 30 minuti, 0 secondi, 0 millisecondi. Il `hours` parametro viene arrotondato al millisecondo più vicino.  
  
> [!NOTE]
>  Questo metodo restituisce un nuovo <xref:System.DateTimeOffset> oggetto. Non modifica il valore dell'oggetto corrente aggiungendo `hours` alla data e ora.  
  
 Poiché un <xref:System.DateTimeOffset> oggetto non rappresenta la data e ora in un fuso orario specifico, il <xref:System.DateTimeOffset.AddHours%2A> metodo non prende in considerazione le regole di rettifica del fuso orario specifico durante l'esecuzione di data e ora aritmetico.  
  
 La conversione di intervalli di tempo di meno di un'ora a una frazione può comportare una perdita di precisione. (Ad esempio, un minuto è 0,01666 un'ora). Se si verificano problemi, è possibile usare il <xref:System.DateTimeOffset.Add%2A> metodo, che consente di specificare più di un tipo di intervallo di tempo in una singola chiamata al metodo ed elimina la necessità di convertire gli intervalli di tempo in parte frazionaria di un'ora.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.DateTimeOffset.AddHours%2A> Sposta metodo per elencare le ore di inizio del lavoro per una determinata settimana presso una sede con due turni di otto ore al giorno.  
  
 [!code-csharp[System.DateTimeOffset.Methods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#3)]
 [!code-vb[System.DateTimeOffset.Methods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMilliseconds (double milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMilliseconds(float64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMilliseconds (milliseconds As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMilliseconds(double milliseconds);" />
      <MemberSignature Language="F#" Value="member this.AddMilliseconds : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMilliseconds milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="milliseconds">Numero di millisecondi interi e frazionari. Il numero può essere positivo o negativo.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge il numero specificato di millisecondi al valore di questa istanza.</summary>
        <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di millisecondi interi rappresentato da <paramref name="milliseconds" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La parte frazionaria del `milliseconds` parametro è la parte frazionaria di un millisecondo. Ad esempio 4.5 è equivalente a 4 millisecondi e 5000 tick, dove un millisecondo è uguale a 10.000 tick. Tuttavia, `milliseconds` viene arrotondato al millisecondo più vicino; tutti i valori superiore o uguale a,5 vengono arrotondati per eccesso.  
  
> [!NOTE]
>  Questo metodo restituisce un nuovo <xref:System.DateTimeOffset> oggetto. Non modifica il valore dell'oggetto corrente aggiungendo `milliseconds` alla data e ora.  
  
 Poiché un <xref:System.DateTimeOffset> oggetto non rappresenta la data e ora in un fuso orario specifico, il <xref:System.DateTimeOffset.AddMilliseconds%2A> metodo non prende in considerazione le regole di rettifica del fuso orario specifico durante l'esecuzione di data e ora aritmetico.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMinutes (double minutes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMinutes(float64 minutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMinutes (minutes As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMinutes(double minutes);" />
      <MemberSignature Language="F#" Value="member this.AddMinutes : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMinutes minutes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minutes" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="minutes">Numero di minuti interi e frazionari. Il numero può essere positivo o negativo.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge un numero specificato di minuti interi e frazionari al valore dell'istanza.</summary>
        <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di minuti rappresentato da <paramref name="minutes" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La parte frazionaria del `minutes` parametro è la parte frazionaria di un minuto. Ad esempio 4.5 è equivalente a 4 minuti, 30 secondi, 0 millisecondi. Il `minutes` parametro viene arrotondato al millisecondo più vicino.  
  
> [!NOTE]
>  Questo metodo restituisce un nuovo <xref:System.DateTimeOffset> oggetto. Non modifica il valore dell'oggetto corrente aggiungendo `minutes` alla data e ora.  
  
 Poiché un <xref:System.DateTimeOffset> oggetto non rappresenta la data e ora in un fuso orario specifico, il <xref:System.DateTimeOffset.AddMinutes%2A> metodo non prende in considerazione le regole di rettifica del fuso orario specifico durante l'esecuzione di data e ora aritmetico.  
  
 La conversione di intervalli di tempo di meno di un minuto a una frazione può comportare una perdita di precisione. (Ad esempio, un secondo è 0,01666 minuti). Se si verificano problemi, è possibile usare il <xref:System.DateTimeOffset.Add%2A> metodo, che consente di specificare più di un tipo di intervallo di tempo in una singola chiamata al metodo ed elimina la necessità di convertire gli intervalli di tempo in parte frazionaria di un minuto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMonths (int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMonths(int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMonths(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMonths (months As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMonths(int months);" />
      <MemberSignature Language="F#" Value="member this.AddMonths : int -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMonths months" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="months">Numero di mesi interi. Il numero può essere positivo o negativo.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge il numero specificato di mesi al valore di questa istanza.</summary>
        <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di mesi rappresentato da <paramref name="months" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La maggior parte degli altri metodi che aggiungono un'unità di intervallo di tempo singolo (ad esempio giorni o minuti) su un valore di data e ora, a differenza di <xref:System.DateTimeOffset.AddMonths%2A> non consente di aggiungere parti frazionarie di un mese. Per aggiungere un'ora che è costituito da altre unità di tempo oltre a mesi per una <xref:System.DateTimeOffset> dell'oggetto, usare il <xref:System.DateTimeOffset.Add%2A> (metodo).  
  
> [!NOTE]
>  Questo metodo restituisce un nuovo <xref:System.DateTimeOffset> oggetto. Non modifica il valore dell'oggetto corrente aggiungendo `months` alla data e ora.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.DateTimeOffset.AddMonths%2A> metodo per visualizzare la data di inizio di ogni trimestre dell'anno 2007.  
  
 [!code-csharp[System.DateTimeOffset.Methods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#4)]
 [!code-vb[System.DateTimeOffset.Methods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddSeconds (double seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddSeconds(float64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeconds (seconds As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddSeconds(double seconds);" />
      <MemberSignature Language="F#" Value="member this.AddSeconds : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddSeconds seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="seconds">Numero di secondi interi e frazionari. Il numero può essere positivo o negativo.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge un numero specificato di secondi interi e frazionari al valore dell'istanza.</summary>
        <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di secondi rappresentato da <paramref name="seconds" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La parte frazionaria del `seconds` parametro è la parte frazionaria di un secondo. Il valore della parte frazionaria di un secondo vengono visualizzati nella tabella seguente.  
  
|Secondo valore|Equivalente|  
|------------------|----------------|  
|secondo.1|100 millisecondi|  
|secondo pari a 0,1|10 millisecondi|  
|secondo.001|1 millisecondo|  
  
 Il `seconds` parametro viene arrotondato al millisecondo più vicino.  
  
> [!NOTE]
>  Questo metodo restituisce un nuovo <xref:System.DateTimeOffset> oggetto. Non modifica il valore dell'oggetto corrente aggiungendo `minutes` alla data e ora.  
  
 Poiché un <xref:System.DateTimeOffset> oggetto non rappresenta la data e ora in un fuso orario specifico, il <xref:System.DateTimeOffset.AddSeconds%2A> metodo non prende in considerazione le regole di rettifica del fuso orario specifico durante l'esecuzione di data e ora aritmetico.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <Member MemberName="AddTicks">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddTicks (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddTicks(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTicks (ticks As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddTicks(long ticks);" />
      <MemberSignature Language="F#" Value="member this.AddTicks : int64 -&gt; DateTimeOffset" Usage="dateTimeOffset.AddTicks ticks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks">Numero di tick di 100 nanosecondi. Il numero può essere positivo o negativo.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge il numero specificato di tick al valore di questa istanza.</summary>
        <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di tick rappresentato da <paramref name="ticks" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un segno di graduazione rappresenta 100 nanosecondi, oppure un decimilionesimo di secondo. Poiché un segno di graduazione è un intervallo di tempo molto piccola e precisa, qualsiasi unità di tempo superiore può essere espresso come numero di tick senza perdita di precisione.  
  
> [!NOTE]
>  Questo metodo restituisce un nuovo <xref:System.DateTimeOffset> oggetto. Non modifica il valore dell'oggetto corrente aggiungendo `minutes` alla data e ora.  
  
 La tabella seguente elenca il numero di tick in un intervallo di tempo specifico.  
  
|Intervallo di tempo|Numero di segni di graduazione|  
|-------------------|---------------------|  
|Second|10,000,000|  
|Minute|600,000,000|  
|Hour|36,000,000,000|  
|Day|864,000,000,000|  
|Settimana|6,048,000,000,000|  
|Mese|Dipende dal numero di giorni del mese.|  
|Non-bisestile|315,360,000,000,000|  
|Anno bisestile|316,224,000,000,000|  
  
 Poiché un <xref:System.DateTimeOffset> oggetto non rappresenta la data e ora in un fuso orario specifico, il <xref:System.DateTimeOffset.AddTicks%2A> metodo non prende in considerazione le regole di rettifica del fuso orario specifico durante l'esecuzione di data e ora aritmetico.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddYears (int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddYears(int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddYears(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddYears (years As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddYears(int years);" />
      <MemberSignature Language="F#" Value="member this.AddYears : int -&gt; DateTimeOffset" Usage="dateTimeOffset.AddYears years" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="years">Numero di anni. Il numero può essere positivo o negativo.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.DateTimeOffset" /> che aggiunge il numero specificato di anni al valore di questa istanza.</summary>
        <returns>Oggetto il cui valore è la somma della data e dell'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente e del numero di anni rappresentato da <paramref name="years" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La maggior parte degli altri metodi che aggiungono un'unità di intervallo di tempo singolo (ad esempio giorni o minuti) su un valore di data e ora, a differenza di <xref:System.DateTimeOffset.AddYears%2A> non consente di aggiungere parti frazionarie di un anno. Per aggiungere un'ora che è costituito da altre unità di tempo oltre a anni a un <xref:System.DateTimeOffset> dell'oggetto, usare il <xref:System.DateTimeOffset.Add%2A> (metodo).  
  
> [!NOTE]
>  Questo metodo restituisce un nuovo <xref:System.DateTimeOffset> oggetto. Non modifica il valore dell'oggetto corrente aggiungendo `months` alla data e ora.  
  
   
  
## Examples  
 Negli Stati Uniti, patenti non possono essere inviate alle persone in 16 anni di età. L'esempio seguente mostra l'ultima data in cui una persona deve essere nata per essere legalmente emesso di Guida una patente.  
  
 [!code-csharp[System.DateTimeOffset.Methods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#6)]
 [!code-vb[System.DateTimeOffset.Methods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.DateTimeOffset first, valuetype System.DateTimeOffset second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (first As DateTimeOffset, second As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="F#" Value="static member Compare : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.DateTimeOffset.Compare (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.DateTimeOffset" />
        <Parameter Name="second" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="first">Primo oggetto da confrontare.</param>
        <param name="second">Secondo oggetto da confrontare.</param>
        <summary>Confronta due oggetti <see cref="T:System.DateTimeOffset" /> e indica se il primo è precedente, uguale o successivo al secondo.</summary>
        <returns>Intero con segno che indica se il valore del parametro <paramref name="first" /> è precedente, successivo o uguale al valore del parametro <paramref name="second" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore restituito 
 </term><description> Significato 
 </description></listheader><item><term> Minore di zero 
 </term><description><paramref name="first" /> è precedente a <paramref name="second" />.  
  
 </description></item><item><term> Zero 
 </term><description><paramref name="first" /> è uguale a <paramref name="second" />.  
  
 </description></item><item><term> Maggiore di zero 
 </term><description><paramref name="first" /> è successivo a <paramref name="second" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire il confronto, il metodo converte entrambi i `first` e il `second` parametri a Coordinated Universal Time (UTC) prima di eseguire il confronto. Il metodo è equivalente alla seguente:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#1)]
 [!code-vb[System.DateTimeOffset.Syntax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#1)]  
  
 In altre parole, il <xref:System.DateTimeOffset.Compare%2A> metodo determina se due <xref:System.DateTimeOffset> oggetti rappresentano un singolo punto nel tempo. Consente di confrontare direttamente le date e ore né gli offset.  
  
   
  
## Examples  
 Nell'esempio seguente illustra le chiamate per il <xref:System.DateTimeOffset.Compare%2A> metodo confrontare <xref:System.DateTimeOffset> oggetti.  
  
 [!code-csharp[System.DateTimeOffset.Methods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods2.cs#7)]
 [!code-vb[System.DateTimeOffset.Methods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : DateTimeOffset -&gt; int&#xA;override this.CompareTo : DateTimeOffset -&gt; int" Usage="dateTimeOffset.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</param>
        <summary>Confronta l'oggetto <see cref="T:System.DateTimeOffset" /> corrente con un oggetto <see cref="T:System.DateTimeOffset" /> specificato e indica se l'oggetto corrente è precedente, uguale o successivo rispetto al secondo oggetto <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Intero con segno che indica la relazione tra l'oggetto <see cref="T:System.DateTimeOffset" /> corrente e il parametro <paramref name="other" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore restituito 
 </term><description> Descrizione 
 </description></listheader><item><term> Minore di zero 
 </term><description> L‎'oggetto <see cref="T:System.DateTimeOffset" /> corrente è precedente rispetto al parametro <paramref name="other" />.  
  
 </description></item><item><term> Zero 
 </term><description> L'oggetto <see cref="T:System.DateTimeOffset" /> corrente è uguale rispetto al parametro <paramref name="other" />.  
  
 </description></item><item><term> Maggiore di zero.  
  
 </term><description> L‎'oggetto <see cref="T:System.DateTimeOffset" /> corrente è successivo rispetto al parametro <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo confronta <xref:System.DateTimeOffset> oggetti confrontando i <xref:System.DateTimeOffset.UtcDateTime%2A> valori; vale a dire che determina se i due oggetti rappresentano un singolo punto nel tempo e indica se l'oggetto corrente è anteriore, posteriore, o lo stesso come il `other`parametro.  
  
   
  
## Examples  
 Nell'esempio seguente illustra le chiamate per il <xref:System.DateTimeOffset.CompareTo%2A> metodo confrontare <xref:System.DateTimeOffset> oggetti.  
  
 [!code-csharp[System.DateTimeOffset.Methods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods3.cs#8)]
 [!code-vb[System.DateTimeOffset.Methods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods3.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime" Usage="System.DateTimeOffset.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore <see cref="T:System.DateTime" /> che rappresenta il componente relativo alla data dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Valore <see cref="T:System.DateTime" /> che rappresenta il componente relativo alla data dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di rimuovere qualsiasi parte significativa del componente ora da un <xref:System.DateTimeOffset> specificato e restituisce solo il componente relativo alla data significativo. Ad esempio, se il <xref:System.DateTimeOffset> oggetto ha un valore di data e ora di "12/1/07 4 01 pm + 7:30", la proprietà restituisce un <xref:System.DateTime> pari a "12/1/07 12:00:00 AM". Il <xref:System.DateTime> valore può quindi essere visualizzato usando uno qualsiasi degli identificatori di formato standard o personalizzate che consentono di visualizzare solo le date. (Vedere la sezione di esempio per un'illustrazione.)  
  
 Il valore della <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> proprietà dell'oggetto restituito <xref:System.DateTime> l'oggetto è sempre <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Non è influenzata dal valore della <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 Per visualizzare una data senza componente relativo all'ora, è anche possibile usare "D" o "d"; identificatori di formato Per informazioni generali, vedere la sezione esempio.  
  
   
  
## Examples  
 Nell'esempio seguente recupera il valore della <xref:System.DateTimeOffset.Date%2A> proprietà per una data specifica. Tale valore viene quindi visualizzato nella console usando alcuni identificatori di formato standard e personalizzate sola data.  
  
 [!code-csharp[System.DateTimeOffset.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#1)]
 [!code-vb[System.DateTimeOffset.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Stringhe di formato data/ora standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Stringhe di formato data e ora personalizzato</related>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.DateTimeOffset.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore <see cref="T:System.DateTime" /> che rappresenta la data e l'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Data e ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.DateTime%2A> proprietà non è influenzata dal valore della <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 Questa proprietà restituisce la data sia il componente ora di un <xref:System.DateTimeOffset> oggetto, che risulta utile per l'esecuzione <xref:System.DateTimeOffset> a <xref:System.DateTime> conversione. Ad esempio, se il <xref:System.DateTimeOffset> oggetto ha un valore di data e ora di "12/1/07 4 01 pm + 7:30", la proprietà restituisce una data di "12/1/07 4 01 pm".  
  
 Il valore della <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> proprietà dell'oggetto restituito <xref:System.DateTime> oggetto <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.DateTimeOffset.DateTime%2A> per convertire l'ora restituita dalla proprietà di <xref:System.DateTimeOffset.Now%2A> e <xref:System.DateTimeOffset.UtcNow%2A> delle proprietà per <xref:System.DateTime> valori.  
  
 [!code-csharp[System.DateTimeOffset.Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#2)]
 [!code-vb[System.DateTimeOffset.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.LocalDateTime" />
        <related type="Article" href="~/docs/standard/datetime/converting-between-datetime-and-offset.md">Conversione tra DateTime e DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Day : int" Usage="System.DateTimeOffset.Day" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il giorno del mese rappresentato dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Componente relativo al giorno dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come valore compreso tra 1 e 31.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.Day%2A> proprietà non è influenzata dal valore della <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 È anche possibile creare una rappresentazione di stringa di un <xref:System.DateTimeOffset> componente giorno dell'oggetto chiamando il <xref:System.DateTimeOffset.ToString%2A> metodo con gli identificatori di formato personalizzato "d" o "gg".  
  
   
  
## Examples  
 L'esempio seguente mostra il componente giorno di un <xref:System.DateTimeOffset> oggetti in tre modi diversi:  
  
-   Recuperando il valore della <xref:System.DateTimeOffset.Day%2A> proprietà.  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "d".  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "dd".  
  
 [!code-csharp[System.DateTimeOffset.Properties#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#10)]
 [!code-vb[System.DateTimeOffset.Properties#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfWeek : DayOfWeek" Usage="System.DateTimeOffset.DayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il giorno della settimana rappresentato dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Uno dei valori di enumerazione che indica il giorno della settimana dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore delle costanti nel <xref:System.DayOfWeek> enumerazione u+DC00 <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> a <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>. Se il cast in un numero intero, il relativo valore compreso tra zero (che indica <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) a 6 (che indica <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>).  
  
 È anche possibile visualizzare il nome del giorno della settimana di una data specifica usando l'identificatore di formato "D" o l'identificatore di formato personalizzato "dddd". Ad esempio:  
  
 [!code-csharp[System.DateTimeOffset.Properties#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#4)]
 [!code-vb[System.DateTimeOffset.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#4)]  
  
 Si noti che la stringa restituita chiamando il `ToString` metodo di <xref:System.DayOfWeek> membro di enumerazione restituito da questa proprietà non è localizzato. Per estrarre una stringa che contiene il nome del giorno della settimana delle impostazioni cultura correnti o di impostazioni cultura specifiche, chiamare il <xref:System.DateTimeOffset.ToString%2A> metodo con l'identificatore di formato personalizzato "dddd". Ad esempio, il codice seguente visualizza il nome del giorno della settimana per una data usando il `fr-fr` delle impostazioni cultura.  
  
 [!code-csharp[System.DateTimeOffset.Properties#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#5)]
 [!code-vb[System.DateTimeOffset.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#5)]  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il nome del giorno della settimana del primo giorno di ogni mese dell'anno 2008.  
  
 [!code-csharp[System.DateTimeOffset.Properties#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#3)]
 [!code-vb[System.DateTimeOffset.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public int DayOfYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfYear" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DayOfYear" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfYear : int" Usage="System.DateTimeOffset.DayOfYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il giorno dell'anno rappresentato dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Giorno dell'anno dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come valore compreso tra 1 e 366.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se due oggetti <see cref="T:System.DateTimeOffset" /> sono uguali oppure se un oggetto <see cref="T:System.DateTimeOffset" /> è uguale a un oggetto specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="override this.Equals : DateTimeOffset -&gt; bool" Usage="dateTimeOffset.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</param>
        <summary>Determina se l'oggetto <see cref="T:System.DateTimeOffset" /> corrente rappresenta la stessa data e ora dell'oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
        <returns>
          <see langword="true" /> se entrambi gli oggetti <see cref="T:System.DateTimeOffset" /> presentano lo stesso valore <see cref="P:System.DateTimeOffset.UtcDateTime" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di eseguire il confronto, questo metodo converte i valori di entrambi <xref:System.DateTimeOffset> oggetti a Coordinated Universal Time (UTC). Il metodo è equivalente alla seguente:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#2)]
 [!code-vb[System.DateTimeOffset.Syntax#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#2)]  
  
 In altre parole, il <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> metodo determina se due <xref:System.DateTimeOffset> oggetti rappresentano un singolo punto nel tempo. Consente di confrontare direttamente le date e ore né gli offset. Per determinare se due <xref:System.DateTimeOffset> gli oggetti rappresentano la stessa ora e hanno lo stesso valore di offset, usare il <xref:System.DateTimeOffset.EqualsExact%2A> (metodo).  
  
 Oggetto <xref:System.DateTimeOffset> oggetto che non sia `null` viene considerato successiva (o versione successiva) rispetto a quella più `null`.  
  
 Questo overload del metodo di <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> metodo implementa il <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> (metodo). Offre prestazioni leggermente migliori rispetto al <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType> rapporto di overload perché il `other` non deve essere convertito da un oggetto parametro.  
  
   
  
## Examples  
 Nell'esempio seguente illustra le chiamate per il <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> metodo da testare <xref:System.DateTimeOffset> gli oggetti per verificarne l'uguaglianza con l'attuale <xref:System.DateTimeOffset> oggetto.  
  
 [!code-csharp[System.DateTimeOffset.Methods#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#9)]
 [!code-vb[System.DateTimeOffset.Methods#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dateTimeOffset.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare con l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</param>
        <summary>Determina se un oggetto <see cref="T:System.DateTimeOffset" /> rappresenta la stessa data e ora di un oggetto specificato.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="obj" /> è un oggetto <see cref="T:System.DateTimeOffset" /> che rappresenta la stessa data e ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di eseguire il confronto, questo metodo converte i valori di entrambi corrente <xref:System.DateTimeOffset> oggetto e il `obj` parametro a Coordinated Universal Time (UTC). Il metodo è equivalente alla seguente:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#3)]
 [!code-vb[System.DateTimeOffset.Syntax#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#3)]  
  
 In altre parole, il <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType> metodo determina se l'oggetto corrente <xref:System.DateTimeOffset> oggetto e un oggetto specificato rappresenta un singolo punto nel tempo. Consente di confrontare direttamente le date e ore né gli offset. Per determinare se due <xref:System.DateTimeOffset> gli oggetti rappresentano la stessa ora e hanno lo stesso valore di offset, usare il <xref:System.DateTimeOffset.EqualsExact%2A> (metodo).  
  
 Se `obj` viene `null`, o se il tipo di run-time del `obj` non è <xref:System.DateTimeOffset>, il metodo restituisce `false`.  
  
   
  
## Examples  
 Nell'esempio seguente viene indicato se l'oggetto corrente <xref:System.DateTimeOffset> oggetto è uguale ad altri <xref:System.DateTimeOffset> oggetti, nonché a su un riferimento null e un <xref:System.DateTime> oggetto.  
  
 [!code-csharp[System.DateTimeOffset.Methods#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#10)]
 [!code-vb[System.DateTimeOffset.Methods#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.DateTimeOffset first, valuetype System.DateTimeOffset second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (first As DateTimeOffset, second As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="F#" Value="static member Equals : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.Equals (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.DateTimeOffset" />
        <Parameter Name="second" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="first">Primo oggetto da confrontare.</param>
        <param name="second">Secondo oggetto da confrontare.</param>
        <summary>Determina se due oggetti <see cref="T:System.DateTimeOffset" /> specificati rappresentano la stessa data e ora.</summary>
        <returns>
          <see langword="true" /> se i due oggetti <see cref="T:System.DateTimeOffset" /> presentano lo stesso valore <see cref="P:System.DateTimeOffset.UtcDateTime" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di eseguire il confronto, questo metodo converte entrambi <xref:System.DateTimeOffset> oggetti a Coordinated Universal Time (UTC). Il metodo è equivalente alla seguente:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 In altre parole, il <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> metodo determina se i due <xref:System.DateTimeOffset> oggetti rappresentano un singolo punto nel tempo. Consente di confrontare direttamente le date e ore né gli offset. Per determinare se due <xref:System.DateTimeOffset> gli oggetti rappresentano la stessa ora e hanno lo stesso valore di offset, usare il <xref:System.DateTimeOffset.EqualsExact%2A> (metodo).  
  
   
  
## Examples  
 Nell'esempio seguente illustra le chiamate per il <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> metodo per testare diverse coppie di <xref:System.DateTimeOffset> oggetti per verificarne l'uguaglianza.  
  
 [!code-csharp[System.DateTimeOffset.Methods#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#11)]
 [!code-vb[System.DateTimeOffset.Methods#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="EqualsExact">
      <MemberSignature Language="C#" Value="public bool EqualsExact (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EqualsExact(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualsExact (other As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EqualsExact(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="member this.EqualsExact : DateTimeOffset -&gt; bool" Usage="dateTimeOffset.EqualsExact other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</param>
        <summary>Determina se l'oggetto <see cref="T:System.DateTimeOffset" /> corrente rappresenta la stessa ora e ha lo stesso offset di un oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.DateTimeOffset" /> corrente e il parametro <paramref name="other" /> presentano lo stesso valore di data e ora e lo stesso valore <see cref="P:System.DateTimeOffset.Offset" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In quanto i fusi orari diversi condividono un singolo offset, il valore restituito `true` non garantisce che l'oggetto corrente e il `other` orari oggetti rappresentano lo stesso fuso orario.  
  
 A differenza di <xref:System.DateTimeOffset.EqualsExact%2A> metodo, gli overload del <xref:System.DateTimeOffset.Equals%2A> metodo determinare solo se due <xref:System.DateTimeOffset> valori rappresentano un singolo punto nel tempo. Non indicano che due valori abbiano la stessa data e ora, nonché lo stesso offset.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo dei <xref:System.DateTimeOffset.EqualsExact%2A> metodo confrontare simile <xref:System.DateTimeOffset> oggetti.  
  
 [!code-csharp[System.DateTimeOffset.Methods#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#12)]
 [!code-vb[System.DateTimeOffset.Methods#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Equals" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTime">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromFileTime (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromFileTime(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromFileTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTime (fileTime As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromFileTime(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTime : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromFileTime fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime">Ora di un file di Windows espressa in tick.</param>
        <summary>Converte l'ora specificata di un file di Windows in un'ora locale equivalente.</summary>
        <returns>Oggetto che rappresenta la data e l'ora di <paramref name="fileTime" /> con l'offset impostato sull'offset dell'ora locale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ora di un file di Windows è un valore a 64 bit che rappresenta il numero di intervalli di 100 nanosecondi trascorsi dalla mezzanotte, 1 gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC). Windows Usa ora di un file per registrare un'applicazione consente di creare, accede a o scrive in un file.  
  
 Ora di un file di Windows è direttamente accessibile tramite l'API Windows chiamando il `GetFileTime` funzione, che restituisce un `FILETIME` struttura. Il parametro della funzione singola è l'handle del file con informazioni sull'ora di file da recuperare. L'handle di file viene recuperato chiamando il `CreateFile` (funzione). Il `FILETIME` della struttura `dwHighDateTime` membro contiene i quattro byte di ordine superiore dell'ora del file e il relativo `dwLowDateTime` membro contiene i quattro byte meno significativi. Nell'esempio seguente viene illustrato come recuperare i valori di ora di file di Windows e convertirle in <xref:System.DateTimeOffset> valori.  
  
 I valori di ora di file di Windows possono essere creati anche da <xref:System.DateTime> valori chiamando il <xref:System.DateTime.ToFileTime%2A?displayProperty=nameWithType> e <xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=nameWithType> metodi e da <xref:System.DateTimeOffset> valori chiamando il <xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=nameWithType> (metodo).  
  
   
  
## Examples  
 L'esempio seguente usa l'API di Windows per recuperare le ore dei file Windows per il file eseguibile WordPad.  
  
 [!code-csharp[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/cs/FileTime.cs#1)]
 [!code-vb[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/vb/FileTime.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="filetime" /> è minore di zero.  
  
oppure 
 <paramref name="filetime" /> è maggiore di <see langword="DateTimeOffset.MaxValue.Ticks" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromUnixTimeMilliseconds">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromUnixTimeMilliseconds (long milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromUnixTimeMilliseconds(int64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUnixTimeMilliseconds (milliseconds As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromUnixTimeMilliseconds(long milliseconds);" />
      <MemberSignature Language="F#" Value="static member FromUnixTimeMilliseconds : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromUnixTimeMilliseconds milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="milliseconds">Orario Unix espresso come numero di millisecondi trascorsi da 1970-01-01T00:00:00Z (1 gennaio 1970 alle 00:00 UTC). Per gli orari Unix antecedenti a questa data, il valore è negativo.</param>
        <summary>Converte un orario Unix espresso come numero di millisecondi trascorsi da 1970-01-01T00:00:00Z in un valore <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Valore di data e ora che rappresenta lo stesso momento in orario Unix.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.Offset%2A> valore della proprietà dell'oggetto restituito <xref:System.DateTimeOffset> istanza è <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, che rappresenta l'ora UTC. È possibile convertirlo nell'ora di un fuso orario specifico chiamando il <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="milliseconds" /> è minore di -62.135.596.800.000.  
  
oppure 
 <paramref name="milliseconds" />è maggiore di 253.402.300.799.999.</exception>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      </Docs>
    </Member>
    <Member MemberName="FromUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromUnixTimeSeconds (long seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromUnixTimeSeconds(int64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUnixTimeSeconds (seconds As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromUnixTimeSeconds(long seconds);" />
      <MemberSignature Language="F#" Value="static member FromUnixTimeSeconds : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromUnixTimeSeconds seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="seconds">Orario Unix espresso come numero di secondi trascorsi da 1970-01-01T00:00:00Z (1 gennaio 1970 alle 00:00 UTC). Per gli orari Unix antecedenti a questa data, il valore è negativo.</param>
        <summary>Converte un orario Unix espresso come numero di secondi trascorsi da 1970-01-01T00:00:00Z in un valore <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Valore di data e ora che rappresenta lo stesso momento in orario Unix.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.Offset%2A> valore della proprietà dell'oggetto restituito <xref:System.DateTimeOffset> istanza è <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, che rappresenta l'ora UTC. È possibile convertirlo nell'ora di un fuso orario specifico chiamando il <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="seconds" /> è minore di -62.135.596.800.  
  
oppure 
 <paramref name="seconds" /> è maggiore di 253.402.300.799.</exception>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeSeconds" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dateTimeOffset.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <returns>Codice hash di un intero con segno a 32 bit.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hour { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hour : int" Usage="System.DateTimeOffset.Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo alle ore dell'ora rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Componente relativo alle ore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente. Questa proprietà usa il formato 24 ore; il valore varia da 0 a 23.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.Hour%2A> proprietà non è influenzata dal valore della <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 È anche possibile creare una rappresentazione di stringa di un <xref:System.DateTimeOffset> componente relativo alle ore dell'oggetto chiamando il <xref:System.DateTimeOffset.ToString%2A> metodo con "H", o identificatori di formato personalizzato "HH".  
  
   
  
## Examples  
 L'esempio seguente mostra il componente di ora un <xref:System.DateTimeOffset> oggetti in tre modi diversi:  
  
-   Recuperando il valore della <xref:System.DateTimeOffset.Hour%2A> proprietà.  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "H".  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con "HH" identificatore di formato.  
  
 [!code-csharp[System.DateTimeOffset.Properties#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#6)]
 [!code-vb[System.DateTimeOffset.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalDateTime">
      <MemberSignature Language="C#" Value="public DateTime LocalDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LocalDateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.LocalDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LocalDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalDateTime : DateTime" Usage="System.DateTimeOffset.LocalDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore <see cref="T:System.DateTime" /> che rappresenta la data e l'ora locali dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Data e ora locali dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se necessario, il <xref:System.DateTimeOffset.LocalDateTime%2A> Converte la proprietà <xref:System.DateTimeOffset> dell'oggetto data e ora su data e ora del sistema locale. La conversione è un'operazione in due passaggi:  
  
1.  La proprietà converte corrente <xref:System.DateTimeOffset> ora dell'oggetto a Coordinated Universal Time (UTC).  
  
2.  La proprietà converte quindi l'ora UTC nell'ora locale.  
  
 Non esistono orari validi e orari ambigui vengono eseguito il mapping all'ora solare dell'area locale. (Tuttavia, la conversione può creare un'anomalia: se un <xref:System.DateTimeOffset> valore derivato dal computer locale riflette ambiguo data e un'ora, che può essere convertito nell'ora UTC di valore e quindi nuovamente a un'ora locale che è diversa da quella originale.)  Quando esegue questa conversione, la proprietà si applica tutte le regole di regolazione del fuso orario locale.  
  
 Questa proprietà restituisce la data sia il componente ora di un <xref:System.DateTimeOffset> oggetto, che risulta utile per <xref:System.DateTimeOffset> a <xref:System.DateTime> conversione. Oltre a eseguire tutte le conversioni temporali necessarie, questa proprietà è diverso dal <xref:System.DateTimeOffset.DateTime%2A> impostando il valore della proprietà di <xref:System.DateTime.Kind%2A> proprietà dell'oggetto restituito <xref:System.DateTime> dell'oggetto a <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L'esempio seguente illustra diverse conversioni dei <xref:System.DateTimeOffset> valori orari locali negli Stati Uniti Ora solare del Pacifico (Stati Uniti). Si noti che l'ultimo tre volte sono tutti ambigue. la proprietà esegue il mapping di tutti gli elementi in una singola data e ora nel fuso orario ora solare del Pacifico.  
  
 [!code-csharp[System.DateTimeOffset.Properties#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#7)]
 [!code-vb[System.DateTimeOffset.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : DateTimeOffset" Usage="System.DateTimeOffset.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il valore massimo possibile di <see cref="T:System.DateTimeOffset" />. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa costante è 11:59: alle 23.59.59 del 31/12/9999 + 00:00.  
  
 Il <xref:System.DateTimeOffset.MaxValue> proprietà viene utilizzata per determinare se il valore di una nuova <xref:System.DateTimeOffset> oggetto o il <xref:System.DateTimeOffset> valore restituito da un'operazione aritmetica è uguale o precedenti a questo valore di intervallo massimo. In caso contrario, il metodo genera un <xref:System.ArgumentOutOfRangeException>. Eventuali <xref:System.DateTimeOffset> valore viene convertito a Coordinated Universal Time (UTC) prima che il metodo lo confronta con <xref:System.DateTimeOffset.MaxValue>.  Ciò significa che un <xref:System.DateTimeOffset> valore la cui data e ora si avvicinano l'intervallo massimo, ma il cui offset è negativo, genera un'eccezione. Ad esempio, il valore 12/31/9999 11:00 PM -02:00 è compreso nell'intervallo valido perché è un'ora successiva alla <xref:System.DateTimeOffset.MaxValue> quando viene convertito in formato UTC.  
  
 Alcuni calendari, ad esempio la <xref:System.Globalization.UmAlQuraCalendar>, supportano un intervallo di date superiore precedente a <xref:System.DateTime.MaxValue>. In questi casi, tentando di accedere <xref:System.DateTime.MaxValue> assegnazioni di variabili o la formattazione e operazioni di analisi può generare un <xref:System.ArgumentOutOfRangeException>. Invece di recuperare il valore di <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, è possibile recuperare il valore del valore date valido più recente della cultura specificata dal <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=nameWithType> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="F:System.DateTime.MaxValue" /> non rientra nell'intervallo del calendario predefinito delle impostazioni cultura correnti o specificate.</exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public int Millisecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Millisecond" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Millisecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Millisecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Millisecond { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Millisecond : int" Usage="System.DateTimeOffset.Millisecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo ai millisecondi dell'ora rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Componente relativo ai millisecondi dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come numero intero compreso tra 0 e 999.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È anche possibile creare una rappresentazione di stringa di un <xref:System.DateTimeOffset> componente relativo ai millisecondi dell'oggetto chiamando il <xref:System.DateTimeOffset.ToString%2A> metodo con l'identificatore di formato personalizzato "fff".  
  
 Se ci si basa sulle proprietà, ad esempio <xref:System.DateTimeOffset.Now%2A> o <xref:System.DateTimeOffset.UtcNow%2A> per tenere traccia in modo accurato il numero di millisecondi trascorsi, la precisione del componente dei millisecondi dell'ora dipende dalla risoluzione dell'orologio di sistema. In Windows NT 3.5 e versioni successive e i sistemi operativi Windows Vista, la risoluzione del clock è di circa 10-15 millisecondi.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il numero di millisecondi di un <xref:System.DateTimeOffset> oggetto utilizzando un identificatore di formato personalizzato e accedendo direttamente il <xref:System.DateTimeOffset.Millisecond%2A> proprietà.  
  
 [!code-csharp[System.DateTimeOffset.Properties#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#12)]
 [!code-vb[System.DateTimeOffset.Properties#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minute : int" Usage="System.DateTimeOffset.Minute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo ai minuti dell'ora rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Componente relativo ai minuti dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come numero intero compreso tra 0 e 59.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.Minute%2A> proprietà non è influenzata dal valore della <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 È anche possibile creare una rappresentazione di stringa di un <xref:System.DateTimeOffset> componente relativo ai minuti dell'oggetto chiamando il <xref:System.DateTimeOffset.ToString%2A> metodo con la "m", o identificatori di formato personalizzato "mm".  
  
   
  
## Examples  
 L'esempio seguente mostra il componente minuto di un <xref:System.DateTimeOffset> oggetti in tre modi diversi:  
  
-   Recuperando il valore della <xref:System.DateTimeOffset.Minute%2A> proprietà.  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "m".  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "mm".  
  
 [!code-csharp[System.DateTimeOffset.Properties#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#8)]
 [!code-vb[System.DateTimeOffset.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset MinValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : DateTimeOffset" Usage="System.DateTimeOffset.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il valore <see cref="T:System.DateTimeOffset" /> minimo possibile. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa costante è 1/1/0001 12:00:00 AM + 00:00.  
  
 Il <xref:System.DateTimeOffset.MinValue> proprietà viene utilizzata per determinare se il valore di una nuova <xref:System.DateTimeOffset> oggetto o il <xref:System.DateTimeOffset> valore restituito da un'operazione aritmetica è uguale o successive a questo valore di intervallo minimo. In caso contrario, il metodo genera un <xref:System.ArgumentOutOfRangeException>. Eventuali <xref:System.DateTimeOffset> valore viene convertito a Coordinated Universal Time (UTC) prima che il metodo esegue il confronto con <xref:System.DateTimeOffset.MinValue>.  Ciò significa che un <xref:System.DateTimeOffset> valore la cui data e ora sono vicina all'intervallo minimo, ma il cui offset è un valore positivo, possono generare un'eccezione. Ad esempio, il valore 1/1/0001 1:00:00 AM 02:00 è compreso nell'intervallo valido perché è un'ora antecedente <xref:System.DateTimeOffset.MinValue> quando viene convertito in formato UTC.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Month : int" Usage="System.DateTimeOffset.Month" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo al mese della data rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Componente relativo al mese dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come numero intero compreso tra 1 e 12.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.Month%2A> proprietà non è influenzata dal valore della <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 È anche possibile creare una rappresentazione di stringa di un <xref:System.DateTimeOffset> componente mese dell'oggetto chiamando il <xref:System.DateTimeOffset.ToString%2A> metodo con gli identificatori di formato personalizzato "M" o "MM".  
  
   
  
## Examples  
 L'esempio seguente mostra il componente mese di un <xref:System.DateTimeOffset> valore in tre modi diversi:  
  
-   Recuperando il valore della <xref:System.DateTimeOffset.Month%2A> proprietà.  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "M".  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "MM".  
  
 [!code-csharp[System.DateTimeOffset.Properties#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#9)]
 [!code-vb[System.DateTimeOffset.Properties#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTimeOffset Now" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Now" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Now As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTimeOffset Now { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTimeOffset" Usage="System.DateTimeOffset.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.DateTimeOffset" /> impostato sulla data e sull'ora correnti del computer, con l'offset impostato sull'offset dell'ora locale rispetto all'ora UTC (Coordinated Universal Time).</summary>
        <value>Oggetto <see cref="T:System.DateTimeOffset" /> in cui la data e l'ora locali corrispondono all'ora locale corrente e per il quale l'offset è l'offset del fuso orario locale rispetto all'ora UTC (Coordinated Universal Time).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La precisione del componente dei millisecondi dell'ora locale corrente dipende dalla risoluzione dell'orologio di sistema. In Windows NT 3.5 e versioni successive e i sistemi operativi Windows Vista, la risoluzione del clock è di circa 10-15 millisecondi.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.DateTimeOffset.Now%2A> proprietà di cui recuperare la data e ora correnti e lo visualizza usando ognuno del [stringhe di formato di data e ora standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md) supportati dal <xref:System.DateTimeOffset> tipo.  
  
 [!code-csharp[System.DateTimeOffset.Now#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.now/cs/now1.cs#1)]
 [!code-vb[System.DateTimeOffset.Now#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.now/vb/now1.vb#1)]  
  
 L'esempio seguente usa il <xref:System.DateTimeOffset.Now%2A> e <xref:System.DateTimeOffset.Millisecond%2A> proprietà per determinare la risoluzione del clock di sistema. Visualizza il tempo solo quando viene modificato il valore del relativo componente millisecondo.  
  
 [!code-csharp[System.DateTimeOffset.Properties#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#11)]
 [!code-vb[System.DateTimeOffset.Properties#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcNow" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public TimeSpan Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Offset" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Offset { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : TimeSpan" Usage="System.DateTimeOffset.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'offset dell'ora rispetto all'ora UTC (Coordinated Universal Time).</summary>
        <value>Differenza tra il valore dell'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente e l'ora UTC (Coordinated Universal Time).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della <xref:System.TimeSpan.Hours%2A> proprietà dell'oggetto restituito <xref:System.TimeSpan> oggetto può variare da ore di-14 a 14 ore.  
  
 Il valore della <xref:System.DateTimeOffset.Offset%2A> proprietà è precisa al minuto.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.DateTimeOffset.Offset%2A> proprietà per visualizzare la differenza dell'ora locale da Coordinated Universal Time (UTC).  
  
 [!code-csharp[System.DateTimeOffset.Properties#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#13)]
 [!code-vb[System.DateTimeOffset.Properties#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator + (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Addition(valuetype System.DateTimeOffset dateTimeOffset, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator +(DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset + timeSpan" FrameworkAlternate="netcore-2.2;netframework-2.0" />
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator + (DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Addition(valuetype System.DateTimeOffset dateTimeTz, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator +(DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeTz + timeSpan" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="dateTimeTz" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="1" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset">Oggetto a cui aggiungere l'intervallo di tempo.</param>
        <param name="dateTimeTz">To be added.</param>
        <param name="timeSpan">Intervallo di tempo da aggiungere.</param>
        <summary>Aggiunge un intervallo di tempo specificato a un oggetto <see cref="T:System.DateTimeOffset" /> che ha una data e un'ora specificate e crea un oggetto <see cref="T:System.DateTimeOffset" /> con una data e ora nuove.</summary>
        <returns>Oggetto il cui valore è la somma dei valori <paramref name="dateTimeTz" /> e <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.op_Addition%2A> metodo consente di definire l'operazione di addizione per <xref:System.DateTimeOffset> valori. Consente codice simile al seguente:  
  
 [!code-csharp[System.DateTimeOffset.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#1)]
 [!code-vb[System.DateTimeOffset.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#1)]  
  
 Possono chiamare le lingue che non supportano l'overload degli operatori e gli operatori personalizzati di <xref:System.DateTimeOffset.Add%2A> metodo invece.  
  
 Il metodo equivalente per l'operatore è <xref:System.DateTimeOffset.Add%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Primo oggetto da confrontare.</param>
        <param name="right">Secondo oggetto da confrontare.</param>
        <summary>Determina se due oggetti <see cref="T:System.DateTimeOffset" /> specificati rappresentano la stessa data e ora.</summary>
        <returns>
          <see langword="true" /> se entrambi gli oggetti <see cref="T:System.DateTimeOffset" /> presentano lo stesso valore <see cref="P:System.DateTimeOffset.UtcDateTime" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.op_Equality%2A> metodo definisce il funzionamento dell'operatore di uguaglianza per <xref:System.DateTimeOffset> oggetti. Consente codice simile al seguente:  
  
 [!code-csharp[System.DateTimeOffset.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#2)]
 [!code-vb[System.DateTimeOffset.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#2)]  
  
 Prima di valutare il `left` e `right` operandi per verificare l'uguaglianza, l'operatore converte entrambi i valori a Coordinated Universal Time (UTC). L'operazione è equivalente alla seguente:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 In altre parole, il <xref:System.DateTimeOffset.op_Equality%2A> metodo determina se i due <xref:System.DateTimeOffset> oggetti rappresentano un singolo punto nel tempo. Consente di confrontare direttamente le date e ore né gli offset. Per determinare se due <xref:System.DateTimeOffset> gli oggetti rappresentano la stessa ora e hanno lo stesso valore di offset, usare il <xref:System.DateTimeOffset.EqualsExact%2A> (metodo).  
  
 È il metodo equivalente per l'operatore <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Primo oggetto da confrontare.</param>
        <param name="right">Secondo oggetto da confrontare.</param>
        <summary>Determina se un oggetto <see cref="T:System.DateTimeOffset" /> specificato è maggiore (o successivo) rispetto a un secondo oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
        <returns>
          <see langword="true" /> se il valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> dell'operando <paramref name="left" /> è successivo rispetto al valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> dell'operando <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.op_GreaterThan%2A> metodo consente di definire il funzionamento dell'operatore per greater than <xref:System.DateTimeOffset> oggetti. Consente codice simile al seguente:  
  
 [!code-csharp[System.DateTimeOffset.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#3)]
 [!code-vb[System.DateTimeOffset.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#3)]  
  
 I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.DateTimeOffset.Compare%2A> metodo invece. Possono anche chiamare il <xref:System.DateTimeOffset.op_GreaterThan%2A> metodo direttamente, come illustrato nell'esempio seguente viene illustrato.  
  
 [!code-vb[System.DateTimeOffset.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#4)]  
  
 Prima di valutare il `left` e `right` gli operandi dell'operatore converte entrambi i valori a Coordinated Universal Time (UTC). L'operazione è equivalente alla seguente:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#5)]
 [!code-vb[System.DateTimeOffset.Syntax#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#5)]  
  
 È il metodo equivalente per l'operatore <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Primo oggetto da confrontare.</param>
        <param name="right">Secondo oggetto da confrontare.</param>
        <summary>Determina se un oggetto <see cref="T:System.DateTimeOffset" /> specificato è maggiore di oppure uguale a un secondo oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
        <returns>
          <see langword="true" /> se il valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> dell'operando <paramref name="left" /> è uguale o successivo rispetto al valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> dell'operando <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.op_GreaterThan%2A> metodo consente di definire l'operazione di maggiore di o uguale all'operatore per <xref:System.DateTimeOffset> oggetti. Consente codice simile al seguente:  
  
 [!code-csharp[System.DateTimeOffset.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#5)]
 [!code-vb[System.DateTimeOffset.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#5)]  
  
 I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.DateTimeOffset.Compare%2A> metodo invece. Alcuni linguaggi possono anche chiamare il <xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A> metodo direttamente, come illustrato nell'esempio seguente viene illustrato.  
  
 [!code-vb[System.DateTimeOffset.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#6)]  
  
 Prima di valutare il `left` e `right` gli operandi dell'operatore converte entrambi i valori a Coordinated Universal Time (UTC). L'operazione è equivalente alla seguente:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#6)]
 [!code-vb[System.DateTimeOffset.Syntax#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#6)]  
  
 È il metodo equivalente per l'operatore <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator DateTimeOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Implicit(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator DateTimeOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : DateTime -&gt; DateTimeOffset" Usage="System.DateTimeOffset.op_Implicit dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime">Oggetto da convertire.</param>
        <summary>Definisce una conversione implicita di un oggetto <see cref="T:System.DateTime" /> in un oggetto <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Oggetto convertito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.op_Implicit%2A> metodo consente al compilatore di convertire automaticamente un <xref:System.DateTime> dell'oggetto a un <xref:System.DateTimeOffset> oggetto senza un operatore di eseguire il cast esplicito (in c#) o una chiamata a una funzione di conversione (in Visual Basic). Definisce una conversione verso un che non comporta la perdita di dati e non viene generata un' <xref:System.OverflowException>. Il <xref:System.DateTimeOffset.op_Implicit%2A> metodo rende il codice, ad esempio i possibili seguenti:  
  
 [!code-csharp[System.DateTimeOffset.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#7)]
 [!code-vb[System.DateTimeOffset.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#7)]  
  
 Questo metodo equivale al <xref:System.DateTimeOffset.%23ctor%2A> costruttore. L'offset del valore risultante <xref:System.DateTimeOffset> oggetto dipende dal valore della <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> proprietà del `dateTime` parametro:  
  
-   Se il valore della <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> proprietà è <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, la data e ora del <xref:System.DateTimeOffset> oggetto è uguale a `dateTime`e il relativo <xref:System.DateTimeOffset.Offset%2A> proprietà è uguale a 0.  
  
-   Se il valore della <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> proprietà è <xref:System.DateTimeKind.Local?displayProperty=nameWithType> o <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, la data e ora del <xref:System.DateTimeOffset> oggetto è uguale a `dateTime`e il relativo <xref:System.DateTimeOffset.Offset%2A> proprietà è uguale all'offset del fuso orario corrente del sistema locale.  
  
 È il metodo equivalente per l'operatore <xref:System.DateTimeOffset.%23ctor%28System.DateTime%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora UTC (Coordinated Universal Time) risultanti dall'applicazione dell'offset sono precedenti a <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
La data e l'ora UTC risultanti dall'applicazione dell'offset sono successive a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Primo oggetto da confrontare.</param>
        <param name="right">Secondo oggetto da confrontare.</param>
        <summary>Determina se due oggetti <see cref="T:System.DateTimeOffset" /> specificati si riferiscono a date e ore diverse.</summary>
        <returns>
          <see langword="true" /> se gli operandi <paramref name="left" /> e <paramref name="right" /> non presentano lo stesso valore <see cref="P:System.DateTimeOffset.UtcDateTime" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.op_Inequality%2A> metodo definisce il funzionamento dell'operatore di disuguaglianza per <xref:System.DateTimeOffset> oggetti. Restituisce sempre il risultato opposto rispetto <xref:System.DateTimeOffset.op_Equality%2A>. Il <xref:System.DateTimeOffset.op_Inequality%2A> metodo attiva un codice simile al seguente:  
  
 [!code-csharp[System.DateTimeOffset.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#8)]
 [!code-vb[System.DateTimeOffset.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#8)]  
  
 Prima di valutare il `left` e `right` operandi per verificare l'uguaglianza, l'operatore converte entrambi i valori a Coordinated Universal Time (UTC). L'operazione è equivalente alla seguente:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 In altre parole, il <xref:System.DateTimeOffset.op_Inequality%2A> metodo determina se i due <xref:System.DateTimeOffset> oggetti rappresentano i diversi momenti nel tempo. Consente di confrontare direttamente le date e ore né gli offset.  
  
 I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.DateTimeOffset.Compare%2A> metodo invece. Inoltre, alcuni linguaggi possono anche chiamare il <xref:System.DateTimeOffset.op_Inequality%2A> metodo direttamente, come illustrato nell'esempio seguente viene illustrato.  
  
 [!code-vb[System.DateTimeOffset.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#9)]  
  
 È il metodo equivalente per l'operatore <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Primo oggetto da confrontare.</param>
        <param name="right">Secondo oggetto da confrontare.</param>
        <summary>Determina se un oggetto <see cref="T:System.DateTimeOffset" /> specificato è minore di un secondo oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
        <returns>
          <see langword="true" /> se il valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> di <paramref name="left" /> è precedente rispetto al valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.op_LessThan%2A> metodo consente di definire il funzionamento dell'operatore per minore <xref:System.DateTimeOffset> oggetti. Consente codice simile al seguente:  
  
 [!code-csharp[System.DateTimeOffset.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#10)]
 [!code-vb[System.DateTimeOffset.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#10)]  
  
 Prima di valutare il `left` e `right` gli operandi dell'operatore converte entrambi gli operandi a Coordinated Universal Time (UTC). L'operazione è equivalente alla seguente:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#8)]
 [!code-vb[System.DateTimeOffset.Syntax#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#8)]  
  
 I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.DateTimeOffset.Compare%2A> metodo invece. Inoltre, alcuni linguaggi possono anche chiamare il <xref:System.DateTimeOffset.op_LessThan%2A> metodo direttamente, come illustrato nell'esempio seguente viene illustrato.  
  
 [!code-vb[System.DateTimeOffset.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#11)]  
  
 È il metodo equivalente per l'operatore <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Primo oggetto da confrontare.</param>
        <param name="right">Secondo oggetto da confrontare.</param>
        <summary>Determina se un oggetto <see cref="T:System.DateTimeOffset" /> specificato è minore di un secondo oggetto <see cref="T:System.DateTimeOffset" /> specificato.</summary>
        <returns>
          <see langword="true" /> se il valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> di <paramref name="left" /> è precedente rispetto al valore <see cref="P:System.DateTimeOffset.UtcDateTime" /> di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> metodo consente di definire l'operazione di minore di o uguale all'operatore per <xref:System.DateTimeOffset> oggetti. Consente codice simile al seguente:  
  
 [!code-csharp[System.DateTimeOffset.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#12)]
 [!code-vb[System.DateTimeOffset.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#12)]  
  
 I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.DateTimeOffset.Compare%2A> metodo invece. Alcuni linguaggi possono anche chiamare il <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> metodo direttamente, come illustrato nell'esempio seguente viene illustrato.  
  
 [!code-vb[System.DateTimeOffset.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#13)]  
  
 Prima di valutare il `left` e `right` gli operandi dell'operatore converte entrambi i valori a Coordinated Universal Time (UTC). L'operazione è equivalente alla seguente:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#9)]
 [!code-vb[System.DateTimeOffset.Syntax#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#9)]  
  
 È il metodo equivalente per l'operatore <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sottrae un oggetto <see cref="T:System.DateTimeOffset" /> o <see cref="T:System.TimeSpan" /> specificato da un oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As DateTimeOffset, right As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * DateTimeOffset -&gt; TimeSpan" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Minuendo.</param>
        <param name="right">Sottraendo.</param>
        <summary>Sottrae uno oggetto <see cref="T:System.DateTimeOffset" /> da un altro oggetto e genera un intervallo di tempo.</summary>
        <returns>Oggetto che rappresenta la differenza tra <paramref name="left" /> e <paramref name="right" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.op_Subtraction%2A> metodo consente di definire l'operazione di sottrazione per <xref:System.DateTimeOffset> oggetti. Consente codice simile al seguente:  
  
 [!code-csharp[System.DateTimeOffset.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#14)]
 [!code-vb[System.DateTimeOffset.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#14)]  
  
 Possono chiamare le lingue che non supportano l'overload degli operatori e gli operatori personalizzati di <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> metodo invece.  
  
 Il metodo equivalente per l'operatore è <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator - (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Subtraction(valuetype System.DateTimeOffset dateTimeOffset, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator -(DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset - timeSpan" FrameworkAlternate="netcore-2.2;netframework-2.0" />
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator - (DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Subtraction(valuetype System.DateTimeOffset dateTimeTz, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator -(DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeTz - timeSpan" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="dateTimeTz" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="1" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset">Oggetto data e ora da cui sottrarre un valore.</param>
        <param name="dateTimeTz">To be added.</param>
        <param name="timeSpan">Intervallo di tempo da sottrarre.</param>
        <summary>Sottrae un determinato intervallo di tempo da una data e un'ora specificate, generando una data e un'ora nuove.</summary>
        <returns>Oggetto uguale al valore di <paramref name="dateTimeOffset" /> meno <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.op_Subtraction%2A> metodo consente di definire l'operazione di sottrazione per <xref:System.DateTimeOffset> oggetti. Consente codice simile al seguente:  
  
 [!code-csharp[System.DateTimeOffset.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#15)]
 [!code-vb[System.DateTimeOffset.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#15)]  
  
 Possono chiamare le lingue che non supportano l'overload degli operatori e gli operatori personalizzati di <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> metodo invece.  
  
 Il metodo equivalente per l'operatore è <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore risultante di <see cref="T:System.DateTimeOffset" /> è minore di <see cref="F:System.DateTimeOffset.MinValue" /> o maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.Subtract(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'equivalente <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che contiene una data e un'ora da convertire.</param>
        <summary>Converte la rappresentazione specificata in forma di stringa di una data, di un'ora e di un offset nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente.</summary>
        <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="input" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Parse%28System.String%29> Analizza una stringa con tre elementi che possono essere visualizzati in qualsiasi ordine e sono delimitate da spazi vuoti. Questi tre elementi sono come illustrato nella tabella seguente.  
  
|Elemento|Esempio|  
|-------------|-------------|  
|\<Data >|"2/10/2007"|  
|\<Ora >|"1:02: DALLE 22.03 DEL"|  
|\<Offset >|"-7:30"|  
  
 Anche se ognuno di questi elementi è facoltativa, \<Offset > non può essere visualizzata da sola. Ma deve essere fornita con \<data > o \<ora >. Se \<data > non è presente, all'impostazione predefinita il valore è il giorno corrente. Se \<ora > non è presente, all'impostazione predefinita il valore è 12:00:00 AM. Se \<data > è presente, ma il relativo anno componente è costituito da due sole cifre, viene convertito in un anno nel calendario corrente di cultura correnti in base al valore della <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> proprietà. Se \<Offset > non è presente, all'impostazione predefinita il valore è l'offset del fuso orario locale. \<Offset > può rappresentare un valore negativo o un offset positivo da Coordinated Universal Time (UTC). In entrambi i casi \<Offset > deve includere un simbolo di segno.  
  
 Il `input` stringa viene analizzata tramite le informazioni di formattazione in un <xref:System.Globalization.DateTimeFormatInfo> oggetto inizializzato per impostazioni cultura correnti. Per analizzare una stringa che contiene la formattazione designato che non corrisponde necessariamente alla formattazione delle impostazioni cultura correnti, usare il <xref:System.DateTimeOffset.ParseExact%2A> metodo e fornire un identificatore di formato.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.DateTimeOffset.Parse%28System.String%29> metodo per analizzare le stringhe di data e ora diversi. L'esempio include l'output dal 22 marzo 2007, in un sistema le cui impostazioni cultura è en-us.  
  
 [!code-csharp[System.DateTimeOffset.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#1)]
 [!code-vb[System.DateTimeOffset.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> non contiene una rappresentazione di stringa valida per data e ora.  
  
oppure 
 <paramref name="input" /> contiene la rappresentazione di stringa di un valore di offset senza data o ora.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che contiene una data e un'ora da convertire.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni sul formato specifiche delle impostazioni cultura relative a <paramref name="input" />.</param>
        <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nel relativo <see cref="T:System.DateTimeOffset" /> equivalente usando le informazioni sul formato relative alle impostazioni cultura specificate.</summary>
        <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="input" />, come specificato da <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo analizza una stringa con tre elementi che possono essere visualizzati in qualsiasi ordine e sono delimitate da spazi vuoti. Questi tre elementi sono visualizzati nella tabella seguente.  
  
|Elemento|Esempio|  
|-------------|-------------|  
|\<Data >|"2/10/2007"|  
|\<Ora >|"1:02: DALLE 22.03 DEL"|  
|\<Offset >|"-7:30"|  
  
 Anche se ognuno di questi elementi è facoltativa, \<Offset > non può essere visualizzata da sola. Ma deve essere fornita con \<data > o \<ora >. Se \<data > non è presente, all'impostazione predefinita il valore è il giorno corrente. Se \<data > è presente, ma il relativo anno componente è costituito da due sole cifre, viene convertito in un anno il `provider` calendario corrente del parametro in base al valore della <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> proprietà. Se \<ora > non è presente, all'impostazione predefinita il valore è 12:00:00 AM. Se \<Offset > non è presente, all'impostazione predefinita il valore è l'offset del fuso orario locale. \<Offset > può rappresentare un valore negativo o un offset positivo da Coordinated Universal Time (UTC). In entrambi i casi \<Offset > deve includere un simbolo di segno.  
  
 Il formato di questi tre elementi è definito dal `formatProvider` parametro, che può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura di cui formattazione verrà usata nel `input` parametro. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione usata in `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 Il segno positivo o negativo usato nella \<Offset > deve essere + o -. Non è definito dal <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> o <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> delle proprietà delle <xref:System.Globalization.NumberFormatInfo> oggetto del `formatProvider` parametro.  
  
   
  
## Examples  
 L'esempio seguente analizza date e stringhe di ora che sono formattate per le impostazioni cultura fr-fr e li Visualizza uso del sistema locale predefinito en-us delle impostazioni cultura.  
  
 [!code-csharp[System.DateTimeOffset.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#2)]
 [!code-vb[System.DateTimeOffset.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> non contiene una rappresentazione di stringa valida per data e ora.  
  
oppure 
 <paramref name="input" /> contiene la rappresentazione di stringa di un valore di offset senza data o ora.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider = null, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char), Optional formatProvider As IFormatProvider = null, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che contiene una data e un'ora da convertire.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni sul formato specifiche delle impostazioni cultura relative a <paramref name="input" />.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />. Un valore tipico da specificare è <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
        <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando le informazioni sul formato relative alle impostazioni cultura e lo stile di formattazione specificati.</summary>
        <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="input" /> come specificato da <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo analizza una stringa con tre elementi che possono essere visualizzati in qualsiasi ordine e sono delimitate da spazi vuoti. Questi tre elementi sono visualizzati nella tabella seguente.  
  
|Elemento|Esempio|  
|-------------|-------------|  
|\<Data >|"2/10/2007"|  
|\<Ora >|"1:02: DALLE 22.03 DEL"|  
|\<Offset >|"-7:30"|  
  
 Anche se ognuno di questi elementi è facoltativa, \<Offset > non può essere visualizzata da sola. Ma deve essere fornita con \<data > o \<ora >. Se \<data > non è presente, all'impostazione predefinita il valore è il giorno corrente. Se \<data > è presente, ma il relativo anno componente è costituito da due sole cifre, viene convertito in un anno il `provider` calendario corrente del parametro in base al valore della <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> proprietà. Se \<ora > non è presente, all'impostazione predefinita il valore è 12:00:00 AM. Se \<Offset > non è presente, all'impostazione predefinita valore è l'offset del fuso orario locale, o <xref:System.TimeSpan.Zero?displayProperty=nameWithType> se entrambi i <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> o <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> valore è espresso nel `styles` parametro. Se \<Offset > è presente, può rappresentare un valore negativo o un offset positivo da Coordinated Universal Time (UTC). In entrambi i casi \<Offset > deve includere un simbolo di segno.  
  
 Il formato di questi tre elementi è definito dal `formatProvider` parametro, che può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura di cui formattazione verrà usata nel `input` parametro. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione usata in `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Ogni elemento può anche essere delimitato da spazi vuoti iniziali o finali e il \<data > e \<ora > gli elementi possono includere uno spazio vuoto interno (ad esempio 6:00:00). Solo il \<Offset > componente non può includere uno spazio vuoto interno.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 Il segno positivo o negativo usato nella \<Offset > deve essere + o -. Non è definito dal <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> o <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> delle proprietà delle <xref:System.Globalization.NumberFormatInfo> oggetto restituito dal `formatProvider` parametro.  
  
 La tabella seguente illustra i membri del <xref:System.Globalization.DateTimeStyles?displayProperty=nameWithType> enumerazione che sono supportati.  
  
|Membro DateTimeStyles|Descrizione|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Analizza la stringa rappresentata dal `input` e, se necessario, lo converte in formato UTC. È equivalente all'analisi di una stringa e quindi chiama il <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> metodo dell'oggetto restituito <xref:System.DateTimeOffset> oggetto.|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Anche se valido, questo valore viene ignorato. Lo spazio vuoto interno è consentito nel \<data > e \<ora > elementi.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Anche se valido, questo valore viene ignorato. Lo spazio vuoto iniziale è consentito davanti a ogni componente nella stringa analizzata.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Anche se valido, questo valore viene ignorato. Lo spazio vuoto finale è consentito davanti a ogni componente nella stringa analizzata.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Comportamento predefinito. Impossibile eseguire l'override fornendo una più restrittiva <xref:System.Globalization.DateTimeStyles> valore di enumerazione, ad esempio <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Indica che, se il `input` parametro non è presente un \<Offset > elemento deve essere fornito l'offset del fuso orario locale. Si tratta del comportamento predefinito del <xref:System.DateTimeOffset.Parse%2A> (metodo).|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Indica che, se il `input` parametro non è presente un \<Offset > elemento, l'offset UTC (00:00) deve essere fornito.|  
|<xref:System.Globalization.DateTimeStyles.None>|Anche se valido, questo valore viene ignorato e non ha alcun effetto.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Poiché il <xref:System.DateTimeOffset> struttura non include un `Kind` proprietà, questo valore non ha alcun effetto.|  
  
 Solo il <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> valore non è supportato. Un' <xref:System.ArgumentException> viene generata se questo valore viene incluso nel `styles` parametro.  
  
   
  
## Examples  
 L'esempio seguente illustra l'effetto del passaggio di <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>, e <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> i valori per il `styles` parametro del <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> (metodo).  
  
 [!code-csharp[System.DateTimeOffset.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#3)]
 [!code-vb[System.DateTimeOffset.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.  
  
oppure 
 <paramref name="styles" /> non è un valore <see cref="T:System.Globalization.DateTimeStyles" /> valido.  
  
oppure 
 <paramref name="styles" /> contiene un valore <see cref="T:System.Globalization.DateTimeStyles" /> non supportato.  
  
oppure 
 <paramref name="styles" /> contiene valori <see cref="T:System.Globalization.DateTimeStyles" /> che non possono essere usati insieme.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> non contiene una rappresentazione di stringa valida per data e ora.  
  
oppure 
 <paramref name="input" /> contiene la rappresentazione di stringa di un valore di offset senza data o ora.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'equivalente <see cref="T:System.DateTimeOffset" />. Il formato della rappresentazione di stringa deve corrispondere esattamente a un formato specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che contiene una data e un'ora da convertire.</param>
        <param name="format">Identificatore di formato che definisce il formato previsto di <paramref name="input" />.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
        <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando il formato specificato e le informazioni sul formato relative alle impostazioni cultura specificate. Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
        <returns>Oggetto equivalente alla data e all'ora contenute in <paramref name="input" /> come specificato da <paramref name="format" /> e <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> metodo analizza la rappresentazione di stringa di una data, che deve essere nel formato definito per il `format` parametro. Richiede inoltre che il \<data >, \<ora >, e \<Offset > gli elementi della rappresentazione di stringa di data e ora vengono visualizzati nell'ordine specificato dalla `format`. Se il `input` stringa non corrisponde a ciò `format` parametro, il metodo genera un <xref:System.FormatException>.  Al contrario, il <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metodo analizza la rappresentazione di stringa di una data in uno dei formati riconosciuto dal provider di formato <xref:System.Globalization.DateTimeFormatInfo> oggetto. <xref:System.DateTimeOffset.Parse%2A> consente anche il \<data >, \<ora >, e \<Offset > gli elementi della rappresentazione di stringa di data e ora vengano visualizzati in qualsiasi ordine.  
  
 Il `format` parametro è una stringa che contiene un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il formato richiesto del `input` parametro. Per informazioni dettagliate sui codici di formattazione validi, vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Se `format` include le `z`, `zz`, o `zzz` identificatori di formato personalizzata per indicare che deve essere presente in un offset `input`, offset deve includere un segno negativo o un segno positivo. Se manca il segno, il metodo genera un <xref:System.FormatException>.  
  
 Se `format` richiede che `input` contenga una data ma non un'ora, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a mezzanotte (0: 00:00). Se `format` richiede che `input` contiene un'ora, ma non una data, risultante <xref:System.DateTimeOffset> oggetto viene assegnato la data corrente nel sistema locale. Se `format` non richiede `input` contenga un offset, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a differenza di fuso orario del sistema locale.  
  
 La data e i simboli di ora e stringhe usate nelle `input` sono definiti dal `formatProvider` parametro, così come il formato della preciso `input` se `format` è una stringa dell'identificatore di formato standard. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura basate su cui `input` viene interpretato. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal relativo <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> proprietà definisce i simboli e la formattazione `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metodo con identificatori di formato standard e personalizzate e le impostazioni cultura invarianti per analizzare le stringhe di data e ora diversi.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#1)]
 [!code-vb[System.DateTimeOffset.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#1)]  

L'esempio seguente analizza una matrice di stringhe che devono essere conformi a [ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier). Come output illustrato nell'esempio, le stringhe con spazi iniziali o finali non vengono analizzate correttamente, così come le stringhe con gli elementi di data e ora che sono comprese nell'intervallo.

[!code-csharp[Parsing an ISO 8601 string](~/samples/snippets/csharp/api/system/datetimeoffset/parseexact/parseexact-iso8601.cs)]
[!code-vb[Parsing an ISO 8601 string](~/samples/snippets/visualbasic/api/system/datetimeoffset/parseexact/parseexact-iso8601.vb)]


 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.  
  
oppure 
 <paramref name="format" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> è una stringa vuota ("").  
  
oppure 
 <paramref name="input" /> non contiene una rappresentazione di stringa valida per data e ora.  
  
oppure 
 Il parametro <paramref name="format" /> è una stringa vuota.  
  
oppure 
Il componente relativo alle ore e l'identificatore AM/PM in <paramref name="input" /> non corrispondono.</exception>
        <block subset="none" type="usage">
          <para>Nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], il <see cref="Overload:System.DateTimeOffset.ParseExact" /> metodo genera un <see cref="T:System.FormatException" /> se la stringa da analizzare include un componente di ora e un indicatore AM/PM non presenti nel contratto. Nel [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] , ignorando le versioni precedenti, l'indicatore AM/PM.</para>
        </block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Stringhe di formato di data e ora standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Stringhe di formato di data e ora personalizzato</related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Intervallo di caratteri che rappresenta una data e ora.</param>
        <param name="format">Intervallo di caratteri che contiene un identificatore di formato che definisce il formato previsto di <paramref name="input" />.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="input" />.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />.</param>
        <summary>Converte un intervallo di caratteri che rappresenta una data e un'ora nell'oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando il formato, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati. Il formato della rappresentazione di data e ora deve corrispondere esattamente al formato specificato.</summary>
        <returns>Oggetto equivalente alla data e all'ora contenute nel parametro <paramref name="input" />, come specificato dai parametri <paramref name="format" />, <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Questo metodo analizza un intervallo di caratteri che rappresenta una data, che deve essere nel formato definito per il `format` parametro. Richiede inoltre che il \<data >, \<ora >, e \<Offset > gli elementi della rappresentazione di stringa di data e ora vengono visualizzati nell'ordine specificato dalla `format`. Se `input` non corrisponde il `format` pattern, il metodo genera un <xref:System.FormatException>.  Al contrario, il <xref:System.DateTimeOffset.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> metodo analizza la rappresentazione di stringa di una data in uno dei formati riconosciuto dal provider di formato <xref:System.Globalization.DateTimeFormatInfo> oggetto. <xref:System.DateTimeOffset.Parse%2A> consente anche il \<data >, \<ora >, e \<Offset > gli elementi della rappresentazione di stringa di data e ora vengano visualizzati in qualsiasi ordine.  
  
 Il `format` parametro è un intervallo di caratteri che contiene un identificatore di formato standard a carattere singolo o uno o più identificatori di formato personalizzato che definiscono il formato richiesto del `input` parametro. Per informazioni dettagliate sui codici di formattazione validi, vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Se `format` include le `z`, `zz`, o `zzz` identificatori di formato personalizzata per indicare che deve essere presente in un offset `input`, offset deve includere un segno negativo o un segno positivo. Se manca il segno, il metodo genera un <xref:System.FormatException>.  
  
 Se `format` richiede che `input` contenga una data ma non un'ora, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a mezzanotte (0: 00:00). Se `format` richiede che `input` contiene un'ora, ma non una data, risultante <xref:System.DateTimeOffset> oggetto viene assegnato la data corrente nel sistema locale. Se `format` non richiede `input` contenga un offset, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a differenza di fuso orario del sistema locale.  
  
 La data e i simboli di ora e stringhe usate nelle `input` sono definiti dal `formatProvider` parametro, così come il formato della preciso `input` se `format` è un identificatore di formato standard. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura basate su cui `input` viene interpretato. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal relativo <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> proprietà definisce i simboli e la formattazione `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.  
oppure  
Il parametro <paramref name="styles" /> include un valore non supportato.  
oppure  
Il parametro <paramref name="styles" /> contiene valori <see cref="T:System.Globalization.DateTimeStyles" /> che non possono essere usati insieme.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> è un intervallo di caratteri vuoto.  
 -oppure- <paramref name="input" /> non contiene una rappresentazione di stringa valida per data e ora.  
 -oppure- <paramref name="format" /> è un intervallo di caratteri vuoto.  
 oppure  
 Il componente relativo alle ore e l'identificatore AM/PM in <paramref name="input" /> non corrispondono.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Intervallo di caratteri contenente una data e un'ora da convertire.</param>
        <param name="formats">Matrice di identificatori di formato che definiscono i formati previsti di <paramref name="input" />.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />.</param>
        <summary>Converte un intervallo di caratteri che contiene la rappresentazione stringa di una data e di un'ora nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando i formati, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati. Il formato della rappresentazione di data e ora deve corrispondere esattamente a uno dei formati specificati.</summary>
        <returns>Oggetto equivalente alla data e all'ora contenute nel parametro <paramref name="input" />, come specificato dai parametri <paramref name="formats" />, <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
Questo metodo analizza un intervallo di caratteri che rappresenta una data che corrisponde a uno dei modelli assegnati per il `formats` parametro. Se `input` non corrispondono a uno di questi modelli con una delle varianti definite dal `styles` parametro, il metodo genera un <xref:System.FormatException>. Oltre a confrontare `input` a più schemi di formattazione, si comporta in modo identico a questo overload di <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> (metodo).  
  
 Il `formats` parametro è una matrice di stringhe cui elementi contengono un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il modello consentito per il `input` parametro. Quando viene chiamato il metodo, `input` deve corrispondere a uno di questi modelli. Per informazioni dettagliate sui codici di formattazione validi, vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Se l'elemento corrispondente nel `formats` include le `z`, `zz`, o `zzz` identificatori di formato personalizzata per indicare che deve essere presente in un offset `input`, offset deve includere un segno negativo o un segno positivo. Se manca il segno, il metodo genera un <xref:System.FormatException>.  
  
> [!IMPORTANT]
>  Uso di `formats` parametro di questo overload per specificare più formati può contribuire a ridurre la possibilità di accedere più utenti esperienza durante l'immissione di date e ore. In particolare, la possibilità di definire più modelli di input consente a un'applicazione gestire le rappresentazioni di data e ora che è possano, includere o escludere gli zeri iniziali in mesi, giorni, ore, minuti e secondi.
  
 Se l'elemento corrispondente nel `formats` richiede che `input` contenga una data ma non un'ora, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a mezzanotte (0: 00:00). Se l'elemento corrispondente nel `formats` richiede che `input` contiene un'ora, ma non una data, risultante <xref:System.DateTimeOffset> oggetto viene assegnato la data corrente nel sistema locale. Se l'elemento corrispondente nel `formats` non richiede `input` contenga un offset, l'offset del valore risultante <xref:System.DateTimeOffset> oggetto dipende dal valore della `styles` parametro. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeLocal>, l'offset del fuso orario locale viene assegnato al <xref:System.DateTimeOffset> oggetto. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, offset, Coordinated Universal Time (UTC) o + 00:00, viene assegnato al <xref:System.DateTimeOffset> oggetto. Se viene specificato nessuno dei due valori, viene usato l'offset del fuso orario locale.  
  
 La data e i simboli di ora e stringhe usate nelle `input` sono definiti dal `formatProvider` parametro. Lo stesso vale per il formato della preciso `input`, se l'elemento corrispondente di `formats` è una stringa dell'identificatore di formato standard. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura basate su cui `input` viene interpretato. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce i simboli e la formattazione `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 Il `styles` parametro definisce se è consentito lo spazio vuoto nella stringa di input, indica la modalità di analisi delle stringhe senza un componente di offset esplicita e supporta la conversione di UTC come parte dell'operazione di analisi. Tutti i membri del <xref:System.Globalization.DateTimeStyles> enumerazione sono supportati, ad eccezione <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. La tabella seguente elenca gli effetti di ogni membro supportato.  
  
|Membro`DateTimeStyles` |Comportamento|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Analizza `input` e, se necessario, lo converte in formato UTC. È equivalente all'analisi di una stringa e quindi chiama il <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> metodo dell'oggetto restituito <xref:System.DateTimeOffset> oggetto.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Se l'elemento corrispondente nel `formats` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset del fuso orario locale. Rappresenta il valore predefinito.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Se l'elemento corrispondente nel `formats` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset UTC di (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Consente `input` includere uno spazio vuoto interno non specificato da `format`. Lo spazio vuoto aggiuntivo può essere visualizzato tra i componenti di data e ora e all'interno di singoli componenti (tranne l'offset) e viene ignorato durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Consente `input` includere gli spazi iniziali non specificati da `formats`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Consente `input` da includere non è specificati da spazi finali `formats`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Consente `input` per includere gli spazi iniziali, finali e interni non specificati da `formats`. Tutti i caratteri vuoti aggiuntivi non è specificati nell'elemento corrispondente in `formats` vengono ignorati durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.None>|Indica che lo spazio vuoto aggiuntivo non è consentito in `input`. Lo spazio vuoto deve essere visualizzato esattamente come specificato in un particolare elemento di `formats` affinché si verifichi una corrispondenza. Comportamento predefinito.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Non ha alcun effetto perché la <xref:System.DateTimeOffset> struttura non include un `Kind` proprietà.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.  
-oppure- <paramref name="styles" /> include un valore non supportato.  
oppure  
Il parametro <paramref name="styles" /> contiene valori <see cref="T:System.Globalization.DateTimeStyles" /> che non possono essere usati insieme.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> è un intervallo di caratteri vuoto.  
-oppure- <paramref name="input" /> non contiene una rappresentazione di stringa valida per data e ora.  
oppure  
Nessun elemento di <paramref name="formats" /> contiene un identificatore di formato valido.  
oppure  
Il componente relativo alle ore e l'identificatore AM/PM in <paramref name="input" /> non corrispondono.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che contiene una data e un'ora da convertire.</param>
        <param name="format">Identificatore di formato che definisce il formato previsto di <paramref name="input" />.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />.</param>
        <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando il formato, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati. Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
        <returns>Oggetto equivalente alla data e all'ora contenute nel parametro <paramref name="input" />, come specificato dai parametri <paramref name="format" />, <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> metodo analizza la rappresentazione di stringa di una data, che deve essere nel formato definito per il `format` parametro. Richiede inoltre che il \<data >, \<ora >, e \<Offset > gli elementi della rappresentazione di stringa di data e ora vengono visualizzati nell'ordine specificato dalla `format`. Se il `input` stringa non corrisponde al modello del `format` parametro, qualsiasi variazione definito dal `styles` parametro, il metodo genera un <xref:System.FormatException>.  Al contrario, il <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> metodo analizza la rappresentazione di stringa di una data in uno dei formati riconosciuto dal provider di formato <xref:System.Globalization.DateTimeFormatInfo> oggetto. <xref:System.DateTimeOffset.Parse%2A> consente anche il \<data >, \<ora >, e \<Offset > gli elementi della rappresentazione di stringa di data e ora vengano visualizzati in qualsiasi ordine.  
  
 Il `format` parametro è una stringa che contiene un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il modello necessario per il `input` parametro. Per informazioni dettagliate sui codici di formattazione validi, vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Se `format` include le `z`, `zz`, o `zzz` identificatori di formato personalizzata per indicare che deve essere presente in un offset `input`, offset deve includere un segno negativo o un segno positivo. Se manca il segno, il metodo genera un <xref:System.FormatException>.  
  
 Se `format` richiede che `input` contenga una data ma non un'ora, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a mezzanotte (0: 00:00). Se `format` richiede che `input` contiene un'ora, ma non una data, risultante <xref:System.DateTimeOffset> oggetto viene assegnato la data corrente nel sistema locale. Se `format` non richiede `input` contenga un offset, l'offset del valore risultante <xref:System.DateTimeOffset> oggetto dipende dal valore della `styles` parametro. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeLocal>, l'offset del fuso orario locale viene assegnato al <xref:System.DateTimeOffset> oggetto. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, offset, Coordinated Universal Time (UTC) o + 00:00, viene assegnato al <xref:System.DateTimeOffset> oggetto. Se viene specificato nessuno dei due valori, viene usato l'offset del fuso orario locale.  
  
 La data e i simboli di ora e stringhe usate nelle `input` sono definiti dal `formatProvider` parametro. Lo stesso vale per il formato della preciso `input`, se `format` è una stringa dell'identificatore di formato standard. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura basate su cui `input` viene interpretato. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce i simboli e la formattazione `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 Il `styles` parametro definisce se è consentito lo spazio vuoto nella stringa di input, indica la modalità di analisi delle stringhe senza un componente di offset esplicita e supporta la conversione di UTC come parte dell'operazione di analisi. Tutti i membri del <xref:System.Globalization.DateTimeStyles> enumerazione sono supportati, ad eccezione <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. La tabella seguente elenca gli effetti di ogni membro supportato.  
  
|Membro`DateTimeStyles` |Comportamento|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Analizza `input` e, se necessario, lo converte in formato UTC. È equivalente all'analisi di una stringa e quindi chiama il <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> metodo dell'oggetto restituito <xref:System.DateTimeOffset> oggetto.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Se `format` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset del fuso orario locale. Rappresenta il valore predefinito.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Se `format` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset UTC di (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Consente `input` includere uno spazio vuoto interno non specificato da `format`. Lo spazio vuoto aggiuntivo può essere visualizzato tra i componenti di data e ora e all'interno di singoli componenti e viene ignorato durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Consente `input` includere gli spazi iniziali non specificati da `format`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Consente `input` da includere non è specificati da spazi finali `format`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Consente `input` per includere gli spazi iniziali, finali e interni non specificati da `format`. Tutti i caratteri vuoti aggiuntivi non specificati nella `format` vengono ignorati durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.None>|Indica che lo spazio vuoto aggiuntivo non è consentito in `input`. Lo spazio vuoto deve essere visualizzato esattamente come specificato in `format`. Comportamento predefinito.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Non ha alcun effetto perché la <xref:System.DateTimeOffset> struttura non include un `Kind` proprietà.|  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> metodo con identificatori di formato standard e personalizzate, le impostazioni cultura invarianti e vari <xref:System.Globalization.DateTimeStyles> i valori per analizzare le stringhe di data e ora diversi.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#2)]
 [!code-vb[System.DateTimeOffset.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#2)]  

L'esempio seguente usa numerosi <xref:System.Globalization.DateTimeStyles> valori da una matrice di stringhe che devono essere conformi a analizzare [ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier). Come illustrato nell'output dell'esempio, le stringhe siano nel formato corretto non è possibile analizzare se:

- contengono spazi vuoti e appropriata <xref:System.Globalization.DateTimeStyles> flag (ad esempio <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> non è stato specificato nella chiamata al metodo.

- contengono gli elementi di data e ora che sono comprese nell'intervallo.

Le stringhe che non si specifica un offset UTC si presuppone che l'offset del fuso orario locale (in questo caso, -07:00), a meno che il <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag viene fornito nella chiamata al metodo. In tal caso, questi sono considerati Coordinated Universal Time.

[!code-csharp[Parsing ISO 8601 strings](~/samples/snippets/csharp/api/system/datetimeoffset/parseexact/parseexact-iso8601-2.cs)]
[!code-vb[Parsing ISO 8601 strings](~/samples/snippets/visualbasic/api/system/datetimeoffset/parseexact/parseexact-iso8601-2.vb)]


 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.  
  
oppure 
Il parametro <paramref name="styles" /> include un valore non supportato.  
  
oppure 
Il parametro <paramref name="styles" /> contiene valori <see cref="T:System.Globalization.DateTimeStyles" /> che non possono essere usati insieme.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.  
  
oppure 
 <paramref name="format" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> è una stringa vuota ("").  
  
oppure 
 <paramref name="input" /> non contiene una rappresentazione di stringa valida per data e ora.  
  
oppure 
 Il parametro <paramref name="format" /> è una stringa vuota.  
  
oppure 
Il componente relativo alle ore e l'identificatore AM/PM in <paramref name="input" /> non corrispondono.</exception>
        <block subset="none" type="usage">
          <para>Nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], il <see cref="Overload:System.DateTimeOffset.ParseExact" /> metodo genera un <see cref="T:System.FormatException" /> se la stringa da analizzare include un componente di ora e un indicatore AM/PM non presenti nel contratto. Nel [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] , ignorando le versioni precedenti, l'indicatore AM/PM.</para>
        </block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Stringhe di formato di data e ora standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Stringhe di formato di data e ora personalizzato</related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che contiene una data e un'ora da convertire.</param>
        <param name="formats">Matrice di identificatori di formato che definiscono i formati previsti di <paramref name="input" />.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />.</param>
        <summary>Converte la rappresentazione di stringa specificata di una data e di un'ora nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando i formati, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati. Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
        <returns>Oggetto equivalente alla data e all'ora contenute nel parametro <paramref name="input" />, come specificato dai parametri <paramref name="formats" />, <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> metodo analizza la rappresentazione di stringa di una data che corrisponde a uno dei modelli assegnati per il `formats` parametro. Se il `input` stringa non corrisponde con una delle varianti definite da uno di questi modelli i `styles` parametro, il metodo genera un <xref:System.FormatException>. Oltre a confrontare `input` a più schemi di formattazione, si comporta in modo identico a questo overload di <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> (metodo).  
  
 Il `formats` parametro è una matrice di stringhe cui elementi contengono un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il modello consentito per il `input` parametro. Quando viene chiamato il metodo, `input` deve corrispondere a uno di questi modelli. Per informazioni dettagliate sui codici di formattazione validi, vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Se l'elemento corrispondente nel `formats` include le `z`, `zz`, o `zzz` identificatori di formato personalizzata per indicare che deve essere presente in un offset `input`, offset deve includere un segno negativo o un segno positivo. Se manca il segno, il metodo genera un <xref:System.FormatException>.  
  
> [!IMPORTANT]
>  Uso di `formats` parametro di questo overload per specificare più formati può contribuire a ridurre la possibilità di accedere più utenti esperienza durante l'immissione di date e ore. In particolare, la possibilità di definire più modelli di input consente a un'applicazione gestire le rappresentazioni di data e ora che è possano, includere o escludere gli zeri iniziali in mesi, giorni, ore, minuti e secondi. L'esempio fornisce un'illustrazione di questa.  
  
 Se l'elemento corrispondente nel `formats` richiede che `input` contenga una data ma non un'ora, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a mezzanotte (0: 00:00). Se l'elemento corrispondente nel `formats` richiede che `input` contiene un'ora, ma non una data, risultante <xref:System.DateTimeOffset> oggetto viene assegnato la data corrente nel sistema locale. Se l'elemento corrispondente nel `formats` non richiede `input` contenga un offset, l'offset del valore risultante <xref:System.DateTimeOffset> oggetto dipende dal valore della `styles` parametro. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeLocal>, l'offset del fuso orario locale viene assegnato al <xref:System.DateTimeOffset> oggetto. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, offset, Coordinated Universal Time (UTC) o + 00:00, viene assegnato al <xref:System.DateTimeOffset> oggetto. Se viene specificato nessuno dei due valori, viene usato l'offset del fuso orario locale.  
  
 La data e i simboli di ora e stringhe usate nelle `input` sono definiti dal `formatProvider` parametro. Lo stesso vale per il formato della preciso `input`, se l'elemento corrispondente di `formats` è una stringa dell'identificatore di formato standard. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura basate su cui `input` viene interpretato. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce i simboli e la formattazione `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 Il `styles` parametro definisce se è consentito lo spazio vuoto nella stringa di input, indica la modalità di analisi delle stringhe senza un componente di offset esplicita e supporta la conversione di UTC come parte dell'operazione di analisi. Tutti i membri del <xref:System.Globalization.DateTimeStyles> enumerazione sono supportati, ad eccezione <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. La tabella seguente elenca gli effetti di ogni membro supportato.  
  
|Membro`DateTimeStyles` |Comportamento|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Analizza `input` e, se necessario, lo converte in formato UTC. È equivalente all'analisi di una stringa e quindi chiama il <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> metodo dell'oggetto restituito <xref:System.DateTimeOffset> oggetto.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Se l'elemento corrispondente nel `formats` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset del fuso orario locale. Rappresenta il valore predefinito.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Se l'elemento corrispondente nel `formats` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset UTC di (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Consente `input` includere uno spazio vuoto interno non specificato da `format`. Lo spazio vuoto aggiuntivo può essere visualizzato tra i componenti di data e ora e all'interno di singoli componenti (tranne l'offset) e viene ignorato durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Consente `input` includere gli spazi iniziali non specificati da `formats`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Consente `input` da includere non è specificati da spazi finali `formats`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Consente `input` per includere gli spazi iniziali, finali e interni non specificati da `formats`. Tutti i caratteri vuoti aggiuntivi non è specificati nell'elemento corrispondente in `formats` vengono ignorati durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.None>|Indica che lo spazio vuoto aggiuntivo non è consentito in `input`. Lo spazio vuoto deve essere visualizzato esattamente come specificato in un particolare elemento di `formats` affinché si verifichi una corrispondenza. Comportamento predefinito.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Non ha alcun effetto perché la <xref:System.DateTimeOffset> struttura non include un `Kind` proprietà.|  
  
   
  
## Examples  
 Nell'esempio seguente definisce più formati di input per la rappresentazione di stringa di data e ora e valore di offset e quindi passa la stringa immessa dall'utente per il <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> (metodo).  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#3)]
 [!code-vb[System.DateTimeOffset.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'offset è maggiore di 14 ore o minore di -14 ore.  
  
oppure 
 <paramref name="styles" /> contiene un valore non supportato.  
  
oppure 
Il parametro <paramref name="styles" /> contiene valori <see cref="T:System.Globalization.DateTimeStyles" /> che non possono essere usati insieme.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> è una stringa vuota ("").  
  
oppure 
 <paramref name="input" /> non contiene una rappresentazione di stringa valida per data e ora.  
  
oppure 
Nessun elemento di <paramref name="formats" /> contiene un identificatore di formato valido.  
  
oppure 
Il componente relativo alle ore e l'identificatore AM/PM in <paramref name="input" /> non corrispondono.</exception>
        <block subset="none" type="usage">
          <para>Nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], il <see cref="Overload:System.DateTimeOffset.ParseExact" /> metodo genera un <see cref="T:System.FormatException" /> se la stringa da analizzare include un componente di ora e un indicatore AM/PM non presenti nel contratto. Nel [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] , ignorando le versioni precedenti, l'indicatore AM/PM.</para>
        </block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Stringhe di formato di data e ora standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Stringhe di formato di data e ora personalizzato</related>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public int Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Second" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Second" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Second As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Second { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Second : int" Usage="System.DateTimeOffset.Second" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo ai secondi dell'ora rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Componente relativo ai secondi dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come numero intero compreso tra 0 e 59.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.Second%2A> proprietà non è influenzata dal valore della <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 È anche possibile creare una rappresentazione di stringa di un <xref:System.DateTimeOffset> secondo componente dell'oggetto chiamando il <xref:System.DateTimeOffset.ToString%2A> metodo con la "s", o identificatori di formato personalizzato "ss".  
  
   
  
## Examples  
 L'esempio seguente mostra il componente relativo ai secondi di un <xref:System.DateTimeOffset> oggetti in tre modi diversi:  
  
-   Recuperando il valore della <xref:System.DateTimeOffset.Second%2A> proprietà.  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "s".  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con "ss" identificatore di formato.  
  
 [!code-csharp[System.DateTimeOffset.Properties#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#14)]
 [!code-vb[System.DateTimeOffset.Properties#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sottrae un intervallo di tempo o una durata specificata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : DateTimeOffset -&gt; TimeSpan" Usage="dateTimeOffset.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto che rappresenta il valore da sottrarre.</param>
        <summary>Sottrae un valore <see cref="T:System.DateTimeOffset" /> che rappresenta una data e un'ora specifiche dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <returns>Oggetto che specifica l'intervallo tra i due oggetti <see cref="T:System.DateTimeOffset" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo converte entrambi <xref:System.DateTimeOffset> gli oggetti a Coordinated Universal Time (UTC) prima di calcolare l'intervallo di tempo che le separa. Questa operazione rimuove qualsiasi effetto che possono avere diverse offset dall'ora UTC nel confronto.  
  
> [!NOTE]
>  Per i linguaggi che supportano gli operatori personalizzati, è possibile eseguire anche la sottrazione di data e ora usando l'operatore di sottrazione. Per informazioni dettagliate, vedere il <xref:System.DateTimeOffset.op_Subtraction%2A> (metodo).  
  
 Poiché nessuno dei due corrente <xref:System.DateTimeOffset> oggetto né la `value` parametro rappresentano la data e ora in un fuso orario specifico, il <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> metodo non prende in considerazione le regole di rettifica del fuso orario specifico quando sottrae date e ore.  
  
   
  
## Examples  
 L'esempio seguente illustra la sottrazione che utilizza il <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> (metodo).  
  
 [!code-csharp[System.DateTimeOffset.Methods#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#13)]
 [!code-vb[System.DateTimeOffset.Methods#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public DateTimeOffset Subtract (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset Subtract(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As TimeSpan) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset Subtract(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value">Intervallo di tempo da sottrarre.</param>
        <summary>Sottrae un intervallo di tempo specificato dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <returns>Oggetto che equivale alla data e all'ora rappresentate dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente, meno l'intervallo di tempo rappresentato da <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare il <xref:System.DateTimeOffset.Subtract%2A> metodo da cui sottrarre più di un tipo di intervallo di tempo (giorni, ore, minuti, secondi o millisecondi) in un'unica operazione. Il comportamento è identico al <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> metodo, che definisce l'operatore di sottrazione. Il <xref:System.DateTimeOffset> struttura supporta anche i metodi di aggiunta specializzati (ad esempio <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, e <xref:System.DateTimeOffset.AddMinutes%2A>) che consentono di eseguire la sottrazione assegnando un valore negativo per il parametro del metodo.  
  
> [!NOTE]
>  Questo metodo restituisce un nuovo <xref:System.DateTimeOffset> oggetto. Non modifica il valore dell'oggetto corrente aggiungendo `timeSpan` alla data e ora.  
  
 Il <xref:System.DateTimeOffset.Subtract%2A> metodo non influisce sul valore della <xref:System.DateTimeOffset> dell'oggetto <xref:System.DateTimeOffset.Offset%2A> proprietà. L'oggetto restituito <xref:System.DateTimeOffset> oggetto ha lo stesso offset dell'oggetto originale.  
  
 Poiché l'oggetto corrente <xref:System.DateTimeOffset> oggetto non rappresenta la data e ora in un fuso orario specifico, il <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29> metodo non prende in considerazione le regole di rettifica del fuso orario specifico quando si esegue la sottrazione.  
  
   
  
## Examples  
 L'esempio seguente illustra la sottrazione che utilizza il <xref:System.DateTimeOffset.Subtract%2A> (metodo).  
  
 [!code-csharp[System.DateTimeOffset.Methods#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#14)]
 [!code-vb[System.DateTimeOffset.Methods#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <see cref="T:System.DateTimeOffset" /> risultante è minore di <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
Il valore <see cref="T:System.DateTimeOffset" /> risultante è maggiore di <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Esecuzione di operazioni aritmetiche con date e ore</related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare con l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</param>
        <summary>Confronta il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente con un altro oggetto dello stesso tipo.</summary>
        <returns>Intero con segno a 32-bit che indica se l'oggetto <see cref="T:System.DateTimeOffset" /> corrente è minore di, uguale a o maggiore di <paramref name="obj" />. I valori restituiti del metodo vengono interpretati nel modo indicato di seguito: 
 <list type="table"><listheader><term> Valore restituito 
 </term><description> Descrizione 
 </description></listheader><item><term> Minore di zero 
 </term><description> L‎'oggetto <see cref="T:System.DateTimeOffset" /> corrente è minore di (precedente a) <paramref name="obj" />.  
  
 </description></item><item><term> Zero 
 </term><description> L'oggetto <see cref="T:System.DateTimeOffset" /> corrente è uguale a (stessa data e ora di) <paramref name="obj" />.  
  
 </description></item><item><term> Maggiore di zero 
 </term><description> L‎'oggetto <see cref="T:System.DateTimeOffset" /> corrente è maggiore di (successivo a) <paramref name="obj" />.  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">Oggetto che ha avviato il callback. La funzionalità di questo parametro non è attualmente implementata.</param>
        <summary>Viene eseguito quando la deserializzazione di un oggetto è stata completata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto da popolare con i dati.</param>
        <param name="context">Destinazione della serializzazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con tutti i dati richiesti per la serializzazione dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="info" /> è <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilità totale per il chiamante immediato. Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.DateTimeOffset.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di tick che rappresentano la data e l'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nell'ora dell'orologio.</summary>
        <value>Numero di tick nell'ora dell'orologio dell'oggetto <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.Ticks%2A> proprietà non è influenzata dal valore della <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 Il valore della <xref:System.DateTimeOffset.Ticks%2A> proprietà rappresenta il numero di intervalli di 100 nanosecondi che sono trascorsi 12:00:00 dalla mezzanotte dell'1 gennaio 0001 (il valore di <xref:System.DateTimeOffset.MinValue>). Non include segni di graduazione che verrebbero aggiunti per i secondi intercalari. Un nanosecondo corrisponde a un miliardesimo di secondo; sono presenti dieci milioni segni di graduazione in un secondo. Il valore della <xref:System.DateTimeOffset.Ticks%2A> proprietà compreso tra `DateTimeOffset.MinValue.Ticks` a `DateTimeOffset.MaxValue.Ticks`.  
  
 È possibile assegnare il numero di tick da un <xref:System.DateTimeOffset> utilizzando il <xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29> overload del costruttore.  
  
   
  
## Examples  
 Nell'esempio seguente viene inizializzato un <xref:System.DateTimeOffset> oggetto per approssimare il numero di tick in data 1 luglio 2008 1:23:07. Quindi Visualizza la data e il numero di tick rappresentato da tale data, nella console.  
  
 [!code-csharp[System.DateTimeOffset.Properties#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#15)]
 [!code-vb[System.DateTimeOffset.Properties#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcDateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public TimeSpan TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeOfDay { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : TimeSpan" Usage="System.DateTimeOffset.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ora del giorno per l'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Intervallo di tempo della data corrente trascorso a partire da mezzanotte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.TimeOfDay%2A> proprietà non è influenzata dal valore della <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 Il <xref:System.DateTimeOffset.TimeOfDay%2A> proprietà restituisce il componente ora di un <xref:System.DateTimeOffset> oggetto sotto forma di un <xref:System.TimeSpan> oggetto. È equivalente al <xref:System.DateTime.TimeOfDay%2A?displayProperty=nameWithType> proprietà.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.DateTimeOffset.TimeOfDay%2A> proprietà per estrarre l'ora e visualizzarlo sulla console.  
  
 [!code-csharp[System.DateTimeOffset.Properties#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#16)]
 [!code-vb[System.DateTimeOffset.Properties#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFileTime">
      <MemberSignature Language="C#" Value="public long ToFileTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTime();" />
      <MemberSignature Language="F#" Value="member this.ToFileTime : unit -&gt; int64" Usage="dateTimeOffset.ToFileTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente in un'ora di un file di Windows.</summary>
        <returns>Valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente espresso come un'ora di un file di Windows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ora di un file di Windows è un valore a 64 bit che rappresenta il numero di intervalli di 100 nanosecondi trascorsi dalla mezzanotte, 1 gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC). Windows Usa ora di un file per registrare un'applicazione consente di creare, accede a o scrive in un file.  
  
 Il <xref:System.DateTimeOffset.ToFileTime%2A> metodo converte corrente <xref:System.DateTimeOffset> data e ora in formato UTC prima di eseguire la conversione dell'oggetto. In altre parole, la chiamata di <xref:System.DateTimeOffset.ToFileTime%2A> metodo è equivalente alla chiamata al metodo seguente:  
  
```csharp
this.ToUtcDateTime().ToFileTime();  
```  
  
```vb  
Me.ToUtcDateTime().ToFileTime()  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'ora del file risultante rappresenterebbe una data e un'ora precedenti rispetto alla mezzanotte del 1 gennaio 1601 C.E. UTC (Coordinated Universal Time).</exception>
        <altmember cref="M:System.DateTimeOffset.FromFileTime(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToLocalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToLocalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToLocalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLocalTime () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToLocalTime();" />
      <MemberSignature Language="F#" Value="member this.ToLocalTime : unit -&gt; DateTimeOffset" Usage="dateTimeOffset.ToLocalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converte l'oggetto <see cref="T:System.DateTimeOffset" /> corrente in un oggetto <see cref="T:System.DateTimeOffset" /> che rappresenta l'ora locale.</summary>
        <returns>Oggetto che rappresenta la data e l'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente convertite nell'ora locale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire la conversione all'ora locale, il metodo converte innanzitutto corrente <xref:System.DateTimeOffset> data e ora a Coordinated Universal Time (UTC) per la sottrazione dell'offset dall'ora dell'oggetto. Converte quindi la data e ora UTC nell'ora locale aggiungendo l'offset del fuso orario locale. In questo modo, prende in considerazione eventuali regole di rettifica del fuso orario locale.  
  
 Sia il valore dell'oggetto corrente <xref:System.DateTimeOffset> oggetto e il valore della <xref:System.DateTimeOffset> oggetto restituito dalla chiamata al metodo rappresentano lo stesso punto nel tempo. Vale a dire, se entrambi sono passati per il <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> metodo, il metodo restituirà `true`.  
  
 Se la conversione causi una volta che è compreso nell'intervallo del <xref:System.DateTimeOffset> tipo, il <xref:System.DateTimeOffset.ToLocalTime%2A> metodo restituisce un <xref:System.DateTimeOffset> oggetto contenente la data e l'ora impostata su <xref:System.DateTimeOffset.MaxValue> o <xref:System.DateTimeOffset.MinValue> e l'offset impostato sull'offset del fuso orario locale.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.DateTimeOffset.ToLocalTime%2A> metodo per convertire un <xref:System.DateTimeOffset> valore nell'ora locale nel fuso orario ora solare del Pacifico. Viene inoltre illustrato il supporto del metodo per regole di regolazione del fuso orario locale.  
  
 [!code-csharp[System.DateTimeOffset.Methods#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#15)]
 [!code-vb[System.DateTimeOffset.Methods#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToUniversalTime" />
      </Docs>
    </Member>
    <Member MemberName="ToOffset">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToOffset (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToOffset(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToOffset(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToOffset (offset As TimeSpan) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToOffset(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.ToOffset : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.ToOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">Offset nel quale convertire il valore <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella data e nell'ora specificate da un valore di offset.</summary>
        <returns>Oggetto uguale all'oggetto <see cref="T:System.DateTimeOffset" /> originale (vale a dire i cui metodi <see cref="M:System.DateTimeOffset.ToUniversalTime" /> restituiscono date e ore identiche) ma la cui proprietà <see cref="P:System.DateTimeOffset.Offset" /> è impostata su <paramref name="offset" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.ToOffset%2A> metodo è un'alternativa alla chiamata di <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> (metodo). Può essere utile per l'esecuzione di conversioni semplici da un fuso orario a un altro quando l'offset dei fusi orari da Coordinated Universal Time (UTC) sono note. Tuttavia, poiché né originale <xref:System.DateTimeOffset> oggetto né il nuovo <xref:System.DateTimeOffset> oggetto restituito dalla chiamata al metodo in modo non ambiguo correlate a un determinato fuso orario, il metodo non si applica le regole di regolazione del fuso orario durante la conversione.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.DateTimeOffset.ToOffset%2A> metodo per convertire un <xref:System.DateTimeOffset> dell'oggetto a un <xref:System.DateTimeOffset> oggetto con un offset diverso.  
  
 [!code-csharp[System.DateTimeOffset.ToOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/cs/ToOffset.cs#1)]
 [!code-vb[System.DateTimeOffset.ToOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/vb/ToOffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.DateTimeOffset" /> risultante ha un valore <see cref="P:System.DateTimeOffset.DateTime" /> precedente rispetto a <see cref="F:System.DateTimeOffset.MinValue" />.  
  
oppure 
L'oggetto <see cref="T:System.DateTimeOffset" /> risultante ha un valore <see cref="P:System.DateTimeOffset.DateTime" /> successivo rispetto a <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> è minore di -14 ore.  
  
oppure 
 <paramref name="offset" /> è maggiore di 14 ore.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella rappresentazione di stringa equivalente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dateTimeOffset.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella rappresentazione di stringa equivalente.</summary>
        <returns>Rappresentazione di stringa di un oggetto <see cref="T:System.DateTimeOffset" /> che include l'offset aggiunto alla fine della stringa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito di questo metodo è identico a quello del <xref:System.DateTime.ToString?displayProperty=nameWithType> metodo, ad eccezione del fatto che include uno spazio seguito dall'offset aggiunto alla fine della stringa. In altre parole, formatta l'output usando il modello di data breve, il modello di molto tempo e il `zzz` stringa di formato personalizzato, con ogni elemento separato dal precedente da uno spazio. Ad esempio, se <xref:System.DateTime.ToString?displayProperty=nameWithType> restituisce un valore di 12/1/2008 6 15 50 PM, <xref:System.DateTimeOffset.ToString> restituisce un valore di 12/1/2008:15:50 PM 6 -08:00 per un periodo di tempo che è otto ore dietro Coordinated Universal Time (UTC).  
  
 Questo metodo Usa le informazioni di formattazione derivate da impostazioni cultura correnti. Per ulteriori informazioni, vedere <xref:System.Globalization.CultureInfo.CurrentCulture%2A>. Altri overload del <xref:System.DateTimeOffset.ToString%2A> metodo consentono di specificare le impostazioni cultura la cui formattazione da utilizzare e per definire il modello di output del <xref:System.DateTimeOffset> valore.  
  
   
  
## Examples  
 L'esempio seguente illustra le chiamate al <xref:System.DateTimeOffset.ToString> (metodo) e l'output viene visualizzato in un sistema le cui impostazioni cultura correnti è en-us.  
  
 [!code-csharp[System.DateTimeOffset.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#1)]
 [!code-vb[System.DateTimeOffset.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora non sono comprese nell'intervallo di date supportato dal calendario usato dalle impostazioni cultura correnti.</exception>
        <block subset="none" type="usage">
          <para>Il <see cref="M:System.DateTimeOffset.ToString" /> metodo restituisce la rappresentazione di stringa della data e ora nel calendario utilizzato dalle impostazioni cultura correnti. Se il valore dell'oggetto corrente <see cref="T:System.DateTimeOffset" /> istanza è precedente <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> o successiva a quella <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, il metodo genera un <see cref="T:System.ArgumentOutOfRangeException" />. Nell'esempio seguente viene illustrato questo concetto. Tenta di formattare una data che non rientra nell'intervallo del <see cref="T:System.Globalization.HijriCalendar" /> classe quando le impostazioni cultura correnti è quelle arabe (Siria).  
  
[! codice-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception2.cs#2)] [! codice vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception2.vb#2)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="dateTimeOffset.ToString formatProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella rappresentazione di stringa equivalente, usando le informazioni di formattazione specifiche delle impostazioni cultura definite.</summary>
        <returns>Rappresentazione di stringa del valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, come specificato da <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito di questo metodo è identico a quello del relativo equivalente overload della funzione di <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metodo, ad eccezione del fatto che include uno spazio seguito dall'offset aggiunto alla fine della stringa. In altre parole, formatta l'output usando il modello di data breve, il modello di molto tempo e il `zzz` stringa di formato personalizzato, con ogni elemento separato dal precedente da uno spazio.  
  
 Il formato di questi tre elementi è definito dal `formatProvider` parametro. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione vengono applicate per la stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti (vedere <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).  
  
   
  
## Examples  
 L'esempio seguente mostra una <xref:System.DateTimeOffset> dell'oggetto usando <xref:System.Globalization.CultureInfo> gli oggetti che rappresentano le impostazioni cultura invarianti, nonché quattro altre impostazioni cultura.  
  
 [!code-csharp[System.DateTimeOffset.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#2)]
 [!code-vb[System.DateTimeOffset.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora non sono comprese nell'intervallo di date supportato dal calendario usato da <paramref name="formatProvider" />.</exception>
        <block subset="none" type="usage">
          <para>Il <see cref="M:System.DateTimeOffset.ToString(System.IFormatProvider)" /> metodo restituisce la rappresentazione di stringa della data e ora nel calendario utilizzato dalle impostazioni cultura rappresentate dal <paramref name="formatProvider" /> parametro. Il calendario è definito dal <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> proprietà. Se il valore dell'oggetto corrente <see cref="T:System.DateTimeOffset" /> istanza è precedente <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> o successiva a quella <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, il metodo genera un <see cref="T:System.ArgumentOutOfRangeException" />. Nell'esempio seguente viene illustrato questo concetto. Tenta di formattare una data che non rientra nell'intervallo del <see cref="T:System.Globalization.JapaneseCalendar" /> classe.  
  
[! codice-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception1.cs#1)] [! codice vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception1.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="dateTimeOffset.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Stringa di formato.</param>
        <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</summary>
        <returns>Rappresentazione di stringa del valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, come specificato da <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `format` parametro deve contenere un carattere identificatore di formato singolo (vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) o un modello di formato personalizzato (vedere [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) ) che definisce il formato della stringa restituita. Se `format` è una stringa null o vuota (""), il <xref:System.DateTimeOffset> valore viene restituito il formato predefinito.  
  
 La tabella seguente illustra il funzionamento esatto di alcuni identificatori di formato quando abbinata <xref:System.DateTimeOffset>, che differisce dal comportamento se utilizzato con <xref:System.DateTime>.  
  
|Identificatore di formato esistente|Nuovo comportamento|  
|-------------------------------|------------------|  
|"K"|Progettato per eseguire il round trip una data e ora. Con <xref:System.DateTimeOffset>, esegue il mapping a "zzz" (l'offset viene visualizzato sempre con ore e minuti). Si noti che "K" è un identificatore di formato personalizzato. ma non è visualizzato come singolo carattere nel `format`.|  
|"U"|Non supportato.|  
|"r"|Converte il <xref:System.DateTimeOffset> oggetto a Coordinated Universal Time (UTC) e lo invia utilizzando la stringa di formato personalizzato `ddd, dd MMM yyyy HH:mm:ss GMT`.|  
|"u"|Converte il <xref:System.DateTimeOffset> oggetti in formato UTC e lo invia utilizzando il formato `yyyy-MM-dd HH:mm:ssZ`.|  
  
 I rimanente data standard e gli identificatori di formato di ora si comportano allo stesso con il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo come avviene con le <xref:System.DateTime.ToString%2A> (metodo).  
  
 Questo metodo Usa le informazioni di formattazione derivate da impostazioni cultura correnti. Per ulteriori informazioni, vedere <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.  
  
   
  
## Examples  
 L'esempio seguente mostra un <xref:System.DateTimeOffset> oggetti nella console tramite ognuno degli identificatori di formato di ora e data standard. L'output viene formattato usando l'en-us delle impostazioni cultura.  
  
 [!code-csharp[System.DateTimeOffset.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#3)]
 [!code-vb[System.DateTimeOffset.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">La lunghezza di <paramref name="format" /> è 1 e non è uno dei caratteri identificatori di formato standard definiti per <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
oppure 
 <paramref name="format" /> non contiene un modello di formato personalizzato valido.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora non sono comprese nell'intervallo di date supportato dal calendario usato dalle impostazioni cultura correnti.</exception>
        <block subset="none" type="usage">
          <para>Il <see cref="M:System.DateTimeOffset.ToString(System.String)" /> metodo restituisce la rappresentazione di stringa della data e ora nel calendario utilizzato dalle impostazioni cultura correnti. Se il valore dell'oggetto corrente <see cref="T:System.DateTimeOffset" /> istanza è precedente <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> o successiva a quella <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, il metodo genera un <see cref="T:System.ArgumentOutOfRangeException" />. Nell'esempio seguente viene illustrato questo concetto. Tenta di formattare una data che non rientra nell'intervallo del <see cref="T:System.Globalization.HebrewCalendar" /> classe quando le impostazioni cultura correnti sono ebraico (Israele).  
  
[! codice-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception3.cs#3)] [! codice vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception3.vb#3)]</para>
        </block>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Stringhe di formato di data e ora standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Stringhe di formato di data e ora personalizzato</related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="dateTimeOffset.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">Stringa di formato.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <summary>Converte il valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato e le informazioni sul formato specifiche delle impostazioni cultura indicate.</summary>
        <returns>Rappresentazione di stringa del valore dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, come specificato da <paramref name="format" /> e <paramref name="provider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `format` parametro deve contenere un carattere identificatore di formato singolo (vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) o un modello di formato personalizzato (vedere [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) ). Se `format` è una stringa null o vuota (""), il <xref:System.DateTimeOffset> oggetto viene restituito utilizzando il formato predefinito.  
  
 La tabella seguente illustra il funzionamento esatto di alcuni identificatori di formato quando abbinata <xref:System.DateTimeOffset>, che differisce dal comportamento se utilizzato con <xref:System.DateTime>.  
  
|Identificatore di formato esistente|Nuovo comportamento|  
|-------------------------------|------------------|  
|"K"|Progettato per eseguire il round trip una data e ora. Con <xref:System.DateTimeOffset>, esegue il mapping a "zzz" (l'offset viene visualizzato sempre con ore e minuti). Si noti che "K" è un identificatore di formato personalizzato. ma non è visualizzato come singolo carattere nel `format`.|  
|"U"|Non supportato.|  
|"r"|Converte il <xref:System.DateTimeOffset> oggetto a Coordinated Universal Time (UTC) e lo invia utilizzando la stringa di formato personalizzato `ddd, dd MMM yyyy HH:mm:ss GMT`.|  
|"u"|Converte il <xref:System.DateTimeOffset> valore in formato UTC e lo invia utilizzando il formato `yyyy-MM-dd HH:mm:ssZ`.|  
  
 I rimanente data standard e gli identificatori di formato di ora si comportano allo stesso con il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo come avviene con le <xref:System.DateTime.ToString%2A> (metodo).  
  
 Il modello che corrisponde a identificatori di formato standard, nonché i simboli e nomi dei componenti di data e ora, viene definito per il `formatProvider` parametro. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura di cui formattazione verrà usata in `input`. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione usata in `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti (vedere <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.DateTimeOffset.ToString%28System.String%2CSystem.IFormatProvider%29> metodo per visualizzare un <xref:System.DateTimeOffset> utilizzando una stringa di formato personalizzato per varie impostazioni cultura dell'oggetto.  
  
 [!code-csharp[System.DateTimeOffset.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#4)]
 [!code-vb[System.DateTimeOffset.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">La lunghezza di <paramref name="format" /> è 1 e non è uno dei caratteri identificatori di formato standard definiti per <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
oppure 
 <paramref name="format" /> non contiene un modello di formato personalizzato valido.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La data e l'ora non sono comprese nell'intervallo di date supportato dal calendario usato da <paramref name="formatProvider" />.</exception>
        <block subset="none" type="usage">
          <para>Il <see cref="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" /> metodo restituisce la rappresentazione di stringa della data e ora nel calendario usato dal <paramref name="formatProvider" /> parametro. Il calendario è definito dal <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> proprietà. Se il valore dell'oggetto corrente <see cref="T:System.DateTimeOffset" /> istanza è precedente <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> o successiva a quella <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, il metodo genera un <see cref="T:System.ArgumentOutOfRangeException" />. Nell'esempio seguente viene illustrato questo concetto. Tenta di formattare una data che non rientra nell'intervallo del <see cref="T:System.Globalization.UmAlQuraCalendar" /> classe.  
  
[! codice-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception4.cs#4)] [! codice vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception4.vb#4)]</para>
        </block>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Stringhe di formato di data e ora standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Stringhe di formato di data e ora personalizzato</related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">Esempio: Utilità di formattazione in .NET Framework 4</related>
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToUniversalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToUniversalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUniversalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUniversalTime () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToUniversalTime();" />
      <MemberSignature Language="F#" Value="member this.ToUniversalTime : unit -&gt; DateTimeOffset" Usage="dateTimeOffset.ToUniversalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converte l'oggetto <see cref="T:System.DateTimeOffset" /> corrente in un valore <see cref="T:System.DateTimeOffset" /> che rappresenta l'ora UTC (Coordinated Universal Time).</summary>
        <returns>Oggetto che rappresenta la data e l'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente convertite nell'ora UTC (Coordinated Universal Time).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo restituisce un <xref:System.DateTimeOffset> il cui <xref:System.DateTimeOffset.Offset%2A> è impostata su zero.  
  
 Sia il valore dell'oggetto corrente <xref:System.DateTimeOffset> oggetto e il valore della <xref:System.DateTimeOffset> oggetto restituito dalla chiamata al metodo rappresentano lo stesso punto nel tempo. Vale a dire, se entrambi sono passati per il <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> metodo, il metodo restituirà `true`.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.DateTimeOffset.ToUniversalTime%2A> metodo per convertire un'ora locale e diversi altri orari a Coordinated Universal Time (UTC).  
  
 [!code-csharp[System.DateTimeOffset.Methods#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#16)]
 [!code-vb[System.DateTimeOffset.Methods#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToLocalTime" />
        <altmember cref="M:System.DateTimeOffset.ToOffset(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="ToUnixTimeMilliseconds">
      <MemberSignature Language="C#" Value="public long ToUnixTimeMilliseconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToUnixTimeMilliseconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnixTimeMilliseconds () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToUnixTimeMilliseconds();" />
      <MemberSignature Language="F#" Value="member this.ToUnixTimeMilliseconds : unit -&gt; int64" Usage="dateTimeOffset.ToUnixTimeMilliseconds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il numero di millisecondi trascorsi da 1970-01-01T00:00:00Z.</summary>
        <returns>Numero di millisecondi trascorsi da 1970-01-01T00:00:00Z.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ora UNIX rappresenta il numero di secondi trascorsi 1970-01-01T00:00:00Z (1 gennaio, 1970, alle 12:00 AM UTC). Secondi di compensazione non viene preso in considerazione. Questo metodo restituisce il numero di millisecondi in orario Unix.  
  
 Questo metodo converte innanzitutto l'istanza corrente in formato UTC prima di restituire il numero di millisecondi nell'ora di Unix. Per i valori di data e l'ora precedente al 1970-01-01T00:00:00Z, questo metodo restituisce un valore negativo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeSeconds" />
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public long ToUnixTimeSeconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToUnixTimeSeconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUnixTimeSeconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnixTimeSeconds () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToUnixTimeSeconds();" />
      <MemberSignature Language="F#" Value="member this.ToUnixTimeSeconds : unit -&gt; int64" Usage="dateTimeOffset.ToUnixTimeSeconds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il numero di secondi trascorsi da 1970-01-01T00:00:00Z.</summary>
        <returns>Numero di secondi trascorsi da 1970-01-01T00:00:00Z.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ora UNIX rappresenta il numero di secondi trascorsi 1970-01-01T00:00:00Z (1 gennaio, 1970, alle 12:00 AM UTC). Secondi di compensazione non viene preso in considerazione.  
  
 Questo metodo converte innanzitutto l'istanza corrente in formato UTC prima di restituire l'ora di Unix. Per i valori di data e l'ora precedente al 1970-01-01T00:00:00Z, questo metodo restituisce un valore negativo.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.DateTimeOffset.ToUnixTimeSeconds%2A> metodo per restituire l'ora Unix di valori che sono uguali, poco prima e poco dopo 1970-01-01T00:00:00Z.  
  
 [!code-csharp[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/cs/tounixtimeseconds1.cs#1)]
 [!code-vb[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/vb/tounixtimeseconds1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional formatProvider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="dateTimeOffset.TryFormat (destination, charsWritten, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'equivalente <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che contiene una data e un'ora da convertire.</param>
        <param name="result">Quando questo metodo viene restituito, contiene l'oggetto <see cref="T:System.DateTimeOffset" /> equivalente alla data e all'ora di <paramref name="input" /> se la conversione ha esito positivo oppure <see cref="F:System.DateTimeOffset.MinValue" />, in caso contrario. La conversione ha esito negativo se il parametro <paramref name="input" /> è <see langword="null" /> o non contiene una rappresentazione di data e ora in formato di stringa valida. Questo parametro viene passato non inizializzato.</param>
        <summary>Prova a convertire una rappresentazione di stringa di una data e di un'ora nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload del metodo di <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> metodo è simile al <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=nameWithType> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce. Analizza una stringa con tre elementi che possono essere visualizzati in qualsiasi ordine e sono delimitate da spazi vuoti. Questi tre elementi sono visualizzati nella tabella seguente.  
  
|Elemento|Esempio|  
|-------------|-------------|  
|\<Data >|"2/10/2007"|  
|\<Ora >|"1:02: DALLE 22.03 DEL"|  
|\<Offset >|"-7:30"|  
  
 Anche se ognuno di questi elementi è facoltativa, \<Offset > non può essere visualizzata da sola. Ma deve essere fornita con \<data > o \<ora >. Se \<data > non è presente, all'impostazione predefinita il valore è il giorno corrente. Se \<data > è presente, ma il relativo anno componente è costituito da due sole cifre, viene convertito in un anno nel calendario corrente di cultura correnti in base al valore della <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> proprietà. Se \<ora > non è presente, all'impostazione predefinita il valore è 12:00:00 AM. Se \<Offset > non è presente, all'impostazione predefinita il valore è l'offset del fuso orario locale. Se \<Offset > è presente, può rappresentare un valore negativo o un offset positivo da Coordinated Universal Time (UTC). In entrambi i casi \<Offset > deve includere un simbolo di segno o il metodo restituisce `false`.  
  
 Il `input` stringa viene analizzata tramite le informazioni di formattazione in un <xref:System.Globalization.DateTimeFormatInfo> oggetto inizializzato per impostazioni cultura correnti. Per analizzare una stringa che contiene la formattazione designato che non corrisponde necessariamente a quella delle impostazioni cultura correnti, usare il <xref:System.DateTimeOffset.TryParseExact%2A> metodo e fornire un identificatore di formato.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> metodo per analizzare le stringhe diverse con vari formati di data e ora.  
  
 [!code-csharp[System.DateTimeOffset.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.DateTimeOffset.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Parse" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">Esempio: Utilità di formattazione in .NET Framework 4</related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che contiene una data e un'ora da convertire.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="input" />.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />.</param>
        <param name="result">Quando il metodo restituisce il risultato, questo contiene il valore <see cref="T:System.DateTimeOffset" /> equivalente alla data e all'ora del parametro <paramref name="input" /> se la conversione ha esito positivo oppure <see cref="F:System.DateTimeOffset.MinValue" />, in caso contrario. La conversione ha esito negativo se il parametro <paramref name="input" /> è <see langword="null" /> o non contiene una rappresentazione di data e ora in formato di stringa valida. Questo parametro viene passato non inizializzato.</param>
        <summary>Prova a convertire una rappresentazione di stringa di una data e di un'ora nel relativo oggetto <see cref="T:System.DateTimeOffset" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload del metodo di <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> metodo è simile al <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce. Il metodo analizza una stringa con tre elementi che possono essere visualizzati in qualsiasi ordine e sono delimitate da spazi vuoti. Questi tre elementi sono visualizzati nella tabella seguente.  
  
|Elemento|Esempio|  
|-------------|-------------|  
|\<Data >|"2/10/2007"|  
|\<Ora >|"1:02: DALLE 22.03 DEL"|  
|\<Offset >|"-7:30"|  
  
 Anche se ognuno di questi elementi è facoltativa, \<Offset > non può essere visualizzata da sola. Ma deve essere fornita con \<data > o \<ora >. Se \<data > non è presente, all'impostazione predefinita il valore è il giorno corrente. Se \<data > è presente, ma il relativo anno componente è costituito da due sole cifre, viene convertito in un anno il `provider` calendario corrente del parametro in base al valore della <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> proprietà. Se \<ora > non è presente, all'impostazione predefinita il valore è 12:00:00 AM. Se \<Offset > non è presente, all'impostazione predefinita valore è l'offset del fuso orario locale, o <xref:System.TimeSpan.Zero> se entrambi i <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> o <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> valore è espresso in `styles`. Se \<Offset > è presente, può rappresentare un valore negativo o un offset positivo da Coordinated Universal Time (UTC). In entrambi i casi \<Offset > deve includere un simbolo di segno o il metodo restituisce `false`.  
  
 Il `input` stringa viene analizzata tramite le informazioni di formattazione specifiche delle impostazioni cultura in una <xref:System.Globalization.DateTimeFormatInfo> oggetto fornito dal `formatProvider` parametro. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura di cui formattazione verrà usata in `input`. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce il formato utilizzato in `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Inoltre, ogni elemento può essere delimitato da spazi vuoti iniziali o finali e il \<data > e \<ora > i componenti possono includere uno spazio vuoto interno (ad esempio 6:00:00). Solo il \<Offset > componente non può includere uno spazio vuoto interno.  
  
 Se `provider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 Il segno positivo o negativo usato nella \<Offset > deve essere + o -. Non è definito dal <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> o <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> delle proprietà delle <xref:System.Globalization.NumberFormatInfo> oggetto restituito dal `formatprovider` del parametro <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà.  
  
 I seguenti membri del <xref:System.Globalization.DateTimeStyles> enumerazione sono supportate:  
  
|Membro DateTimeStyles|Commenti|  
|---------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Analizza la stringa rappresentata dal `input` e, se necessario, lo converte in formato UTC. È equivalente all'analisi di una stringa e quindi chiama l'oggetto restituito <xref:System.DateTimeOffset.ToUniversalTime> (metodo).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Anche se valido, questo valore viene ignorato. Lo spazio vuoto interno è consentito nel \<data > e \<ora > i componenti.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Anche se valido, questo valore viene ignorato. Lo spazio vuoto iniziale è consentito davanti a ogni componente nella stringa analizzata.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Anche se valido, questo valore viene ignorato. Lo spazio vuoto finale è consentito davanti a ogni componente nella stringa analizzata.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Comportamento predefinito. Impossibile eseguire l'override fornendo una più restrittiva <xref:System.Globalization.DateTimeStyles> valore di enumerazione, ad esempio <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Indica che, se il `input` parametro non è presente un \<Offset > elemento deve essere fornito l'offset del fuso orario locale. Si tratta del comportamento predefinito del <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> (metodo).|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Indica che, se il `input` parametro non è presente un \<Offset > elemento, l'offset UTC (00:00) deve essere fornito.|  
|<xref:System.Globalization.DateTimeStyles.None>|Anche se valido, questo valore viene ignorato e non ha alcun effetto.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Poiché il <xref:System.DateTimeOffset> struttura non include un `Kind` proprietà, questo valore non ha alcun effetto.|  
  
 Solo il <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> valore non è supportato. Un' <xref:System.ArgumentException> viene generata se questo valore viene incluso nel `styles` parametro.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> metodo con un'ampia gamma di <xref:System.Globalization.DateTimeStyles> i valori per analizzare alcune stringhe con vari formati di data e ora.  
  
 [!code-csharp[System.DateTimeOffset.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.DateTimeOffset.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="styles" /> include un valore <see cref="T:System.Globalization.DateTimeStyles" /> non definito.  
  
oppure 
 <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> non è supportato.  
  
oppure 
 <paramref name="styles" /> include valori <see cref="T:System.Globalization.DateTimeStyles" /> che si escludono a vicenda.</exception>
        <altmember cref="Overload:System.DateTimeOffset.Parse" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'equivalente <see cref="T:System.DateTimeOffset" />. Il formato della rappresentazione di stringa deve corrispondere esattamente a un formato specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Intervallo di caratteri che contiene la rappresentazione di una data e un'ora da convertire.</param>
        <param name="format">Identificatore di formato che definisce il formato richiesto di <paramref name="input" />.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di <paramref name="input" />. Un valore tipico da specificare è <see cref="F:System.Globalization.DateTimeStyles.None" /></param>
        <param name="result">Quando questo metodo restituisce il controllo, contiene l'oggetto <see cref="T:System.DateTimeOffset" /> equivalente alla data e all'ora di <paramref name="input" /> se la conversione ha esito positivo oppure <see cref="F:System.DateTimeOffset.MinValue" />, in caso contrario. La conversione non riesce se</param>
        <summary>Converte una determinata rappresentazione di una data e di un'ora in un intervallo di caratteri nell'oggetto <see cref="System.DateTimeOffset" /> equivalente usando il formato, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati. Il formato della rappresentazione di data e ora deve corrispondere esattamente al formato specificato.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Questo overload è simile al <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> metodo, ad eccezione del fatto che questo metodo non genera un'eccezione se la conversione non riesce. Analizza la rappresentazione di data e ora in cui deve corrispondere esattamente al modello specificato da di `format` parametro. Se `input` non corrisponde a questo modello, con alcune possibili variazioni nello spazio vuoto definito per il `styles` si verifica un errore di parametro, l'operazione di analisi e il metodo restituisce `false`.  
  
Il `format` parametro è un intervallo di caratteri che contiene un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il modello richiesto del `input`. Per informazioni dettagliate sui codici di formattazione validi, vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Se `format` include le `z`, `zz`, o `zzz` identificatori di formato personalizzata per indicare che deve essere presente in un offset `input`, offset deve includere un segno negativo o un segno positivo. Se manca il segno, l'operazione di analisi ha esito negativo e restituisce il metodo `false`.  
  
Se `format` richiede che `input` contenga una data ma non un'ora, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a mezzanotte (0: 00:00). Se `format` richiede che `input` contiene un'ora, ma non una data, risultante <xref:System.DateTimeOffset> oggetto viene assegnato la data corrente nel sistema locale. Se `format` non richiede `input` contenga un offset, l'offset del valore risultante <xref:System.DateTimeOffset> oggetto dipende dal valore della `styles` parametro. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeLocal>, l'offset del fuso orario locale viene assegnato al <xref:System.DateTimeOffset> oggetto. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, offset, Coordinated Universal Time (UTC) o + 00:00, viene assegnato al <xref:System.DateTimeOffset> oggetto. Se viene specificato nessuno dei due valori, viene usato l'offset del fuso orario locale.  
  
La data e i simboli di ora e stringhe usate nelle `input` sono definiti dal `formatProvider` parametro. Lo stesso vale per il modello di preciso `input` se `format` è una stringa dell'identificatore di formato standard. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura basate su cui `input` viene interpretato. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce i simboli e i formati standard consentiti `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 Il `styles` parametro definisce se è consentito lo spazio vuoto nella stringa di input, indica la modalità di analisi delle stringhe senza un componente di offset esplicita e supporta la conversione di UTC come parte dell'operazione di analisi. Tutti i membri del <xref:System.Globalization.DateTimeStyles> enumerazione sono supportati, ad eccezione <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. La tabella seguente elenca gli effetti di ogni membro supportato.  
  
|Membro`DateTimeStyles` |Comportamento|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Analizza `input` e, se necessario, lo converte in formato UTC. È equivalente a una rappresentazione di data e ora di analisi e quindi chiama il <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> metodo dell'oggetto restituito <xref:System.DateTimeOffset> oggetto.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Se `format` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset del fuso orario locale. Comportamento predefinito.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Se `format` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset UTC di (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Consente a `input` includere uno spazio vuoto non specificato dal formato interno. Lo spazio vuoto aggiuntivo può essere visualizzato tra i componenti di data e ora e all'interno di singoli componenti, diverso da offset e viene ignorato durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Consente `input` includere gli spazi iniziali non specificati da `format`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Consente `input` da includere non è specificati da spazi finali `format`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Consente `input` per includere gli spazi iniziali, finali e interni non specificati da `format`. Tutti i caratteri vuoti aggiuntivi non specificati nella `format` vengono ignorati durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.None>|Indica che lo spazio vuoto aggiuntivo non è consentito in `input`. Lo spazio vuoto deve essere visualizzato esattamente come specificato in `format`. Comportamento predefinito.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Non ha alcun effetto perché la <xref:System.DateTimeOffset> struttura non include un `Kind` proprietà.|  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="styles" /> include un valore <see cref="T:System.Globalization.DateTimeStyles" /> non definito.  
-oppure- <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> non è supportato.  
-oppure- <paramref name="styles" /> include valori <see cref="T:System.Globalization.DateTimeStyles" /> che si escludono a vicenda.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 
Questo metodo consente di analizzare la rappresentazione di stringa di una data che corrisponde a uno dei modelli assegnati per il `formats` matrice. Se `input` corrisponde a uno di questi modelli con le eventuali variazioni definito dal `styles` si verifica un errore di parametro, l'operazione di analisi e il metodo restituisce `false`. Oltre a confrontare `input` in più stringhe che contengono gli identificatori di formato, overload di questo comportamento è identico al <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> (metodo).  
  
 Il `formats` parametro è una matrice di stringhe cui elementi contengono un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il modello di possibili `input`. Per informazioni dettagliate sui codici di formattazione validi, vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Se l'elemento corrispondente nel `formats` include le `z`, `zz`, o `zzz` identificatori di formato personalizzata per indicare che deve essere presente in un offset `input`, offset deve includere un segno negativo o un segno positivo. Se il segno non è presente, l'operazione di analisi ha esito negativo e restituisce il metodo `false`.  
  
> [!IMPORTANT]
>  Uso di `formats` parametro di questo overload per specificare più formati può contribuire a ridurre la possibilità di accedere più utenti esperienza durante l'immissione di date e ore. In particolare, la possibilità di definire più modelli di input consente a un'applicazione gestire le rappresentazioni di data e ora che è possano, includere o escludere gli zeri iniziali in mesi, giorni, ore, minuti e secondi. L'esempio fornisce un'illustrazione di questa.  
  
 Se l'elemento corrispondente nel `formats` richiede che `input` contenga una data ma non un'ora, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a mezzanotte (0: 00:00). Se l'elemento corrispondente nel `formats` richiede che l'input contenga un tempo ma non una data, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato la data corrente nel sistema locale. Se l'elemento corrispondente nel `formats` non richiede `input` contenga un offset, l'offset del valore risultante <xref:System.DateTimeOffset> oggetto dipende dal valore della `styles` parametro. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>, l'offset del fuso orario locale viene assegnato al <xref:System.DateTimeOffset> oggetto. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>, offset, Coordinated Universal Time (UTC) o + 00:00, viene assegnato al <xref:System.DateTimeOffset> oggetto. Se viene specificato nessuno dei due valori, viene usato l'offset del fuso orario locale.  
  
 La data e i simboli di tempo usati nel `input` sono definiti dal `formatProvider` parametro. Lo stesso vale per il modello di preciso `input` se l'elemento corrispondente di `formats` è una stringa dell'identificatore di formato standard. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura basate su cui `input` viene interpretato. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce i simboli e la formattazione `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 Il `styles` parametro definisce se è consentito lo spazio vuoto nella stringa di input, indica la modalità di analisi delle stringhe senza un componente di offset esplicita e supporta la conversione di UTC come parte dell'operazione di analisi. Tutti i membri del <xref:System.Globalization.DateTimeStyles> enumerazione sono supportati, ad eccezione <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. La tabella seguente elenca gli effetti di ogni membro supportato.  
  
|Membro`DateTimeStyles` |Comportamento|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Analizza `input` e, se necessario, lo converte in formato UTC. È equivalente all'analisi di una stringa e quindi chiama il <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> metodo dell'oggetto restituito <xref:System.DateTimeOffset> oggetto.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Se l'elemento corrispondente nel `formats` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset del fuso orario locale. Rappresenta il valore predefinito.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Se l'elemento corrispondente nel `formats` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset UTC di (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Consente `input` includere uno spazio vuoto interno non specificato per gli elementi in `formats`. Lo spazio vuoto aggiuntivo può essere visualizzato tra i componenti di data e ora e all'interno di singoli componenti (tranne l'offset) e viene ignorato durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Consente `input` includere gli spazi non specificati dagli elementi iniziali `formats`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Consente `input` includere gli spazi non specificati dagli elementi finali `formats`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Consente `input` per includere gli spazi iniziali, finali e interni non è specificati dagli elementi `formats`. Tutti i caratteri vuoti aggiuntivi non è specificati nell'elemento corrispondente in `formats` vengono ignorati durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.None>|Indica che lo spazio vuoto aggiuntivo non è consentito in `input`. Lo spazio vuoto deve essere visualizzato esattamente come specificato in un particolare elemento `formats` affinché si verifichi una corrispondenza ha esito positivo. Comportamento predefinito.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Non ha alcun effetto perché la <xref:System.DateTimeOffset> struttura non include un `Kind` proprietà.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="styles" /> include un valore <see cref="T:System.Globalization.DateTimeStyles" /> non definito.  
-oppure- <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> non è supportato.  
-oppure- <paramref name="styles" /> include valori <see cref="T:System.Globalization.DateTimeStyles" /> che si escludono a vicenda.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che contiene una data e un'ora da convertire.</param>
        <param name="format">Identificatore di formato che definisce il formato richiesto di <paramref name="input" />.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di input. Un valore tipico da specificare è <see langword="None" />.</param>
        <param name="result">Quando questo metodo viene restituito, contiene l'oggetto <see cref="T:System.DateTimeOffset" /> equivalente alla data e all'ora di <paramref name="input" /> se la conversione ha esito positivo oppure <see cref="F:System.DateTimeOffset.MinValue" />, in caso contrario. La conversione non riesce se il parametro <paramref name="input" /> è <see langword="null" /> o non contiene una rappresentazione di stringa valida per data e ora nel formato previsto definito da <paramref name="format" /> e dal <c>provider</c>. Questo parametro viene passato non inizializzato.</param>
        <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando il formato, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati. Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload del metodo di <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> metodo è simile al <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> metodo, ad eccezione del fatto che questo metodo non genera un'eccezione se la conversione non riesce. Analizza la rappresentazione di stringa di data e ora in cui deve corrispondere esattamente al modello specificato da di `format` parametro. Se il `input` stringa non corrisponde a questo modello, con alcune possibili variazioni nello spazio vuoto definito per il `styles` si verifica un errore di parametro, l'operazione di analisi e il metodo restituisce `false`.  
  
 Il `format` parametro è una stringa che contiene un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il modello richiesto del `input`. Per informazioni dettagliate sui codici di formattazione validi, vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Se `format` include le `z`, `zz`, o `zzz` identificatori di formato personalizzata per indicare che deve essere presente in un offset `input`, offset deve includere un segno negativo o un segno positivo. Se manca il segno, l'operazione di analisi ha esito negativo e restituisce il metodo `false`.  
  
 Se `format` richiede che `input` contenga una data ma non un'ora, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a mezzanotte (0: 00:00). Se `format` richiede che `input` contiene un'ora, ma non una data, risultante <xref:System.DateTimeOffset> oggetto viene assegnato la data corrente nel sistema locale. Se `format` non richiede `input` contenga un offset, l'offset del valore risultante <xref:System.DateTimeOffset> oggetto dipende dal valore della `styles` parametro. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeLocal>, l'offset del fuso orario locale viene assegnato al <xref:System.DateTimeOffset> oggetto. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, offset, Coordinated Universal Time (UTC) o + 00:00, viene assegnato al <xref:System.DateTimeOffset> oggetto. Se viene specificato nessuno dei due valori, viene usato l'offset del fuso orario locale.  
  
 La data e i simboli di ora e stringhe usate nelle `input` sono definiti dal `formatProvider` parametro. Lo stesso vale per il modello di preciso `input` se `format` è una stringa dell'identificatore di formato standard. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura basate su cui `input` viene interpretato. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce i simboli e i formati standard consentiti `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 Il `styles` parametro definisce se è consentito lo spazio vuoto nella stringa di input, indica la modalità di analisi delle stringhe senza un componente di offset esplicita e supporta la conversione di UTC come parte dell'operazione di analisi. Tutti i membri del <xref:System.Globalization.DateTimeStyles> enumerazione sono supportati, ad eccezione <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. La tabella seguente elenca gli effetti di ogni membro supportato.  
  
|Membro`DateTimeStyles` |Comportamento|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Analizza `input` e, se necessario, lo converte in formato UTC. È equivalente all'analisi di una stringa e quindi chiama il <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> metodo dell'oggetto restituito <xref:System.DateTimeOffset> oggetto.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Se `format` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset del fuso orario locale. Comportamento predefinito.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Se `format` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset UTC di (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Consente a `input` includere uno spazio vuoto non specificato dal formato interno. Lo spazio vuoto aggiuntivo può essere visualizzato tra i componenti di data e ora e all'interno di singoli componenti, diverso da offset e viene ignorato durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Consente `input` includere gli spazi iniziali non specificati da `format`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Consente `input` da includere non è specificati da spazi finali `format`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Consente `input` per includere gli spazi iniziali, finali e interni non specificati da `format`. Tutti i caratteri vuoti aggiuntivi non specificati nella `format` vengono ignorati durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.None>|Indica che lo spazio vuoto aggiuntivo non è consentito in `input`. Lo spazio vuoto deve essere visualizzato esattamente come specificato in `format`. Comportamento predefinito.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Non ha alcun effetto perché la <xref:System.DateTimeOffset> struttura non include un `Kind` proprietà.|  
  
## Examples 

 L'esempio seguente usa il <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> metodo con identificatori di formato standard e personalizzate, le impostazioni cultura invarianti e vari <xref:System.Globalization.DateTimeStyles> i valori per analizzare le stringhe di data e ora diversi.  
  
 [!code-csharp[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#1)]
 [!code-vb[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#1)]  

L'esempio seguente usa numerosi <xref:System.Globalization.DateTimeStyles> valori da una matrice di stringhe che devono essere conformi a analizzare [ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier). Come illustrato nell'output dell'esempio, le stringhe siano nel formato corretto non è possibile analizzare se:

- contengono spazi vuoti e appropriata <xref:System.Globalization.DateTimeStyles> flag (ad esempio <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> non è stato specificato nella chiamata al metodo.

- contengono gli elementi di data e ora che sono comprese nell'intervallo.

Le stringhe che non si specifica un offset UTC si presuppone che l'offset del fuso orario locale (in questo caso, -07:00, che riflette l'offset del fuso orario ora legale Pacifico), a meno che il <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag viene fornito nella chiamata al metodo. In tal caso, questi sono considerati Coordinated Universal Time.

[!code-csharp[Parsing ISO 8601 strings](~/samples/snippets/csharp/api/system/datetimeoffset/tryparseexact/tryparseexacto8601-2.cs)]
[!code-vb[Parsing ISO 8601 strings](~/samples/snippets/visualbasic/api/system/datetimeoffset/tryparseexact/tryparseexacto8601-2.vb)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="styles" /> include un valore <see cref="T:System.Globalization.DateTimeStyles" /> non definito.  
  
oppure 
 <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> non è supportato.  
  
oppure 
 <paramref name="styles" /> include valori <see cref="T:System.Globalization.DateTimeStyles" /> che si escludono a vicenda.</exception>
        <block subset="none" type="usage">
          <para>Nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], il <see cref="Overload:System.DateTimeOffset.TryParseExact" /> restituisce <see langword="false" /> se la stringa da analizzare include un componente di ora e un indicatore AM/PM non presenti nel contratto. Nel [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] , ignorando le versioni precedenti, l'indicatore AM/PM.</para>
        </block>
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che contiene una data e un'ora da convertire.</param>
        <param name="formats">Matrice che definisce i formati previsti di <paramref name="input" />.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="input" />.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che indica il formato consentito di input. Un valore tipico da specificare è <see langword="None" />.</param>
        <param name="result">Quando questo metodo viene restituito, contiene l'oggetto <see cref="T:System.DateTimeOffset" /> equivalente alla data e all'ora di <paramref name="input" /> se la conversione ha esito positivo oppure <see cref="F:System.DateTimeOffset.MinValue" />, in caso contrario. La conversione non riesce se <paramref name="input" /> non contiene una rappresentazione di data e ora in formato di stringa valida nel formato previsto oppure non contiene il formato di data e ora previsto definito da <paramref name="format" /> oppure se <paramref name="formats" /> è <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
        <summary>Converte una determinata rappresentazione di stringa di una data e di un'ora nell'oggetto <see cref="T:System.DateTimeOffset" /> equivalente usando la matrice di formati, le informazioni sul formato specifiche delle impostazioni cultura e lo stile specificati. Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> metodo analizza la rappresentazione di stringa di una data che corrisponde a uno dei modelli assegnati per il `formats` matrice. Se il `input` stringa non corrisponde a uno di questi modelli con le eventuali variazioni definito dal `styles` si verifica un errore di parametro, l'operazione di analisi e il metodo restituisce `false`. Oltre a confrontare `input` in più stringhe che contengono gli identificatori di formato, overload di questo comportamento è identico al <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> (metodo).  
  
 Il `formats` parametro è una matrice di stringhe cui elementi contengono un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il modello di possibili `input`. Per informazioni dettagliate sui codici di formattazione validi, vedere [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Se l'elemento corrispondente nel `formats` include le `z`, `zz`, o `zzz` identificatori di formato personalizzata per indicare che deve essere presente in un offset `input`, offset deve includere un segno negativo o un segno positivo. Se il segno non è presente, l'operazione di analisi ha esito negativo e restituisce il metodo `false`.  
  
> [!IMPORTANT]
>  Uso di `formats` parametro di questo overload per specificare più formati può contribuire a ridurre la possibilità di accedere più utenti esperienza durante l'immissione di date e ore. In particolare, la possibilità di definire più modelli di input consente a un'applicazione gestire le rappresentazioni di data e ora che è possano, includere o escludere gli zeri iniziali in mesi, giorni, ore, minuti e secondi. L'esempio fornisce un'illustrazione di questa.  
  
 Se l'elemento corrispondente nel `formats` richiede che `input` contenga una data ma non un'ora, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato a mezzanotte (0: 00:00). Se l'elemento corrispondente nel `formats` richiede che l'input contenga un tempo ma non una data, l'oggetto risultante <xref:System.DateTimeOffset> oggetto viene assegnato la data corrente nel sistema locale. Se l'elemento corrispondente nel `formats` non richiede `input` contenga un offset, l'offset del valore risultante <xref:System.DateTimeOffset> oggetto dipende dal valore della `styles` parametro. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeLocal>, l'offset del fuso orario locale viene assegnato al <xref:System.DateTimeOffset> oggetto. Se `styles` comprende <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, offset, Coordinated Universal Time (UTC) o + 00:00, viene assegnato al <xref:System.DateTimeOffset> oggetto. Se viene specificato nessuno dei due valori, viene usato l'offset del fuso orario locale.  
  
 La data e i simboli di ora e stringhe usate nelle `input` sono definiti dal `formatProvider` parametro. Lo stesso vale per il modello di preciso `input` se l'elemento corrispondente di `formats` è una stringa dell'identificatore di formato standard. Il `formatProvider` parametro può essere uno dei modi seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura basate su cui `input` viene interpretato. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce i simboli e la formattazione `input`.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce il formato di data e ora.  
  
 Se `formatprovider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che corrisponde alla lingua corrente.  
  
 Il `styles` parametro definisce se è consentito lo spazio vuoto nella stringa di input, indica la modalità di analisi delle stringhe senza un componente di offset esplicita e supporta la conversione di UTC come parte dell'operazione di analisi. Tutti i membri del <xref:System.Globalization.DateTimeStyles> enumerazione sono supportati, ad eccezione <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. La tabella seguente elenca gli effetti di ogni membro supportato.  
  
|Membro`DateTimeStyles` |Comportamento|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Analizza `input` e, se necessario, lo converte in formato UTC. È equivalente all'analisi di una stringa e quindi chiama il <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> metodo dell'oggetto restituito <xref:System.DateTimeOffset> oggetto.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Se l'elemento corrispondente nel `formats` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset del fuso orario locale. Rappresenta il valore predefinito.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Se l'elemento corrispondente nel `formats` non richiede `input` contengono un valore di offset, l'oggetto restituito <xref:System.DateTimeOffset> oggetto viene assegnato l'offset UTC di (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Consente `input` includere uno spazio vuoto interno non specificato per gli elementi in `formats`. Lo spazio vuoto aggiuntivo può essere visualizzato tra i componenti di data e ora e all'interno di singoli componenti (tranne l'offset) e viene ignorato durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Consente `input` includere gli spazi non specificati dagli elementi iniziali `formats`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Consente `input` includere gli spazi non specificati dagli elementi finali `formats`. Queste vengono ignorate durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Consente `input` per includere gli spazi iniziali, finali e interni non è specificati dagli elementi `formats`. Tutti i caratteri vuoti aggiuntivi non è specificati nell'elemento corrispondente in `formats` vengono ignorati durante l'analisi della stringa.|  
|<xref:System.Globalization.DateTimeStyles.None>|Indica che lo spazio vuoto aggiuntivo non è consentito in `input`. Lo spazio vuoto deve essere visualizzato esattamente come specificato in un particolare elemento `formats` affinché si verifichi una corrispondenza ha esito positivo. Comportamento predefinito.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Non ha alcun effetto perché la <xref:System.DateTimeOffset> struttura non include un `Kind` proprietà.|  
  
   
  
## Examples  
 Nell'esempio seguente definisce più formati di input per la rappresentazione di stringa di data e ora e valore di offset e quindi passa la stringa immessa dall'utente per il <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> (metodo).  
  
 [!code-csharp[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#2)]
 [!code-vb[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="styles" /> include un valore <see cref="T:System.Globalization.DateTimeStyles" /> non definito.  
  
oppure 
 <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> non è supportato.  
  
oppure 
 <paramref name="styles" /> include valori <see cref="T:System.Globalization.DateTimeStyles" /> che si escludono a vicenda.</exception>
        <block subset="none" type="usage">
          <para>Nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], il <see cref="Overload:System.DateTimeOffset.TryParseExact" /> restituisce <see langword="false" /> se la stringa da analizzare include un componente di ora e un indicatore AM/PM non presenti nel contratto. Nel [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] , ignorando le versioni precedenti, l'indicatore AM/PM.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="UnixEpoch">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset UnixEpoch;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset UnixEpoch" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.UnixEpoch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnixEpoch As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset UnixEpoch;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnixEpoch : DateTimeOffset" Usage="System.DateTimeOffset.UnixEpoch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcDateTime">
      <MemberSignature Language="C#" Value="public DateTime UtcDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcDateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcDateTime : DateTime" Usage="System.DateTimeOffset.UtcDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore <see cref="T:System.DateTime" /> che rappresenta la data e l'ora UTC (Coordinated Universal Time) dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Data e ora UTC (Coordinated Universal Time) dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.UtcDateTime%2A> proprietà esegue una conversione doppia:  
  
-   La funzione converte la data e l'ora dell'oggetto corrente <xref:System.DateTimeOffset> oggetto a Coordinated Universal Time (UTC). La conversione viene eseguita sottraendo il valore della <xref:System.DateTimeOffset.Offset%2A> proprietà dalla data e ora dell'oggetto corrente <xref:System.DateTimeOffset> oggetto.  
  
-   La funzione converte il <xref:System.DateTimeOffset> valore per un <xref:System.DateTime> valore.  
  
 Il <xref:System.DateTime.Kind%2A> proprietà dell'oggetto restituito <xref:System.DateTimeOffset.DateTime%2A> è impostato su <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.  
  
 Il recupero del valore della <xref:System.DateTimeOffset.UtcDateTime%2A> proprietà è equivalente alla chiamata corrente <xref:System.DateTimeOffset> dell'oggetto `ToUniversalTime.DateTime` proprietà, tranne il fatto che il <xref:System.DateTime.Kind%2A> proprietà di quest'ultimo <xref:System.DateTime> valore è <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come usare il <xref:System.DateTimeOffset.UtcDateTime%2A> proprietà per visualizzare un <xref:System.DateTimeOffset> valore e l'ora UTC corrispondente.  
  
 [!code-csharp[System.DateTimeOffset.Properties#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#17)]
 [!code-vb[System.DateTimeOffset.Properties#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcNow">
      <MemberSignature Language="C#" Value="public static DateTimeOffset UtcNow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTimeOffset UtcNow" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcNow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UtcNow As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTimeOffset UtcNow { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcNow : DateTimeOffset" Usage="System.DateTimeOffset.UtcNow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.DateTimeOffset" /> in cui la data e l'ora sono impostate sulla data e sull'ora UTC (Coordinated Universal Time) correnti e il cui offset è <see cref="F:System.TimeSpan.Zero" />.</summary>
        <value>Oggetto la cui data e ora corrispondono all'ora UTC (Coordinated Universal Time) corrente e il cui offset è <see cref="F:System.TimeSpan.Zero" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.UtcNow%2A> proprietà calcola il corrente Coordinated Universal Time (UTC) in base al tempo di clock di sistema locale e un offset definito dal fuso orario del sistema locale.  
  
 La precisione del componente dei millisecondi dell'ora UTC corrente dipende dalla risoluzione dell'orologio di sistema. In Windows NT 3.5 e versioni successive e i sistemi operativi Windows Vista, la risoluzione del clock è di circa 10-15 millisecondi.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata la relazione tra Coordinated Universal Time (UTC) e l'ora locale.  
  
 [!code-csharp[System.DateTimeOffset.Properties#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#18)]
 [!code-vb[System.DateTimeOffset.Properties#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.Now" />
      </Docs>
    </Member>
    <Member MemberName="UtcTicks">
      <MemberSignature Language="C#" Value="public long UtcTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UtcTicks" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long UtcTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcTicks : int64" Usage="System.DateTimeOffset.UtcTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di tick che rappresenta la data e l'ora dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente nell'ora UTC (Coordinated Universal Time).</summary>
        <value>Numero di tick nell'ora UTC (Coordinated Universal Time) dell'oggetto <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della <xref:System.DateTimeOffset.UtcTicks%2A> proprietà rappresenta il numero di intervalli di 100 nanosecondi che sono trascorsi 12:00:00 dalla mezzanotte dell'1 gennaio 0001 (il valore di <xref:System.DateTimeOffset.MinValue>). Non include segni di graduazione che verrebbero aggiunti per i secondi intercalari. Un nanosecondo corrisponde a un miliardesimo di secondo; sono presenti dieci milioni segni di graduazione in un secondo. Il valore della <xref:System.DateTimeOffset.UtcTicks%2A> proprietà compreso tra `DateTimeOffset.MinValue.Ticks` a `DateTimeOffset.MaxValue.Ticks`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public int Year { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Year" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Year" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Year As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Year { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Year : int" Usage="System.DateTimeOffset.Year" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo all'anno della data rappresentata dall'oggetto <see cref="T:System.DateTimeOffset" /> corrente.</summary>
        <value>Componente relativo all'anno dell'oggetto <see cref="T:System.DateTimeOffset" /> corrente, espresso come numero intero compreso tra 0 e 9999.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.DateTimeOffset.Year%2A> proprietà non è influenzata dal valore della <xref:System.DateTimeOffset.Offset%2A> proprietà.  
  
 È anche possibile creare una rappresentazione di stringa di un <xref:System.DateTimeOffset> componente anno dell'oggetto chiamando il <xref:System.DateTimeOffset.ToString%2A> metodo con gli identificatori di formato personalizzato "y", "aa" o "yyyy".  
  
   
  
## Examples  
 L'esempio seguente mostra il componente anno di un <xref:System.DateTimeOffset> valore in quattro modi diversi:  
  
-   Recuperando il valore della <xref:System.DateTimeOffset.Year%2A> proprietà.  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "y".  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "aa".  
  
-   Chiamando il <xref:System.DateTimeOffset.ToString%28System.String%29> metodo con l'identificatore di formato "yyyy".  
  
 [!code-csharp[System.DateTimeOffset.Properties#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#19)]
 [!code-vb[System.DateTimeOffset.Properties#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>