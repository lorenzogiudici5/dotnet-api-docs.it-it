<Type Name="UriTemplate" FullName="System.UriTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="613a16d6a56ae9d22470dced1a87321bd587d34f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UriTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplate" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f9b52-101">Classe che rappresenta un modello Uniform Resource Identifier (URI).</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9b52-101">A class that represents a Uniform Resource Identifier (URI) template.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b52-102">Un modello URI consente di definire un set di URI strutturalmente simili.</span><span class="sxs-lookup"><span data-stu-id="f9b52-102">A URI template allows you to define a set of structurally similar URIs.</span></span> <span data-ttu-id="f9b52-103">I modelli sono composti di due parti, un percorso e una query.</span><span class="sxs-lookup"><span data-stu-id="f9b52-103">Templates are composed of two parts, a path and a query.</span></span> <span data-ttu-id="f9b52-104">Un percorso è costituito da una serie di segmenti delimitati da una barra (/).</span><span class="sxs-lookup"><span data-stu-id="f9b52-104">A path consists of a series of segments delimited by a slash (/).</span></span> <span data-ttu-id="f9b52-105">Ogni segmento può avere un valore letterale, un valore variabile (scritto tra parentesi graffe [{}], che deve corrispondere al contenuto di un solo segmento) o un carattere jolly (scritto come asterisco [\*], che corrisponde al "resto del percorso") che deve essere visualizzato alla fine del percorso.</span><span class="sxs-lookup"><span data-stu-id="f9b52-105">Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [\*], which matches "the rest of the path"), which must appear at the end of the path.</span></span> <span data-ttu-id="f9b52-106">L'espressione di query può essere interamente omessa.</span><span class="sxs-lookup"><span data-stu-id="f9b52-106">The query expression can be omitted entirely.</span></span> <span data-ttu-id="f9b52-107">Se presente, specifica una serie non ordinata di coppie nome/valore.</span><span class="sxs-lookup"><span data-stu-id="f9b52-107">If present, it specifies an unordered series of name/value pairs.</span></span> <span data-ttu-id="f9b52-108">Gli elementi dell'espressione di query possono essere coppie letterali (?x=2) o coppie variabili (?x={valore}).</span><span class="sxs-lookup"><span data-stu-id="f9b52-108">Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}).</span></span> <span data-ttu-id="f9b52-109">Non è consentito usare valori non abbinati.</span><span class="sxs-lookup"><span data-stu-id="f9b52-109">Unpaired values are not permitted.</span></span> <span data-ttu-id="f9b52-110">Le stringhe seguenti rappresentano esempi validi di stringhe di modello:</span><span class="sxs-lookup"><span data-stu-id="f9b52-110">The following examples show valid template strings:</span></span>  
  
-   <span data-ttu-id="f9b52-111">"previsioni/CA/Napoli"</span><span class="sxs-lookup"><span data-stu-id="f9b52-111">"weather/WA/Seattle"</span></span>  
  
-   <span data-ttu-id="f9b52-112">"previsioni/{regione}/{città}"</span><span class="sxs-lookup"><span data-stu-id="f9b52-112">"weather/{state}/{city}"</span></span>  
  
-   <span data-ttu-id="f9b52-113">"previsioni/\*"</span><span class="sxs-lookup"><span data-stu-id="f9b52-113">"weather/\*"</span></span>  
  
-   <span data-ttu-id="f9b52-114">"previsioni/{regione}/{città}?previsioni=oggi"</span><span class="sxs-lookup"><span data-stu-id="f9b52-114">"weather/{state}/{city}?forecast=today</span></span>  
  
-   <span data-ttu-id="f9b52-115">"previsioni/{regione}/{città}?previsioni={giorno}"</span><span class="sxs-lookup"><span data-stu-id="f9b52-115">"weather/{state}/{city}?forecast={day}</span></span>  
  
 <span data-ttu-id="f9b52-116">I modelli URI appena elencati potrebbero essere utilizzati come struttura su cui basare le previsioni del tempo.</span><span class="sxs-lookup"><span data-stu-id="f9b52-116">The preceding URI templates might be used for organizing weather reports.</span></span> <span data-ttu-id="f9b52-117">I segmenti racchiusi fra parentesi graffe sono variabili. Gli altri segmenti rappresentano valori letterali.</span><span class="sxs-lookup"><span data-stu-id="f9b52-117">Segments enclosed in curly braces are variables, everything else is a literal.</span></span> <span data-ttu-id="f9b52-118">È possibile convertire un'istanza della classe <xref:System.UriTemplate> in un oggetto <xref:System.Uri> sostituendo le variabili con valori effettivi.</span><span class="sxs-lookup"><span data-stu-id="f9b52-118">You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values.</span></span> <span data-ttu-id="f9b52-119">Ad esempio, se nel modello "previsioni/{regione}/{città}" sostituiamo valori effettivi alle variabili "{regione}" e "{città}" otteniamo l'URI "previsioni/CA/Napoli".</span><span class="sxs-lookup"><span data-stu-id="f9b52-119">For example, taking the template "weather/{state}/{city}" and putting in values for the variables "{state}" and "{city}" gives you "weather/WA/Seattle".</span></span> <span data-ttu-id="f9b52-120">Per verificare se un determinato URI candidato corrisponde a un modello URI specificato è possibile chiamare il metodo <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span><span class="sxs-lookup"><span data-stu-id="f9b52-120">Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span></span> <span data-ttu-id="f9b52-121">Le istanze della classe <xref:System.UriTemplate> possono inoltre essere utilizzate per creare un oggetto <xref:System.Uri> a partire da un set di valori variabili. A tale scopo, chiamare il metodo <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> o <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="f9b52-121">You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b52-122">Nel codice seguente viene illustrato come creare un'istanza di <xref:System.UriTemplate> e come associarla e confrontarla a un URI candidato.</span><span class="sxs-lookup"><span data-stu-id="f9b52-122">The following code demonstrates how to create a <xref:System.UriTemplate> instance, and bind and match it to a candidate URI.</span></span>  
  
 [!code-csharp[UriTemplate#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#0)]
 [!code-vb[UriTemplate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9b52-123">Inizializza una nuova istanza della classe <see cref="T:System.UriTemplate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-123">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="template">
          <span data-ttu-id="f9b52-124">Modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-124">The template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-125">Inizializza una nuova istanza della classe <see cref="T:System.UriTemplate" /> con la stringa di modello specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-125">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9b52-126">Nell'esempio seguente viene illustrato come chiamare il costruttore.</span><span class="sxs-lookup"><span data-stu-id="f9b52-126">The following example shows how to call the constructor.</span></span>  
  
 [!code-csharp[UriTemplate#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#1)]
 [!code-vb[UriTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="template">
          <span data-ttu-id="f9b52-127">Stringa di modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-127">The template string.</span>
          </span>
        </param>
        <param name="ignoreTrailingSlash">
          <span data-ttu-id="f9b52-128">Valore che specifica se le barre finali "/" devono essere ignorate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-128">A value that specifies whether trailing slash "/" characters should be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-129">Inizializza una nuova istanza della classe <see cref="T:System.UriTemplate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-129">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b52-130">Se `ignoreTrailingSlash` viene impostato su `true`, le barre finali alla fine del modello vengono ignorate quando si crea una corrispondenza con un URI candidato.</span><span class="sxs-lookup"><span data-stu-id="f9b52-130">When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI.</span></span> <span data-ttu-id="f9b52-131">Ad esempio, un modello, ad esempio "http://www.microsoft.com/customer/" corrisponderebbe URI candidati seguenti:</span><span class="sxs-lookup"><span data-stu-id="f9b52-131">For example, a template such as "http://www.microsoft.com/customer/" would match the following candidate URIs:</span></span>  
  
-   <span data-ttu-id="f9b52-132">"http://www.microsoft.com/customer/"</span><span class="sxs-lookup"><span data-stu-id="f9b52-132">"http://www.microsoft.com/customer/"</span></span>  
  
-   <span data-ttu-id="f9b52-133">"http://www.microsoft.com/customer"</span><span class="sxs-lookup"><span data-stu-id="f9b52-133">"http://www.microsoft.com/customer"</span></span>  
  
-   <span data-ttu-id="f9b52-134">"http://www.microsoft.com/customer/?wsdl"</span><span class="sxs-lookup"><span data-stu-id="f9b52-134">"http://www.microsoft.com/customer/?wsdl"</span></span>  
  
-   <span data-ttu-id="f9b52-135">"http://www.microsoft.com/customer?wsdl"</span><span class="sxs-lookup"><span data-stu-id="f9b52-135">"http://www.microsoft.com/customer?wsdl"</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template">
          <span data-ttu-id="f9b52-136">Stringa di modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-136">The template string.</span>
          </span>
        </param>
        <param name="additionalDefaults">
          <span data-ttu-id="f9b52-137">Dizionario che contiene un elenco di valori predefiniti per i parametri di modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-137">A dictionary that contains a list of default values for the template parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-138">Inizializza una nuova istanza della classe <see cref="T:System.UriTemplate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-138">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template">
          <span data-ttu-id="f9b52-139">Stringa di modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-139">The template string.</span>
          </span>
        </param>
        <param name="ignoreTrailingSlash">
          <span data-ttu-id="f9b52-140">
            <see langword="true" /> se vengono ignorate le barre finali "/", in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-140">
              <see langword="true" /> if the trailing slash "/" characters are ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="additionalDefaults">
          <span data-ttu-id="f9b52-141">Dizionario che contiene un elenco di valori predefiniti per i parametri di modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-141">A dictionary that contains a list of default values for the template parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-142">Inizializza una nuova istanza della classe <see cref="T:System.UriTemplate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-142">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BindByName">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9b52-143">Crea un nuovo URI a partire dal modello e dalla raccolta di parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-143">Creates a new URI from the template and the collection of parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String)) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="f9b52-144">Indirizzo di base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-144">The base address.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="f9b52-145">Dizionario che contiene una raccolta di coppie nome/valore di parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-145">A dictionary that contains a collection of parameter name/value pairs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-146">Crea un nuovo URI a partire dal modello e dalla raccolta di parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-146">Creates a new URI from the template and the collection of parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b52-147">URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-147">A URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b52-148">Il [IDictionary\<string, string >](xref:System.Collections.Generic.IDictionary%602) parametro contiene una raccolta di coppie nome / valore di parametro.</span><span class="sxs-lookup"><span data-stu-id="f9b52-148">The [IDictionary\<string,string>](xref:System.Collections.Generic.IDictionary%602) parameter contains a collection of parameter name and value pairs.</span></span> <span data-ttu-id="f9b52-149">I parametri vengono confrontati con le variabili contenute nel modello. Questo confronto non fa distinzione fra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="f9b52-149">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9b52-150">La raccolta delle coppie nome/valore passata a questo metodo deve contenere una chiave per ogni variabile del modello.</span><span class="sxs-lookup"><span data-stu-id="f9b52-150">The name/value collection passed to this method must contain a key for every template variable.</span></span> <span data-ttu-id="f9b52-151">Le coppie aggiuntive nome/valore che non corrispondono alle variabili del modello vengono aggiunte alla stringa di query dell'URI finale.</span><span class="sxs-lookup"><span data-stu-id="f9b52-151">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b52-152">Per evitare che l'URI generato corrisponda al modello utilizzato per generarlo è possibile passare elementi di testo all'interno delle coppie nome/valore.</span><span class="sxs-lookup"><span data-stu-id="f9b52-152">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="f9b52-153">Esempi di testo di questo tipo sono: '/', '..', '\*', '{' e '}'.</span><span class="sxs-lookup"><span data-stu-id="f9b52-153">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="f9b52-154">Indirizzo di base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-154">The base address.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="f9b52-155">Valori di parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-155">The parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-156">Crea un nuovo URI a partire dal modello e dalla raccolta di parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-156">Creates a new URI from the template and the collection of parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b52-157">Una nuova istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-157">A new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b52-158">Il parametro <xref:System.Collections.Specialized.NameValueCollection> contiene una raccolta di coppie nome/valore di parametro.</span><span class="sxs-lookup"><span data-stu-id="f9b52-158">The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs.</span></span> <span data-ttu-id="f9b52-159">I parametri vengono confrontati con le variabili contenute nel modello. Questo confronto non fa distinzione fra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="f9b52-159">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span> <span data-ttu-id="f9b52-160">I valori passati in questa raccolta sono preceduti da caratteri di escape.</span><span class="sxs-lookup"><span data-stu-id="f9b52-160">Values passed in this collection are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9b52-161">La raccolta delle coppie nome/valore passata al metodo <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> deve contenere una chiave per ogni variabile del modello.</span><span class="sxs-lookup"><span data-stu-id="f9b52-161">The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable.</span></span> <span data-ttu-id="f9b52-162">Le coppie aggiuntive nome/valore che non corrispondono alle variabili del modello vengono aggiunte alla stringa di query dell'URI finale.</span><span class="sxs-lookup"><span data-stu-id="f9b52-162">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9b52-163">Per evitare che l'URI generato corrisponda al modello utilizzato per generarlo è possibile passare elementi di testo all'interno delle coppie nome/valore.</span><span class="sxs-lookup"><span data-stu-id="f9b52-163">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="f9b52-164">Esempi di testo di questo tipo sono: '/', '..', '\*', '{' e '}'.</span><span class="sxs-lookup"><span data-stu-id="f9b52-164">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b52-165">Nell'esempio seguente viene illustrato come chiamare il metodo <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29>.</span><span class="sxs-lookup"><span data-stu-id="f9b52-165">The following example shows how to call the <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#4)]
 [!code-vb[UriTemplate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String), omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters, bool omitDefaults);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="f9b52-166">URI contenente l'indirizzo di base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-166">A URI that contains the base address.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="f9b52-167">Dizionario che contiene una raccolta di coppie nome/valore di parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-167">A dictionary that contains a collection of parameter name/value pairs.</span>
          </span>
        </param>
        <param name="omitDefaults">
          <span data-ttu-id="f9b52-168">
            <see langword="true" /> se i valori predefiniti vengono ignorati. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-168">
              <see langword="true" /> is the default values are ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-169">Crea un nuovo URI a partire dal modello e dalla raccolta di parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-169">Creates a new URI from the template and the collection of parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b52-170">URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-170">A URI.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection, omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters, bool omitDefaults);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="f9b52-171">Indirizzo di base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-171">The base address.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="f9b52-172">Raccolta di coppie nome/valore di parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-172">A collection of parameter name/value pairs.</span>
          </span>
        </param>
        <param name="omitDefaults">
          <span data-ttu-id="f9b52-173">
            <see langword="true" /> se i valori predefiniti vengono ignorati; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-173">
              <see langword="true" /> if the default values are ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-174">Crea un nuovo URI a partire dal modello e dalla raccolta di parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-174">Creates a new URI from the template and the collection of parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b52-175">URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-175">A URI.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByPosition">
      <MemberSignature Language="C#" Value="public Uri BindByPosition (Uri baseAddress, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByPosition(class System.Uri baseAddress, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByPosition(System.Uri,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByPosition (baseAddress As Uri, ParamArray values As String()) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByPosition(Uri ^ baseAddress, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="f9b52-176">Oggetto <see cref="T:System.Uri" /> contenente l'indirizzo di base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-176">A <see cref="T:System.Uri" /> that contains the base address.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="f9b52-177">Valori di parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-177">The parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-178">Crea un nuovo URI a partire dal modello e da una matrice di valori di parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-178">Creates a new URI from the template and an array of parameter values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b52-179">Nuova istanza di <see cref="T:System.Uri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-179">A new <see cref="T:System.Uri" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b52-180">I valori di parametro sono associati in base alla posizione da sinistra verso destra.</span><span class="sxs-lookup"><span data-stu-id="f9b52-180">The parameter values are bound by position left to right.</span></span> <span data-ttu-id="f9b52-181">Il primo valore di parametro sostituisce la prima variabile trovata nel modello, il secondo valore di parametro sostituisce la seconda variabile e così via.</span><span class="sxs-lookup"><span data-stu-id="f9b52-181">The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on.</span></span> <span data-ttu-id="f9b52-182">Le variabili passate a questo metodo sono precedute da caratteri di escape.</span><span class="sxs-lookup"><span data-stu-id="f9b52-182">Variables passed to this method are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9b52-183">Il numero di parametri passati nel parametro dei valori deve corrispondere al numero di variabili contenute nel modello.</span><span class="sxs-lookup"><span data-stu-id="f9b52-183">The number of parameters passed in the values parameter must match the number of variables in the template.</span></span> <span data-ttu-id="f9b52-184">In caso contrario, viene generata un'eccezione <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="f9b52-184">If not, a <xref:System.FormatException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9b52-185">Per evitare che l'URI generato corrisponda al modello utilizzato per generarlo è possibile passare elementi di testo all'interno della matrice dei valori di parametro.</span><span class="sxs-lookup"><span data-stu-id="f9b52-185">It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="f9b52-186">Esempi di testo di questo tipo sono: '/', '.','..', '\*', '{' e '}'.</span><span class="sxs-lookup"><span data-stu-id="f9b52-186">Examples of such text includes: '/', '.','..', '\*', '{', and '}'.</span></span> <span data-ttu-id="f9b52-187">Questo concetto è illustrato nel codice riportato di seguito.</span><span class="sxs-lookup"><span data-stu-id="f9b52-187">The following code demonstrates this.</span></span>  
  
 `UriTemplate template = new UriTemplate("far/{bat}/baz");`  
  
 `Uri uri = new Uri("http://localhost/Base");`  
  
 `Uri result = template.BindByPosition(uri, ".");   // returns Base/form/baz`  
  
 `Uri result = template.BindByPosition(uri, "..");  // returns Base/baz`  
  
 `Uri result = template.BindByPosition(uri, "x/y");  // returns Base/form/x/y/baz`  
  
 `Uri result = template.BindByPosition(uri, "{x}");  // returns Base/form/{x}/baz`  
  
 `Uri result = template.BindByPosition(uri, "*");  // returns Base/form/*/baz`  
  
   
  
## Examples  
 <span data-ttu-id="f9b52-188">Nell'esempio seguente viene illustrato come chiamare il metodo <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="f9b52-188">The following example shows how to call the <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
 [!code-csharp[UriTemplate#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#5)]
 [!code-vb[UriTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Defaults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Defaults" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Defaults As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Defaults { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b52-189">Ottiene una raccolta di coppie nome/valore per tutti i valori di parametro predefiniti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-189">Gets a collection of name/value pairs for any default parameter values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9b52-190">Un dizionario generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-190">A generic dictionary.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreTrailingSlash">
      <MemberSignature Language="C#" Value="public bool IgnoreTrailingSlash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.IgnoreTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreTrailingSlash { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b52-191">Specifica se le barre finali "/" presenti nel modello devono essere ignorate quando si creano corrispondenze con gli URI candidati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-191">Specifies whether trailing slashes "/" in the template should be ignored when matching candidate URIs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9b52-192">
            <see langword="true" /> Se barre finali "/" devono essere ignorati, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-192">
              <see langword="true" /> if trailing slashes "/" should be ignored, otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentTo">
      <MemberSignature Language="C#" Value="public bool IsEquivalentTo (UriTemplate other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEquivalentTo(class System.UriTemplate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEquivalentTo (other As UriTemplate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEquivalentTo(UriTemplate ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UriTemplate" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="f9b52-193">Oggetto <see cref="T:System.UriTemplate" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-193">The <see cref="T:System.UriTemplate" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-194">Indica se un modello <see cref="T:System.UriTemplate" /> è strutturalmente simile a un altro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-194">Indicates whether a <see cref="T:System.UriTemplate" /> is structurally equivalent to another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b52-195">
            <see langword="true" /> se <see cref="T:System.UriTemplate" /> è strutturalmente equivalente a un altro; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-195">
              <see langword="true" /> if the <see cref="T:System.UriTemplate" /> is structurally equivalent to another; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b52-196">Due istanze della classe <xref:System.UriTemplate> sono equivalenti se le relative stringhe letterali sono identiche e le relative variabili sono contenute negli stessi segmenti.</span><span class="sxs-lookup"><span data-stu-id="f9b52-196">Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments.</span></span> <span data-ttu-id="f9b52-197">Ad esempio "meteo/{regione}/{città}" è equivalente a "meteo/{campagna}/{comune}".</span><span class="sxs-lookup"><span data-stu-id="f9b52-197">For example "weather/{state}/{city}" is equivalent to "weather/{country}/{village}".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b52-198">Nell'esempio seguente viene illustrato come chiamare il metodo <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span><span class="sxs-lookup"><span data-stu-id="f9b52-198">The following example shows how to call the <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span></span>  
  
 [!code-csharp[UriTemplate#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#6)]
 [!code-vb[UriTemplate#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public UriTemplateMatch Match (Uri baseAddress, Uri candidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch Match(class System.Uri baseAddress, class System.Uri candidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.Match(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (baseAddress As Uri, candidate As Uri) As UriTemplateMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ Match(Uri ^ baseAddress, Uri ^ candidate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="candidate" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="f9b52-199">Indirizzo di base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-199">The base address.</span>
          </span>
        </param>
        <param name="candidate">
          <span data-ttu-id="f9b52-200">Oggetto <see cref="T:System.Uri" /> da confrontare con il modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-200">The <see cref="T:System.Uri" /> to match against the template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b52-201">Tenta di creare una corrispondenza fra un oggetto <see cref="T:System.URI" /> e un oggetto <see cref="T:System.UriTemplate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-201">Attempts to match a <see cref="T:System.URI" /> to a <see cref="T:System.UriTemplate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b52-202">Un'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-202">An instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b52-203">Se la corrispondenza ha esito positivo, l'oggetto <xref:System.UriTemplateMatch> viene popolato con i segmenti URI, i valori delle variabili, i valori della stringa di query e i segmenti di caratteri jolly dell'URI candidato.</span><span class="sxs-lookup"><span data-stu-id="f9b52-203">If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI.</span></span> <span data-ttu-id="f9b52-204">Se invece la corrispondenza ha esito negativo, viene restituito `null`.</span><span class="sxs-lookup"><span data-stu-id="f9b52-204">If the match is unsuccessful, `null` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b52-205">Nell'esempio seguente viene illustrato come chiamare il metodo <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span><span class="sxs-lookup"><span data-stu-id="f9b52-205">The following example shows how to call the <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#7)]
 [!code-vb[UriTemplate#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSegmentVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; PathSegmentVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; PathSegmentVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.PathSegmentVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSegmentVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ PathSegmentVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b52-206">Ottiene una raccolta di nomi di variabili usati all'interno dei segmenti di percorso contenuti nel modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-206">Gets a collection of variable names used within path segments in the template.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9b52-207">Raccolta di nomi di variabili visualizzati all'interno del segmento di percorso del modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-207">A collection of variable names that appear within the template's path segment.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b52-208">La raccolta esclude i nomi di variabili visualizzati nella parte del modello relativa alla query.</span><span class="sxs-lookup"><span data-stu-id="f9b52-208">The collection excludes the names of variables that appear in the query portion of the template.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b52-209">Nell'esempio seguente viene illustrato come accedere alla proprietà <xref:System.UriTemplate.PathSegmentVariableNames%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9b52-209">The following example shows how to access the <xref:System.UriTemplate.PathSegmentVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#2)]
 [!code-vb[UriTemplate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryValueVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; QueryValueVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; QueryValueVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.QueryValueVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryValueVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ QueryValueVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b52-210">Ottiene una raccolta di nomi di variabili utilizzati all'interno della stringa di query contenuta nel modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-210">Gets a collection of variable names used within the query string in the template.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9b52-211">Raccolta di nomi di variabili del modello visualizzati nella parte della stringa del modello relativa alla query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-211">A collection of template variable names that appear in the query portion of the template string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b52-212">Questa raccolta esclude i nomi di variabili visualizzati nella sezione della stringa del modello relativa al percorso.</span><span class="sxs-lookup"><span data-stu-id="f9b52-212">This collection excludes variable names that appear in the path section of the template string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b52-213">Nell'esempio seguente viene illustrato come accedere alla proprietà <xref:System.UriTemplate.QueryValueVariableNames%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9b52-213">The following example shows how to access the <xref:System.UriTemplate.QueryValueVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#3)]
 [!code-vb[UriTemplate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9b52-214">Restituisce una rappresentazione di stringa dell'istanza della classe <see cref="T:System.UriTemplate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-214">Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b52-215">Rappresentazione dell'istanza della classe <see cref="T:System.UriTemplate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b52-215">The representation of the <see cref="T:System.UriTemplate" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9b52-216">Nell'esempio seguente viene illustrato come chiamare il metodo <xref:System.UriTemplate.ToString>.</span><span class="sxs-lookup"><span data-stu-id="f9b52-216">The following example shows how to call the <xref:System.UriTemplate.ToString> method.</span></span>  
  
 [!code-csharp[UriTemplate#8](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#8)]
 [!code-vb[UriTemplate#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>