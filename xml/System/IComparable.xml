<Type Name="IComparable" FullName="System.IComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="204519a433353f750a9b8f4cd673d693827bb73c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37480239" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c8947-101">Definisce un metodo di confronto generalizzato specifico del tipo che viene implementato da un tipo di valore o da una classe per l'ordinamento delle istanze.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c8947-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8947-102">Questa interfaccia viene implementata dai tipi i cui valori possono essere ordinati o ordinati.</span><span class="sxs-lookup"><span data-stu-id="c8947-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="c8947-103">Richiede che i tipi di implementazione definiscono un singolo metodo, <xref:System.IComparable.CompareTo%28System.Object%29>, che indica se la posizione dell'istanza corrente nella sequenza di ordinamento Ã¨ precedente, dopo o uguale come un secondo oggetto dello stesso tipo.</span><span class="sxs-lookup"><span data-stu-id="c8947-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="c8947-104">L'istanza <xref:System.IComparable> implementazione viene chiamata automaticamente dai metodi, ad esempio <xref:System.Array.Sort%2A?displayProperty=nameWithType> e <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c8947-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c8947-105">L'implementazione del <xref:System.IComparable.CompareTo%28System.Object%29> metodo deve restituire un <xref:System.Int32> che presenta uno dei tre valori, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="c8947-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="c8947-106">Valore</span><span class="sxs-lookup"><span data-stu-id="c8947-106">Value</span></span>|<span data-ttu-id="c8947-107">Significato</span><span class="sxs-lookup"><span data-stu-id="c8947-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="c8947-108">Minore di zero</span><span class="sxs-lookup"><span data-stu-id="c8947-108">Less than zero</span></span>|<span data-ttu-id="c8947-109">L'istanza corrente precede l'oggetto specificato da di <xref:System.IComparable.CompareTo%2A> metodo nell'ordinamento.</span><span class="sxs-lookup"><span data-stu-id="c8947-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="c8947-110">Zero</span><span class="sxs-lookup"><span data-stu-id="c8947-110">Zero</span></span>|<span data-ttu-id="c8947-111">Questa istanza corrente si trova nella stessa posizione nell'ordinamento dell'oggetto specificato da di <xref:System.IComparable.CompareTo%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="c8947-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="c8947-112">Maggiore di zero</span><span class="sxs-lookup"><span data-stu-id="c8947-112">Greater than zero</span></span>|<span data-ttu-id="c8947-113">L'istanza corrente segue l'oggetto specificato da di <xref:System.IComparable.CompareTo%2A> metodo nell'ordinamento.</span><span class="sxs-lookup"><span data-stu-id="c8947-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="c8947-114">Tutti i tipi numerici (ad esempio <xref:System.Int32> e <xref:System.Double>) implementare <xref:System.IComparable>, come le <xref:System.String>, <xref:System.Char>, e <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="c8947-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="c8947-115">Tipi personalizzati devono anche fornire la propria implementazione di <xref:System.IComparable> per abilitare le istanze di oggetto deve essere ordinato o ordinato.</span><span class="sxs-lookup"><span data-stu-id="c8947-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8947-116">L'esempio seguente illustra l'implementazione di <xref:System.IComparable> individuati e <xref:System.IComparable.CompareTo%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="c8947-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c8947-117">Oggetto da confrontare con l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8947-117">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8947-118">Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8947-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8947-119">Valore che indica l'ordine relativo degli oggetti confrontati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8947-119">A value that indicates the relative order of the objects being compared.</span>
          </span>
          <span data-ttu-id="c8947-120">Il valore restituito ha i significati seguenti:  <list type="table"><listheader><term> Valore  </term><description> Significato  </description></listheader><item><term> Minore di zero  </term><description> Questa istanza precede <paramref name="obj" />  all'interno dell'ordinamento.  </description></item><item><term> Zero  </term><description> Questa istanza si presenta nella stessa posizione di <paramref name="obj" /> all'interno dell'ordinamento.  </description></item><item><term> Maggiore di zero  </term><description>Questa istanza segue <paramref name="obj" /> nei criteri di ordinamento.  </description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="c8947-120">The return value has these meanings:  <list type="table"><listheader><term> Value  </term><description> Meaning  </description></listheader><item><term> Less than zero  </term><description> This instance precedes <paramref name="obj" /> in the sort order.  </description></item><item><term> Zero  </term><description> This instance occurs in the same position in the sort order as <paramref name="obj" />.  </description></item><item><term> Greater than zero  </term><description> This instance follows <paramref name="obj" /> in the sort order.  </description></item></list></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8947-121">Il <xref:System.IComparable.CompareTo%2A> metodo viene implementato dai tipi i cui valori possono essere ordinati.</span><span class="sxs-lookup"><span data-stu-id="c8947-121">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="c8947-122">Viene chiamato automaticamente dai metodi di oggetti della raccolta non generica, ad esempio <xref:System.Array.Sort%2A?displayProperty=nameWithType>, per ordinare ogni membro della matrice.</span><span class="sxs-lookup"><span data-stu-id="c8947-122">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="c8947-123">Se una classe personalizzata o una struttura non implementa <xref:System.IComparable>, i relativi membri non possono essere ordinati e l'operazione di ordinamento puÃ² generare un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c8947-123">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c8947-124">Questo metodo Ã¨ solo una definizione e deve essere implementato da un tipo specifico di classe o valore abbia effetto.</span><span class="sxs-lookup"><span data-stu-id="c8947-124">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="c8947-125">Il significato dei confronti specificati nel valore restituito sezione ("precede", "si verifica nella stessa posizione come" e "seguente") dipende dall'implementazione specifica.</span><span class="sxs-lookup"><span data-stu-id="c8947-125">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="c8947-126">Per definizione, qualsiasi oggetto risulta maggiore (o segue) `null`, e due riferimenti null risultano uguali tra loro.</span><span class="sxs-lookup"><span data-stu-id="c8947-126">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="c8947-127">Il parametro `obj`, deve essere dello stesso tipo della classe o del valore di tipo che implementa questa interfaccia; in caso contrario, un <xref:System.ArgumentException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="c8947-127">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8947-128">Nell'esempio seguente viene illustrato l'utilizzo di <xref:System.IComparable.CompareTo%2A> per confrontare una `Temperature` che implementa l'oggetto <xref:System.IComparable> con un altro oggetto.</span><span class="sxs-lookup"><span data-stu-id="c8947-128">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="c8947-129">Il `Temperature` dell'oggetto implementi <xref:System.IComparable.CompareTo%2A> eseguendo semplicemente il wrapping di una chiamata al <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="c8947-129">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c8947-130">
            <paramref name="obj" /> non ha lo stesso tipo di questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8947-130">
              <paramref name="obj" /> is not the same type as this instance.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="c8947-131">
            <para>Per gli oggetti A, B e C, le condizioni seguenti devono essere true: <c>A.CompareTo(A)</c> devono restituire zero.  Se <c>CompareTo (b)</c> restituisce zero, quindi <c>B.CompareTo(A)</c> devono restituire zero.  Se <c>CompareTo (b)</c> restituisce zero e <c>B.CompareTo(C)</c> restituisce zero, quindi <c>CompareTo (c)</c> devono restituire zero.  Se <c>CompareTo (b)</c> restituisce un valore diverso da zero, quindi <c>B.CompareTo(A)</c> deve restituire un valore di segno opposto.  Se <c>CompareTo (b)</c> restituisce un valore <paramref name="x" /> diverso da zero, e <c>B.CompareTo(C)</c> restituisce un valore <paramref name="y" /> dello stesso segno <paramref name="x" />, quindi <c>A. CompareTo(C)</c> deve restituire un valore dello stesso segno <paramref name="x" /> e <paramref name="y" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c8947-131">
              <para>For objects A, B and C, the following must be true:  <c>A.CompareTo(A)</c> must return zero.  If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.  If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.  If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.  If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="c8947-132">
            <para>Usare il <see cref="M:System.IComparable.CompareTo(System.Object)" /> metodo per determinare l'ordinamento delle istanze di una classe.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c8947-132">
              <para>Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>