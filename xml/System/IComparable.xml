<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IComparable.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5070339ff2c2f571a4d73591a9f8016dea438436b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">070339ff2c2f571a4d73591a9f8016dea438436b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IComparable">
          <source>Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</source>
          <target state="translated">Definisce un metodo di confronto generalizzato specifico del tipo che viene implementato da un tipo di valore o da una classe per l'ordinamento delle istanze.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>This interface is implemented by types whose values can be ordered or sorted.</source>
          <target state="translated">Questa interfaccia è implementata da tipi i cui valori possono essere ordinati.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>It requires that implementing types define a single method, <ph id="ph1">&lt;xref:System.IComparable.CompareTo%28System.Object%29&gt;</ph>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</source>
          <target state="translated">Richiede che i tipi di implementazione definiscono un singolo metodo, <ph id="ph1">&lt;xref:System.IComparable.CompareTo%28System.Object%29&gt;</ph>, che indica se la posizione dell'istanza corrente nella sequenza di ordinamento è precedente, successiva o uguale a quella un secondo oggetto dello stesso tipo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>The instance's <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation is called automatically by methods such as <ph id="ph2">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L'istanza <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementazione viene chiamata automaticamente dai metodi, ad esempio <ph id="ph2">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph3">&lt;xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%28System.Object%29&gt;</ph> method must return an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> that has one of three values, as shown in the following table.</source>
          <target state="translated">L'implementazione del <ph id="ph1">&lt;xref:System.IComparable.CompareTo%28System.Object%29&gt;</ph> metodo deve restituire un <ph id="ph2">&lt;xref:System.Int32&gt;</ph> che presenta uno dei tre valori, come illustrato nella tabella seguente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Meaning</source>
          <target state="translated">Significato</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Less than zero</source>
          <target state="translated">Minore di zero</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>The current instance precedes the object specified by the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method in the sort order.</source>
          <target state="translated">L'istanza corrente precede l'oggetto specificato da di <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metodo nell'ordinamento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Zero</source>
          <target state="translated">Zero</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>This current instance occurs in the same position in the sort order as the object specified by the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">L'istanza corrente è nella stessa posizione dell'ordinamento dell'oggetto specificato per il <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Greater than zero</source>
          <target state="translated">Maggiore di zero</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>This current instance follows the object specified by the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method in the sort order.</source>
          <target state="translated">L'istanza corrente segue l'oggetto specificato da di <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metodo nell'ordinamento.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>All numeric types (such as <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and <ph id="ph2">&lt;xref:System.Double&gt;</ph>) implement <ph id="ph3">&lt;xref:System.IComparable&gt;</ph>, as do <ph id="ph4">&lt;xref:System.String&gt;</ph>, <ph id="ph5">&lt;xref:System.Char&gt;</ph>, and <ph id="ph6">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Tutti i tipi numerici (ad esempio <ph id="ph1">&lt;xref:System.Int32&gt;</ph> e <ph id="ph2">&lt;xref:System.Double&gt;</ph>) implementare <ph id="ph3">&lt;xref:System.IComparable&gt;</ph>, come <ph id="ph4">&lt;xref:System.String&gt;</ph>, <ph id="ph5">&lt;xref:System.Char&gt;</ph>, e <ph id="ph6">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Custom types should also provide their own implementation of <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> to enable object instances to be ordered or sorted.</source>
          <target state="translated">Tipi personalizzati devono anche fornire la propria implementazione di <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> per abilitare le istanze di oggetto per l'ordinamento.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>The following example illustrates the implementation of <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> and the requisite <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrata l'implementazione di <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>An object to compare with this instance.</source>
          <target state="translated">Oggetto da confrontare con l'istanza.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</source>
          <target state="translated">Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>A value that indicates the relative order of the objects being compared.</source>
          <target state="translated">Valore che indica l'ordine relativo degli oggetti confrontati.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The return value has these meanings:</source>
          <target state="translated">Il valore restituito ha i seguenti significati:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valore</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significato</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Minore di zero</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Questa istanza precede <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> nell'ordinamento.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance occurs in the same position in the sort order as <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Questa istanza si presenta nella stessa posizione di <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> all'interno dell'ordinamento.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Maggiore di zero</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Questa istanza segue <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> nei criteri di ordinamento.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method is implemented by types whose values can be ordered or sorted.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metodo è implementato da tipi i cui valori possono essere ordinati.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>It is called automatically by methods of non-generic collection objects, such as <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>, to order each member of the array.</source>
          <target state="translated">Viene chiamato automaticamente dai metodi di oggetti della raccolta non generica, ad esempio <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>, per ordinare ogni membro della matrice.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>If a custom class or structure does not implement <ph id="ph1">&lt;xref:System.IComparable&gt;</ph>, its members cannot be ordered and the sort operation can throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se una classe o struttura personalizzata non implementa <ph id="ph1">&lt;xref:System.IComparable&gt;</ph>, i relativi membri non possono essere ordinati e l'operazione di ordinamento può generare un <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>This method is only a definition and must be implemented by a specific class or value type to have effect.</source>
          <target state="translated">Questo metodo è solo una definizione e deve essere implementato da un tipo di classe o un valore specifico ha effetto.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</source>
          <target state="translated">Il significato dei confronti specificati nella sezione ("precede", "a cui si trova nella stessa posizione" e "segue") dipende dall'implementazione specifica il valore restituito.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>By definition, any object compares greater than (or follows) <ph id="ph1">`null`</ph>, and two null references compare equal to each other.</source>
          <target state="translated">Per definizione, qualsiasi oggetto risulta maggiore (o segue) <ph id="ph1">`null`</ph>, e due riferimenti null risultano uguali tra loro.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The parameter, <ph id="ph1">`obj`</ph>, must be the same type as the class or value type that implements this interface; otherwise, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">Il parametro, <ph id="ph1">`obj`</ph>, deve essere dello stesso tipo della classe o del valore di tipo che implementa questa interfaccia; in caso contrario, un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The following example illustrates the use of <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> to compare a <ph id="ph2">`Temperature`</ph> object implementing <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> with another object.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> per confrontare un <ph id="ph2">`Temperature`</ph> oggetto che implementa <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> con un altro oggetto.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The <ph id="ph1">`Temperature`</ph> object implements <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> by simply wrapping a call to the <ph id="ph3">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">`Temperature`</ph> oggetto implementa <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> eseguendo semplicemente il wrapping di una chiamata al <ph id="ph3">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not the same type as this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> non ha lo stesso tipo di questa istanza.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>For objects A, B and C, the following must be true:</source>
          <target state="translated">Per gli oggetti A, B e C, deve essere true le operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(A)<ept id="p1">&lt;/c&gt;</ept> must return zero.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(A)<ept id="p1">&lt;/c&gt;</ept> deve restituire zero.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns zero, then <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> must return zero.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> restituisce zero, quindi <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> deve restituire zero.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns zero and <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> returns zero, then <bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> must return zero.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> restituisce zero e <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> restituisce zero, quindi <bpt id="p3">&lt;c&gt;</bpt>CompareTo (c)<ept id="p3">&lt;/c&gt;</ept> deve restituire zero.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns a value other than zero, then <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> must return a value of the opposite sign.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> restituisce un valore diverso da zero, quindi <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> deve restituire un valore di segno opposto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns a value <ph id="ph1">&lt;paramref name="x" /&gt;</ph> not equal to zero, and <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> returns a value <ph id="ph2">&lt;paramref name="y" /&gt;</ph> of the same sign as <ph id="ph3">&lt;paramref name="x" /&gt;</ph>, then <bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> must return a value of the same sign as <ph id="ph4">&lt;paramref name="x" /&gt;</ph> and <ph id="ph5">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> restituisce un valore <ph id="ph1">&lt;paramref name="x" /&gt;</ph> diverso da zero, e <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> restituisce un valore <ph id="ph2">&lt;paramref name="y" /&gt;</ph> dello stesso segno <ph id="ph3">&lt;paramref name="x" /&gt;</ph>, quindi <bpt id="p3">&lt;c&gt;</bpt>A. CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> deve restituire un valore dello stesso segno <ph id="ph4">&lt;paramref name="x" /&gt;</ph> e <ph id="ph5">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.IComparable.CompareTo(System.Object)" /&gt;</ph> method to determine the ordering of instances of a class.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;see cref="M:System.IComparable.CompareTo(System.Object)" /&gt;</ph> metodo per determinare l'ordine delle istanze di una classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>