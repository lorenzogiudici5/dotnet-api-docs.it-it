<Type Name="ReadOnlySpan&lt;T&gt;+Enumerator" FullName="System.ReadOnlySpan&lt;T&gt;+Enumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4f32366a5fd692959a4892082d504caa1ccaf6b" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52195808" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ReadOnlySpan&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ReadOnlySpan`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ReadOnlySpan`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure ReadOnlySpan(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class ReadOnlySpan&lt;T&gt;::Enumerator" />
  <TypeSignature Language="F#" Value="type ReadOnlySpan&lt;'T&gt;.Enumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9b175-101">Fornisce un enumeratore per gli elementi di un <see cref="T:System.ReadOnlySpan`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9b175-101">Provides an enumerator for the elements of a <see cref="T:System.ReadOnlySpan`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[<span data-ttu-id="9b175-102">Il codice c# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) del linguaggio c# e [For Each... Avanti](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) costrutto in Visual Basic nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="9b175-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="9b175-103">Anziché modificare direttamente l'enumeratore, usando `foreach` o `For Each...Next` è consigliato.</span><span class="sxs-lookup"><span data-stu-id="9b175-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="9b175-104">Inizialmente, l'enumeratore è posizionato prima del primo elemento nel <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="9b175-104">Initially, the enumerator is positioned before the first element in the <xref:System.ReadOnlySpan`1>.</span></span> <span data-ttu-id="9b175-105">In questa posizione, la proprietà <xref:System.ReadOnlySpan`1.Enumerator.Current> è indefinita.</span><span class="sxs-lookup"><span data-stu-id="9b175-105">At this position, <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="9b175-106">È necessario chiamare <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> per passare l'enumeratore al primo elemento di <xref:System.ReadOnlySpan`1> prima di leggere il valore di <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span><span class="sxs-lookup"><span data-stu-id="9b175-106">You must call <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.ReadOnlySpan`1> before reading the value of <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span></span>

<span data-ttu-id="9b175-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> Restituisce lo stesso valore fino a <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="9b175-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="9b175-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> imposta <xref:System.ReadOnlySpan`1.Enumerator.Current> all'elemento successivo nel <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="9b175-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> sets <xref:System.ReadOnlySpan`1.Enumerator.Current> to the next item in the <xref:System.ReadOnlySpan`1>.</span></span>

<span data-ttu-id="9b175-109">Se <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> raggiunge la fine del <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="9b175-109">If <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> passes the end of the <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="9b175-110">Quando l'enumeratore si trova in questo stato, le chiamate successive a <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> inoltre restituire `false` e <xref:System.ReadOnlySpan`1.Enumerator.Current> è definito.</span><span class="sxs-lookup"><span data-stu-id="9b175-110">When the enumerator is at this state, subsequent calls to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> also return `false` and <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="9b175-111">Non è possibile impostare <xref:System.ReadOnlySpan`1.Enumerator.Current> sul primo elemento nel <xref:System.ReadOnlySpan`1> ovvero anche in questo caso, è necessario creare una nuova istanza di enumeratore.</span><span class="sxs-lookup"><span data-stu-id="9b175-111">You cannot set <xref:System.ReadOnlySpan`1.Enumerator.Current> to the first item in the <xref:System.ReadOnlySpan`1> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="9b175-112">Anche se il <xref:System.ReadOnlySpan`1> viene allocata nello stack, i dati sottostanti in cui il <xref:System.ReadOnlySpan`1> punti, potrebbero non essere.</span><span class="sxs-lookup"><span data-stu-id="9b175-112">Though the <xref:System.ReadOnlySpan`1> is allocated on the stack, the underlying data on which the <xref:System.ReadOnlySpan`1> points to, may not be.</span></span> <span data-ttu-id="9b175-113">Pertanto, l'enumerazione tramite un <xref:System.ReadOnlySpan`1> intrinsecamente non è una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="9b175-113">Therefore, enumerating through a <xref:System.ReadOnlySpan`1> is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9b175-114">Per garantire la sicurezza dei thread durante l'enumerazione, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="9b175-114">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span>

<span data-ttu-id="9b175-115">A differenza di altre strutture di enumeratore in .NET i <xref:System.ReadOnlySpan`1.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="9b175-115">Unlike some other enumerator structures in .NET, the <xref:System.ReadOnlySpan`1.Enumerator>:</span></span>

- <span data-ttu-id="9b175-116">Non implementa il <xref:System.Collections.IEnumerator> o <xref:System.Collections.Generic.IEnumerator`1> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="9b175-116">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator`1> interface.</span></span> <span data-ttu-id="9b175-117">Infatti <xref:System.ReadOnlySpan`1.Enumerator> è un [struct ref](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type) e non può essere sottoposto a boxing.</span><span class="sxs-lookup"><span data-stu-id="9b175-117">This is because <xref:System.ReadOnlySpan`1.Enumerator> is a [ref struct](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type) and cannot be boxed.</span></span>

- <span data-ttu-id="9b175-118">Non include un `Reset` metodo, che è possibile impostare l'enumeratore sulla propria posizione iniziale prima del primo elemento nell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="9b175-118">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="9b175-119">(Il <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> metodo deve essere implementato come parte dell'interfaccia, ma la maggior parte degli implementatori generano un'eccezione o non forniscono alcuna implementazione.)</span><span class="sxs-lookup"><span data-stu-id="9b175-119">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span>]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T&amp; Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance T&amp; modreq(System.Runtime.InteropServices.InAttribute) Current" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T&amp; ^ Current { T&amp; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : T&amp;" Usage="System.ReadOnlySpan&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T&amp;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b175-120">Restituisce un riferimento all'elemento in corrispondenza della posizione corrente dell'enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b175-120">Gets a reference to the item at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b175-121">Elemento dell'insieme <see cref="T:System.ReadOnlySpan`1" /> in corrispondenza della posizione corrente dell'enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b175-121">The element in the <see cref="T:System.ReadOnlySpan`1" /> at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9b175-122">`Current` non è definito in una delle condizioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="9b175-122">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="9b175-123">Immediatamente dopo la creazione dell'enumeratore, l'enumeratore è posizionato prima del primo elemento nell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="9b175-123">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="9b175-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> deve essere chiamato per passare l'enumeratore al primo elemento dell'intervallo prima di leggere il valore di `Current`.</span><span class="sxs-lookup"><span data-stu-id="9b175-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="9b175-125">L'ultima chiamata a <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> restituiti `false`, che indica la fine dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="9b175-125">The last call to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="9b175-126">`Current` Restituisce lo stesso valore fino a <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="9b175-126">`Current` returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> is called.</span></span> <span data-ttu-id="9b175-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> imposta `Current` all'elemento successivo nell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="9b175-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> sets `Current` to the next item in the span.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b175-128">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b175-128">Advances the enumerator to the next item of the <see cref="System.ReadOnlySpan`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b175-129">`true` se l'enumeratore è stato spostato correttamente all'elemento successivo; `false` se è stata superata la fine dell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b175-129">`true` if the enumerator successfully advanced to the next item; `false` if the end of the span has been passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9b175-130">Dopo aver creato, un enumeratore è posizionato prima del primo elemento nell'intervallo e la prima chiamata a `MoveNext` Sposta l'enumeratore al primo elemento nell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="9b175-130">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="9b175-131">Se `MoveNext` raggiunge la fine dell'intervallo `MoveNext` restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="9b175-131">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="9b175-132">Quando l'enumeratore si trova in questo stato, le chiamate successive a `MoveNext` restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="9b175-132">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>