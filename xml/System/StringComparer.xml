<Type Name="StringComparer" FullName="System.StringComparer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fef81d39f18f6ae0e33d7d4afa958e4bc6174f28" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52345627" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class StringComparer : System.Collections.Generic.IComparer&lt;string&gt;, System.Collections.Generic.IEqualityComparer&lt;string&gt;, System.Collections.IComparer, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit StringComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;string&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;string&gt;, class System.Collections.IComparer, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.StringComparer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StringComparer&#xA;Implements IComparer, IComparer(Of String), IEqualityComparer, IEqualityComparer(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringComparer abstract : System::Collections::Generic::IComparer&lt;System::String ^&gt;, System::Collections::Generic::IEqualityComparer&lt;System::String ^&gt;, System::Collections::IComparer, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type StringComparer = class&#xA;    interface IComparer&#xA;    interface IEqualityComparer&#xA;    interface IComparer&lt;string&gt;&#xA;    interface IEqualityComparer&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="65419-101">Rappresenta un'operazione di confronto tra stringhe che usa regole specifiche di confronto basate sull'uso di maiuscole e minuscole e specifiche delle impostazioni cultura o per ordinale.</span>
      <span class="sxs-lookup">
        <span data-stu-id="65419-101">Represents a string comparison operation that uses specific case and culture-based or ordinal comparison rules.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-102">Oggetto derivato dal <xref:System.StringComparer> classe incorpora la stringa in base al confronto, uguaglianza e operazioni di codice hash che prendono in considerazione le regole di confronto maiuscole e minuscole e specifiche delle impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="65419-102">An object derived from the <xref:System.StringComparer> class embodies string-based comparison, equality, and hash code operations that take into account both case and culture-specific comparison rules.</span></span> <span data-ttu-id="65419-103">È possibile usare il <xref:System.StringComparer> classe per creare un confronto di tipo specifico per ordinare gli elementi in una raccolta generica.</span><span class="sxs-lookup"><span data-stu-id="65419-103">You can use the <xref:System.StringComparer> class to create a type-specific comparison to sort the elements in a generic collection.</span></span> <span data-ttu-id="65419-104">Le classi quali <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.SortedList>, e <xref:System.Collections.Generic.SortedList%602> usano il <xref:System.StringComparer> classe ai fini dell'ordinamento.</span><span class="sxs-lookup"><span data-stu-id="65419-104">Classes such as <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.SortedList>, and <xref:System.Collections.Generic.SortedList%602> use the <xref:System.StringComparer> class for sorting purposes.</span></span>  
  
 <span data-ttu-id="65419-105">Un'operazione di confronto che è rappresentata dal <xref:System.StringComparer> classe è definita per essere con distinzione maiuscole/minuscole o maiuscole e minuscole e usare delle parole (dipendenti dalle impostazioni cultura) o le regole di confronto ordinale (indipendente dalla lingua).</span><span class="sxs-lookup"><span data-stu-id="65419-105">A comparison operation that is represented by the <xref:System.StringComparer> class is defined to be either case-sensitive or case-insensitive, and use either word (culture-sensitive) or ordinal (culture-insensitive) comparison rules.</span></span> <span data-ttu-id="65419-106">Per altre informazioni sulle regole di confronto ordinale e word, vedere <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="65419-106">For more information about word and ordinal comparison rules, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  

> [!NOTE]
> <span data-ttu-id="65419-107">È possibile scaricare le [tabelle di ordinamento spessore](https://www.microsoft.com/en-us/download/details.aspx?id=10921), un set di file di testo che contengono informazioni sugli spessori dei caratteri usati nelle operazioni di ordinamento e confronto per i sistemi operativi Windows, e la [tabella degli elementi delle regole di confronto Unicode predefinite](https://www.unicode.org/Public/UCA/latest/allkeys.txt), la versione più recente della tabella di ordinamento spessore per Linux e MacOS.</span><span class="sxs-lookup"><span data-stu-id="65419-107">You can download the [Sorting Weight Tables](https://www.microsoft.com/en-us/download/details.aspx?id=10921), a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, and the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), the latest version of the sort weight table for Linux and macOS.</span></span> <span data-ttu-id="65419-108">La versione specifica della tabella di ordinamento spessore in Linux e macOS dipende dalla versione delle librerie [International Components for Unicode](http://site.icu-project.org/) installate nel sistema.</span><span class="sxs-lookup"><span data-stu-id="65419-108">The specific version of the sort weight table on Linux and macOS depends on the version of the [International Components for Unicode](http://site.icu-project.org/) libraries installed on the system.</span></span> <span data-ttu-id="65419-109">Per informazioni sulle versioni ICU e sulle versioni Unicode implementate, vedere [Downloading ICU](http://site.icu-project.org/download) (Download di ICU).</span><span class="sxs-lookup"><span data-stu-id="65419-109">For information on ICU versions and the Unicode versions that they implement, see [Downloading ICU](http://site.icu-project.org/download).</span></span>

## <a name="implemented-properties"></a><span data-ttu-id="65419-110">Proprietà implementate</span><span class="sxs-lookup"><span data-stu-id="65419-110">Implemented properties</span></span>  

<span data-ttu-id="65419-111">Potrebbero non essere certi su come usare il <xref:System.StringComparer> proprietà della classe a causa di una contraddizione creare.</span><span class="sxs-lookup"><span data-stu-id="65419-111">You might be confused about how to use the <xref:System.StringComparer> class properties because of a seeming contradiction.</span></span> <span data-ttu-id="65419-112">Il <xref:System.StringComparer> classe viene dichiarata `abstract` (`MustInherit` in Visual Basic), ovvero i relativi membri può essere richiamato solo su un oggetto di una classe derivata dal <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-112">The <xref:System.StringComparer> class is declared `abstract` (`MustInherit` in Visual Basic), which means its members can be invoked only on an object of a class derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="65419-113">Il contraddizione è che ogni proprietà del <xref:System.StringComparer> classe viene dichiarata `static` (`Shared` in Visual Basic), che significa che la proprietà può essere richiamato senza dover prima creare una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="65419-113">The contradiction is that each property of the <xref:System.StringComparer> class is declared `static` (`Shared` in Visual Basic), which means the property can be invoked without first creating a derived class.</span></span>  
  
 <span data-ttu-id="65419-114">È possibile chiamare una <xref:System.StringComparer> proprietà direttamente perché ogni proprietà effettivamente restituisce un'istanza di una classe anonima che è derivata dal <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-114">You can call a <xref:System.StringComparer> property directly because each property actually returns an instance of an anonymous class that is derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="65419-115">Di conseguenza, il tipo di ogni valore della proprietà è <xref:System.StringComparer>, che non è la classe di base della classe anonima, il tipo di anonimo classe stessa.</span><span class="sxs-lookup"><span data-stu-id="65419-115">Consequently, the type of each property value is <xref:System.StringComparer>, which is the base class of the anonymous class, not the type of the anonymous class itself.</span></span> <span data-ttu-id="65419-116">Ciascuna <xref:System.StringComparer> classe di proprietà restituisce un <xref:System.StringComparer> oggetto che supporta le regole di confronto e case predefinite.</span><span class="sxs-lookup"><span data-stu-id="65419-116">Each <xref:System.StringComparer> class property returns a <xref:System.StringComparer> object that supports predefined case and comparison rules.</span></span>  
  
## Examples  

<span data-ttu-id="65419-117">L'esempio seguente illustra le proprietà e il <xref:System.StringComparer.Create%2A> metodo di <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-117">The following example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="65419-118">Nell'esempio viene illustrato come i vari <xref:System.StringComparer> alfabeto oggetti ordinamento tre versioni dell'alfabeto latino.</span><span class="sxs-lookup"><span data-stu-id="65419-118">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.String" />
    <altmember cref="T:System.Globalization.CompareOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StringComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StringComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65419-119">Inizializza una nuova istanza della classe <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-119">Initializes a new instance of the <see cref="T:System.StringComparer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65419-120">Confronta due oggetti o stringhe e restituisce un'indicazione del relativo ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-120">Compares two objects or strings and returns an indication of their relative sort order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As Object, y As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="65419-121">Oggetto da confrontare con <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-121">An object to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="65419-122">Oggetto da confrontare con <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-122">An object to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65419-123">Quando ne viene eseguito l'override in una classe derivata, confronta due oggetti e restituisce un'indicazione del relativo ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-123">When overridden in a derived class, compares two objects and returns an indication of their relative sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65419-124">Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-124">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="65419-125">Valore</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-125">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="65419-126">Significato</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-126">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="65419-127">Minore di zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-127">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="65419-128">
                  <paramref name="x" /> precede <paramref name="y" /> nell'ordinamento.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-128">
                    <paramref name="x" /> precedes  <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="65419-129">oppure</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-129">-or-</span>
                </span>
                <span data-ttu-id="65419-130">
                  <paramref name="x" /> è <see langword="null" /> e <paramref name="y" /> non è <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-130">
                    <paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="65419-131">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-131">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="65419-132">
                  <paramref name="x" /> è uguale a <paramref name="y" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-132">
                    <paramref name="x" /> is equal to <paramref name="y" />.</span>
                </span>
                <span data-ttu-id="65419-133">oppure</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-133">-or-</span>
                </span>
                <span data-ttu-id="65419-134">
                  <paramref name="x" /> e <paramref name="y" /> sono entrambi <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-134">
                    <paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="65419-135">Maggiore di zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-135">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="65419-136">
                  <paramref name="x" /> segue <paramref name="y" /> nell'ordinamento.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-136">
                    <paramref name="x" /> follows <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="65419-137">oppure</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-137">-or-</span>
                </span>
                <span data-ttu-id="65419-138">
                  <paramref name="y" /> è <see langword="null" /> e <paramref name="x" /> non è <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-138">
                    <paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-139">Il <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> metodo è leggermente più efficiente il <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> metodo perché alcuna conversione del `x` e `y` argomenti è necessario per eseguire il confronto.</span><span class="sxs-lookup"><span data-stu-id="65419-139">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65419-140">Né <paramref name="x" /> né <paramref name="y" /> è un oggetto <see cref="T:System.String" /> e né <paramref name="x" /> né <paramref name="y" /> implementa l'interfaccia <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-140">Neither <paramref name="x" /> nor <paramref name="y" /> is a <see cref="T:System.String" /> object, and neither <paramref name="x" /> nor <paramref name="y" /> implements the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As String, y As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="65419-141">Stringa da confrontare con <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-141">A string to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="65419-142">Stringa da confrontare con <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-142">A string to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65419-143">Quando ne viene eseguito l'override in una classe derivata, confronta due stringhe e restituisce un'indicazione del relativo ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-143">When overridden in a derived class, compares two strings and returns an indication of their relative sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65419-144">Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-144">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="65419-145">Valore</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-145">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="65419-146">Significato</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-146">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="65419-147">Minore di zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-147">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="65419-148">
                  <paramref name="x" /> precede <paramref name="y" /> nell'ordinamento.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-148">
                    <paramref name="x" /> precedes <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="65419-149">oppure</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-149">-or-</span>
                </span>
                <span data-ttu-id="65419-150">
                  <paramref name="x" /> è <see langword="null" /> e <paramref name="y" /> non è <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-150">
                    <paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="65419-151">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-151">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="65419-152">
                  <paramref name="x" /> è uguale a <paramref name="y" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-152">
                    <paramref name="x" /> is equal to <paramref name="y" />.</span>
                </span>
                <span data-ttu-id="65419-153">oppure</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-153">-or-</span>
                </span>
                <span data-ttu-id="65419-154">
                  <paramref name="x" /> e <paramref name="y" /> sono entrambi <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-154">
                    <paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="65419-155">Maggiore di zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-155">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="65419-156">
                  <paramref name="x" /> segue <paramref name="y" /> nell'ordinamento.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-156">
                    <paramref name="x" /> follows <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="65419-157">oppure</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-157">-or-</span>
                </span>
                <span data-ttu-id="65419-158">
                  <paramref name="y" /> è <see langword="null" /> e <paramref name="x" /> non è <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="65419-158">
                    <paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-159">Il <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> metodo è leggermente più efficiente il <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> metodo perché alcuna conversione del `x` e `y` argomenti è necessario per eseguire il confronto.</span><span class="sxs-lookup"><span data-stu-id="65419-159">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, ignoreCase As Boolean) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * bool -&gt; StringComparer" Usage="System.StringComparer.Create (culture, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="65419-160">impostazioni cultura le cui regole sono usate per eseguire un confronto tra stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-160">A culture whose linguistic rules are used to perform a string comparison.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="65419-161">
            <see langword="true" /> per specificare che le operazioni di confronto non devono fare distinzione tra maiuscole e minuscole; <see langword="false" /> per specificare che le operazioni di confronto devono fare distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-161">
              <see langword="true" /> to specify that comparison operations be case-insensitive; <see langword="false" /> to specify that comparison operations be case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65419-162">Crea un oggetto <see cref="T:System.StringComparer" /> che confronta le stringhe secondo le regole delle impostazioni cultura specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-162">Creates a <see cref="T:System.StringComparer" /> object that compares strings according to the rules of a specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65419-163">Nuovo oggetto <see cref="T:System.StringComparer" /> che esegue confronti tra stringhe in base alle regole di confronto usate dal parametro <paramref name="culture" /> e alla regola di distinzione tra maiuscole e minuscole specificata dal parametro <paramref name="ignoreCase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-163">A new <see cref="T:System.StringComparer" /> object that performs string comparisons according to the comparison rules used by the <paramref name="culture" /> parameter and the case rule specified by the <paramref name="ignoreCase" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65419-164">L'esempio di codice seguente illustra le proprietà e il <xref:System.StringComparer.Create%2A> metodo di <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-164">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="65419-165">Nell'esempio viene illustrato come i vari <xref:System.StringComparer> alfabeto oggetti ordinamento tre versioni dell'alfabeto latino.</span><span class="sxs-lookup"><span data-stu-id="65419-165">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65419-166">
            <paramref name="culture" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-166">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, options As CompareOptions) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * System.Globalization.CompareOptions -&gt; StringComparer" Usage="System.StringComparer.Create (culture, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="culture">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : StringComparer" Usage="System.StringComparer.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65419-167">Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto tra stringhe con distinzione tra maiuscole e minuscole usando le regole di confronto per parola delle impostazioni cultura correnti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-167">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the current culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65419-168">Nuovo oggetto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-168">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-169">Il <xref:System.StringComparer> restituito dal <xref:System.StringComparer.CurrentCulture%2A> proprietà può essere utilizzata quando le stringhe sono linguisticamente rilevanti.</span><span class="sxs-lookup"><span data-stu-id="65419-169">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCulture%2A> property can be used when strings are linguistically relevant.</span></span> <span data-ttu-id="65419-170">Ad esempio, se le stringhe vengono visualizzate all'utente, o se le stringhe sono il risultato dell'interazione dell'utente, confronto tra stringhe con distinzione delle impostazioni cultura da utilizzare per ordinare i dati della stringa.</span><span class="sxs-lookup"><span data-stu-id="65419-170">For example, if strings are displayed to the user, or if strings are the result of user interaction, culture-sensitive string comparison should be used to order the string data.</span></span>  
  
 <span data-ttu-id="65419-171">Le impostazioni cultura correnti è il <xref:System.Globalization.CultureInfo> oggetto associato al thread corrente.</span><span class="sxs-lookup"><span data-stu-id="65419-171">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread.</span></span>  
  
 <span data-ttu-id="65419-172">Il <xref:System.StringComparer.CurrentCulture%2A> proprietà effettivamente restituisce un'istanza di una classe anonima derivata dal <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-172">The <xref:System.StringComparer.CurrentCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="65419-173">Ogni chiamata ai <xref:System.StringComparer.CurrentCulture%2A> proprietà `get` funzione di accesso restituisce un nuovo <xref:System.StringComparer> oggetto, come illustrato nel codice seguente.</span><span class="sxs-lookup"><span data-stu-id="65419-173">Each call to the <xref:System.StringComparer.CurrentCulture%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#1)]
 [!code-vb[System.StringComparer.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#1)]  
  
 <span data-ttu-id="65419-174">Per migliorare le prestazioni, è possibile archiviare il <xref:System.StringComparer> dell'oggetto in una variabile locale, anziché recuperare il valore della <xref:System.StringComparer.CurrentCulture%2A> proprietà più volte.</span><span class="sxs-lookup"><span data-stu-id="65419-174">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCulture%2A> property multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65419-175">L'esempio di codice seguente illustra le proprietà e il <xref:System.StringComparer.Create%2A> metodo di <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-175">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="65419-176">Nell'esempio viene illustrato come i vari <xref:System.StringComparer> alfabeto oggetti ordinamento tre versioni dell'alfabeto latino.</span><span class="sxs-lookup"><span data-stu-id="65419-176">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="65419-177">Procedure consigliate per l'utilizzo di stringhe in .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-177">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCultureIgnoreCase : StringComparer" Usage="System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65419-178">Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto tra stringhe con distinzione tra maiuscole e minuscole usando le regole di confronto per parola delle impostazioni cultura correnti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-178">Gets a <see cref="T:System.StringComparer" /> object that performs case-insensitive string comparisons using the word comparison rules of the current culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65419-179">Nuovo oggetto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-179">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-180">Le impostazioni cultura correnti è il <xref:System.Globalization.CultureInfo> oggetto associato al thread corrente.</span><span class="sxs-lookup"><span data-stu-id="65419-180">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread.</span></span>  
  
 <span data-ttu-id="65419-181">Il <xref:System.StringComparer> restituito dal <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> proprietà può essere utilizzata quando le stringhe sono linguisticamente rilevanti non maiuscole.</span><span class="sxs-lookup"><span data-stu-id="65419-181">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property can be used when strings are linguistically relevant but their case is not.</span></span> <span data-ttu-id="65419-182">Ad esempio, se le stringhe vengono visualizzate all'utente, ma i casi sono irrilevante, con distinzione delle impostazioni cultura, confronto tra stringhe con distinzione tra maiuscole e usare per ordinare i dati della stringa.</span><span class="sxs-lookup"><span data-stu-id="65419-182">For example, if strings are displayed to the user but case is unimportant, culture-sensitive, case-insensitive string comparison should be used to order the string data.</span></span>  
  
 <span data-ttu-id="65419-183">Il <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> proprietà effettivamente restituisce un'istanza di una classe anonima derivata dal <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-183">The <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="65419-184">Ogni chiamata ai <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> proprietà `get` funzione di accesso restituisce un nuovo <xref:System.StringComparer> oggetto, come illustrato nel codice seguente.</span><span class="sxs-lookup"><span data-stu-id="65419-184">Each call to the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#2)]
 [!code-vb[System.StringComparer.CurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#2)]  
  
 <span data-ttu-id="65419-185">Per migliorare le prestazioni, è possibile archiviare il <xref:System.StringComparer> dell'oggetto in una variabile locale, anziché recuperare il valore della <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> proprietà più volte.</span><span class="sxs-lookup"><span data-stu-id="65419-185">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="65419-186">Procedure consigliate per l'utilizzo di stringhe in .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-186">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65419-187">Quando ne viene eseguito l'override in una classe derivata, indica se due oggetti o stringhe sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-187">When overridden in a derived class, indicates whether two objects or strings are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As Object, y As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj * obj -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="65419-188">Oggetto da confrontare con <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-188">An object to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="65419-189">Oggetto da confrontare con <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-189">An object to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65419-190">Quando ne viene eseguito l'override in una classe derivata, indica se due oggetti sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-190">When overridden in a derived class, indicates whether two objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65419-191">
            <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> fanno riferimento allo stesso oggetto o <paramref name="x" /> e <paramref name="y" /> sono entrambi dello stesso tipo di oggetto e tali oggetti sono uguali oppure sia <paramref name="x" /> che <paramref name="y" /> sono <see langword="null" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-191">
              <see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are both the same type of object and those objects are equal, or both <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-192">Perché il runtime non è necessario eseguire la conversione unboxing `x` o `y` se sono tipi di valore oppure provare a eseguire il downcast `x` o `y` in stringhe se sono tipi riferimento, il <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> metodo può essere leggermente più efficiente il <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="65419-192">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As String, y As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * string -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="65419-193">Stringa da confrontare con <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-193">A string to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="65419-194">Stringa da confrontare con <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-194">A string to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65419-195">Quando ne viene eseguito l'override in una classe derivata, indica se due stringhe sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-195">When overridden in a derived class, indicates whether two strings are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65419-196">
            <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> fanno riferimento allo stesso oggetto o <paramref name="x" /> e <paramref name="y" /> sono uguali oppure <paramref name="x" /> e <paramref name="y" /> sono <see langword="null" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-196">
              <see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are equal, or <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-197">Perché il runtime non è necessario eseguire la conversione unboxing `x` o `y` se sono tipi di valore oppure provare a eseguire il downcast `x` o `y` in stringhe se sono tipi riferimento, il <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> metodo può essere leggermente più efficiente il <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="65419-197">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromComparison">
      <MemberSignature Language="C#" Value="public static StringComparer FromComparison (StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer FromComparison(valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.FromComparison(System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromComparison (comparisonType As StringComparison) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ FromComparison(StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member FromComparison : StringComparison -&gt; StringComparer" Usage="System.StringComparer.FromComparison comparisonType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65419-198">Quando ne viene eseguito l'override in una classe derivata, ottiene il codice hash per l'oggetto <see cref="T:System.StringComparer" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-198">When overridden in a derived class, gets the hash code for the current <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : obj -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="65419-199">Oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-199">An object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65419-200">Quando ne viene eseguito l'override in una classe derivata, ottiene il codice hash per l'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-200">When overridden in a derived class, gets the hash code for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65419-201">Codice hash con segno a 32 bit calcolato dal valore del parametro <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-201">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-202">Il <xref:System.StringComparer.GetHashCode%28System.String%29> metodo è più efficiente il <xref:System.StringComparer.GetHashCode%2A> metodo perché il `obj` parametro non deve essere eseguita la conversione unboxing per eseguire l'operazione.</span><span class="sxs-lookup"><span data-stu-id="65419-202">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%2A> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="65419-203">Il <xref:System.StringComparer.GetHashCode%28System.Object%29> metodo alloca una quantità di memoria è proporzionale alla dimensione del `obj` per la quale calcolare il codice hash di `obj`.</span><span class="sxs-lookup"><span data-stu-id="65419-203">The <xref:System.StringComparer.GetHashCode%28System.Object%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="65419-204">Nel caso di stringhe di grandi dimensioni, il tentativo di recuperare il codice hash può generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="65419-204">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="65419-205">In alternativa, è possibile usare un algoritmo alternativo che alloca una quantità fissa di memoria durante il calcolo dei codici hash.</span><span class="sxs-lookup"><span data-stu-id="65419-205">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="65419-206">Per usare questo algoritmo, aggiungere il [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) elemento per il [ \<runtime >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) sezione del file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="65419-206">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65419-207">Memoria insufficiente per allocare il buffer necessario per calcolare il codice hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-207">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65419-208">
            <paramref name="obj" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-208">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="  &#xA;            T:System.ArgumentException">
          <span data-ttu-id="65419-209">Memoria insufficiente per allocare il buffer necessario per calcolare il codice hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-209">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (string obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(System::String ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="65419-210">Stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-210">A string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65419-211">Quando ne viene eseguito l'override in una classe derivata, ottiene il codice hash per la stringa specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-211">When overridden in a derived class, gets the hash code for the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65419-212">Codice hash con segno a 32 bit calcolato dal valore del parametro <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-212">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-213">Il <xref:System.StringComparer.GetHashCode%28System.String%29> metodo è più efficiente il <xref:System.StringComparer.GetHashCode%28System.Object%29> metodo perché il `obj` parametro non deve essere eseguita la conversione unboxing per eseguire l'operazione.</span><span class="sxs-lookup"><span data-stu-id="65419-213">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%28System.Object%29> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="65419-214">Il <xref:System.StringComparer.GetHashCode%28System.String%29> metodo alloca una quantità di memoria è proporzionale alla dimensione del `obj` per la quale calcolare il codice hash di `obj`.</span><span class="sxs-lookup"><span data-stu-id="65419-214">The <xref:System.StringComparer.GetHashCode%28System.String%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="65419-215">Nel caso di stringhe di grandi dimensioni, il tentativo di recuperare il codice hash può generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="65419-215">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="65419-216">In alternativa, è possibile usare un algoritmo alternativo che alloca una quantità fissa di memoria durante il calcolo dei codici hash.</span><span class="sxs-lookup"><span data-stu-id="65419-216">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="65419-217">Per usare questo algoritmo, aggiungere il [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) elemento per il [ \<runtime >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) sezione del file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="65419-217">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65419-218">Memoria insufficiente per allocare il buffer necessario per calcolare il codice hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-218">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65419-219">
            <paramref name="obj" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-219">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="  &#xA;            T:System.ArgumentException">
          <span data-ttu-id="65419-220">Memoria insufficiente per allocare il buffer necessario per calcolare il codice hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-220">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : StringComparer" Usage="System.StringComparer.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65419-221">Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto tra stringhe con distinzione tra maiuscole e minuscole usando le regole di confronto per parola della lingua inglese.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-221">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the invariant culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65419-222">Nuovo oggetto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-222">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-223">Il <xref:System.StringComparer> restituito dal <xref:System.StringComparer.InvariantCulture%2A> proprietà le stringhe vengono confrontate in un modo linguisticamente rilevante, ma non è adatto per la visualizzazione in una qualsiasi impostazione cultura.</span><span class="sxs-lookup"><span data-stu-id="65419-223">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCulture%2A> property compares strings in a linguistically relevant manner, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="65419-224">L'applicazione principale consiste nel stringhe ordine in modo che siano identici nelle impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="65419-224">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="65419-225">La lingua inglese è la <xref:System.Globalization.CultureInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.InvariantCulture%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="65419-225">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="65419-226">Il <xref:System.StringComparer.InvariantCulture%2A> proprietà effettivamente restituisce un'istanza di una classe anonima derivata dal <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-226">The <xref:System.StringComparer.InvariantCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65419-227">L'esempio di codice seguente illustra le proprietà e il <xref:System.StringComparer.Create%2A> metodo di <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-227">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="65419-228">Nell'esempio viene illustrato come i vari <xref:System.StringComparer> alfabeto oggetti ordinamento tre versioni dell'alfabeto latino.</span><span class="sxs-lookup"><span data-stu-id="65419-228">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="65419-229">Procedure consigliate per l'utilizzo di stringhe in .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-229">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InvariantCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCultureIgnoreCase : StringComparer" Usage="System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65419-230">Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto tra stringhe senza distinzione tra maiuscole e minuscole usando le regole di confronto per parola della lingua inglese.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-230">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive string comparison using the word comparison rules of the invariant culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65419-231">Nuovo oggetto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-231">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-232">Il <xref:System.StringComparer> restituito dal <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> proprietà le stringhe vengono confrontate in un modo linguisticamente rilevante Ignora maiuscole e minuscole, ma non è adatto per la visualizzazione in una qualsiasi impostazione cultura.</span><span class="sxs-lookup"><span data-stu-id="65419-232">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property compares strings in a linguistically relevant manner that ignores case, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="65419-233">L'applicazione principale consiste nel stringhe ordine in modo che siano identici nelle impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="65419-233">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="65419-234">La lingua inglese è la <xref:System.Globalization.CultureInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.InvariantCulture%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="65419-234">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="65419-235">Il <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> proprietà effettivamente restituisce un'istanza di una classe anonima derivata dal <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-235">The <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="65419-236">Procedure consigliate per l'utilizzo di stringhe in .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-236">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public static StringComparer Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Ordinal As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ Ordinal { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : StringComparer" Usage="System.StringComparer.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65419-237">Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto ordinale tra stringhe con distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-237">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive ordinal string comparison.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65419-238">Un oggetto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-238">A <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-239">Il <xref:System.StringComparer> restituito dal <xref:System.StringComparer.Ordinal%2A> proprietà consente di eseguire un semplice confronto tra byte indipendente dalla lingua.</span><span class="sxs-lookup"><span data-stu-id="65419-239">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.Ordinal%2A> property performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="65419-240">Questo è più appropriato quando il confronto di stringhe che vengono generati a livello di programmazione o quando il confronto tra maiuscole e minuscole delle risorse, ad esempio le password.</span><span class="sxs-lookup"><span data-stu-id="65419-240">This is most appropriate when comparing strings that are generated programmatically or when comparing case-sensitive resources such as passwords.</span></span>  
  
 <span data-ttu-id="65419-241">Il <xref:System.StringComparer.Ordinal%2A> proprietà effettivamente restituisce un'istanza di una classe anonima derivata dal <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-241">The <xref:System.StringComparer.Ordinal%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65419-242">L'esempio di codice seguente illustra le proprietà e il <xref:System.StringComparer.Create%2A> metodo di <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-242">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="65419-243">Nell'esempio viene illustrato come i vari <xref:System.StringComparer> alfabeto oggetti ordinamento tre versioni dell'alfabeto latino.</span><span class="sxs-lookup"><span data-stu-id="65419-243">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="65419-244">Procedure consigliate per l'utilizzo di stringhe in .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-244">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OrdinalIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer OrdinalIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer OrdinalIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.OrdinalIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OrdinalIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ OrdinalIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrdinalIgnoreCase : StringComparer" Usage="System.StringComparer.OrdinalIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65419-245">Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto ordinale tra stringhe senza distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-245">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive ordinal string comparison.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65419-246">Un oggetto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-246">A <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65419-247">Il <xref:System.StringComparer> restituito dal <xref:System.StringComparer.OrdinalIgnoreCase%2A> considera i caratteri nelle stringhe da confrontare come se sono stati convertiti in caratteri maiuscoli mediante le convenzioni delle impostazioni cultura invarianti, proprietà e quindi esegue un semplice confronto tra byte indipendente da lingua.</span><span class="sxs-lookup"><span data-stu-id="65419-247">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.OrdinalIgnoreCase%2A> property treats the characters in the strings to compare as if they were converted to uppercase using the conventions of the invariant culture, and then performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="65419-248">Questo è più appropriato quando il confronto di stringhe che vengono generati a livello di programmazione o quando il confronto tra maiuscole e minuscole delle risorse, ad esempio i percorsi e nomi di file.</span><span class="sxs-lookup"><span data-stu-id="65419-248">This is most appropriate when comparing strings that are generated programmatically or when comparing case-insensitive resources such as paths and filenames.</span></span>  
  
 <span data-ttu-id="65419-249">Il <xref:System.StringComparer.OrdinalIgnoreCase%2A> proprietà effettivamente restituisce un'istanza di una classe anonima derivata dal <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-249">The <xref:System.StringComparer.OrdinalIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65419-250">L'esempio di codice seguente illustra le proprietà e il <xref:System.StringComparer.Create%2A> metodo di <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="65419-250">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="65419-251">Nell'esempio viene illustrato come i vari <xref:System.StringComparer> alfabeto oggetti ordinamento tre versioni dell'alfabeto latino.</span><span class="sxs-lookup"><span data-stu-id="65419-251">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="65419-252">Procedure consigliate per l'utilizzo di stringhe in .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="65419-252">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>