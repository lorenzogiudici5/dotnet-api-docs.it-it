<Type Name="ValueType" FullName="System.ValueType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b756fc1621dab1597966503a0af93b3c8478663" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ValueType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ValueType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ValueType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueType abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c2f1b-101">Fornisce la classe base per i tipi di valore.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c2f1b-101">Provides the base class for value types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f1b-102"><xref:System.ValueType> esegue l'override dei metodi virtuali da <xref:System.Object> con implementazioni più appropriate per i tipi di valore.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-102"><xref:System.ValueType> overrides the virtual methods from <xref:System.Object> with more appropriate implementations for value types.</span></span> <span data-ttu-id="c2f1b-103">Vedere anche <xref:System.Enum>, che eredita da <xref:System.ValueType>.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-103">See also <xref:System.Enum>, which inherits from <xref:System.ValueType>.</span></span>  
  
 <span data-ttu-id="c2f1b-104">Tipi di dati vengono suddivisi in tipi di valore e tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-104">Data types are separated into value types and reference types.</span></span> <span data-ttu-id="c2f1b-105">Tipi di valore vengono allocate nello stack o allocati inline in una struttura.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-105">Value types are either stack-allocated or allocated inline in a structure.</span></span> <span data-ttu-id="c2f1b-106">Tipi di riferimento sono con allocazione heap.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-106">Reference types are heap-allocated.</span></span> <span data-ttu-id="c2f1b-107">Tipi di riferimento e di valore derivano dalla classe base finale <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-107">Both reference and value types are derived from the ultimate base class <xref:System.Object>.</span></span> <span data-ttu-id="c2f1b-108">In casi in cui è necessario che un tipo di valore si comporta come un oggetto, un wrapper che rende il tipo di valore come oggetto di riferimento viene allocato nell'heap e il valore del tipo di valore viene copiato.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-108">In cases where it is necessary for a value type to behave like an object, a wrapper that makes the value type look like a reference object is allocated on the heap, and the value type's value is copied into it.</span></span> <span data-ttu-id="c2f1b-109">Il wrapper è contrassegnato affinché il sistema sappia che contiene un tipo di valore.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-109">The wrapper is marked so the system knows that it contains a value type.</span></span> <span data-ttu-id="c2f1b-110">Questo processo è noto come conversione boxing, e il processo è noto come conversione unboxing.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-110">This process is known as boxing, and the reverse process is known as unboxing.</span></span> <span data-ttu-id="c2f1b-111">Conversione boxing e unboxing consente qualsiasi tipo per essere considerato come un oggetto.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-111">Boxing and unboxing allow any type to be treated as an object.</span></span>  
  
 <span data-ttu-id="c2f1b-112">Sebbene <xref:System.ValueType> è la classe base implicita per i tipi di valore, è possibile creare una classe che eredita da <xref:System.ValueType> direttamente.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-112">Although <xref:System.ValueType> is the implicit base class for value types, you cannot create a class that inherits from <xref:System.ValueType> directly.</span></span> <span data-ttu-id="c2f1b-113">Al contrario, fornire una parola chiave del linguaggio o a creare singoli compilatori (ad esempio `struct` in c# e `Structure`...`End Structure`</span><span class="sxs-lookup"><span data-stu-id="c2f1b-113">Instead, individual compilers provide a language keyword or construct (such as `struct` in C# and `Structure`…`End Structure`</span></span> <span data-ttu-id="c2f1b-114">in Visual Basic) per supportare la creazione di tipi di valore.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-114">in Visual Basic) to support the creation of value types.</span></span>  
  
 <span data-ttu-id="c2f1b-115">A parte che funge da classe base per tipi di valore in .NET Framework, il <xref:System.ValueType> struttura in genere non viene utilizzata direttamente nel codice.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-115">Aside from serving as the base class for value types in the .NET Framework, the <xref:System.ValueType> structure is generally not used directly in code.</span></span> <span data-ttu-id="c2f1b-116">Tuttavia, può essere utilizzato come parametro nelle chiamate al metodo per limitare i possibili argomenti di tipi di valore anziché tutti gli oggetti o per consentire a un metodo per gestire un numero di tipi di valore diverso.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-116">However, it can be used as a parameter in method calls to restrict possible arguments to value types instead of all objects, or to permit a method to handle a number of different value types.</span></span> <span data-ttu-id="c2f1b-117">Nell'esempio seguente viene illustrato come <xref:System.ValueType> impedisce che i tipi di riferimento passati a metodi.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-117">The following example illustrates how <xref:System.ValueType> prevents reference types from being passed to methods.</span></span> <span data-ttu-id="c2f1b-118">Definisce una classe denominata `Utility` che contiene quattro metodi: `IsNumeric`, che indica se il relativo argomento è un numero. `IsInteger`, che indica se il relativo argomento è un numero intero. `IsFloat`, che indica se il relativo argomento è un numero a virgola mobile; e `Compare`, che indica la relazione tra due valori numerici.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-118">It defines a class named `Utility` that contains four methods: `IsNumeric`, which indicates whether its argument is a number; `IsInteger`, which indicates whether its argument is an integer; `IsFloat`, which indicates whether its argument is a floating-point number; and `Compare`, which indicates the relationship between two numeric values.</span></span> <span data-ttu-id="c2f1b-119">In ogni caso, i parametri del metodo sono di tipo <xref:System.ValueType>, e i tipi di riferimento vengono impediti passati ai metodi.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-119">In each case, the method parameters are of type <xref:System.ValueType>, and reference types are prevented from being passed to the methods.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#1)]
 [!code-vb[System.ValueType.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#1)]  
  
 <span data-ttu-id="c2f1b-120">Nell'esempio seguente sono illustrate le chiamate ai metodi del `Utility` classe.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-120">The following example illustrates calls to the methods of the `Utility` class.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#2)]
 [!code-vb[System.ValueType.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Enum" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c2f1b-121">Inizializza una nuova istanza della classe <see cref="T:System.ValueType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f1b-121">Initializes a new instance of the <see cref="T:System.ValueType" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c2f1b-122">Oggetto da confrontare con l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f1b-122">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2f1b-123">Indica se questa istanza e un oggetto specificato sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f1b-123">Indicates whether this instance and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2f1b-124">
            <see langword="true" /> se <paramref name="obj" /> e questa istanza presentano lo stesso tipo e rappresentano lo stesso valore. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f1b-124">
              <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f1b-125">Il <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> override dei metodi <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> e fornisce l'implementazione predefinita di uguaglianza per tutti i tipi di valore in .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-125">The <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> and provides the default implementation of value equality for all value types in the .NET Framework.</span></span>  
  
 <span data-ttu-id="c2f1b-126">Se nessuno dei campi dell'istanza corrente e `obj` sono tipi di riferimento, il <xref:System.ValueType.Equals%2A> metodo esegue un confronto byte per byte tra i due oggetti in memoria.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-126">If none of the fields of the current instance and `obj` are reference types, the <xref:System.ValueType.Equals%2A> method performs a byte-by-byte comparison of the two objects in memory.</span></span> <span data-ttu-id="c2f1b-127">In caso contrario, utilizza la reflection per confrontare i campi corrispondenti di `obj` e questa istanza.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-127">Otherwise, it uses reflection to compare the corresponding fields of `obj` and this instance.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="c2f1b-128">In particolare se il tipo di valore contiene campi che sono tipi di riferimento, è necessario eseguire l'override di <xref:System.ValueType.Equals%28System.Object%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-128">Particularly if your value type contains fields that are reference types, you should override the <xref:System.ValueType.Equals%28System.Object%29> method.</span></span> <span data-ttu-id="c2f1b-129">Ciò può migliorare le prestazioni e consentono di rappresentare meglio il significato di uguaglianza per il tipo.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-129">This can improve performance and enable you to more closely represent the meaning of equality for the type.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="c2f1b-130">Note per il [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c2f1b-130">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="c2f1b-131">Quando si chiama il <xref:System.ValueType.Equals%2A> metodo su un [!INCLUDE[wrt](~/includes/wrt-md.md)] struttura, fornisce il comportamento predefinito per i tipi di valore che non esegue l'override <xref:System.ValueType.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-131">When you call the <xref:System.ValueType.Equals%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don’t override <xref:System.ValueType.Equals%2A>.</span></span> <span data-ttu-id="c2f1b-132">Questo aspetto è parte del supporto fornito da .NET Framework per la [!INCLUDE[wrt](~/includes/wrt-md.md)] (vedere [.NET Framework supportano per applicazioni Windows Store e Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="c2f1b-132">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="c2f1b-133"> Impossibile eseguire l'override di strutture <xref:System.ValueType.Equals%2A>, anche se alla scrittura con c# o Visual Basic, perché non hanno metodi.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-133"> structures can’t override <xref:System.ValueType.Equals%2A>, even if they’re written with C# or Visual Basic, because they can’t have methods.</span></span> <span data-ttu-id="c2f1b-134">(Inoltre strutture nel [!INCLUDE[wrt](~/includes/wrt-md.md)] stesso non ereditano <xref:System.ValueType>.) Tuttavia, sembrano disporre <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, e <xref:System.ValueType.GetHashCode%2A> metodi quando utilizzarle nel codice c# o Visual Basic e .NET Framework fornisce il comportamento predefinito per questi metodi.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-134">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don’t inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f1b-135">Nell'esempio seguente viene illustrato come la <xref:System.ValueType.Equals%2A> metodo può essere sovrascritto da un tipo di valore derivato.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-135">The following example demonstrates how the <xref:System.ValueType.Equals%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c2f1b-136">Restituisce il codice hash per l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f1b-136">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2f1b-137">Intero con segno a 32 bit che rappresenta il codice hash per questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f1b-137">A 32-bit signed integer that is the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f1b-138">Il <xref:System.ValueType.GetHashCode%2A> metodo si applica ai tipi derivati da <xref:System.ValueType>.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-138">The <xref:System.ValueType.GetHashCode%2A> method applies to types derived from <xref:System.ValueType>.</span></span> <span data-ttu-id="c2f1b-139">Uno o più campi del tipo derivato viene usato per calcolare il valore restituito.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-139">One or more fields of the derived type is used to calculate the return value.</span></span> <span data-ttu-id="c2f1b-140">Se si chiama il tipo derivato `GetHashCode` metodo, il valore restituito non è probabile che essere utilizzabile come chiave in una tabella hash.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-140">If you call the derived type's `GetHashCode` method, the return value is not likely to be suitable for use as a key in a hash table.</span></span> <span data-ttu-id="c2f1b-141">Inoltre, se si modifica il valore di uno o più campi, il valore restituito potrebbe diventare non appropriato per l'utilizzo come una chiave in una tabella hash.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-141">Additionally, if the value of one or more of those fields changes, the return value might become unsuitable for use as a key in a hash table.</span></span> <span data-ttu-id="c2f1b-142">In entrambi i casi, si consiglia di scrivere la propria implementazione del <xref:System.ValueType.GetHashCode%2A> metodo che meglio rappresenta il concetto di un codice hash per il tipo.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-142">In either case, consider writing your own implementation of the <xref:System.ValueType.GetHashCode%2A> method that more closely represents the concept of a hash code for the type.</span></span>  
  
 <span data-ttu-id="c2f1b-143">Per altre informazioni, vedere <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> e <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-143">For more information, see <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>, and <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="c2f1b-144">Note per il [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c2f1b-144">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="c2f1b-145">Quando si chiama il <xref:System.ValueType.GetHashCode%2A> metodo su un [!INCLUDE[wrt](~/includes/wrt-md.md)] struttura, fornisce il comportamento predefinito per i tipi di valore che non esegue l'override <xref:System.ValueType.GetHashCode%2A>.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-145">When you call the <xref:System.ValueType.GetHashCode%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don’t override <xref:System.ValueType.GetHashCode%2A>.</span></span> <span data-ttu-id="c2f1b-146">Questo aspetto è parte del supporto fornito da .NET Framework per la [!INCLUDE[wrt](~/includes/wrt-md.md)] (vedere [.NET Framework supportano per applicazioni Windows Store e Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="c2f1b-146">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="c2f1b-147"> Impossibile eseguire l'override di strutture <xref:System.ValueType.GetHashCode%2A>, anche se alla scrittura con c# o Visual Basic, perché non hanno metodi.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-147"> structures can’t override <xref:System.ValueType.GetHashCode%2A>, even if they’re written with C# or Visual Basic, because they can’t have methods.</span></span> <span data-ttu-id="c2f1b-148">(Inoltre strutture nel [!INCLUDE[wrt](~/includes/wrt-md.md)] stesso non ereditano <xref:System.ValueType>.) Tuttavia, sembrano disporre <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, e <xref:System.ValueType.GetHashCode%2A> metodi quando utilizzarle nel codice c# o Visual Basic e .NET Framework fornisce il comportamento predefinito per questi metodi.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-148">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don’t inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f1b-149">Nell'esempio seguente viene illustrato come la <xref:System.ValueType.GetHashCode%2A> metodo può essere sovrascritto da un tipo di valore derivato.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-149">The following example demonstrates how the <xref:System.ValueType.GetHashCode%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c2f1b-150">Restituisce il nome completo del tipo di questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f1b-150">Returns the fully qualified type name of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2f1b-151">Nome di tipo completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f1b-151">The fully qualified type name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f1b-152">Il <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> override dei metodi di <xref:System.Object.ToString%2A?displayProperty=nameWithType> (metodo) e fornisce l'implementazione predefinita del `ToString` metodo per i tipi di valore.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-152">The <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method and provides the default implementation of the `ToString` method for value types.</span></span> <span data-ttu-id="c2f1b-153">(Tipi di valore sono tipi definiti dal `struct` (parola chiave) in c# e il `Structure`... `End Structure` costruire in Visual Basic.) A livello funzionale, tuttavia, l'implementazione è lo stesso di quello di <xref:System.Object.ToString%2A?displayProperty=nameWithType>: il metodo restituisce il nome completo del tipo.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-153">(Value types are types defined by the `struct` keyword in C#, and by the `Structure`...`End Structure` construct in Visual Basic.) Functionally, however, the implementation is that same as that of <xref:System.Object.ToString%2A?displayProperty=nameWithType>: the method returns the fully qualified type name.</span></span>  
  
 <span data-ttu-id="c2f1b-154">Definito da tipi di valore di `struct` (parola chiave) in c# e `Structure`... `End Structure` costrutto in Visual Basic in genere eseguire l'override di <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> metodo per fornire una rappresentazione di stringa più significativa del tipo di valore.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-154">Value types defined by the `struct` keyword in C# and the `Structure`...`End Structure` construct in Visual Basic typically override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method to provide a more meaningful string representation of the value type.</span></span> <span data-ttu-id="c2f1b-155">Nell'esempio che segue viene illustrata la differenza.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-155">The following example illustrates the difference.</span></span> <span data-ttu-id="c2f1b-156">Definisce due tipi di valore, `EmployeeA` e `EmployeeB`, crea un'istanza di ognuna e chiama il relativo `ToString` metodo.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-156">It defines two value types, `EmployeeA` and `EmployeeB`, creates an instance of each, and calls its `ToString` method.</span></span> <span data-ttu-id="c2f1b-157">Poiché il `EmployeeA` struttura non esegue l'override di <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> metodo, viene visualizzato solo il nome completo del tipo.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-157">Because the `EmployeeA` structure does not override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method, it displays only the fully qualified type name.</span></span> <span data-ttu-id="c2f1b-158">Il `EmployeeB.ToString` (metodo), invece, fornisce informazioni significative sull'oggetto.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-158">The `EmployeeB.ToString` method, on the other hand, provides meaningful information about the object.</span></span>  
  
 [!code-csharp[System.ValueType.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ValueType.ToString/cs/ToString2.cs#1)]
 [!code-vb[System.ValueType.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ValueType.ToString/vb/ToString2.vb#1)]  
  
 <span data-ttu-id="c2f1b-159">Si noti che, anche se i tipi di enumerazione sono anche tipi di valore, da cui derivano i <xref:System.Enum> classe, che esegue l'override <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-159">Note that, although enumeration types are also value types, they derive from the <xref:System.Enum> class, which overrides  <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-windows-runtime"></a><span data-ttu-id="c2f1b-160">Note per Windows Runtime</span><span class="sxs-lookup"><span data-stu-id="c2f1b-160">Notes for the Windows Runtime</span></span>  
 <span data-ttu-id="c2f1b-161">Quando si chiama il <xref:System.ValueType.ToString%2A> metodo su un [!INCLUDE[wrt](~/includes/wrt-md.md)] struttura, fornisce il comportamento predefinito per i tipi di valore che non esegue l'override <xref:System.ValueType.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-161">When you call the <xref:System.ValueType.ToString%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don’t override <xref:System.ValueType.ToString%2A>.</span></span> <span data-ttu-id="c2f1b-162">Questo aspetto è parte del supporto fornito da .NET Framework per la [!INCLUDE[wrt](~/includes/wrt-md.md)] (vedere [.NET Framework supportano per applicazioni Windows Store e Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="c2f1b-162">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="c2f1b-163"> Impossibile eseguire l'override di strutture <xref:System.ValueType.ToString%2A>, anche se alla scrittura con c# o Visual Basic, perché non hanno metodi.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-163"> structures can’t override <xref:System.ValueType.ToString%2A>, even if they’re written with C# or Visual Basic, because they can’t have methods.</span></span> <span data-ttu-id="c2f1b-164">(Inoltre strutture nel [!INCLUDE[wrt](~/includes/wrt-md.md)] stesso non ereditano <xref:System.ValueType>.) Tuttavia, sembrano disporre <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, e <xref:System.ValueType.GetHashCode%2A> metodi quando utilizzarle nel codice c# o Visual Basic e .NET Framework fornisce il comportamento predefinito per questi metodi.</span><span class="sxs-lookup"><span data-stu-id="c2f1b-164">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don’t inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>