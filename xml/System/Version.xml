<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Version.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae05845525e9f038465f7d92114966377901a5d9ae8014bef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e9f038465f7d92114966377901a5d9ae8014bef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Represents the version number of an assembly, operating system, or the common language runtime.</source>
          <target state="translated">Rappresenta il numero di versione di un assembly, sistema operativo o Common Language Runtime.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Version numbers consist of two to four components: major, minor, build, and revision.</source>
          <target state="translated">Versione i numeri sono costituiti da due a quattro componenti: principale, secondario, build e revisione.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.</source>
          <target state="translated">I componenti principali e secondari sono obbligatori; i componenti di build e revisione sono facoltativi, ma il componente di compilazione è obbligatorio se il componente revisione è definito.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>All defined components must be integers greater than or equal to 0.</source>
          <target state="translated">Tutti i componenti definiti devono essere numeri interi maggiori o uguali a 0.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The format of the version number is as follows (optional components are shown in square brackets ([ and ]):</source>
          <target state="translated">Il formato del numero di versione è come segue (componenti facoltativi sono racchiusi tra parentesi quadre ([e]):</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>major<ept id="p1">*</ept>.<bpt id="p2">*</bpt>minor<ept id="p2">*</ept>[.<bpt id="p3">*</bpt>build<ept id="p3">*</ept>[.<bpt id="p4">*</bpt>revision<ept id="p4">*</ept>]]</source>
          <target state="translated"><bpt id="p1">*</bpt>principali<ept id="p1">*</ept>.<bpt id="p2">*</bpt> secondaria<ept id="p2">*</ept>[.<bpt id="p3">*</bpt> Compilare<ept id="p3">*</ept>[.<bpt id="p4">*</bpt> revisione<ept id="p4">*</ept>]]</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The components are used by convention as follows:</source>
          <target state="translated">Per convenzione, i componenti vengono utilizzati come indicato di seguito:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Major<ept id="p1">*</ept>: Assemblies with the same name but different major versions are not interchangeable.</source>
          <target state="translated"><bpt id="p1">*</bpt>Principali<ept id="p1">*</ept>: assembly con lo stesso nome ma con diverse versioni principali non sono intercambiabili.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.</source>
          <target state="translated">Un numero di versione superiore potrebbe indicare una riscrittura di un prodotto in cui non è possibile presupporre la compatibilità con le versioni precedenti.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Minor<ept id="p1">*</ept>: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.</source>
          <target state="translated"><bpt id="p1">*</bpt>Secondaria<ept id="p1">*</ept>: se il nome e il numero di versione principale di due assembly sono uguali, ma il numero di versione secondario è diverso, ciò indica un miglioramento significativo con l'intenzione di compatibilità con le versioni precedenti.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.</source>
          <target state="translated">Questo numero di versione secondaria più potrebbe indicare un punto di rilascio di un prodotto o una nuova versione di completamente compatibile con le versioni precedenti di un prodotto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Build<ept id="p1">*</ept>: A difference in build number represents a recompilation of the same source.</source>
          <target state="translated"><bpt id="p1">*</bpt>Compilare<ept id="p1">*</ept>: una differenza nel numero di build rappresenta una ricompilazione della stessa origine.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Different build numbers might be used when the processor, platform, or compiler changes.</source>
          <target state="translated">Numeri di build diversi potrebbero essere usati quando cambia il processore, una piattaforma o del compilatore.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Revision<ept id="p1">*</ept>: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.</source>
          <target state="translated"><bpt id="p1">*</bpt>Revisione<ept id="p1">*</ept>: assembly con lo stesso numeri di versione di nome principale e secondaria ma diverse revisioni sono destinati a essere completamente intercambiabili.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>A higher revision number might be used in a build that fixes a security hole in a previously released assembly.</source>
          <target state="translated">Un numero di revisione superiore può essere utilizzato in una build che corregge un problema di sicurezza in un assembly rilasciato in precedenza.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.</source>
          <target state="translated">Le versioni successive di un assembly che differiscono solo per i numeri di build o di revisione sono considerate aggiornamenti rapidi della versione precedente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The value of <ph id="ph1">&lt;xref:System.Version&gt;</ph> properties that have not been explicitly assigned a value is undefined (-1).</source>
          <target state="translated">Il valore di <ph id="ph1">&lt;xref:System.Version&gt;</ph> è di proprietà assegnate non in modo esplicito un valore non definito (-1).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Starting with .NET Framework 2.0, the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.</source>
          <target state="translated">A partire da .NET Framework 2.0, il <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> proprietà consentono di identificare una versione dell'applicazione, ad esempio, fino a quando non è possibile rilasciare una soluzione permanente, viene corretto un problema temporanea.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Furthermore, the Windows NT operating system uses the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.</source>
          <target state="translated">Inoltre, il sistema operativo Windows NT utilizza il <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> proprietà per codificare il numero di service pack.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Assigning Version Information to Assemblies</source>
          <target state="translated">L'assegnazione delle informazioni sulla versione per assembly</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Ordinarily, the <ph id="ph1">&lt;xref:System.Version&gt;</ph> class is not used to assign a version number to an assembly.</source>
          <target state="translated">In genere, la <ph id="ph1">&lt;xref:System.Version&gt;</ph> classe non viene utilizzata per assegnare un numero di versione a un assembly.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> class is used to define an assembly's version, as illustrated by the example in this topic.</source>
          <target state="translated">Al contrario, la <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> classe viene utilizzata per definire la versione dell'assembly, come illustrato nell'esempio di questo argomento.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving Version Information</source>
          <target state="translated">Durante il recupero delle informazioni sulla versione</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><ph id="ph1">&lt;xref:System.Version&gt;</ph> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Version&gt;</ph> gli oggetti vengono utilizzati principalmente per archiviare le informazioni sulla versione relative ad alcuni componenti di sistema o applicazione (ad esempio, il sistema operativo), common language runtime, eseguibile dell'applicazione corrente o un particolare assembly.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following examples illustrate some of the most common scenarios:</source>
          <target state="translated">Gli esempi seguenti illustrano alcuni degli scenari più comuni:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the operating system version.</source>
          <target state="translated">Recupero della versione del sistema operativo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType&gt;</ph> property to retrieve the version number of the operating system.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType&gt;</ph> proprietà per recuperare il numero di versione del sistema operativo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the version of the common language runtime.</source>
          <target state="translated">Recupero della versione di common language runtime.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> property to retrieve version information about the common language runtime.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> proprietà per recuperare informazioni di versione di common language runtime.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the current application's assembly version.</source>
          <target state="translated">Recupero della versione di assembly dell'applicazione corrente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType&gt;</ph> method to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the application executable and then retrieves its assembly version number.</source>
          <target state="translated">Nell'esempio riportato di seguito viene utilizzato il metodo <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType&gt;</ph> per ottenere un riferimento a un oggetto <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> che rappresenta il file eseguibile dell'applicazione e ne recupera il numero di versione dell'assembly.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the current assembly's assembly version.</source>
          <target state="translated">Recupero della versione dell'assembly corrente.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the assembly that contains the application entry point, and then retrieves its version information.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> proprietà per ottenere un riferimento a un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> oggetto che rappresenta l'assembly che contiene il punto di ingresso dell'applicazione e quindi recupera le informazioni sulla versione.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the version of a specific assembly.</source>
          <target state="translated">Recupero della versione di un assembly specifico.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType&gt;</ph> method to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that has a particular file name, and then retrieves its version information.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType&gt;</ph> per ottenere un riferimento a un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> oggetto che ha un nome di file specifico e quindi recupera le informazioni sulla versione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Note that several other methods also exist to instantiate an <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> object by file name or by strong name.</source>
          <target state="translated">Si noti che esistono anche diversi altri metodi per creare un'istanza di un <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> oggetto in base al nome di file o il nome sicuro.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the Publish Version of a ClickOnce application.</source>
          <target state="translated">Recupero della versione di pubblicazione di un'applicazione ClickOnce.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType&gt;</ph> property to display an application's Publish Version.</source>
          <target state="translated">Nell'esempio seguente viene utilizzata la proprietà <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType&gt;</ph> per visualizzare la versione di pubblicazione di un'applicazione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Note that its successful execution requires the example's application identity to be set.</source>
          <target state="translated">Si noti che la relativa esecuzione corretta richiede l'impostazione dell'identità dell'applicazione dell'esempio.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>This is handled automatically by the Visual Studio Publish Wizard.</source>
          <target state="translated">Questa operazione è automaticamente gestita dalla Pubblicazione guidata di Visual Studio.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.</source>
          <target state="translated">La versione di un'applicazione per la distribuzione ClickOnce è completamente indipendente dalla versione di assembly.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Comparing Version Objects</source>
          <target state="translated">Confronto tra oggetti versione</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>You can use the <ph id="ph1">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method to determine whether one <ph id="ph2">&lt;xref:System.Version&gt;</ph> object is earlier than, the same as, or later than a second <ph id="ph3">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:System.Version.CompareTo%2A&gt;</ph> metodo per determinare se un <ph id="ph2">&lt;xref:System.Version&gt;</ph> oggetto è precedente, uguale o successivo a un secondo <ph id="ph3">&lt;xref:System.Version&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example indicates that Version 2.1 is later than Version 2.0.</source>
          <target state="translated">Nell'esempio seguente indica che la versione 2.1 è successiva alla versione 2.0.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>For two versions to be equal, the major, minor, build, and revision numbers of the first <ph id="ph1">&lt;xref:System.Version&gt;</ph> object must be identical to those of the second <ph id="ph2">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">Per due versioni siano uguali, la versione principale e secondaria, di build e revisione del primo <ph id="ph1">&lt;xref:System.Version&gt;</ph> oggetto deve essere identico a quelli del secondo <ph id="ph2">&lt;xref:System.Version&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>If the build or revision number of a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object is undefined, that <ph id="ph2">&lt;xref:System.Version&gt;</ph> object is considered to be earlier than a <ph id="ph3">&lt;xref:System.Version&gt;</ph> object whose build or revision number is equal to zero.</source>
          <target state="translated">Se il numero di build o di revisione di un <ph id="ph1">&lt;xref:System.Version&gt;</ph> oggetto non è definito, che <ph id="ph2">&lt;xref:System.Version&gt;</ph> oggetto è considerato precedente a un <ph id="ph3">&lt;xref:System.Version&gt;</ph> oggetto la cui generazione o il numero di revisione è uguale a zero.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example illustrates this by comparing three <ph id="ph1">&lt;xref:System.Version&gt;</ph> objects that have undefined version components.</source>
          <target state="translated">Nell'esempio seguente viene illustrato il confronto di tre <ph id="ph1">&lt;xref:System.Version&gt;</ph> gli oggetti che hanno non definiti componenti della versione.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute to assign a version number to an assembly.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attributo per assegnare un numero di versione a un assembly.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>At compile time, this version information is stored with the assembly's metadata.</source>
          <target state="translated">In fase di compilazione, le informazioni di versione vengano archiviate con i metadati dell'assembly.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>At run time, the example retrieves the value of the <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">In fase di esecuzione, l'esempio recupera il valore della <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> su un tipo trovato nell'assembly per ottenere un riferimento all'assembly in esecuzione e recupera le informazioni sulla versione dell'assembly dal <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> proprietà del <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> oggetto restituito dal <ph id="ph4">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class with the specified major, minor, build, and revision numbers.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> utilizzando i valori principale, secondario, build e revisione specificati.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Questo costruttore crea un <ph id="ph1">&lt;xref:System.Version&gt;</ph> oggetto con i valori delle proprietà seguenti.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>undefined (-1)</source>
          <target state="translated">non definito (-1)</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>undefined (-1)</source>
          <target state="translated">non definito (-1)</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').</source>
          <target state="translated">Stringa contenente i componenti principale, secondario, build e revisione e in cui ciascuno dei numeri è delimitato da un punto (.).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified string.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> usando la stringa specificata.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The <ph id="ph1">`version`</ph> parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.</source>
          <target state="translated">Il <ph id="ph1">`version`</ph> parametro può contenere solo i componenti principale e secondario, build e revisione in tale ordine e separati da punti.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>There must be at least two components, and at most four.</source>
          <target state="translated">Deve essere almeno due componenti e al massimo quattro.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The first two components are assumed to be major and minor.</source>
          <target state="translated">Si presuppone che i primi due componenti principale e secondario.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The value of unspecified components is undefined.</source>
          <target state="translated">Il valore dei componenti specificati non è definito.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The format of the version number is as follows.</source>
          <target state="translated">Il formato del numero di versione è come indicato di seguito.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>Optional components are shown in square brackets ('[' and ']'):</source>
          <target state="translated">Componenti facoltativi sono racchiusi tra parentesi quadre ('[' e ']'):</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>major.minor[.build[.revision]]</source>
          <target state="translated">principale.secondario[.build[.revisione]]</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>All defined components must be integers greater than or equal to 0.</source>
          <target state="translated">Tutti i componenti definiti devono essere numeri interi maggiori o uguali a 0.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then <ph id="ph1">`version`</ph> should be "6.2.1.3".</source>
          <target state="translated">Ad esempio, se il numero principale è 6, il numero secondario è 2, il numero di build è 1 e il numero di revisione è 3, quindi <ph id="ph1">`version`</ph> sarà "6.2.1.3".</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> has fewer than two components or more than four components.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> è composto da meno di due componenti o da più di quattro componenti.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>A major, minor, build, or revision component is less than zero.</source>
          <target state="translated">Uno dei componenti (principale, secondario, build o revisione) è minore di zero.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>At least one component of <ph id="ph1">&lt;paramref name="version" /&gt;</ph> does not parse to an integer.</source>
          <target state="translated">Almeno un componente di <ph id="ph1">&lt;paramref name="version" /&gt;</ph> non viene analizzato come Integer.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>At least one component of <ph id="ph1">&lt;paramref name="version" /&gt;</ph> represents a number greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Almeno un componente di <ph id="ph1">&lt;paramref name="version" /&gt;</ph> rappresenta un numero maggiore di <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">Numero di versione principale.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">Numero di versione secondario.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified major and minor values.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> utilizzando i valori principale e secondario specificati.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Questo costruttore crea un <ph id="ph1">&lt;xref:System.Version&gt;</ph> oggetto con i valori delle proprietà seguenti.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">non definito (-1)</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">non definito (-1)</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph> or <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph> o <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">Numero di versione principale.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">Numero di versione secondario.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The build number.</source>
          <target state="translated">Il numero di build.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified major, minor, and build values.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> utilizzando i valori principale, secondario e build specificati.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Questo costruttore crea un <ph id="ph1">&lt;xref:System.Version&gt;</ph> oggetto con i valori delle proprietà seguenti.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">non definito (-1)</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="build" /&gt;</ph> is less than zero.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> o <ph id="ph3">&lt;paramref name="build" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">Numero di versione principale.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">Numero di versione secondario.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The build number.</source>
          <target state="translated">Il numero di build.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The revision number.</source>
          <target state="translated">Il numero di revisione.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class with the specified major, minor, build, and revision numbers.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> utilizzando i valori principale, secondario, build e revisione specificati.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Questo costruttore crea un <ph id="ph1">&lt;xref:System.Version&gt;</ph> oggetto con i valori delle proprietà seguenti.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> costruttore e <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, e <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, <ph id="ph3">&lt;paramref name="build" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="revision" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, <ph id="ph3">&lt;paramref name="build" /&gt;</ph> o <ph id="ph4">&lt;paramref name="revision" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Version.Build">
          <source>Gets the value of the build component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Ottiene il valore del componente build del numero di versione per l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>The build number, or -1 if the build number is undefined.</source>
          <target state="translated">Numero di build o -1 se il numero di build non è definito.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>For example, if the version number is 6.2.1.3, the build number is 1.</source>
          <target state="translated">Ad esempio, se il numero di versione è 6.2.1.3, il numero di build è 1.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>If the version number is 6.2, the build number is undefined.</source>
          <target state="translated">Se il numero di versione è 6.2, il numero di build è definito.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> costruttore e <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, e <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Version.Clone">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object whose value is the same as the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Restituisce un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> il cui valore è uguale a quello dell'oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Version.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose values are a copy of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> i cui valori sono una copia dell'oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Clone">
          <source>If the type of the return value is important, cast the <ph id="ph1">&lt;xref:System.Object&gt;</ph> instance that is returned by this method to a <ph id="ph2">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">Se il tipo del valore restituito è importante, eseguire il cast di <ph id="ph1">&lt;xref:System.Object&gt;</ph> istanza restituita da questo metodo per un <ph id="ph2">&lt;xref:System.Version&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified object or <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">Confronta l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente con un oggetto specificato o con l'oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> e restituisce un'indicazione dei valori relativi.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Oggetto da confrontare o <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified object and returns an indication of their relative values.</source>
          <target state="translated">Confronta l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente con un oggetto specificato e restituisce un'indicazione dei valori relativi.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>A signed integer that indicates the relative values of the two objects, as shown in the following table.</source>
          <target state="translated">Intero con segno che indica i valori relativi dei due oggetti, come illustrato nella tabella seguente.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valore restituito</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significato</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Minore di zero</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version before <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L'oggetto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> corrente è una versione precedente a <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is the same version as <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L'oggetto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> corrente è la stessa versione di <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Maggiore di zero</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version subsequent to <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L'oggetto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> corrente è una versione successiva a <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>The components of <ph id="ph1">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.</source>
          <target state="translated">I componenti di <ph id="ph1">`Version`</ph> in ordine decrescente di importanza sono: principale, secondario, build e revisione.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>An unknown component is assumed to be older than any known component.</source>
          <target state="translated">Si presuppone che un componente sconosciuto meno recenti rispetto a qualsiasi componente noto.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>For example:</source>
          <target state="translated">Ad esempio:</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.0</source>
          <target state="translated">Versione 1.1 è precedente alla versione 1.1.0</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.1</source>
          <target state="translated">La versione 1.1 è precedente alla versione 1.1.1</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.2.3</source>
          <target state="translated">Versione 1.1 è precedente alla versione 1.1.2.3</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1.2 is older than version 1.1.2.4</source>
          <target state="translated">Versione 1.1.2 è precedente alla versione 1.1.2.4</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.2.5 is newer than version 1.2.3.4</source>
          <target state="translated">La versione 1.2.5 è successiva alla versione 1.2.3.4</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> non è di tipo <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to compare to the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> da confrontare con l'oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> corrente oppure <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object and returns an indication of their relative values.</source>
          <target state="translated">Confronta l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente con un oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> specificato e restituisce un'indicazione dei valori relativi.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>A signed integer that indicates the relative values of the two objects, as shown in the following table.</source>
          <target state="translated">Intero con segno che indica i valori relativi dei due oggetti, come illustrato nella tabella seguente.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valore restituito</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significato</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Minore di zero</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version before <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L'oggetto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> corrente è una versione precedente a <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is the same version as <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L'oggetto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> corrente è la stessa versione di <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Maggiore di zero</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version subsequent to <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L'oggetto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> corrente è una versione successiva a <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method because it does not have to unbox the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated">Questo metodo implementa il <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interfaccia ed esegue leggermente migliori rispetto il <ph id="ph2">&lt;xref:System.Version.CompareTo%2A&gt;</ph> metodo perché non è necessario eseguire la conversione unboxing di <ph id="ph3">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>The components of <ph id="ph1">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.</source>
          <target state="translated">I componenti di <ph id="ph1">`Version`</ph> in ordine decrescente di importanza sono: principale, secondario, build e revisione.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>An unknown component is assumed to be older than any known component.</source>
          <target state="translated">Si presuppone che un componente sconosciuto meno recenti rispetto a qualsiasi componente noto.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>For example:</source>
          <target state="translated">Ad esempio:</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.0.</source>
          <target state="translated">Versione 1.1 è precedente alla versione 1.1.0.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.1.</source>
          <target state="translated">La versione 1.1 è precedente alla versione 1.1.1.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.2.3.</source>
          <target state="translated">Versione 1.1 è precedente alla versione 1.1.2.3.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1.2 is older than version 1.1.2.4.</source>
          <target state="translated">Versione 1.1.2 è precedente alla versione 1.1.2.4.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.2.5 is newer than version 1.2.3.4.</source>
          <target state="translated">Versione 1.2.5 è successiva alla versione 1.2.3.4.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">`CompareTo`</ph> method for several value and reference types.</source>
          <target state="translated">Esempio di codice seguente illustra le versioni generiche e del <ph id="ph1">`CompareTo`</ph> metodo per diversi tipi di riferimento e valore.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Returns a value indicating whether two <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object represent the same value.</source>
          <target state="translated">Restituisce un valore che indica se due oggetti <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> rappresentano lo stesso valore.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source>An object to compare with the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Oggetto da confrontare con l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente o <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source>Returns a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente è uguale all'oggetto specificato.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> are both <ph id="ph4">&lt;see cref="T:System.Version" /&gt;</ph> objects, and every component of the current <ph id="ph5">&lt;see cref="T:System.Version" /&gt;</ph> object matches the corresponding component of <ph id="ph6">&lt;paramref name="obj" /&gt;</ph>; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> corrente e <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> sono entrambi oggetti <ph id="ph4">&lt;see cref="T:System.Version" /&gt;</ph> e ogni componente dell'oggetto <ph id="ph5">&lt;see cref="T:System.Version" /&gt;</ph> corrente corrisponde al componente corrispondente di <ph id="ph6">&lt;paramref name="obj" /&gt;</ph>; in caso contrario <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to compare to the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> da confrontare con l'oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> corrente oppure <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source>Returns a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object and a specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object represent the same value.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente e un oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> specificato rappresentano lo stesso valore.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every component of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object matches the corresponding component of the <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> parameter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se ogni componente dell'oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> corrente corrisponde al componente corrispondente del parametro <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>; in caso contrario <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Equals(System.Version)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.Version.Equals%2A&gt;</ph> method because it does not have to unbox the <ph id="ph3">`obj`</ph> parameter.</source>
          <target state="translated">Questo metodo implementa il <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interfaccia ed esegue leggermente migliori rispetto il <ph id="ph2">&lt;xref:System.Version.Equals%2A&gt;</ph> metodo perché non è necessario eseguire la conversione unboxing di <ph id="ph3">`obj`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Version.GetHashCode">
          <source>Returns a hash code for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Restituisce un codice hash per l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Version.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Codice hash di un intero con segno a 32 bit.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.GetHashCode">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> costruttore e <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, e <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Version.Major">
          <source>Gets the value of the major component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Ottiene il valore del componente principale del numero di versione per l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Major">
          <source>The major version number.</source>
          <target state="translated">Numero di versione principale.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Major">
          <source>For example, if the version number is 6.2, the major version is 6.</source>
          <target state="translated">Ad esempio, se il numero di versione è 6.2, la versione principale è 6.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Version.MajorRevision">
          <source>Gets the high 16 bits of the revision number.</source>
          <target state="translated">Ottiene i 16 bit alti del numero di revisione.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>A 16-bit signed integer.</source>
          <target state="translated">Intero con segno a 16 bit.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</source>
          <target state="translated">Si supponga di che rilascia una versione intermedia dell'applicazione per risolvere temporaneamente un problema fino a quando non è possibile rilasciare una soluzione permanente.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</source>
          <target state="translated">La versione temporanea non garantisce un nuovo numero di revisione, ma deve essere identificato come una versione diversa.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</source>
          <target state="translated">In questo caso, codificare le informazioni di identificazione in parti di 16 bit alti e bassi del numero di revisione a 32 bit.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Use the <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> proprietà per ottenere l'utilizzo di numero intero di revisione di <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> proprietà per ottenere i primi 16 bit, utilizzare il <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> proprietà per ottenere i 16 bit bassi.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, Windows NT utilizzi del sistema operativo di <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> proprietà per codificare il numero di service pack.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and the <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> costruttore e <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, e <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Version.Minor">
          <source>Gets the value of the minor component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Ottiene il valore del componente secondario del numero di versione per l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>The minor version number.</source>
          <target state="translated">Numero di versione secondario.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>For example, if the version number is 6.2, the minor version is 2.</source>
          <target state="translated">Ad esempio, se il numero di versione è 6.2, la versione secondaria è 2.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> costruttore e <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, e <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.Version.MinorRevision">
          <source>Gets the low 16 bits of the revision number.</source>
          <target state="translated">Ottiene i 16 bit bassi del numero di revisione.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>A 16-bit signed integer.</source>
          <target state="translated">Intero con segno a 16 bit.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</source>
          <target state="translated">Si supponga di che rilascia una versione intermedia dell'applicazione per risolvere temporaneamente un problema fino a quando non è possibile rilasciare una soluzione permanente.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</source>
          <target state="translated">La versione temporanea non garantisce un nuovo numero di revisione, ma deve essere identificato come una versione diversa.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</source>
          <target state="translated">In questo caso, codificare le informazioni di identificazione in parti di 16 bit alti e bassi del numero di revisione a 32 bit.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>Use the <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> proprietà per ottenere l'utilizzo di numero intero di revisione di <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> proprietà per ottenere i primi 16 bit, utilizzare il <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> proprietà per ottenere i 16 bit bassi.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and the <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> costruttore e <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, e <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Primo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Secondo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> objects are equal.</source>
          <target state="translated">Determina se due oggetti <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> specificati sono uguali.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> equals <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> è uguale a <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Il metodo equivalente per l'operatore è <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Primo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Secondo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is greater than the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Determina se il primo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> specificato è maggiore del secondo oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> è maggiore di <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Il metodo equivalente per l'operatore è <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Primo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Secondo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is greater than or equal to the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Determina se il primo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> specificato è maggiore o uguale al secondo oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> è maggiore o uguale a <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Il metodo equivalente per l'operatore è <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Primo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Secondo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> objects are not equal.</source>
          <target state="translated">Determina se due oggetti <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> specificati non sono uguali.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> does not equal <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> non è uguale a <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>, in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Il metodo equivalente per l'operatore è <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Primo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Secondo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is less than the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Determina se il primo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> specificato è minore del secondo oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> è minore di <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Il metodo equivalente per l'operatore è <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Primo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Secondo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is less than or equal to the second <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Determina se il primo oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> specificato è minore o uguale al secondo oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> è minore o uguale a <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Il metodo equivalente per l'operatore è <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>A string that contains a version number to convert.</source>
          <target state="translated">Stringa che contiene un numero di versione da convertire.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>Converts the string representation of a version number to an equivalent <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Converte la rappresentazione in forma di stringa di un numero di versione nell'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>An object that is equivalent to the version number specified in the <ph id="ph1">&lt;paramref name="input" /&gt;</ph> parameter.</source>
          <target state="translated">Oggetto equivalente al numero di versione specificato nel parametro <ph id="ph1">&lt;paramref name="input" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The <ph id="ph1">`input`</ph> parameter must have the following format:</source>
          <target state="translated">Il <ph id="ph1">`input`</ph> parametro deve avere il formato seguente:</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>where <bpt id="p1">*</bpt>major<ept id="p1">*</ept>, <bpt id="p2">*</bpt>minor<ept id="p2">*</ept>, <bpt id="p3">*</bpt>build<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>revision<ept id="p4">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</source>
          <target state="translated">dove <bpt id="p1">*</bpt>principali<ept id="p1">*</ept>, <bpt id="p2">*</bpt>secondaria<ept id="p2">*</ept>, <bpt id="p3">*</bpt>compilare<ept id="p3">*</ept>, e <bpt id="p4">*</bpt>revisione<ept id="p4">*</ept> sono le rappresentazioni di stringa della versione quattro componenti del numero: principale numero di versione, il numero di versione secondaria, numero di build e numero di revisione.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Optional components are shown in square brackets ([ and ]).</source>
          <target state="translated">Componenti facoltativi sono racchiusi tra parentesi quadre ([e]).</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The components must appear in the specified order, and must be separated by periods.</source>
          <target state="translated">I componenti devono essere visualizzati nell'ordine specificato e devono essere separati da punti.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method to parse user input.</source>
          <target state="translated">Poiché la rappresentazione di stringa di un numero di versione deve essere conforme a un modello riconosciuto, le applicazioni devono utilizzare sempre la gestione delle eccezioni durante la chiamata di <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> metodo per analizzare l'input dell'utente.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Alternatively, you can call the <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.</source>
          <target state="translated">In alternativa, è possibile chiamare il <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> per analizzare la rappresentazione di stringa di un numero di versione e restituire un valore che indica se l'operazione di analisi ha avuto esito positivo.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method is a convenience method; it is equivalent to calling the <ph id="ph2">&lt;xref:System.Version.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> metodo è un metodo pratico; equivale alla chiamata di <ph id="ph2">&lt;xref:System.Version.%23ctor%28System.String%29&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method to parse a number of strings that contain version information.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> metodo per analizzare un numero di stringhe che contengono informazioni sulla versione.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> has fewer than two or more than four version components.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> è composto da meno di due componenti o da più di quattro componenti della versione.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> is less than zero.</source>
          <target state="translated">Almeno un componente di <ph id="ph1">&lt;paramref name="input" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> is not an integer.</source>
          <target state="translated">Almeno un componente di <ph id="ph1">&lt;paramref name="input" /&gt;</ph> non è un Integer.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> represents a number that is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Almeno un componente di <ph id="ph1">&lt;paramref name="input" /&gt;</ph> rappresenta un numero maggiore di <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="P:System.Version.Revision">
          <source>Gets the value of the revision component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Ottiene il valore del componente revisione del numero di versione per l'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>The revision number, or -1 if the revision number is undefined.</source>
          <target state="translated">Numero di revisione o -1 se il numero di revisione non è definito.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>For example, if the version number is 6.2.1.3, the revision number is 3.</source>
          <target state="translated">Ad esempio, se il numero di versione è 6.2.1.3, il numero di revisione è 3.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>If the version number is 6.2, the revision number is undefined.</source>
          <target state="translated">Se il numero di versione è 6.2, il numero di revisione non è definito.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> costruttore e <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, e <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Converte il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente nella rappresentazione <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Converte il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente nella rappresentazione <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, as depicted in the following format.</source>
          <target state="translated">Rappresentazione <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> dei valori dei componenti principale, secondario, build e revisione dell'oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> corrente, come nel formato illustrato di seguito.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Each component is separated by a period character ('.').</source>
          <target state="translated">I componenti sono separati da un punto (.).</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:</source>
          <target state="translated">I componenti che non verranno visualizzati nel valore restituito, quando il componente non è definito, sono racchiusi tra parentesi quadre ("[" e "]"):</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>major.minor[.build[.revision]]</source>
          <target state="translated">principale.secondario[.build[.revisione]]</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>For example, if you create a <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,1)<ept id="p1">&lt;/c&gt;</ept>, the returned string is "1.1".</source>
          <target state="translated">Se ad esempio si crea un oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> usando il costruttore <bpt id="p1">&lt;c&gt;</bpt>Version(1,1)<ept id="p1">&lt;/c&gt;</ept>, la stringa restituita è "1.1".</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>If you create a <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,4,2)<ept id="p1">&lt;/c&gt;</ept>, the returned string is "1.3.4.2".</source>
          <target state="translated">Se si crea un oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> usando il costruttore <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,4,2)<ept id="p1">&lt;/c&gt;</ept>, la stringa restituita è "1.3.4.2".</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The number of components to return.</source>
          <target state="translated">Numero di componenti da restituire.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>fieldCount<ept id="p1">&lt;/c&gt;</ept> ranges from 0 to 4.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>fieldCount<ept id="p1">&lt;/c&gt;</ept> varia da 0 a 4.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Converte il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> corrente nella rappresentazione <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>A specified count indicates the number of components to return.</source>
          <target state="translated">Un conteggio specificato indica il numero di componenti da restituire.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, each separated by a period character ('.').</source>
          <target state="translated">Rappresentazione <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> dei valori dei componenti principale, secondario, build e revisione dell'oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> corrente, separati da punti (".").</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> parameter determines how many components are returned.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> determina il numero di componenti da restituire.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> fieldCount</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> fieldCount</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Valore restituito</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> An empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> principale</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 2</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 2</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> principale.secondaria</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 3</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 3</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> principale.secondaria.build</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 4</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 4</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build.revision</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> principale.secondaria.build.revisione</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>For example, if you create <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,5)<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>ToString(2)<ept id="p2">&lt;/c&gt;</ept> returns "1.3" and <bpt id="p3">&lt;c&gt;</bpt>ToString(4)<ept id="p3">&lt;/c&gt;</ept> throws an exception.</source>
          <target state="translated">Se ad esempio si crea un oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> usando il costruttore <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,5)<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>ToString(2)<ept id="p2">&lt;/c&gt;</ept> restituisce "1.3" e <bpt id="p3">&lt;c&gt;</bpt>ToString(4)<ept id="p3">&lt;/c&gt;</ept> genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> is less than 0, or more than 4.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> è minore di 0 o maggiore di 4.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> is more than the number of components defined in the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> è maggiore del numero di componenti definiti nell'oggetto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>A string that contains a version number to convert.</source>
          <target state="translated">Stringa che contiene un numero di versione da convertire.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> equivalent of the number that is contained in <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept>, if the conversion succeeded.</source>
          <target state="translated">Quando questo metodo restituisce un risultato, esso contiene la classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> equivalente al numero contenuto in <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> se la conversione ha esito positivo.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, or if the conversion fails, <bpt id="p2">&lt;c&gt;</bpt>result<ept id="p2">&lt;/c&gt;</ept> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> when the method returns.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> è <ph id="ph1">&lt;see langword="null" /&gt;</ph> o <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, o se la conversione non riesce, <bpt id="p2">&lt;c&gt;</bpt>result<ept id="p2">&lt;/c&gt;</ept> è <ph id="ph3">&lt;see langword="null" /&gt;</ph> quando termina il metodo.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Tries to convert the string representation of a version number to an equivalent <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">Tenta di convertire la rappresentazione in forma di stringa di un numero di versione in un oggetto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="input" /&gt;</ph> parameter was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il parametro <ph id="ph2">&lt;paramref name="input" /&gt;</ph> è stato convertito correttamente; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method is similar to the <ph id="ph2">&lt;xref:System.Version.Parse%2A&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> è simile al metodo di <ph id="ph2">&lt;xref:System.Version.Parse%2A&gt;</ph> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Instead, it returns <ph id="ph1">`false`</ph> if <ph id="ph2">`input`</ph> is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Al contrario, restituisce <ph id="ph1">`false`</ph> se <ph id="ph2">`input`</ph> è null, dispone di meno di due o più di quattro componenti, ha almeno un componente che non è un numero intero, ha almeno un componente che è minore di zero o di almeno un componente che è maggiore di <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>For the parse operation to succeed, the <ph id="ph1">`input`</ph> parameter must be in the following format:</source>
          <target state="translated">Per l'operazione di analisi abbia esito positivo, il <ph id="ph1">`input`</ph> parametro deve essere nel formato seguente:</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>where <bpt id="p1">*</bpt>major<ept id="p1">*</ept>, <bpt id="p2">*</bpt>minor<ept id="p2">*</ept>, <bpt id="p3">*</bpt>build<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>revision<ept id="p4">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</source>
          <target state="translated">dove <bpt id="p1">*</bpt>principali<ept id="p1">*</ept>, <bpt id="p2">*</bpt>secondaria<ept id="p2">*</ept>, <bpt id="p3">*</bpt>compilare<ept id="p3">*</ept>, e <bpt id="p4">*</bpt>revisione<ept id="p4">*</ept> sono le rappresentazioni di stringa della versione quattro componenti del numero: principale numero di versione, il numero di versione secondaria, numero di build e numero di revisione.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Optional components are shown in square brackets ([ and ]).</source>
          <target state="translated">Componenti facoltativi sono racchiusi tra parentesi quadre ([e]).</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The components must appear in order, and must be separated by periods.</source>
          <target state="translated">I componenti devono essere visualizzati in ordine e devono essere separati da punti.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method to parse a number of strings that contain version information.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> metodo per analizzare un numero di stringhe che contengono informazioni sulla versione.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>