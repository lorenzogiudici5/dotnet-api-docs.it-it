<Type Name="Convert" FullName="System.Convert">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49c3b0f00f116fb0ea779048ab4e7af595a7b193" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52592948" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Convert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Convert extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Convert" />
  <TypeSignature Language="VB.NET" Value="Public Class Convert" />
  <TypeSignature Language="C++ CLI" Value="public ref class Convert abstract sealed" />
  <TypeSignature Language="F#" Value="type Convert = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="93c64-101">Converte un tipo di dati di base in un altro tipo di dati di base.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93c64-101">Converts a base data type to another base data type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-102">I metodi statici del <xref:System.Convert> classe vengono utilizzate principalmente per supportare la conversione da e verso i tipi di dati di base in .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="93c64-102">The static methods of the <xref:System.Convert> class are primarily used to support conversion to and from the base data types in the .NET Framework.</span></span> <span data-ttu-id="93c64-103">I tipi di base supportati sono <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> e <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="93c64-103">The supported base types are <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> and <xref:System.String>.</span></span> <span data-ttu-id="93c64-104">Inoltre, il <xref:System.Convert> classe include metodi per supportare altri tipi di conversioni.</span><span class="sxs-lookup"><span data-stu-id="93c64-104">In addition, the <xref:System.Convert> class includes methods to support  other kinds of conversions.</span></span>  
  
 <span data-ttu-id="93c64-105">Questo argomento include le sezioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="93c64-105">This topic consists of the following sections:</span></span>  
  
 <span data-ttu-id="93c64-106">[Conversioni da e verso tipi di Base](#Base) </span><span class="sxs-lookup"><span data-stu-id="93c64-106">[Conversions to and from Base Types](#Base) </span></span>  
 <span data-ttu-id="93c64-107">[Numeri interi](#NonDecimal) </span><span class="sxs-lookup"><span data-stu-id="93c64-107">[Non-Decimal Numbers](#NonDecimal) </span></span>  
 <span data-ttu-id="93c64-108">[Conversioni da oggetti personalizzati ai tipi di Base](#Custom) </span><span class="sxs-lookup"><span data-stu-id="93c64-108">[Conversions from Custom Objects to Base Types](#Custom) </span></span>  
 <span data-ttu-id="93c64-109">[Informazioni di formattazione specifiche delle impostazioni cultura](#Culture) </span><span class="sxs-lookup"><span data-stu-id="93c64-109">[Culture-Specific Formatting Information](#Culture) </span></span>  
 <span data-ttu-id="93c64-110">[Codifica Base64](#Base64) </span><span class="sxs-lookup"><span data-stu-id="93c64-110">[Base64 Encoding](#Base64) </span></span>  
 [<span data-ttu-id="93c64-111">Altre conversioni comuni</span><span class="sxs-lookup"><span data-stu-id="93c64-111">Other Common Conversions</span></span>](#Other)  
  
<a name="Base"></a>   
## <a name="conversions-to-and-from-base-types"></a><span data-ttu-id="93c64-112">Conversioni da e verso tipi di Base</span><span class="sxs-lookup"><span data-stu-id="93c64-112">Conversions to and from Base Types</span></span>  
 <span data-ttu-id="93c64-113">Esiste un metodo di conversione per convertire ogni tipo di base per tutti gli altri tipi di base.</span><span class="sxs-lookup"><span data-stu-id="93c64-113">A conversion method exists to convert every base type to every other base type.</span></span> <span data-ttu-id="93c64-114">Tuttavia, la chiamata effettiva per un metodo di conversione particolare può produrre uno dei cinque risultati, a seconda del valore del tipo di base in fase di esecuzione e il tipo di base di destinazione.</span><span class="sxs-lookup"><span data-stu-id="93c64-114">However, the actual call to a particular conversion method can produce one of five outcomes, depending on the value of the base type at run time and the target base type.</span></span> <span data-ttu-id="93c64-115">Questi risultati sono:</span><span class="sxs-lookup"><span data-stu-id="93c64-115">These five outcomes are:</span></span>  
  
-   <span data-ttu-id="93c64-116">Nessuna conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-116">No conversion.</span></span> <span data-ttu-id="93c64-117">Ciò si verifica quando viene effettuato un tentativo di convertire un tipo a se stessa (ad esempio, chiamando <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> con un argomento di tipo <xref:System.Int32>).</span><span class="sxs-lookup"><span data-stu-id="93c64-117">This occurs when an attempt is made to convert from a type to itself (for example, by calling <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> with an argument of type <xref:System.Int32>).</span></span> <span data-ttu-id="93c64-118">In questo caso, il metodo restituisce semplicemente un'istanza del tipo originale.</span><span class="sxs-lookup"><span data-stu-id="93c64-118">In this case, the method simply returns an instance of the original type.</span></span>  
  
-   <span data-ttu-id="93c64-119">Oggetto <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="93c64-119">An <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="93c64-120">Ciò si verifica quando una determinata conversione non è supportata.</span><span class="sxs-lookup"><span data-stu-id="93c64-120">This occurs when a particular conversion is not supported.</span></span> <span data-ttu-id="93c64-121">Un <xref:System.InvalidCastException> generata per le conversioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="93c64-121">An <xref:System.InvalidCastException> is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="93c64-122">Le conversioni da <xref:System.Char> al <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, o <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="93c64-122">Conversions from <xref:System.Char> to <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime>.</span></span>  
  
    -   <span data-ttu-id="93c64-123">Le conversioni da <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, o <xref:System.DateTime> a <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="93c64-123">Conversions from <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime> to <xref:System.Char>.</span></span>  
  
    -   <span data-ttu-id="93c64-124">Le conversioni da <xref:System.DateTime> in qualsiasi altro tipo, ad eccezione <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="93c64-124">Conversions from <xref:System.DateTime> to any other type except <xref:System.String>.</span></span>  
  
    -   <span data-ttu-id="93c64-125">Le conversioni da qualsiasi altro tipo, eccetto <xref:System.String>, a <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="93c64-125">Conversions from any other type, except <xref:System.String>, to <xref:System.DateTime>.</span></span>  
  
-   <span data-ttu-id="93c64-126">Oggetto <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="93c64-126">A <xref:System.FormatException>.</span></span> <span data-ttu-id="93c64-127">Ciò si verifica quando il tentativo di convertire un valore stringa in qualsiasi altro tipo di base non riesce perché la stringa non è nel formato corretto.</span><span class="sxs-lookup"><span data-stu-id="93c64-127">This occurs when the attempt to convert a string value to any other base type fails because the string is not in the proper format.</span></span> <span data-ttu-id="93c64-128">Viene generata l'eccezione per le conversioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="93c64-128">The exception is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="93c64-129">Una stringa da convertire in un <xref:System.Boolean> valore non è uguale <xref:System.Boolean.TrueString?displayProperty=nameWithType> o <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-129">A string to be converted to a <xref:System.Boolean> value does not equal <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="93c64-130">Una stringa da convertire in un <xref:System.Char> valore è costituito da più caratteri.</span><span class="sxs-lookup"><span data-stu-id="93c64-130">A string to be converted to a <xref:System.Char> value consists of multiple characters.</span></span>  
  
    -   <span data-ttu-id="93c64-131">Una stringa da convertire in qualsiasi tipo numerico non è riconosciuta come un numero valido.</span><span class="sxs-lookup"><span data-stu-id="93c64-131">A string to be converted to any numeric type is not recognized as a valid number.</span></span>  
  
    -   <span data-ttu-id="93c64-132">Una stringa da convertire in un <xref:System.DateTime> non è riconosciuto come una data valida e il valore di ora.</span><span class="sxs-lookup"><span data-stu-id="93c64-132">A string to be converted to a <xref:System.DateTime> is not recognized as a valid date and time value.</span></span>  
  
-   <span data-ttu-id="93c64-133">Una corretta conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-133">A successful conversion.</span></span> <span data-ttu-id="93c64-134">Per le conversioni tra due diversi tipi di base non è elencati nei risultati precedenti, tutte le conversioni di ampliamento, nonché tutte le conversioni di narrowing che non comportano una perdita di dati avrà esito positivo e il metodo restituisce un valore del tipo di base di destinazione.</span><span class="sxs-lookup"><span data-stu-id="93c64-134">For conversions between two different base types not listed in the previous outcomes, all widening conversions as well as all narrowing conversions that do not result in a loss of data will succeed and the method will return a value of the targeted base type.</span></span>  
  
-   <span data-ttu-id="93c64-135">Oggetto <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="93c64-135">An <xref:System.OverflowException>.</span></span> <span data-ttu-id="93c64-136">Ciò si verifica quando una restrizione conversione comporta una perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="93c64-136">This occurs when a narrowing conversion results in a loss of data.</span></span> <span data-ttu-id="93c64-137">Ad esempio, il tentativo di convertire un <xref:System.Int32> istanza il cui valore è la 10000 per un <xref:System.Byte> digitare genera un' <xref:System.OverflowException> perché 10000 è compreso nell'intervallo del <xref:System.Byte> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="93c64-137">For example, trying to convert a <xref:System.Int32> instance whose value is 10000 to a <xref:System.Byte> type throws an <xref:System.OverflowException> because 10000 is outside the range of the <xref:System.Byte> data type.</span></span>  
  
 <span data-ttu-id="93c64-138">Non essere generata un'eccezione se la conversione di un tipo numerico comporta una perdita di precisione (vale a dire, la perdita di alcune cifre meno significative).</span><span class="sxs-lookup"><span data-stu-id="93c64-138">An exception will not be thrown if the conversion of a numeric type results in a loss of precision (that is, the loss of some least significant digits).</span></span> <span data-ttu-id="93c64-139">Tuttavia, verrà generata un'eccezione se il risultato è maggiore di quanto può essere rappresentato dal tipo di valore restituito del metodo particolare conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-139">However, an exception will be thrown if the result is larger than can be represented by the particular conversion method's return value type.</span></span>  
  
 <span data-ttu-id="93c64-140">Ad esempio, quando un <xref:System.Double> viene convertito in un <xref:System.Single>, potrebbe verificarsi una perdita di precisione, ma viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-140">For example, when a <xref:System.Double> is converted to a <xref:System.Single>, a loss of precision might occur but no exception is thrown.</span></span> <span data-ttu-id="93c64-141">Tuttavia, se la grandezza del <xref:System.Double> è troppo grande per essere rappresentato da un <xref:System.Single>, viene generata un'eccezione di overflow.</span><span class="sxs-lookup"><span data-stu-id="93c64-141">However, if the magnitude of the <xref:System.Double> is too large to be represented by a <xref:System.Single>, an overflow exception is thrown.</span></span>  
  
<a name="NonDecimal"></a>   
## <a name="non-decimal-numbers"></a><span data-ttu-id="93c64-142">Numeri interi</span><span class="sxs-lookup"><span data-stu-id="93c64-142">Non-Decimal Numbers</span></span>  
 <span data-ttu-id="93c64-143">Il <xref:System.Convert> classe include metodi statici che è possibile chiamare per convertire i valori integrali in rappresentazioni di stringa non decimale e per convertire le stringhe che i numeri decimali non rappresentano in valori integrali.</span><span class="sxs-lookup"><span data-stu-id="93c64-143">The <xref:System.Convert> class includes static methods that you can call to convert integral values to non-decimal string representations, and to convert strings that represent non-decimal numbers to integral values.</span></span> <span data-ttu-id="93c64-144">Ognuno di questi metodi di conversione include un `base` argomento che consente di specificare il numero di sistema; file binario (base 2), ottale (base 8) ed esadecimale (base 16), nonché decimale (base 10).</span><span class="sxs-lookup"><span data-stu-id="93c64-144">Each of these conversion methods includes a `base` argument  that lets you specify  the number system; binary (base 2), octal (base 8), and hexadecimal (base 16), as well as decimal (base 10).</span></span> <span data-ttu-id="93c64-145">È disponibile un set di metodi per ogni tipo integrale primitivo conforme a CLS di convertire in una stringa e uno per convertire una stringa per ogni tipo integrale primitivo di:</span><span class="sxs-lookup"><span data-stu-id="93c64-145">There is a set of methods to convert each of the CLS-compliant primitive integral types to a string, and one to convert a string to each of the primitive integral types:</span></span>  
  
-   <span data-ttu-id="93c64-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> e <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, per convertire un valore di byte da e verso una stringa in una base specificata.</span><span class="sxs-lookup"><span data-stu-id="93c64-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> and <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, to convert a byte value to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="93c64-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> e <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, per convertire un intero con segno a 16 bit in e da una stringa in una base specificata.</span><span class="sxs-lookup"><span data-stu-id="93c64-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> and <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, to convert a 16-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="93c64-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> e <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, per convertire un intero con segno a 32 bit in e da una stringa in una base specificata.</span><span class="sxs-lookup"><span data-stu-id="93c64-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> and <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, to convert a 32-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="93c64-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> e <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, per convertire un intero con segno a 64 bit in e da una stringa in una base specificata.</span><span class="sxs-lookup"><span data-stu-id="93c64-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> and <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, to convert a 64-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="93c64-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, per convertire la rappresentazione di stringa di un valore di byte in un formato specificato a un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, to convert the string representation of a byte value in a specified format to a signed byte.</span></span>  
  
-   <span data-ttu-id="93c64-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, per convertire la rappresentazione di stringa di un intero in un formato specificato in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 16-bit integer.</span></span>  
  
-   <span data-ttu-id="93c64-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, per convertire la rappresentazione di stringa di un intero in un formato specificato in un intero senza segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 32-bit integer.</span></span>  
  
-   <span data-ttu-id="93c64-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, per convertire la rappresentazione di stringa di un intero in un formato specificato in un intero senza segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 64-bit integer.</span></span>  
  
 <span data-ttu-id="93c64-154">L'esempio seguente converte il valore di <xref:System.Int16.MaxValue?displayProperty=nameWithType> in una stringa in tutti i formati numerici è supportato.</span><span class="sxs-lookup"><span data-stu-id="93c64-154">The following example converts the value of <xref:System.Int16.MaxValue?displayProperty=nameWithType> to a string in all supported numeric formats.</span></span> <span data-ttu-id="93c64-155">Viene quindi converte il valore di stringa un <xref:System.Int16> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-155">It then converts the string value back to a <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Convert#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/NonDecimal1.cpp#2)]
 [!code-csharp[System.Convert#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/NonDecimal1.cs#2)]
 [!code-vb[System.Convert#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/NonDecimal1.vb#2)]  
  
<a name="Custom"></a>   
## <a name="conversions-from-custom-objects-to-base-types"></a><span data-ttu-id="93c64-156">Conversioni da oggetti personalizzati ai tipi di Base</span><span class="sxs-lookup"><span data-stu-id="93c64-156">Conversions from Custom Objects to Base Types</span></span>  
 <span data-ttu-id="93c64-157">Oltre a supportare le conversioni tra tipi di base, il <xref:System.Convert> metodo supporta la conversione di qualsiasi tipo personalizzato per qualsiasi tipo di base.</span><span class="sxs-lookup"><span data-stu-id="93c64-157">In addition to supporting conversions between the base types, the <xref:System.Convert> method supports conversion of any custom type to any base type.</span></span> <span data-ttu-id="93c64-158">A tale scopo, il tipo personalizzato deve implementare il <xref:System.IConvertible> interfaccia che definisce i metodi per la conversione di tipo di implementazione in ognuno dei tipi di base.</span><span class="sxs-lookup"><span data-stu-id="93c64-158">To do this, the custom type must implement the <xref:System.IConvertible> interface, which defines methods for converting the implementing type to each of the base types.</span></span> <span data-ttu-id="93c64-159">Le conversioni non supportate da un particolare tipo devono generare un <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="93c64-159">Conversions that are not supported by a particular type should throw an <xref:System.InvalidCastException>.</span></span>  
  
 <span data-ttu-id="93c64-160">Quando la <xref:System.Convert.ChangeType%2A> metodo viene passato un tipo personalizzato come primo parametro, o quando il `Convert.To` *tipo* (metodo) (ad esempio <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> o <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> viene chiamato e passato a un'istanza di un tipo personalizzato come la prima parametro, il <xref:System.Convert> metodo, a sua volta, chiama il tipo personalizzato <xref:System.IConvertible> implementazione per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-160">When the <xref:System.Convert.ChangeType%2A> method is passed a custom type as its first parameter, or when the `Convert.To`*Type* method (such as <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> or <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> is called and passed an instance of a custom type as its first parameter, the <xref:System.Convert> method, in turn, calls the custom type's <xref:System.IConvertible> implementation to perform the conversion.</span></span> <span data-ttu-id="93c64-161">Per altre informazioni, vedere [conversione di tipi in .NET Framework](~/docs/standard/base-types/type-conversion.md).</span><span class="sxs-lookup"><span data-stu-id="93c64-161">For more information, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md).</span></span>  
  
<a name="Culture"></a>   
## <a name="culture-specific-formatting-information"></a><span data-ttu-id="93c64-162">Informazioni di formattazione specifiche delle impostazioni cultura</span><span class="sxs-lookup"><span data-stu-id="93c64-162">Culture-Specific Formatting Information</span></span>  
 <span data-ttu-id="93c64-163">Tutti i metodi di conversione tipo di base e il <xref:System.Convert.ChangeType%2A> metodo includono overload che hanno un parametro di tipo <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="93c64-163">All the base type conversion methods and the <xref:System.Convert.ChangeType%2A> method include overloads that have a parameter of type <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="93c64-164">Ad esempio, il <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> metodo ha i seguenti due overload:</span><span class="sxs-lookup"><span data-stu-id="93c64-164">For example, the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> method has the following two overloads:</span></span>  
  
-   <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
-   <xref:System.Convert.ToBoolean%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="93c64-165">Il <xref:System.IFormatProvider> parametro può fornire informazioni di formattazione specifiche delle impostazioni cultura per facilitare il processo di conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-165">The <xref:System.IFormatProvider> parameter can supply culture-specific formatting information to assist the conversion process.</span></span> <span data-ttu-id="93c64-166">Tuttavia, viene ignorato dalla maggior parte dei metodi di conversione tipo di base.</span><span class="sxs-lookup"><span data-stu-id="93c64-166">However, it is ignored by most of the base type conversion methods.</span></span> <span data-ttu-id="93c64-167">Viene utilizzato solo dai metodi di conversione tipo di base seguenti. Se un `null` <xref:System.IFormatProvider> argomento viene passato a questi metodi, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che rappresenta le impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-167">It is used only by the following base type conversion methods.If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="93c64-168">Per i metodi che convertono un valore a un tipo numerico.</span><span class="sxs-lookup"><span data-stu-id="93c64-168">By methods that convert a value to a numeric type.</span></span> <span data-ttu-id="93c64-169">Il <xref:System.IFormatProvider> parametro viene utilizzato dall'overload che dispone di parametri di tipo <xref:System.String> e <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="93c64-169">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="93c64-170">Viene inoltre utilizzato dall'overload che dispone di parametri di tipo <xref:System.Object> e <xref:System.IFormatProvider> se l'oggetto della fase di esecuzione il tipo è un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="93c64-170">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="93c64-171">Per i metodi che convertono un valore a una data e ora.</span><span class="sxs-lookup"><span data-stu-id="93c64-171">By methods that convert a value to a date and time.</span></span> <span data-ttu-id="93c64-172">Il <xref:System.IFormatProvider> parametro viene utilizzato dall'overload che dispone di parametri di tipo <xref:System.String> e <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="93c64-172">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="93c64-173">Viene inoltre utilizzato dall'overload che dispone di parametri di tipo <xref:System.Object> e <xref:System.IFormatProvider> se l'oggetto della fase di esecuzione il tipo è un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="93c64-173">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="93c64-174">Per il <xref:System.Convert.ToString%2A?displayProperty=nameWithType> overload che includono un' <xref:System.IFormatProvider> parametro e che è possibile convertire un valore numerico in una stringa o un <xref:System.DateTime> valore in una stringa.</span><span class="sxs-lookup"><span data-stu-id="93c64-174">By the <xref:System.Convert.ToString%2A?displayProperty=nameWithType> overloads that include an <xref:System.IFormatProvider> parameter and that convert either a numeric value to a string or a <xref:System.DateTime> value to a string.</span></span>  
  
 <span data-ttu-id="93c64-175">Tuttavia, qualsiasi tipo definito dall'utente che implementa <xref:System.IConvertible> può rendere utilizzare il <xref:System.IFormatProvider> parametro.</span><span class="sxs-lookup"><span data-stu-id="93c64-175">However, any user-defined type that implements <xref:System.IConvertible> can make use of the <xref:System.IFormatProvider> parameter.</span></span>  
  
<a name="Base64"></a>   
## <a name="base64-encoding"></a><span data-ttu-id="93c64-176">Codifica Base64</span><span class="sxs-lookup"><span data-stu-id="93c64-176">Base64 Encoding</span></span>  
 <span data-ttu-id="93c64-177">Codifica Base64 converte i dati binari in una stringa.</span><span class="sxs-lookup"><span data-stu-id="93c64-177">Base64 encoding converts binary data to a string.</span></span> <span data-ttu-id="93c64-178">Espresso come cifre base 64 dei dati possono essere facilmente trasferiti attraverso i canali di dati in grado di trasmettere caratteri di 7 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-178">Data expressed as base-64 digits can be easily conveyed over data channels that can only transmit 7-bit characters.</span></span> <span data-ttu-id="93c64-179">Il <xref:System.Convert> classe include i metodi seguenti per supportare la codifica base 64: un set di metodi supporta la conversione di una matrice di byte da e verso un <xref:System.String> o da e verso una matrice di caratteri Unicode costituita da cifre base 64 caratteri.</span><span class="sxs-lookup"><span data-stu-id="93c64-179">The <xref:System.Convert> class includes the following methods to support base64 encoding: A set of methods support converting an array of bytes to and from a <xref:System.String> or to and from an array of Unicode characters consisting of base-64 digit characters.</span></span>  
  
-   <span data-ttu-id="93c64-180"><xref:System.Convert.ToBase64String%2A>, che converte una matrice di byte in una stringa con codifica base64.</span><span class="sxs-lookup"><span data-stu-id="93c64-180"><xref:System.Convert.ToBase64String%2A>, which converts a byte array to a base64-encoded string.</span></span>  
  
-   <span data-ttu-id="93c64-181"><xref:System.Convert.ToBase64CharArray%2A>, che converte una matrice di byte in una matrice di caratteri con codifica base64.</span><span class="sxs-lookup"><span data-stu-id="93c64-181"><xref:System.Convert.ToBase64CharArray%2A>, which converts a byte array to a base64-encoded character array.</span></span>  
  
-   <span data-ttu-id="93c64-182"><xref:System.Convert.FromBase64String%2A>, che converte una stringa con codifica base64 in una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="93c64-182"><xref:System.Convert.FromBase64String%2A>, which converts a base64-encoded string to a byte array.</span></span>  
  
-   <span data-ttu-id="93c64-183"><xref:System.Convert.FromBase64CharArray%2A>, che converte una matrice di caratteri con codifica base64 in una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="93c64-183"><xref:System.Convert.FromBase64CharArray%2A>, which converts a base64-encoded character array to a byte array.</span></span>  
  
<a name="Other"></a>   
## <a name="other-common-conversions"></a><span data-ttu-id="93c64-184">Altre conversioni comuni</span><span class="sxs-lookup"><span data-stu-id="93c64-184">Other Common Conversions</span></span>  
 <span data-ttu-id="93c64-185">È possibile usare altre classi in .NET Framework per eseguire alcune conversioni non supportate dai metodi statici del <xref:System.Convert> classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-185">You can use other classes in the NET Framework to perform some conversions that are not supported by the static methods of the <xref:System.Convert> class.</span></span>  <span data-ttu-id="93c64-186">Sono inclusi:</span><span class="sxs-lookup"><span data-stu-id="93c64-186">These include:</span></span>  
  
 <span data-ttu-id="93c64-187">Conversione in matrici di byte</span><span class="sxs-lookup"><span data-stu-id="93c64-187">Conversion to byte arrays</span></span>  
 <span data-ttu-id="93c64-188">Il <xref:System.BitConverter> classe fornisce metodi che convertono i tipi numerici primitivi (tra cui <xref:System.Boolean>) per le matrici di byte e da byte matrici fino a tipi di dati primitivi.</span><span class="sxs-lookup"><span data-stu-id="93c64-188">The <xref:System.BitConverter> class  provides methods that convert the primitive numeric types (including <xref:System.Boolean>) to byte arrays and from byte arrays back to primitive data types.</span></span>  
  
 <span data-ttu-id="93c64-189">Codifica e decodifica</span><span class="sxs-lookup"><span data-stu-id="93c64-189">Character encoding and decoding</span></span>  
 <span data-ttu-id="93c64-190">Il <xref:System.Text.Encoding> classi e le relative classi derivate (, ad esempio <xref:System.Text.UnicodeEncoding> e <xref:System.Text.UTF8Encoding>) forniscono metodi per codificare una stringa o una matrice di caratteri (vale a dire, per convertirli in una matrice di byte in una particolare codifica) e decodificare un' con codifica della matrice di byte (vale a dire, riconvertire una matrice di byte in caratteri Unicode con codifica UTF16.</span><span class="sxs-lookup"><span data-stu-id="93c64-190">The <xref:System.Text.Encoding> class and its derived classes (such as <xref:System.Text.UnicodeEncoding> and <xref:System.Text.UTF8Encoding>) provide methods to encode a character array or a string (that is, to convert them to a byte array in a particular encoding) and to decode an encoded byte array (that is, convert a byte array back to UTF16-encoded Unicode characters.</span></span> <span data-ttu-id="93c64-191">Per altre informazioni, vedere [codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span><span class="sxs-lookup"><span data-stu-id="93c64-191">For more information, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-192">L'esempio seguente illustra alcuni dei metodi di conversione nel <xref:System.Convert> classe, inclusi <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>, e <xref:System.Convert.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="93c64-192">The following example demonstrates some of the conversion methods in the <xref:System.Convert> class, including <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>, and <xref:System.Convert.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Convert#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/converter.cpp#1)]
 [!code-csharp[System.Convert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/converter.cs#1)]
 [!code-vb[System.Convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/converter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Boolean" />
    <altmember cref="T:System.Char" />
    <altmember cref="T:System.String" />
    <related type="Article" href="~/docs/standard/base-types/type-conversion.md">
      <span data-ttu-id="93c64-193">Conversione di tipi in .NET Framework</span>
      <span class="sxs-lookup">
        <span data-stu-id="93c64-193">Type Conversion in the .NET Framework</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-194">Restituisce un oggetto di un tipo specificato, il cui valore è equivalente a un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-194">Returns an object of a specified type whose value is equivalent to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * Type -&gt; obj" Usage="System.Convert.ChangeType (value, conversionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-195">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-195">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="conversionType">
          <span data-ttu-id="93c64-196">Tipo di oggetto da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-196">The type of object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-197">Restituisce un oggetto del tipo specificato e il cui valore è equivalente all'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-197">Returns an object of the specified type and whose value is equivalent to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-198">Oggetto il cui tipo è <paramref name="conversionType" /> e il cui valore è equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-198">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="93c64-199">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-199">-or-</span>
          </span>
          <span data-ttu-id="93c64-200">Riferimento Null (<see langword="Nothing" /> in Visual Basic), se <paramref name="value" /> è <see langword="null" /> e <paramref name="conversionType" /> non è un tipo di valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-200">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-201"><xref:System.Convert.ChangeType%2A> è un metodo per utilizzo generico di conversione che converte l'oggetto specificato da `value` a `conversionType`.</span><span class="sxs-lookup"><span data-stu-id="93c64-201"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="93c64-202">Il `value` parametro può essere un oggetto di qualsiasi tipo, e `conversionType` può essere anche un <xref:System.Type> oggetto che rappresenta qualsiasi tipo di base o personalizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-202">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="93c64-203">Per la conversione abbia esito positivo, `value` deve implementare il <xref:System.IConvertible> dell'interfaccia, perché il metodo esegue semplicemente il wrapping di una chiamata a un oggetto appropriato <xref:System.IConvertible> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-203">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="93c64-204">Il metodo richiede che la conversione di `value` a `conversionType` supportato.</span><span class="sxs-lookup"><span data-stu-id="93c64-204">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="93c64-205">Questo metodo Usa le impostazioni cultura del thread corrente per la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-205">This method uses the current thread's culture for the conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-206">Nell'esempio riportato di seguito viene illustrato l'utilizzo del metodo <xref:System.Convert.ChangeType%2A>.</span><span class="sxs-lookup"><span data-stu-id="93c64-206">The following example illustrates the use of the <xref:System.Convert.ChangeType%2A> method.</span></span>  
  
 [!code-cpp[convertchangetype#1](~/samples/snippets/cpp/VS_Snippets_CLR/convertchangetype/CPP/convertchangetype.cpp#1)]
 [!code-csharp[convertchangetype#1](~/samples/snippets/csharp/VS_Snippets_CLR/convertchangetype/CS/convertchangetype.cs#1)]
 [!code-vb[convertchangetype#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convertchangetype/VB/convertchangetype.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-207">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-207">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-208">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-208">-or-</span>
          </span>
          <span data-ttu-id="93c64-209">
            <paramref name="value" /> è <see langword="null" /> e <paramref name="conversionType" /> è un tipo di valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-209">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span>
          </span>
          <span data-ttu-id="93c64-210">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-210">-or-</span>
          </span>
          <span data-ttu-id="93c64-211">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-211">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-212">
            <paramref name="value" /> non è in un formato riconosciuto da <paramref name="conversionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-212">
              <paramref name="value" /> is not in a format recognized by <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-213">
            <paramref name="value" /> rappresenta un numero non compreso nell'intervallo di <paramref name="conversionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-213">
              <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-214">
            <paramref name="conversionType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-214">
              <paramref name="conversionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="93c64-215">Il <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> metodo consente di convertire un valore di enumerazione a un altro tipo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-215">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert an enumeration value to another type.</span>
            </span>
            <span data-ttu-id="93c64-216">Tuttavia, non può convertire un altro tipo in un valore di enumerazione, anche se il tipo di origine è il tipo sottostante dell'enumerazione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-216">However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</span>
            </span>
            <span data-ttu-id="93c64-217">Per convertire un tipo in un valore di enumerazione, utilizzare un operatore di cast (in c#) o una funzione di conversione (in Visual Basic).</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-217">To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</span>
            </span>
            <span data-ttu-id="93c64-218">L'esempio seguente illustra la conversione da e verso un <c>continente</c> valore di enumerazione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-218">The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.</span>
            </span>
            <span data-ttu-id="93c64-219">[! codice-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [! codice vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-219">[!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span>
            </span>
            <span data-ttu-id="93c64-220">Il <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> metodo consente di convertire un tipo nullable in un altro tipo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-220">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert a nullable type to another type.</span>
            </span>
            <span data-ttu-id="93c64-221">Tuttavia, non può convertire un altro tipo in un valore di un tipo che ammette valori null, anche se <paramref name="conversionType" /> è il tipo sottostante del <see cref="T:System.Nullable`1" />. Per eseguire la conversione, è possibile usare un operatore di cast (in c#) o una funzione di conversione (in Visual Basic).</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-221">However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</span>
            </span>
            <span data-ttu-id="93c64-222">L'esempio seguente illustra la conversione da e verso un tipo nullable.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-222">The following example illustrates the conversion to and from a nullable type.</span>
            </span>
            <span data-ttu-id="93c64-223">[! codice-csharp[System.Convert.ChangeType#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)] [! codice vb[System.Convert.ChangeType#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-223">[!code-csharp[System.Convert.ChangeType#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)] [!code-vb[System.Convert.ChangeType#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * TypeCode -&gt; obj" Usage="System.Convert.ChangeType (value, typeCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-224">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-224">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="typeCode">
          <span data-ttu-id="93c64-225">Tipo di oggetto da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-225">The type of object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-226">Restituisce un oggetto del tipo specificato, il cui valore è equivalente all'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-226">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-227">Oggetto il cui tipo sottostante è <paramref name="typeCode" /> e il cui valore è equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-227">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="93c64-228">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-228">-or-</span>
          </span>
          <span data-ttu-id="93c64-229">Riferimento Null (<see langword="Nothing" /> in Visual Basic), se <paramref name="value" /> è <see langword="null" /> e <paramref name="typeCode" /> è <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> o <see cref="F:System.TypeCode.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-229">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-230"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> è un metodo per utilizzo generico di conversione che converte l'oggetto specificato da `value` in un tipo predefinito specificato dal `typeCode`.</span><span class="sxs-lookup"><span data-stu-id="93c64-230"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="93c64-231">Il `value` parametro può essere un oggetto di qualsiasi tipo.</span><span class="sxs-lookup"><span data-stu-id="93c64-231">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="93c64-232">Per la conversione abbia esito positivo, `value` deve implementare il <xref:System.IConvertible> dell'interfaccia, perché il metodo esegue semplicemente il wrapping di una chiamata a un oggetto appropriato <xref:System.IConvertible> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-232">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="93c64-233">Il metodo richiede anche che la conversione di `value` a `typeCode` supportato.</span><span class="sxs-lookup"><span data-stu-id="93c64-233">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="93c64-234">Il <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> metodo non supporta la conversione di `value` a un tipo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="93c64-234">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="93c64-235">Per eseguire questa conversione, chiamare il <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-235">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-236">L'esempio seguente illustra come usare il <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> metodo per modificare un <xref:System.Object> al tipo specificato da di <xref:System.TypeCode> parametro, se possibile.</span><span class="sxs-lookup"><span data-stu-id="93c64-236">The following example illustrates how to use the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method to change an <xref:System.Object> to the type specified by the <xref:System.TypeCode> parameter, if possible.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype_01.cpp#2)]
 [!code-csharp[System.Convert.ChangeType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype01.cs#2)]
 [!code-vb[System.Convert.ChangeType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype01.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-237">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-237">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-238">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-238">-or-</span>
          </span>
          <span data-ttu-id="93c64-239">
            <paramref name="value" /> è <see langword="null" /> e <paramref name="typeCode" /> specifica un tipo di valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-239">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span>
          </span>
          <span data-ttu-id="93c64-240">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-240">-or-</span>
          </span>
          <span data-ttu-id="93c64-241">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-241">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-242">
            <paramref name="value" /> non è in un formato riconosciuto dal tipo <paramref name="typeCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-242">
              <paramref name="value" /> is not in a format recognized by the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-243">
            <paramref name="value" /> rappresenta un numero non compreso nell'intervallo del tipo <paramref name="typeCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-243">
              <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-244">
            <paramref name="typeCode" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-244">
              <paramref name="typeCode" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type, provider As IFormatProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * Type * IFormatProvider -&gt; obj" Usage="System.Convert.ChangeType (value, conversionType, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-245">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-245">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="conversionType">
          <span data-ttu-id="93c64-246">Tipo di oggetto da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-246">The type of object to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-247">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-247">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-248">Restituisce un oggetto del tipo specificato, il cui valore è equivalente all'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-248">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
          <span data-ttu-id="93c64-249">Un parametro fornisce le informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-249">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-250">Oggetto il cui tipo è <paramref name="conversionType" /> e il cui valore è equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-250">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="93c64-251">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-251">-or-</span>
          </span>
          <span data-ttu-id="93c64-252">
            <paramref name="value" />, se gli attributi <see cref="T:System.Type" /> di <paramref name="value" /> e <paramref name="conversionType" /> sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-252">
              <paramref name="value" />, if the <see cref="T:System.Type" /> of <paramref name="value" /> and <paramref name="conversionType" /> are equal.</span>
          </span>
          <span data-ttu-id="93c64-253">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-253">-or-</span>
          </span>
          <span data-ttu-id="93c64-254">Riferimento Null (<see langword="Nothing" /> in Visual Basic), se <paramref name="value" /> è <see langword="null" /> e <paramref name="conversionType" /> non è un tipo di valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-254">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-255"><xref:System.Convert.ChangeType%2A> è un metodo per utilizzo generico di conversione che converte l'oggetto specificato da `value` a `conversionType`.</span><span class="sxs-lookup"><span data-stu-id="93c64-255"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="93c64-256">Il `value` parametro può essere un oggetto di qualsiasi tipo, e `conversionType` può essere anche un <xref:System.Type> oggetto che rappresenta qualsiasi tipo di base o personalizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-256">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="93c64-257">Per la conversione abbia esito positivo, `value` deve implementare il <xref:System.IConvertible> dell'interfaccia, perché il metodo esegue semplicemente il wrapping di una chiamata a un oggetto appropriato <xref:System.IConvertible> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-257">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="93c64-258">Il metodo richiede che la conversione di `value` a `conversionType` supportato.</span><span class="sxs-lookup"><span data-stu-id="93c64-258">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="93c64-259">Il `provider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni di formattazione per la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-259">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="93c64-260">Se e come questo parametro viene utilizzato dipende sottostante <xref:System.IConvertible> implementazione.</span><span class="sxs-lookup"><span data-stu-id="93c64-260">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="93c64-261">Se `value` è un tipo di dati di base, `provider` viene usato solo per le conversioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="93c64-261">If `value` is a base data type, `provider` is used only for the following conversions:</span></span>  
  
-   <span data-ttu-id="93c64-262">Conversione da un numero in una stringa o da una stringa in un numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-262">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="93c64-263">`provider` deve essere un <xref:System.Globalization.CultureInfo> oggetti, una <xref:System.Globalization.NumberFormatInfo> oggetto o una classe personalizzata <xref:System.IFormatProvider> implementazione che restituisce un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-263">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-264">Tuttavia, poiché il <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> metodo esegue la conversione utilizzando l'identificatore di formato "G" impostazione predefinita, il `provider` parametro ha effetto se `value` o il tipo di destinazione è un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-264">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span> <span data-ttu-id="93c64-265">Se `provider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che rappresenta le impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-265">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="93c64-266">Conversione da un <xref:System.DateTime> valore a una stringa o da una stringa in un <xref:System.DateTime> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-266">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="93c64-267">`provider` deve essere un <xref:System.Globalization.CultureInfo> o <xref:System.Globalization.DateTimeFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-267">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="93c64-268">Se `provider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che rappresenta le impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-268">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
 <span data-ttu-id="93c64-269">Se `value` è un tipo definito dall'applicazione, relativi <xref:System.IConvertible> può usare l'implementazione di `provider` parametro.</span><span class="sxs-lookup"><span data-stu-id="93c64-269">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-270">Nell'esempio seguente viene definita una classe `Temperature` che implementa l'interfaccia <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="93c64-270">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#3)]
 [!code-csharp[System.Convert.ChangeType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#3)]
 [!code-vb[System.Convert.ChangeType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#3)]  
  
 <span data-ttu-id="93c64-271">L'esempio seguente crea un'istanza del `Temperature` classi e le chiamate di <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> metodo per convertirlo in tipi numerici di base supportati da .NET Framework e a un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="93c64-271">The following example creates an instance of the `Temperature` class and calls the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method to convert it to the basic numeric types supported by the .NET Framework and to a <xref:System.String>.</span></span> <span data-ttu-id="93c64-272">Viene illustrato che il <xref:System.Convert.ChangeType%2A> metodo esegue il wrapping di una chiamata per il tipo di origine <xref:System.IConvertible> implementazione.</span><span class="sxs-lookup"><span data-stu-id="93c64-272">It illustrates that the <xref:System.Convert.ChangeType%2A> method wraps a call to the source type's <xref:System.IConvertible> implementation.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#4)]
 [!code-csharp[System.Convert.ChangeType#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#4)]
 [!code-vb[System.Convert.ChangeType#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-273">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-273">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-274">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-274">-or-</span>
          </span>
          <span data-ttu-id="93c64-275">
            <paramref name="value" /> è <see langword="null" /> e <paramref name="conversionType" /> è un tipo di valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-275">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span>
          </span>
          <span data-ttu-id="93c64-276">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-276">-or-</span>
          </span>
          <span data-ttu-id="93c64-277">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-277">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-278">
            <paramref name="value" /> non è in un formato <paramref name="conversionType" /> riconosciuto da <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-278">
              <paramref name="value" /> is not in a format for <paramref name="conversionType" /> recognized by <paramref name="provider" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-279">
            <paramref name="value" /> rappresenta un numero non compreso nell'intervallo di <paramref name="conversionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-279">
              <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-280">
            <paramref name="conversionType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-280">
              <paramref name="conversionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="93c64-281">Il <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> metodo consente di convertire un valore di enumerazione a un altro tipo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-281">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert an enumeration value to another type.</span>
            </span>
            <span data-ttu-id="93c64-282">Tuttavia, non può convertire un altro tipo in un valore di enumerazione, anche se il tipo di origine è il tipo sottostante dell'enumerazione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-282">However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</span>
            </span>
            <span data-ttu-id="93c64-283">Per convertire un tipo in un valore di enumerazione, utilizzare un operatore di cast (in c#) o una funzione di conversione (in Visual Basic).</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-283">To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</span>
            </span>
            <span data-ttu-id="93c64-284">L'esempio seguente illustra la conversione da e verso un <c>continente</c> valore di enumerazione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-284">The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.</span>
            </span>
            <span data-ttu-id="93c64-285">[! codice-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [! codice vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-285">[!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span>
            </span>
            <span data-ttu-id="93c64-286">Il <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> metodo consente di convertire un tipo nullable in un altro tipo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-286">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert a nullable type to another type.</span>
            </span>
            <span data-ttu-id="93c64-287">Tuttavia, non può convertire un altro tipo in un valore di un tipo che ammette valori null, anche se <paramref name="conversionType" /> è il tipo sottostante del <see cref="T:System.Nullable`1" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-287">However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.</span>
            </span>
            <span data-ttu-id="93c64-288">Per eseguire la conversione, è possibile usare un operatore di cast (in c#) o una funzione di conversione (in Visual Basic).</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-288">To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</span>
            </span>
            <span data-ttu-id="93c64-289">L'esempio seguente illustra la conversione da e verso un tipo nullable.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-289">The following example illustrates the conversion to and from a nullable type.</span>
            </span>
            <span data-ttu-id="93c64-290">[! codice-csharp[System.Convert.ChangeType#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)] [! codice vb[System.Convert.ChangeType#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="93c64-290">[!code-csharp[System.Convert.ChangeType#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)] [!code-vb[System.Convert.ChangeType#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * TypeCode * IFormatProvider -&gt; obj" Usage="System.Convert.ChangeType (value, typeCode, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-291">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-291">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="typeCode">
          <span data-ttu-id="93c64-292">Tipo di oggetto da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-292">The type of object to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-293">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-293">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-294">Restituisce un oggetto del tipo specificato, il cui valore è equivalente all'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-294">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
          <span data-ttu-id="93c64-295">Un parametro fornisce le informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-295">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-296">Oggetto il cui tipo sottostante è <paramref name="typeCode" /> e il cui valore è equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-296">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="93c64-297">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-297">-or-</span>
          </span>
          <span data-ttu-id="93c64-298">Riferimento Null (<see langword="Nothing" /> in Visual Basic), se <paramref name="value" /> è <see langword="null" /> e <paramref name="typeCode" /> è <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> o <see cref="F:System.TypeCode.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-298">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-299"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> è un metodo per utilizzo generico di conversione che converte l'oggetto specificato da `value` in un tipo predefinito specificato dal `typeCode`.</span><span class="sxs-lookup"><span data-stu-id="93c64-299"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="93c64-300">Il `value` parametro può essere un oggetto di qualsiasi tipo.</span><span class="sxs-lookup"><span data-stu-id="93c64-300">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="93c64-301">Per la conversione abbia esito positivo, `value` deve implementare il <xref:System.IConvertible> dell'interfaccia, perché il metodo esegue semplicemente il wrapping di una chiamata a un oggetto appropriato <xref:System.IConvertible> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-301">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="93c64-302">Il metodo richiede anche che la conversione di `value` a `typeCode` supportato.</span><span class="sxs-lookup"><span data-stu-id="93c64-302">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="93c64-303">Il <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> metodo non supporta la conversione di `value` a un tipo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="93c64-303">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="93c64-304">Per eseguire questa conversione, chiamare il <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-304">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="93c64-305">Il `provider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni di formattazione per la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-305">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="93c64-306">Se e come questo parametro viene utilizzato dipende sottostante <xref:System.IConvertible> implementazione.</span><span class="sxs-lookup"><span data-stu-id="93c64-306">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="93c64-307">Se `value` è un tipo di dati di base, `provider` viene usato solo per le seguenti conversioni.</span><span class="sxs-lookup"><span data-stu-id="93c64-307">If `value` is a base data type, `provider` is used only for the following conversions.</span></span> <span data-ttu-id="93c64-308">Se un `null` <xref:System.IFormatProvider> argomento viene passato a questi metodi, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che rappresenta le impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-308">If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="93c64-309">Conversione da un numero in una stringa o da una stringa in un numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-309">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="93c64-310">`provider` deve essere un <xref:System.Globalization.CultureInfo> oggetti, una <xref:System.Globalization.NumberFormatInfo> oggetto o una classe personalizzata <xref:System.IFormatProvider> implementazione che restituisce un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-310">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-311">Tuttavia, poiché il <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> metodo esegue la conversione utilizzando l'identificatore di formato "G" impostazione predefinita, il `provider` parametro ha effetto se `value` o il tipo di destinazione è un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-311">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span>  
  
-   <span data-ttu-id="93c64-312">Conversione da un <xref:System.DateTime> valore a una stringa o da una stringa in un <xref:System.DateTime> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-312">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="93c64-313">`provider` deve essere un <xref:System.Globalization.CultureInfo> o <xref:System.Globalization.DateTimeFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-313">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span>  
  
 <span data-ttu-id="93c64-314">Se `value` è un tipo definito dall'applicazione, relativi <xref:System.IConvertible> può usare l'implementazione di `provider` parametro.</span><span class="sxs-lookup"><span data-stu-id="93c64-314">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-315">L'esempio seguente definisce un provider di formato personalizzato denominato `InterceptProvider` che indica quando relativi <xref:System.IFormatProvider.GetFormat%2A> metodo viene chiamato e restituisce un <xref:System.Globalization.NumberFormatInfo> per le impostazioni cultura fr-FR e un <xref:System.Globalization.DateTimeFormatInfo> oggetto delle impostazioni cultura en-US.</span><span class="sxs-lookup"><span data-stu-id="93c64-315">The following example defines a custom format provider named `InterceptProvider` that indicates when its <xref:System.IFormatProvider.GetFormat%2A> method is called and returns a <xref:System.Globalization.NumberFormatInfo> for the fr-FR culture and a <xref:System.Globalization.DateTimeFormatInfo> object for the en-US culture.</span></span> <span data-ttu-id="93c64-316">Questo provider di formato viene usato in tutte le chiamate al <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-316">This format provider is used in all calls to the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="93c64-317">L'esempio crea quindi una matrice con un <xref:System.Double> e una <xref:System.DateTime> il valore e vengono effettuate chiamate ripetute a <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> con ogni valore e ogni membro del <xref:System.TypeCode> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="93c64-317">The example then creates an array with a <xref:System.Double> and a <xref:System.DateTime> value and makes repeated calls to <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> with each value and each member of the <xref:System.TypeCode> enumeration.</span></span> <span data-ttu-id="93c64-318">Nell'esempio viene illustrato quando il metodo Usa il <xref:System.IFormatProvider> parametro e viene inoltre illustrato l'utilizzo del `provider` parametro per eseguire operazioni di formattazione dipendenti dalle impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="93c64-318">The example illustrates when the method uses the <xref:System.IFormatProvider> parameter and also illustrates the use of the `provider` parameter to perform culture-sensitive formatting.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype00.cpp#1)]
 [!code-csharp[System.Convert.ChangeType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype00.cs#1)]
 [!code-vb[System.Convert.ChangeType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype00.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-319">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-319">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-320">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-320">-or-</span>
          </span>
          <span data-ttu-id="93c64-321">
            <paramref name="value" /> è <see langword="null" /> e <paramref name="typeCode" /> specifica un tipo di valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-321">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span>
          </span>
          <span data-ttu-id="93c64-322">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-322">-or-</span>
          </span>
          <span data-ttu-id="93c64-323">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-323">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-324">
            <paramref name="value" /> non è in un formato per il tipo <paramref name="typeCode" /> riconosciuto da <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-324">
              <paramref name="value" /> is not in a format for the <paramref name="typeCode" /> type recognized by <paramref name="provider" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-325">
            <paramref name="value" /> rappresenta un numero non compreso nell'intervallo del tipo <paramref name="typeCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-325">
              <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-326">
            <paramref name="typeCode" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-326">
              <paramref name="typeCode" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DBNull">
      <MemberSignature Language="C#" Value="public static readonly object DBNull;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DBNull" />
      <MemberSignature Language="DocId" Value="F:System.Convert.DBNull" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DBNull As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DBNull;" />
      <MemberSignature Language="F#" Value=" staticval mutable DBNull : obj" Usage="System.Convert.DBNull" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-327">Costante che rappresenta una colonna di database senza dati, ovvero un database Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-327">A constant that represents a database column that is absent of data; that is, database null.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-328">Il <xref:System.Convert.DBNull> campo equivale a <xref:System.DBNull.Value?displayProperty=nameWithType>, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="93c64-328">The <xref:System.Convert.DBNull> field is equivalent to <xref:System.DBNull.Value?displayProperty=nameWithType>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Convert.DBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.dbnull/cs/dbnull1.cs#1)]
 [!code-vb[System.Convert.DBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.dbnull/vb/dbnull1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
        <altmember cref="F:System.DBNull.Value" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64CharArray">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64CharArray (char[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64CharArray(char[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64CharArray (inArray As Char(), offset As Integer, length As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64CharArray(cli::array &lt;char&gt; ^ inArray, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member FromBase64CharArray : char[] * int * int -&gt; byte[]" Usage="System.Convert.FromBase64CharArray (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="93c64-329">Matrice di caratteri Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-329">A Unicode character array.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="93c64-330">Posizione all'interno di <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-330">A position within <paramref name="inArray" />.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="93c64-331">Numero di elementi di <paramref name="inArray" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-331">The number of elements in <paramref name="inArray" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-332">Converte un subset di una matrice di caratteri Unicode, in cui sono codificati dati binari come cifre base 64, in una matrice di interi senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-332">Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span>
          </span>
          <span data-ttu-id="93c64-333">I parametri specificano il subset nella matrice di input e il numero di elementi da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-333">Parameters specify the subset in the input array and the number of elements to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-334">Matrice di interi senza segno a 8 bit equivalente agli elementi <paramref name="length" /> in corrispondenza della posizione <paramref name="offset" /> in <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-334">An array of 8-bit unsigned integers equivalent to <paramref name="length" /> elements at position <paramref name="offset" /> in <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-335">`inArray` è composto da cifre base 64, gli spazi vuoti e caratteri di riempimento finali.</span><span class="sxs-lookup"><span data-stu-id="93c64-335">`inArray` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="93c64-336">Le cifre base 64 in ordine crescente da zero sono i caratteri maiuscoli "A" a "Z", caratteri minuscoli "a" a "z", caratteri numerici da "0" a "9" e i simboli "+" e "/".</span><span class="sxs-lookup"><span data-stu-id="93c64-336">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="93c64-337">I caratteri spazi vuoti e i punti di codice esadecimale e i nomi Unicode sono scheda (carattere di tabulazione, u+0009), nuova riga (avanzamento riga, U + 000A), ritorno a capo (ritorno a capo, U+000D) e spazio vuoto (spazio, U+10000 0020).</span><span class="sxs-lookup"><span data-stu-id="93c64-337">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="93c64-338">Un numero arbitrario di spazi vuoti può essere visualizzati `inArray` perché tutti i caratteri spazi vuoti vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="93c64-338">An arbitrary number of white-space characters can appear in `inArray` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="93c64-339">Il carattere non significativo "=", viene usato per la spaziatura interna finale.</span><span class="sxs-lookup"><span data-stu-id="93c64-339">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="93c64-340">Fine del `inArray` può essere costituito da caratteri di riempimento pari a zero, uno o due.</span><span class="sxs-lookup"><span data-stu-id="93c64-340">The end of `inArray` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93c64-341">Il <xref:System.Convert.FromBase64CharArray%2A> metodo è progettato per elaborare una matrice di caratteri singola che contiene tutti i dati da decodificare.</span><span class="sxs-lookup"><span data-stu-id="93c64-341">The <xref:System.Convert.FromBase64CharArray%2A> method is designed to process a single character array that contains all the data to be decoded.</span></span> <span data-ttu-id="93c64-342">Per decodificare i dati di caratteri base 64 da un flusso, utilizzare il <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-342">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-343">Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodo da decodificare i dati UUencode (base-64) e salvarlo come output binario.</span><span class="sxs-lookup"><span data-stu-id="93c64-343">The following example demonstrates the use of the <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to decode UUencoded (base-64) data and save it as binary output.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#3)]
 [!code-csharp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#3)]
 [!code-vb[System.Convert UUEncodeDecode functions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#3)]  
  
 <span data-ttu-id="93c64-344">Nell'esempio seguente viene illustrato il <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> e <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodi.</span><span class="sxs-lookup"><span data-stu-id="93c64-344">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> and <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> methods.</span></span> <span data-ttu-id="93c64-345">L'input è suddiviso in gruppi di tre byte (24 bit) ogni.</span><span class="sxs-lookup"><span data-stu-id="93c64-345">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="93c64-346">Di conseguenza, ogni gruppo è costituito da quattro numeri 6 bit dove ogni numero compreso tra 0 a 63 decimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-346">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="93c64-347">In questo esempio sono presenti gruppi di 3 byte 85 con un byte rimanenti.</span><span class="sxs-lookup"><span data-stu-id="93c64-347">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="93c64-348">Il primo gruppo è costituito dai valori esadecimali 00 e 01, 02, ovvero quattro valori di bit 6 uguali a 0, 0, 4 e 2 decimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-348">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="93c64-349">Questi quattro valori corrispondano per le cifre base 64 "A", "A", "E" e "C", all'inizio dell'output.</span><span class="sxs-lookup"><span data-stu-id="93c64-349">Those four values correspond to the base-64 digits, "A", "A", "E", and "C", at the beginning of the output.</span></span>  
  
 <span data-ttu-id="93c64-350">Se non esiste un numero integrale di gruppi di 3 byte, i byte rimanenti vengono completati con zeri in modo da formare un gruppo completo.</span><span class="sxs-lookup"><span data-stu-id="93c64-350">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="93c64-351">In questo esempio, il valore dell'ultimo byte è esadecimale FF.</span><span class="sxs-lookup"><span data-stu-id="93c64-351">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="93c64-352">I primi 6 bit sono uguali a 63 decimale, che corrisponde alla cifra base64 "/" alla fine dell'output, e il bit 2 successivi vengono riempite con zeri per produrre 48 decimale, che corrisponde alla cifra Base64, "w".</span><span class="sxs-lookup"><span data-stu-id="93c64-352">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="93c64-353">Gli ultimi due valori di bit 6 sono la spaziatura interna e corrispondono a non significativo carattere di spaziatura interna "=".</span><span class="sxs-lookup"><span data-stu-id="93c64-353">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-354">
            <paramref name="inArray" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-354">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-355">
            <paramref name="offset" /> o <paramref name="length" /> è minore di 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-355">
              <paramref name="offset" /> or <paramref name="length" /> is less than 0.</span>
          </span>
          <span data-ttu-id="93c64-356">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-356">-or-</span>
          </span>
          <span data-ttu-id="93c64-357">La somma di <paramref name="offset" /> e <paramref name="length" /> indica una posizione non all'interno di <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-357">
              <paramref name="offset" /> plus <paramref name="length" /> indicates a position not within <paramref name="inArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-358">La lunghezza di <paramref name="inArray" />, esclusi i caratteri di spazio vuoto, non è zero o un multiplo di 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-358">The length of <paramref name="inArray" />, ignoring white-space characters, is not zero or a multiple of 4.</span>
          </span>
          <span data-ttu-id="93c64-359">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-359">-or-</span>
          </span>
          <span data-ttu-id="93c64-360">Il formato di <paramref name="inArray" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-360">The format of <paramref name="inArray" /> is invalid.</span>
          </span>
          <span data-ttu-id="93c64-361">
            <paramref name="inArray" /> contiene un carattere non Base 64, più di due caratteri di riempimento o uno spazio non vuoto tra i caratteri di riempimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-361">
              <paramref name="inArray" /> contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64String">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64String (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64String(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64String(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64String (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64String(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member FromBase64String : string -&gt; byte[]" Usage="System.Convert.FromBase64String s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="93c64-362">Stringa da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-362">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-363">Converte la stringa specificata, che codifica dati binari come cifre base 64, in una matrice di interi senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-363">Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-364">Matrice di interi senza segno a 8 bit equivalente a <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-364">An array of 8-bit unsigned integers that is equivalent to <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-365">`s` è composto da cifre base 64, gli spazi vuoti e caratteri di riempimento finali.</span><span class="sxs-lookup"><span data-stu-id="93c64-365">`s` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="93c64-366">Le cifre base 64 in ordine crescente da zero sono i caratteri maiuscoli "A" a "Z", caratteri minuscoli "a" a "z", caratteri numerici da "0" a "9" e i simboli "+" e "/".</span><span class="sxs-lookup"><span data-stu-id="93c64-366">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="93c64-367">I caratteri spazi vuoti e i punti di codice esadecimale e i nomi Unicode sono scheda (carattere di tabulazione, u+0009), nuova riga (avanzamento riga, U + 000A), ritorno a capo (ritorno a capo, U+000D) e spazio vuoto (spazio, U+10000 0020).</span><span class="sxs-lookup"><span data-stu-id="93c64-367">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="93c64-368">Un numero arbitrario di spazi vuoti può essere visualizzati `s` perché tutti i caratteri spazi vuoti vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="93c64-368">An arbitrary number of white-space characters can appear in `s` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="93c64-369">Il carattere non significativo "=", viene usato per la spaziatura interna finale.</span><span class="sxs-lookup"><span data-stu-id="93c64-369">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="93c64-370">Fine del `s` può essere costituito da caratteri di riempimento pari a zero, uno o due.</span><span class="sxs-lookup"><span data-stu-id="93c64-370">The end of `s` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93c64-371">Il <xref:System.Convert.FromBase64String%2A> metodo è progettato per elaborare una singola stringa che contiene tutti i dati da decodificare.</span><span class="sxs-lookup"><span data-stu-id="93c64-371">The <xref:System.Convert.FromBase64String%2A> method is designed to process a single string that contains all the data to be decoded.</span></span> <span data-ttu-id="93c64-372">Per decodificare i dati di caratteri base 64 da un flusso, utilizzare il <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-372">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-373">L'esempio seguente usa il <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> metodo per convertire una matrice di byte in una stringa UUEncode (base-64) e quindi chiama il <xref:System.Convert.FromBase64String%28System.String%29> metodo per ripristinare la matrice di byte originale.</span><span class="sxs-lookup"><span data-stu-id="93c64-373">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="93c64-374">Di seguito è riportato un esempio più complesso che crea una matrice di 20 elementi di interi a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-374">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="93c64-375">Quindi, utilizza il <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> metodo per convertire ogni elemento in una matrice di byte, che viene archiviato nella posizione appropriata in un buffer chiamando il <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-375">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-376">Questo buffer viene quindi passato al <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> metodo per creare una stringa UUEncode (base-64).</span><span class="sxs-lookup"><span data-stu-id="93c64-376">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="93c64-377">Chiama poi il <xref:System.Convert.FromBase64String%28System.String%29> metodo da decodificare la stringa UUEncode e chiama il <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> metodo per convertire ogni set di quattro byte (le dimensioni di un intero a 32 bit) in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-377">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="93c64-378">L'output dell'esempio mostra che la matrice originale è stata ripristinata.</span><span class="sxs-lookup"><span data-stu-id="93c64-378">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-379">
            <paramref name="s" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-379">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-380">La lunghezza di <paramref name="s" />, esclusi i caratteri di spazio vuoto, non è zero o un multiplo di 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-380">The length of <paramref name="s" />, ignoring white-space characters, is not zero or a multiple of 4.</span>
          </span>
          <span data-ttu-id="93c64-381">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-381">-or-</span>
          </span>
          <span data-ttu-id="93c64-382">Il formato di <paramref name="s" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-382">The format of <paramref name="s" /> is invalid.</span>
          </span>
          <span data-ttu-id="93c64-383">
            <paramref name="s" /> contiene un carattere non Base 64, più di due caratteri di riempimento o uno spazio non vuoto tra i caratteri di riempimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-383">
              <paramref name="s" /> contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Base64-1c3d9c03">
          <span data-ttu-id="93c64-384">Esempio: .NET Framework 4 Base64 convertitore</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-384">Sample: .NET Framework 4 Base64 Converter</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode GetTypeCode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode GetTypeCode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.GetTypeCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeCode (value As Object) As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode GetTypeCode(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetTypeCode : obj -&gt; TypeCode" Usage="System.Convert.GetTypeCode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-385">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-385">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-386">Restituisce l'attributo <see cref="T:System.TypeCode" /> dell'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-386">Returns the <see cref="T:System.TypeCode" /> for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-387">Oggetto <see cref="T:System.TypeCode" /> di <paramref name="value" /> oppure <see cref="F:System.TypeCode.Empty" /> se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-387">The <see cref="T:System.TypeCode" /> for <paramref name="value" />, or <see cref="F:System.TypeCode.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDBNull(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDBNull (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="System.Convert.IsDBNull value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-388">Oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-388">An object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-389">Indica se l'oggetto specificato è di tipo <see cref="T:System.DBNull" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-389">Returns an indication whether the specified object is of type <see cref="T:System.DBNull" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-390">
            <see langword="true" /> se <paramref name="value" /> è di tipo <see cref="T:System.DBNull" /> ; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-390">
              <see langword="true" /> if <paramref name="value" /> is of type <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-391">Il <xref:System.Convert.IsDBNull%2A> metodo verifica se il `value` parametro è uguale a <xref:System.DBNull.Value?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-391">The <xref:System.Convert.IsDBNull%2A> method tests whether the `value` parameter is equal to <xref:System.DBNull.Value?displayProperty=nameWithType>.</span></span> <span data-ttu-id="93c64-392">È equivalente al codice seguente:</span><span class="sxs-lookup"><span data-stu-id="93c64-392">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#1)]
 [!code-vb[System.Convert.IsDBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="93c64-393"><xref:System.DBNull.Value?displayProperty=nameWithType> Consente di indicare un valore che non è presente.</span><span class="sxs-lookup"><span data-stu-id="93c64-393"><xref:System.DBNull.Value?displayProperty=nameWithType> is used to indicate a value that is missing.</span></span> <span data-ttu-id="93c64-394">Non è equivalente a `null` o a <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-394">It is not equivalent to `null` or to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="93c64-395">Pertanto, ad esempio di codice `Convert.IsDBNull(null)` in c# o `Convert.IsDBNull(Nothing)` in Visual Basic restituisce`false`.</span><span class="sxs-lookup"><span data-stu-id="93c64-395">Therefore, code such as `Convert.IsDBNull(null)` in C# or `Convert.IsDBNull(Nothing)` in Visual Basic returns`false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-396">L'esempio seguente usa un <xref:System.Data.SqlClient.SqlDataReader> oggetto per recuperare i dati dei sondaggi da un database.</span><span class="sxs-lookup"><span data-stu-id="93c64-396">The following example uses a <xref:System.Data.SqlClient.SqlDataReader> object to retrieve survey data from a database.</span></span> <span data-ttu-id="93c64-397">Assegna i valori di campo di ogni riga in una matrice e quindi passa ogni elemento di matrice al <xref:System.Convert.IsDBNull%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-397">It assigns each row's field values to an array, and then passes each array element to the <xref:System.Convert.IsDBNull%2A> method.</span></span> <span data-ttu-id="93c64-398">Se il metodo restituisce `true`, nell'esempio viene assegnato la stringa "NA" per l'elemento della matrice.</span><span class="sxs-lookup"><span data-stu-id="93c64-398">If the method returns `true`, the example assigns the string "NA" to the array element.</span></span> <span data-ttu-id="93c64-399">La matrice viene quindi aggiunto al <xref:System.Windows.Forms.DataGridView.Rows%2A> raccolta di un <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> controllo.</span><span class="sxs-lookup"><span data-stu-id="93c64-399">The array is then added to the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection of a <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> control.</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#2)]
 [!code-vb[System.Convert.IsDBNull#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64CharArray">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-400">Converte un subset di una matrice di interi senza segno a 8 bit in un subset equivalente di una matrice di caratteri Unicode codificati con cifre base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-400">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
        </summary>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut);" />
      <MemberSignature Language="F#" Value="static member ToBase64CharArray : byte[] * int * int * char[] * int -&gt; int" Usage="System.Convert.ToBase64CharArray (inArray, offsetIn, length, outArray, offsetOut)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offsetIn" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outArray" Type="System.Char[]" />
        <Parameter Name="offsetOut" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="93c64-401">Matrice di input di interi senza segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-401">An input array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offsetIn">
          <span data-ttu-id="93c64-402">Posizione all'interno di <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-402">A position within <paramref name="inArray" />.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="93c64-403">Numero di elementi di <paramref name="inArray" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-403">The number of elements of <paramref name="inArray" /> to convert.</span>
          </span>
        </param>
        <param name="outArray">
          <span data-ttu-id="93c64-404">Matrice di output di caratteri Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-404">An output array of Unicode characters.</span>
          </span>
        </param>
        <param name="offsetOut">
          <span data-ttu-id="93c64-405">Posizione all'interno di <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-405">A position within <paramref name="outArray" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-406">Converte un subset di una matrice di interi senza segno a 8 bit in un subset equivalente di una matrice di caratteri Unicode codificati con cifre base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-406">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="93c64-407">I parametri specificano i sottoinsiemi come offset nelle matrici di input e output e il numero di elementi nella matrice di input da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-407">Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-408">Un intero con segno a 32 bit contenente il numero di byte in <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-408">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-409">Il subset di `length` elementi del `inArray` a partire dalla posizione `offsetIn`viene considerato come un valore numerico e convertito in un subset di elementi nel `outArray` a partire dalla posizione `offsetOut`.</span><span class="sxs-lookup"><span data-stu-id="93c64-409">The subset of `length` elements of `inArray` starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in `outArray` starting at position `offsetOut`.</span></span> <span data-ttu-id="93c64-410">Il valore restituito indica il numero di elementi convertiti in `outArray`.</span><span class="sxs-lookup"><span data-stu-id="93c64-410">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="93c64-411">Il subset di `outArray` costituito dalle cifre base 64.</span><span class="sxs-lookup"><span data-stu-id="93c64-411">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="93c64-412">Le cifre base 64 in ordine crescente da zero sono i caratteri maiuscoli "A" a "Z", i caratteri minuscoli "a" a "z", i numeri da "0" e "9" e i simboli "+" e "/".</span><span class="sxs-lookup"><span data-stu-id="93c64-412">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="93c64-413">Il carattere non significativo "=", viene usato per la spaziatura interna finale.</span><span class="sxs-lookup"><span data-stu-id="93c64-413">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="93c64-414">Il `offset` e `length` i parametri sono numeri con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-414">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="93c64-415">Il `offsetIn` e `offsetOut` i parametri sono le posizioni di matrice in base zero.</span><span class="sxs-lookup"><span data-stu-id="93c64-415">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93c64-416">Il <xref:System.Convert.ToBase64CharArray%2A> metodo è progettato per elaborare una matrice a singolo byte che contiene tutti i dati da codificare.</span><span class="sxs-lookup"><span data-stu-id="93c64-416">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="93c64-417">Per creare una matrice di caratteri base 64 da un flusso di byte, utilizzare il <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-417">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-418">Nell'esempio seguente viene illustrato l'utilizzo di <xref:System.Convert.ToBase64CharArray%2A> metodo UUencode (codifica base 64) un flusso binario, quindi Salva la codifica in un file.</span><span class="sxs-lookup"><span data-stu-id="93c64-418">The following example demonstrates using the <xref:System.Convert.ToBase64CharArray%2A> method to UUencode (encode in base 64) a binary stream, then save the encoding to a file.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#2)]
 [!code-csharp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#2)]
 [!code-vb[System.Convert UUEncodeDecode functions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-419">
            <paramref name="inArray" /> o <paramref name="outArray" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-419">
              <paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-420">
            <paramref name="offsetIn" />, <paramref name="offsetOut" /> o <paramref name="length" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-420">
              <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="93c64-421">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-421">-or-</span>
          </span>
          <span data-ttu-id="93c64-422">La somma di <paramref name="offsetIn" /> e <paramref name="length" /> è maggiore della lunghezza di <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-422">
              <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
          <span data-ttu-id="93c64-423">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-423">-or-</span>
          </span>
          <span data-ttu-id="93c64-424">La somma di <paramref name="offsetOut" /> e del numero di elementi da restituire è maggiore della lunghezza di <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-424">
              <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer, options As Base64FormattingOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64CharArray : byte[] * int * int * char[] * int * Base64FormattingOptions -&gt; int" Usage="System.Convert.ToBase64CharArray (inArray, offsetIn, length, outArray, offsetOut, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offsetIn" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outArray" Type="System.Char[]" />
        <Parameter Name="offsetOut" Type="System.Int32" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="93c64-425">Matrice di input di interi senza segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-425">An input array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offsetIn">
          <span data-ttu-id="93c64-426">Posizione all'interno di <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-426">A position within <paramref name="inArray" />.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="93c64-427">Numero di elementi di <paramref name="inArray" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-427">The number of elements of <paramref name="inArray" /> to convert.</span>
          </span>
        </param>
        <param name="outArray">
          <span data-ttu-id="93c64-428">Matrice di output di caratteri Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-428">An output array of Unicode characters.</span>
          </span>
        </param>
        <param name="offsetOut">
          <span data-ttu-id="93c64-429">Posizione all'interno di <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-429">A position within <paramref name="outArray" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="93c64-430">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> per inserire un'interruzione di riga ogni 76 caratteri o <see cref="F:System.Base64FormattingOptions.None" /> per non inserire le interruzioni di riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-430">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-431">Converte un subset di una matrice di interi senza segno a 8 bit in un subset equivalente di una matrice di caratteri Unicode codificati con cifre base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-431">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="93c64-432">I parametri specificano i sottoinsiemi come offset nelle matrici di input e output, il numero di elementi nella matrice di input da convertire e se vengono inserite interruzioni di riga nella matrice di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-432">Parameters specify the subsets as offsets in the input and output arrays, the number of elements in the input array to convert, and whether line breaks are inserted in the output array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-433">Un intero con segno a 32 bit contenente il numero di byte in <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-433">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-434">Il subset di `length` elementi del `inArray` parametro a partire dalla posizione `offsetIn`viene considerato come un valore numerico e convertito in un subset di elementi nel `outArray` parametro a partire dalla posizione `offsetOut`.</span><span class="sxs-lookup"><span data-stu-id="93c64-434">The subset of `length` elements of the `inArray` parameter starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in the `outArray` parameter starting at position `offsetOut`.</span></span> <span data-ttu-id="93c64-435">Il valore restituito indica il numero di elementi convertiti in `outArray`.</span><span class="sxs-lookup"><span data-stu-id="93c64-435">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="93c64-436">Il subset di `outArray` costituito dalle cifre base 64.</span><span class="sxs-lookup"><span data-stu-id="93c64-436">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="93c64-437">Le cifre base 64 in ordine crescente da zero sono i caratteri maiuscoli "A" a "Z", i caratteri minuscoli "a" a "z", i numeri da "0" e "9" e i simboli "+" e "/".</span><span class="sxs-lookup"><span data-stu-id="93c64-437">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="93c64-438">Il carattere addietro "=" viene usato per la spaziatura interna finale.</span><span class="sxs-lookup"><span data-stu-id="93c64-438">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="93c64-439">Il `offset` e `length` i parametri sono numeri con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-439">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="93c64-440">Il `offsetIn` e `offsetOut` i parametri sono le posizioni di matrice in base zero.</span><span class="sxs-lookup"><span data-stu-id="93c64-440">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93c64-441">Il <xref:System.Convert.ToBase64CharArray%2A> metodo è progettato per elaborare una matrice a singolo byte che contiene tutti i dati da codificare.</span><span class="sxs-lookup"><span data-stu-id="93c64-441">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="93c64-442">Per creare una matrice di caratteri base 64 da un flusso di byte, utilizzare il <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-442">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="93c64-443">Se il `options` parametro è impostato su <xref:System.Base64FormattingOptions.InsertLineBreaks> e l'output della conversione è più di 76 caratteri, viene inserita un'interruzione di riga ogni 76 caratteri.</span><span class="sxs-lookup"><span data-stu-id="93c64-443">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="93c64-444">Un'interruzione di riga viene definita come un ritorno a capo (U+000D) seguito da una riga carattere di avanzamento (U + 000A).</span><span class="sxs-lookup"><span data-stu-id="93c64-444">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="93c64-445">Per altre informazioni, vedere l'argomento del documento RFC 2045 "Multipurpose Internet Mail Extensions", all'indirizzo [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="93c64-445">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-446">Nell'esempio seguente viene illustrato il <xref:System.Convert.ToBase64CharArray%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-446">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%2A> method.</span></span> <span data-ttu-id="93c64-447">L'input è suddiviso in gruppi di tre byte (24 bit) ogni.</span><span class="sxs-lookup"><span data-stu-id="93c64-447">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="93c64-448">Di conseguenza, ogni gruppo è costituito da quattro numeri 6 bit dove ogni numero compreso tra 0 a 63 decimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-448">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="93c64-449">In questo esempio sono presenti gruppi di 3 byte 85 con un byte rimanenti.</span><span class="sxs-lookup"><span data-stu-id="93c64-449">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="93c64-450">Il primo gruppo è costituito dai valori esadecimali 00 e 01, 02, ovvero quattro valori di bit 6 uguali a 0, 0, 4 e 2 decimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-450">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="93c64-451">Questi quattro valori corrispondano per le cifre base 64 "A", "A", "E" e "C" all'inizio dell'output.</span><span class="sxs-lookup"><span data-stu-id="93c64-451">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="93c64-452">Se non esiste un numero integrale di gruppi di 3 byte, i byte rimanenti vengono completati con zeri in modo da formare un gruppo completo.</span><span class="sxs-lookup"><span data-stu-id="93c64-452">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="93c64-453">In questo esempio, il valore dell'ultimo byte è esadecimale FF.</span><span class="sxs-lookup"><span data-stu-id="93c64-453">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="93c64-454">I primi 6 bit sono uguali a 63 decimale, che corrisponde alla cifra base64 "/" alla fine dell'output, e il bit 2 successivi vengono riempite con zeri per produrre 48 decimale, che corrisponde alla cifra Base64, "w".</span><span class="sxs-lookup"><span data-stu-id="93c64-454">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="93c64-455">Gli ultimi due valori di bit 6 sono la spaziatura interna e corrispondono a non significativo carattere di spaziatura interna "=".</span><span class="sxs-lookup"><span data-stu-id="93c64-455">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-456">
            <paramref name="inArray" /> o <paramref name="outArray" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-456">
              <paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-457">
            <paramref name="offsetIn" />, <paramref name="offsetOut" /> o <paramref name="length" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-457">
              <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="93c64-458">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-458">-or-</span>
          </span>
          <span data-ttu-id="93c64-459">La somma di <paramref name="offsetIn" /> e <paramref name="length" /> è maggiore della lunghezza di <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-459">
              <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
          <span data-ttu-id="93c64-460">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-460">-or-</span>
          </span>
          <span data-ttu-id="93c64-461">La somma di <paramref name="offsetOut" /> e del numero di elementi da restituire è maggiore della lunghezza di <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-461">
              <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-462">
            <paramref name="options" /> non è un valore valido di <see cref="T:System.Base64FormattingOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-462">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64String">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-463">Converte il valore di una matrice di interi senza segno a 8 bit nella relativa rappresentazione di stringa equivalente codificata con cifre base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-463">Converts the value of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
        </summary>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] -&gt; string" Usage="System.Convert.ToBase64String inArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="93c64-464">Matrice di interi senza segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-464">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-465">Converte una matrice di interi senza segno a 8 bit nella relativa rappresentazione di stringa equivalente codificata con cifre base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-465">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-466">Rappresentazione di stringa, in base 64, del contenuto di <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-466">The string representation, in base 64, of the contents of <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-467">Gli elementi di `inArray` viene considerato come un valore numerico e convertita in una rappresentazione di stringa codificata con cifre base 64.</span><span class="sxs-lookup"><span data-stu-id="93c64-467">The elements of `inArray` are taken as a numeric value and converted to a string representation that is encoded with base-64 digits.</span></span>  
  
 <span data-ttu-id="93c64-468">Le cifre base 64 in ordine crescente da zero sono i caratteri maiuscoli "A" a "Z", i caratteri minuscoli "a" a "z", i numeri da "0" e "9" e i simboli "+" e "/".</span><span class="sxs-lookup"><span data-stu-id="93c64-468">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="93c64-469">Il carattere non significativo "=", viene usato per la spaziatura interna finale.</span><span class="sxs-lookup"><span data-stu-id="93c64-469">The valueless character, "=", is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93c64-470">Il <xref:System.Convert.ToBase64String%2A> metodo è progettato per elaborare una matrice a singolo byte che contiene tutti i dati da codificare.</span><span class="sxs-lookup"><span data-stu-id="93c64-470">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="93c64-471">Per codificare i dati da un flusso, usare il <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-471">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="93c64-472">In genere, il <xref:System.Convert.ToBase64String%2A> metodo non è utilizzato per eseguire il round trip un UUEncode (con codificata base 64) stringa.</span><span class="sxs-lookup"><span data-stu-id="93c64-472">Ordinarily, the <xref:System.Convert.ToBase64String%2A> method is not used to round-trip a  UUEncoded (base-64 encoded) string.</span></span>  <span data-ttu-id="93c64-473">Vale a dire, se si decodifica una stringa chiamando il <xref:System.Convert.FromBase64String%2A> (metodo), quindi codificare la matrice di byte restituita chiamando il <xref:System.Convert.ToBase64String%2A> metodo, la stringa risultante non useranno necessariamente identica alla stringa originale.</span><span class="sxs-lookup"><span data-stu-id="93c64-473">That is, if you decode a string by calling the <xref:System.Convert.FromBase64String%2A> method, then encode the returned byte array by calling the <xref:System.Convert.ToBase64String%2A> method, the resulting string will not necessarily be identical to the original string.</span></span> <span data-ttu-id="93c64-474">La stringa di round trip solo se la stringa originale è una stringa con codifica base 64 valida.</span><span class="sxs-lookup"><span data-stu-id="93c64-474">The string will round-trip only if the original string is a valid base-64 encoded string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-475">L'esempio seguente usa il <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> metodo per convertire una matrice di byte in una stringa UUEncode (base-64) e quindi chiama il <xref:System.Convert.FromBase64String%28System.String%29> metodo per ripristinare la matrice di byte originale.</span><span class="sxs-lookup"><span data-stu-id="93c64-475">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="93c64-476">Di seguito è riportato un esempio più complesso che crea una matrice di 20 elementi di interi a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-476">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="93c64-477">Quindi, utilizza il <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> metodo per convertire ogni elemento in una matrice di byte, che viene archiviato nella posizione appropriata in un buffer chiamando il <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-477">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-478">Questo buffer viene quindi passato al <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> metodo per creare una stringa UUEncode (base-64).</span><span class="sxs-lookup"><span data-stu-id="93c64-478">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="93c64-479">Chiama poi il <xref:System.Convert.FromBase64String%28System.String%29> metodo da decodificare la stringa UUEncode e chiama il <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> metodo per convertire ogni set di quattro byte (le dimensioni di un intero a 32 bit) in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-479">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="93c64-480">L'output dell'esempio mostra che la matrice originale è stata ripristinata.</span><span class="sxs-lookup"><span data-stu-id="93c64-480">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-481">
            <paramref name="inArray" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-481">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (inArray, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="93c64-482">Matrice di interi senza segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-482">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="93c64-483">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> per inserire un'interruzione di riga ogni 76 caratteri o <see cref="F:System.Base64FormattingOptions.None" /> per non inserire le interruzioni di riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-483">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-484">Converte una matrice di interi senza segno a 8 bit nella relativa rappresentazione di stringa equivalente codificata con cifre base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-484">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="93c64-485">Un parametro specifica se inserire interruzioni di riga nel valore restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-485">A parameter specifies whether to insert line breaks in the return value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-486">Rappresentazione di stringa in base 64 degli elementi di <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-486">The string representation in base 64 of the elements in <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-487">Gli elementi del `inArray` parametro viene considerato come un valore numerico e convertito in una rappresentazione di stringa in base 64.</span><span class="sxs-lookup"><span data-stu-id="93c64-487">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="93c64-488">Le cifre base 64 in ordine crescente da zero sono i caratteri maiuscoli "A" a "Z", i caratteri minuscoli "a" a "z", i numeri da "0" e "9" e i simboli "+" e "/".</span><span class="sxs-lookup"><span data-stu-id="93c64-488">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="93c64-489">Il carattere addietro "=" viene usato per la spaziatura interna finale.</span><span class="sxs-lookup"><span data-stu-id="93c64-489">The valueless character "=" is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93c64-490">Il <xref:System.Convert.ToBase64String%2A> metodo è progettato per elaborare una matrice a singolo byte che contiene tutti i dati da codificare.</span><span class="sxs-lookup"><span data-stu-id="93c64-490">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="93c64-491">Per codificare i dati da un flusso, usare il <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-491">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="93c64-492">Se il `options` parametro è impostato su <xref:System.Base64FormattingOptions.InsertLineBreaks> e l'output della conversione è più di 76 caratteri, viene inserita un'interruzione di riga ogni 76 caratteri.</span><span class="sxs-lookup"><span data-stu-id="93c64-492">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="93c64-493">Un'interruzione di riga viene definita come un ritorno a capo (U+000D) seguito da una riga carattere di avanzamento (U + 000A).</span><span class="sxs-lookup"><span data-stu-id="93c64-493">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="93c64-494">Poiché le interruzioni di riga sono considerate caratteri di spazio in base 64 di codifica, vengono ignorati quando la conversione di una base 64 in una stringa in una matrice di byte codificata.</span><span class="sxs-lookup"><span data-stu-id="93c64-494">Because line breaks are considered white-space characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</span></span> <span data-ttu-id="93c64-495">Le interruzioni di riga sono semplicemente utile quando si visualizza la stringa codificata a un controllo o un dispositivo, ad esempio una finestra della console.</span><span class="sxs-lookup"><span data-stu-id="93c64-495">The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</span></span> <span data-ttu-id="93c64-496">Per altre informazioni, vedere l'argomento del documento RFC 2045 "Multipurpose Internet Mail Extensions", all'indirizzo [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="93c64-496">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-497">L'esempio seguente chiama il <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> con un <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType> interruzioni di argomento per inserire una riga nella stringa di prodotti dalla codifica una matrice di byte di 100-elemento.</span><span class="sxs-lookup"><span data-stu-id="93c64-497">The following example calls the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> with a <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType> argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 <span data-ttu-id="93c64-498">Come illustrato nell'esempio, l'output di <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> ha esito positivo per il ripristino della matrice di byte originale; i caratteri di interruzione di riga vengono ignorati durante la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-498">As the output from the example shows, the <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-499">
            <paramref name="inArray" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-499">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-500">
            <paramref name="options" /> non è un valore valido di <see cref="T:System.Base64FormattingOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-500">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (ReadOnlySpan&lt;byte&gt; bytes, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.ReadOnlySpan{System.Byte},System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (bytes As ReadOnlySpan(Of Byte), Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As String" />
      <MemberSignature Language="F#" Value="static member ToBase64String : ReadOnlySpan&lt;byte&gt; * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (bytes, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * int * int -&gt; string" Usage="System.Convert.ToBase64String (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="93c64-501">Matrice di interi senza segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-501">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="93c64-502">Offset in <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-502">An offset in <paramref name="inArray" />.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="93c64-503">Numero di elementi di <paramref name="inArray" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-503">The number of elements of <paramref name="inArray" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-504">Converte un subset di una matrice di interi senza segno a 8 bit nella relativa rappresentazione di stringa equivalente codificata con cifre base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-504">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="93c64-505">I parametri specificano il subset come offset nella matrice di input e il numero di elementi nella matrice da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-505">Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-506">Rappresentazione di stringa in base 64 di elementi <paramref name="length" /> di <paramref name="inArray" />, a partire dalla posizione <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-506">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-507">Gli elementi di `inArray` viene considerato come un valore numerico e convertito in una rappresentazione di stringa in base 64.</span><span class="sxs-lookup"><span data-stu-id="93c64-507">The elements of `inArray` are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="93c64-508">Le cifre base 64 in ordine crescente da zero sono i caratteri maiuscoli "A" a "Z", i caratteri minuscoli "a" a "z", i numeri da "0" e "9" e i simboli "+" e "/".</span><span class="sxs-lookup"><span data-stu-id="93c64-508">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="93c64-509">Il carattere non significativo "=", viene usato per la spaziatura interna finale.</span><span class="sxs-lookup"><span data-stu-id="93c64-509">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="93c64-510">Il `offset` e `length` i parametri sono numeri con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-510">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="93c64-511">Il `offset` in base zero.</span><span class="sxs-lookup"><span data-stu-id="93c64-511">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93c64-512">Il <xref:System.Convert.ToBase64String%2A> metodo è progettato per elaborare una matrice a singolo byte che contiene tutti i dati da codificare.</span><span class="sxs-lookup"><span data-stu-id="93c64-512">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="93c64-513">Per codificare i dati da un flusso, usare il <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-513">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-514">
            <paramref name="inArray" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-514">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-515">
            <paramref name="offset" /> o <paramref name="length" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-515">
              <paramref name="offset" /> or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="93c64-516">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-516">-or-</span>
          </span>
          <span data-ttu-id="93c64-517">La somma di <paramref name="offset" /> e <paramref name="length" /> è maggiore della lunghezza di <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-517">
              <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Base64-1c3d9c03">
          <span data-ttu-id="93c64-518">Esempio: .NET Framework 4 Base64 convertitore</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-518">Sample: .NET Framework 4 Base64 Converter</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer, options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * int * int * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (inArray, offset, length, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="93c64-519">Matrice di interi senza segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-519">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="93c64-520">Offset in <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-520">An offset in <paramref name="inArray" />.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="93c64-521">Numero di elementi di <paramref name="inArray" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-521">The number of elements of <paramref name="inArray" /> to convert.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="93c64-522">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> per inserire un'interruzione di riga ogni 76 caratteri o <see cref="F:System.Base64FormattingOptions.None" /> per non inserire le interruzioni di riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-522">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-523">Converte un subset di una matrice di interi senza segno a 8 bit nella relativa rappresentazione di stringa equivalente codificata con cifre base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-523">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="93c64-524">I parametri specificano il subset come offset nella matrice di input, il numero di elementi nella matrice da convertire e se inserire interruzioni di riga nel valore restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-524">Parameters specify the subset as an offset in the input array, the number of elements in the array to convert, and whether to insert line breaks in the return value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-525">Rappresentazione di stringa in base 64 di elementi <paramref name="length" /> di <paramref name="inArray" />, a partire dalla posizione <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-525">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-526">Gli elementi del `inArray` parametro viene considerato come un valore numerico e convertito in una rappresentazione di stringa in base 64.</span><span class="sxs-lookup"><span data-stu-id="93c64-526">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="93c64-527">Le cifre base 64 in ordine crescente da zero sono i caratteri maiuscoli "A" a "Z", i caratteri minuscoli "a" a "z", i numeri da "0" e "9" e i simboli "+" e "/".</span><span class="sxs-lookup"><span data-stu-id="93c64-527">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="93c64-528">Il carattere addietro "=" viene usato per la spaziatura interna finale.</span><span class="sxs-lookup"><span data-stu-id="93c64-528">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="93c64-529">Il `offset` e `length` i parametri sono numeri con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-529">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="93c64-530">Il `offset` in base zero.</span><span class="sxs-lookup"><span data-stu-id="93c64-530">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93c64-531">Il <xref:System.Convert.ToBase64String%2A> metodo è progettato per elaborare una matrice a singolo byte che contiene tutti i dati da codificare.</span><span class="sxs-lookup"><span data-stu-id="93c64-531">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="93c64-532">Per codificare i dati da un flusso, usare il <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-532">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="93c64-533">Se il `options` parametro è impostato su <xref:System.Base64FormattingOptions.InsertLineBreaks> e l'output della conversione è più di 76 caratteri, viene inserita un'interruzione di riga ogni 76 caratteri.</span><span class="sxs-lookup"><span data-stu-id="93c64-533">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="93c64-534">Un'interruzione di riga viene definita come un ritorno a capo (U+000D) seguito da una riga carattere di avanzamento (U + 000A).</span><span class="sxs-lookup"><span data-stu-id="93c64-534">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="93c64-535">Per altre informazioni, vedere l'argomento del documento RFC 2045 "Multipurpose Internet Mail Extensions", all'indirizzo [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="93c64-535">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-536">Nell'esempio seguente viene illustrato il <xref:System.Convert.ToBase64String%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-536">The following example demonstrates the <xref:System.Convert.ToBase64String%2A> method.</span></span> <span data-ttu-id="93c64-537">L'input è suddiviso in gruppi di tre byte (24 bit) ogni.</span><span class="sxs-lookup"><span data-stu-id="93c64-537">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="93c64-538">Di conseguenza, ogni gruppo è costituito da quattro numeri 6 bit dove ogni numero compreso tra 0 a 63 decimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-538">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="93c64-539">In questo esempio sono presenti gruppi di 3 byte 85 con un byte rimanenti.</span><span class="sxs-lookup"><span data-stu-id="93c64-539">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="93c64-540">Il primo gruppo è costituito dai valori esadecimali 00 e 01, 02, ovvero quattro valori di bit 6 uguali a 0, 0, 4 e 2 decimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-540">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="93c64-541">Questi quattro valori corrispondano per le cifre base 64 "A", "A", "E" e "C" all'inizio dell'output.</span><span class="sxs-lookup"><span data-stu-id="93c64-541">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="93c64-542">Se non esiste un numero integrale di gruppi di 3 byte, i byte rimanenti vengono completati con zeri in modo da formare un gruppo completo.</span><span class="sxs-lookup"><span data-stu-id="93c64-542">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="93c64-543">In questo esempio, il valore dell'ultimo byte è esadecimale FF.</span><span class="sxs-lookup"><span data-stu-id="93c64-543">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="93c64-544">I primi 6 bit sono uguali a 63 decimale, che corrisponde alla cifra base64 "/" alla fine dell'output, e il bit 2 successivi vengono riempite con zeri per produrre 48 decimale, che corrisponde alla cifra Base64, "w".</span><span class="sxs-lookup"><span data-stu-id="93c64-544">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="93c64-545">Gli ultimi due valori di bit 6 sono la spaziatura interna e corrispondono a non significativo carattere di spaziatura interna "=".</span><span class="sxs-lookup"><span data-stu-id="93c64-545">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64string#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64string/CPP/tb64s.cpp#1)]
 [!code-csharp[convert.tobase64string#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64string/CS/tb64s.cs#1)]
 [!code-vb[convert.tobase64string#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64string/VB/tb64s.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-546">
            <paramref name="inArray" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-546">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-547">
            <paramref name="offset" /> o <paramref name="length" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-547">
              <paramref name="offset" /> or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="93c64-548">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-548">-or-</span>
          </span>
          <span data-ttu-id="93c64-549">La somma di <paramref name="offset" /> e <paramref name="length" /> è maggiore della lunghezza di <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-549">
              <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-550">
            <paramref name="options" /> non è un valore valido di <see cref="T:System.Base64FormattingOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-550">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBoolean">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-551">Converte un valore specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-551">Converts a specified value to an equivalent Boolean value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(bool value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : bool -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-552">Valore booleano da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-552">The Boolean value to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-553">Restituisce il valore booleano specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-553">Returns the specified Boolean value; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-554">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-554">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : byte -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-555">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-555">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-556">Converte il valore dell'intero senza segno a 8 bit specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-556">Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-557">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-557">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-558">Nell'esempio seguente converte una matrice di <xref:System.Byte> valori <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-558">The following example converts an array of <xref:System.Byte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#12)]
 [!code-csharp[System.Convert.ToBoolean#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#12)]
 [!code-vb[System.Convert.ToBoolean#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(char value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : char -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-559">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-559">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-560">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-560">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-561">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-561">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-562">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-562">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-563">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-563">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : DateTime -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-564">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-564">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-565">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-565">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-566">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-566">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-567">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-567">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-568">Nell'esempio seguente viene illustrato che un tentativo di convertire un <xref:System.DateTime> genera un'eccezione di valore a un tipo Boolean <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="93c64-568">The following example demonstrates that an attempt to convert a <xref:System.DateTime> value to a Boolean type throws <xref:System.InvalidCastException>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#20)]
 [!code-csharp[System.Convert Snippets#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#20)]
 [!code-vb[System.Convert Snippets#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-569">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-569">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : decimal -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-570">Numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-570">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-571">Converte il valore del numero decimale specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-571">Converts the value of the specified decimal number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-572">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-572">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-573">Nell'esempio seguente converte una matrice di <xref:System.Decimal> valori <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-573">The following example converts an array of <xref:System.Decimal> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#2)]
 [!code-csharp[System.Convert.ToBoolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#2)]
 [!code-vb[System.Convert.ToBoolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(double value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : double -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-574">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-574">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-575">Converte il valore del numero a virgola mobile e con precisione doppia specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-575">Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-576">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-576">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-577">L'esempio seguente converte un valore booleano per un <xref:System.Double> e un <xref:System.Double> su un valore booleano.</span><span class="sxs-lookup"><span data-stu-id="93c64-577">The following example converts a Boolean to a <xref:System.Double> and a <xref:System.Double> to a Boolean value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(short value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int16 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-578">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-578">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-579">Converte il valore dell'intero con segno a 16 bit specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-579">Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-580">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-580">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-581">Nell'esempio seguente converte una matrice di <xref:System.Int16> valori <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-581">The following example converts an array of <xref:System.Int16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#3)]
 [!code-csharp[System.Convert.ToBoolean#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#3)]
 [!code-vb[System.Convert.ToBoolean#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(int value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-582">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-582">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-583">Converte il valore dell'intero con segno a 32 bit specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-583">Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-584">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-584">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-585">Nell'esempio seguente converte una matrice di <xref:System.Int32> valori <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-585">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#4)]
 [!code-csharp[System.Convert.ToBoolean#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#4)]
 [!code-vb[System.Convert.ToBoolean#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(long value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int64 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-586">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-586">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-587">Converte il valore dell'intero con segno a 64 bit specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-587">Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-588">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-588">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-589">Nell'esempio seguente converte una matrice di <xref:System.Int64> valori <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-589">The following example converts an array of <xref:System.Int64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#5)]
 [!code-csharp[System.Convert.ToBoolean#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#5)]
 [!code-vb[System.Convert.ToBoolean#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : obj -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-590">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-590">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-591">Converte il valore di un oggetto specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-591">Converts the value of a specified object to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-592">
            <see langword="true" /> o <see langword="false" />, che riflette il valore restituito richiamando il metodo <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> per il tipo sottostante di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-592">
              <see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="93c64-593">Se <paramref name="value" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-593">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-594">Nell'esempio seguente converte una matrice di valori dell'oggetto <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-594">The following example converts an array of object values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#11)]
 [!code-csharp[System.Convert.ToBoolean#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#11)]
 [!code-vb[System.Convert.ToBoolean#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-595">
            <paramref name="value" /> è una stringa diversa da <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-595">
              <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-596">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-596">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-597">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-597">-or-</span>
          </span>
          <span data-ttu-id="93c64-598">La conversione di <paramref name="value" /> in <see cref="T:System.Boolean" /> non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-598">The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As SByte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : sbyte -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-599">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-599">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-600">Converte il valore dell'intero con segno a 8 bit specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-600">Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-601">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-601">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-602">Nell'esempio seguente converte una matrice di <xref:System.SByte> valori <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-602">The following example converts an array of <xref:System.SByte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#6)]
 [!code-csharp[System.Convert.ToBoolean#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#6)]
 [!code-vb[System.Convert.ToBoolean#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(float value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : single -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-603">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-603">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-604">Converte il valore del numero a virgola mobile a precisione singola specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-604">Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-605">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-605">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-606">Nell'esempio seguente converte una matrice di <xref:System.Single> valori <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-606">The following example converts an array of <xref:System.Single> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#7)]
 [!code-csharp[System.Convert.ToBoolean#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#7)]
 [!code-vb[System.Convert.ToBoolean#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-607">Stringa che contiene il valore <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-607">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-608">Converte la rappresentazione di stringa specificata di un valore logico nel relativo valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-608">Converts the specified string representation of a logical value to its Boolean equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-609">
            <see langword="true" /> se <paramref name="value" /> è uguale a <see cref="F:System.Boolean.TrueString" /> oppure <see langword="false" /> se <paramref name="value" /> è uguale a <see cref="F:System.Boolean.FalseString" /> o a <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-609">
              <see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-610">Per una corretta conversione si verifica quando la `value` parametro deve essere uguale a uno <xref:System.Boolean.TrueString?displayProperty=nameWithType>, una costante il cui valore è `True`, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, una costante il cui valore è `False`, o deve essere `null`.</span><span class="sxs-lookup"><span data-stu-id="93c64-610">For a successful conversion to occur, the `value` parameter must equal either <xref:System.Boolean.TrueString?displayProperty=nameWithType>, a constant whose value is `True`, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, a constant whose value is `False`, or it must be `null`.</span></span> <span data-ttu-id="93c64-611">Nell'operazione di confronto `value` con <xref:System.Boolean.TrueString?displayProperty=nameWithType> e <xref:System.Boolean.FalseString?displayProperty=nameWithType>, il metodo ignora maiuscole gli spazi vuoti anche come iniziali e finali.</span><span class="sxs-lookup"><span data-stu-id="93c64-611">In comparing `value` with <xref:System.Boolean.TrueString?displayProperty=nameWithType> and <xref:System.Boolean.FalseString?displayProperty=nameWithType>, the method ignores case as well as leading and trailing white space.</span></span>  
  
 <span data-ttu-id="93c64-612">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-612">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-613">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-613">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-614">L'esempio seguente usa il <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> metodo per convertire varie stringhe in valori booleani.</span><span class="sxs-lookup"><span data-stu-id="93c64-614">The following example uses the <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> method to convert various strings to Boolean values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean1.cpp#1)]
 [!code-csharp[System.Convert.ToBoolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/ToBoolean1.cs#1)]
 [!code-vb[System.Convert.ToBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/ToBoolean1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-615">
            <paramref name="value" /> non è uguale a <see cref="F:System.Boolean.TrueString" /> o a <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-615">
              <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint16 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-616">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-616">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-617">Converte il valore dell'intero senza segno a 16 bit specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-617">Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-618">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-618">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-619">Nell'esempio seguente converte una matrice di <xref:System.UInt16> valori <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-619">The following example converts an array of <xref:System.UInt16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#8)]
 [!code-csharp[System.Convert.ToBoolean#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#8)]
 [!code-vb[System.Convert.ToBoolean#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint32 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-620">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-620">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-621">Converte il valore dell'intero senza segno a 32 bit specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-621">Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-622">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-622">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-623">Nell'esempio seguente converte una matrice di <xref:System.Int32> valori <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-623">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#9)]
 [!code-csharp[System.Convert.ToBoolean#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#9)]
 [!code-vb[System.Convert.ToBoolean#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint64 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-624">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-624">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-625">Converte il valore dell'intero senza segno a 64 bit specificato in un valore booleano equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-625">Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-626">
            <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-626">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-627">Nell'esempio seguente converte una matrice di <xref:System.UInt64> valori <xref:System.Boolean> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-627">The following example converts an array of <xref:System.UInt64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#10)]
 [!code-csharp[System.Convert.ToBoolean#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#10)]
 [!code-vb[System.Convert.ToBoolean#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : obj * IFormatProvider -&gt; bool" Usage="System.Convert.ToBoolean (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-628">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-628">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-629">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-629">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-630">Converte il valore dell'oggetto specificato in un valore booleano equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-630">Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-631">
            <see langword="true" /> o <see langword="false" />, che riflette il valore restituito richiamando il metodo <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> per il tipo sottostante di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-631">
              <see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="93c64-632">Se <paramref name="value" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-632">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-633">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-633">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-634">Ignorano i tipi di base di `provider` parametro; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-634">The base types ignore the `provider` parameter; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-635">L'esempio seguente definisce una classe che implementa <xref:System.IConvertible> e una classe che implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="93c64-635">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="93c64-636">Gli oggetti della classe che implementa <xref:System.IConvertible> contengono una matrice di <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-636">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="93c64-637">Viene passato un oggetto di ogni classe per il <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-637">An object of each class is passed to the <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="93c64-638">Questo metodo restituisce `true` se uno dei valori di matrice non ignorati è diverso da zero.</span><span class="sxs-lookup"><span data-stu-id="93c64-638">This method returns `true` if any of the non-discarded array values are non-zero.</span></span> <span data-ttu-id="93c64-639">Il <xref:System.IFormatProvider> oggetto determina il modo in cui gli elementi vengono ignorati per questo calcolo.</span><span class="sxs-lookup"><span data-stu-id="93c64-639">The <xref:System.IFormatProvider> object determines how elements are discarded for this calculation.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-640">
            <paramref name="value" /> è una stringa diversa da <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-640">
              <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-641">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-641">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-642">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-642">-or-</span>
          </span>
          <span data-ttu-id="93c64-643">La conversione di <paramref name="value" /> in <see cref="T:System.Boolean" /> non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-643">The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string * IFormatProvider -&gt; bool" Usage="System.Convert.ToBoolean (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-644">Stringa che contiene il valore <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-644">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-645">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-645">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="93c64-646">Questo parametro viene ignorato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-646">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-647">Converte la rappresentazione di stringa specificata di un valore logico nel valore booleano equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-647">Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-648">
            <see langword="true" /> se <paramref name="value" /> è uguale a <see cref="F:System.Boolean.TrueString" /> oppure <see langword="false" /> se <paramref name="value" /> è uguale a <see cref="F:System.Boolean.FalseString" /> o a <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-648">
              <see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-649">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-649">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-650">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-650">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-651">
            <paramref name="value" /> non è uguale a <see cref="F:System.Boolean.TrueString" /> o a <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-651">
              <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-652">Converte un valore specificato in un intero senza segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-652">Converts a specified value to an 8-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Boolean) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(bool value);" />
      <MemberSignature Language="F#" Value="static member ToByte : bool -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-653">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-653">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-654">Converte il valore booleano specificato nell'intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-654">Converts the specified Boolean value to the equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-655">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-655">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-656">L'esempio seguente illustra la conversione di <xref:System.Boolean> a <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-656">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Byte> values.</span></span>  
  
 [!code-cpp[System.Convert.ToByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.tobyte/cpp/tobyte1.cpp#1)]
 [!code-csharp[System.Convert.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#1)]
 [!code-vb[System.Convert.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToByte : byte -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-657">Intero senza segno a 8 bit da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-657">The 8-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-658">Restituisce l'intero senza segno a 8 bit specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-658">Returns the specified 8-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-659">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-659">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Char) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(char value);" />
      <MemberSignature Language="F#" Value="static member ToByte : char -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-660">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-660">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-661">Converte il valore del carattere Unicode specificato nell'intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-661">Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-662">Intero senza segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-662">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-663">Questo metodo restituisce un valore byte senza segno che rappresenta il codice numerico del <xref:System.Char> oggetto passato ad esso.</span><span class="sxs-lookup"><span data-stu-id="93c64-663">This method returns an unsigned byte value that represents the numeric code of the <xref:System.Char> object passed to it.</span></span> <span data-ttu-id="93c64-664">In .NET Framework, un <xref:System.Char> oggetto è un valore a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-664">In the .NET Framework, a <xref:System.Char> object is a 16-bit value.</span></span> <span data-ttu-id="93c64-665">Ciò significa che il metodo è adatto per la restituzione di codici numerici dei caratteri nell'intervallo di caratteri ASCII o negli intervalli Unicode C0 controlli e latino di base e i controlli C1 e Supplemento latino 1, da u+0000 a U + 00FF.</span><span class="sxs-lookup"><span data-stu-id="93c64-665">This means that the method is suitable for returning the numeric codes of characters in the ASCII character range or in the Unicode C0 Controls and Basic Latin, and C1 Controls and Latin-1 Supplement ranges, from U+0000 to U+00FF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-666">Nell'esempio seguente converte una matrice di <xref:System.Char> valori <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-666">The following example converts an array of <xref:System.Char> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#2)]
 [!code-vb[System.Convert.ToByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-667">
            <paramref name="value" /> rappresenta un numero maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-667">
              <paramref name="value" /> represents a number that is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As DateTime) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToByte : DateTime -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-668">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-668">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-669">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-669">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-670">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-670">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-671">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-671">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-672">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-672">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToByte : decimal -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-673">Numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-673">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-674">Converte il valore del numero decimale specificato in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-674">Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-675">
            <paramref name="value" />, arrotondato all'intero senza segno a 8 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-675">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-676">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-676">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-677">L'esempio seguente converte un <xref:System.Byte> valore per un <xref:System.Decimal> e una <xref:System.Decimal> valore a un <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="93c64-677">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> and a <xref:System.Decimal> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-678">
            <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" /> o minore di <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-678">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Double) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(double value);" />
      <MemberSignature Language="F#" Value="static member ToByte : double -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-679">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-679">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-680">Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-680">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-681">
            <paramref name="value" />, arrotondato all'intero senza segno a 8 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-681">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-682">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-682">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-683">L'esempio seguente converte un <xref:System.Byte> valore per un <xref:System.Double> e una <xref:System.Double> valore a un <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="93c64-683">The following example converts a <xref:System.Byte> value to a <xref:System.Double> and a <xref:System.Double> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-684">
            <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" /> o minore di <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-684">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Short) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(short value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int16 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-685">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-685">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-686">Converte il valore dell'intero con segno a 16 bit specificato in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-686">Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-687">Intero senza segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-687">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-688">Nell'esempio seguente converte una matrice di <xref:System.Int16> valori <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-688">The following example converts an array of <xref:System.Int16> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#3)]
 [!code-vb[System.Convert.ToByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-689">
            <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-689">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(int value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-690">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-690">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-691">Converte il valore dell'intero con segno a 32 bit specificato in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-691">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-692">Intero senza segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-692">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-693">Nell'esempio seguente converte una matrice di <xref:System.Int32> valori <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-693">The following example converts an array of <xref:System.Int32> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#4)]
 [!code-vb[System.Convert.ToByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-694">
            <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-694">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Long) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(long value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int64 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-695">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-695">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-696">Converte il valore dell'intero con segno a 64 bit specificato in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-696">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-697">Intero senza segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-697">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-698">Nell'esempio seguente converte una matrice di <xref:System.Int64> valori <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-698">The following example converts an array of <xref:System.Int64> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#5)]
 [!code-vb[System.Convert.ToByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-699">
            <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-699">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToByte : obj -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-700">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-700">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-701">Converte il valore dell'oggetto specificato in un intero senza segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-701">Converts the value of the specified object to an 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-702">Intero senza segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-702">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-703">Se `value` non è `null`, questo metodo esegue il wrapping di una chiamata ai <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> implementazione del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-703">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-704">L'esempio seguente usa il <xref:System.Convert.ToByte%28System.Object%29> metodo per convertire una matrice di oggetti da <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-704">The following example uses the <xref:System.Convert.ToByte%28System.Object%29> method to convert an array of objects to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#6)]
 [!code-vb[System.Convert.ToByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-705">Il formato di <paramref name="value" /> non è quello della proprietà per un valore di <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-705">
              <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-706">
            <paramref name="value" /> non implementa <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-706">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
          <span data-ttu-id="93c64-707">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-707">-or-</span>
          </span>
          <span data-ttu-id="93c64-708">La conversione da <paramref name="value" /> al tipo <see cref="T:System.Byte" /> non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-708">Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-709">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-709">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As SByte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToByte : sbyte -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-710">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-710">The 8-bit signed integer to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-711">Converte il valore dell'intero con segno a 8 bit specificato in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-711">Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-712">Intero senza segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-712">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-713">Nell'esempio seguente converte una matrice di <xref:System.SByte> valori <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-713">The following example converts an array of <xref:System.SByte> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#7)]
 [!code-vb[System.Convert.ToByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-714">
            <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-714">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Single) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(float value);" />
      <MemberSignature Language="F#" Value="static member ToByte : single -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-715">Numero a virgola mobile e con precisione singola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-715">A single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-716">Converte il valore del numero a virgola mobile e con precisione singola specificato in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-716">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-717">
            <paramref name="value" />, arrotondato all'intero senza segno a 8 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-717">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-718">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-718">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-719">L'esempio seguente converte un <xref:System.Single> valore per un <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="93c64-719">The following example converts a <xref:System.Single> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#19)]
 [!code-csharp[System.Convert Snippets#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#19)]
 [!code-vb[System.Convert Snippets#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-720">
            <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" /> o minore di <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-720">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToByte : string -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-721">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-721">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-722">Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-722">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-723">Intero senza segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-723">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-724">Usando il <xref:System.Convert.ToByte%28System.String%29> metodo equivale a passare `value` per il <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-724">Using the <xref:System.Convert.ToByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-725">`value` viene interpretato utilizzando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-725">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-726">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-726">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-727">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-727">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-728">Nell'esempio seguente definisce una matrice di stringhe e tenta di convertire ogni stringa in un <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="93c64-728">The following example defines a string array and attempts to convert each string to a <xref:System.Byte>.</span></span>  <span data-ttu-id="93c64-729">Si noti che, anche se un `null` uguale a zero, analizza stringa <xref:System.String.Empty?displayProperty=nameWithType> genera un <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="93c64-729">Note that while a `null` string parses to zero, <xref:System.String.Empty?displayProperty=nameWithType> throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="93c64-730">Si noti anche che sebbene spazi iniziali e finali vengono analizzate correttamente, la formattazione di simboli, ad esempio i simboli di valuta, separatori di gruppi o separatori decimali, non.</span><span class="sxs-lookup"><span data-stu-id="93c64-730">Also note that while leading and trailing spaces parse successfully, formatting symbols, such as currency symbols, group separators, or decimal separators, do not.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/ToByte5.cs#15)]
 [!code-vb[System.Convert.ToByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte5.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-731">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-731">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-732">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-732">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UShort) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint16 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-733">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-733">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-734">Converte il valore dell'intero senza segno a 16 bit specificato in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-734">Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-735">Intero senza segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-735">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-736">Nell'esempio seguente converte una matrice di interi senza segno a 16 bit a <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-736">The following example converts an array of unsigned 16-bit integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#8)]
 [!code-vb[System.Convert.ToByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-737">
            <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-737">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint32 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-738">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-738">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-739">Converte il valore dell'intero senza segno a 32 bit specificato in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-739">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-740">Intero senza segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-740">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-741">Nell'esempio seguente converte una matrice di interi senza segno da <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-741">The following example converts an array of unsigned integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#9)]
 [!code-vb[System.Convert.ToByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-742">
            <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-742">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As ULong) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint64 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-743">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-743">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-744">Converte il valore dell'intero senza segno a 64 bit specificato in un intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-744">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-745">Intero senza segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-745">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-746">Nell'esempio seguente converte una matrice di valori unsigned long integer a <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-746">The following example converts an array of unsigned long integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#10)]
 [!code-vb[System.Convert.ToByte#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-747">
            <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-747">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToByte : obj * IFormatProvider -&gt; byte" Usage="System.Convert.ToByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-748">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-748">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-749">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-749">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-750">Converte il valore dell'oggetto specificato in un intero senza segno a 8 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-750">Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-751">Intero senza segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-751">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-752">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-752">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-753">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-753">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-754">Nell'esempio seguente viene definita una classe `ByteString` che implementa l'interfaccia <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="93c64-754">The following example defines a `ByteString` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="93c64-755">La classe archivia la rappresentazione di stringa di un valore byte insieme a un campo di accesso, in modo che sia in grado di rappresentare entrambi i valori di byte con segno e senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-755">The class stores the string representation of a byte value along with a sign field, so that it is able to represent both signed and unsigned byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#12)]
 [!code-vb[System.Convert.ToByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#12)]  
  
 <span data-ttu-id="93c64-756">Nell'esempio seguente crea un'istanza di diversi `ByteString` gli oggetti e chiamate di <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> metodo per convertirli in valori di byte.</span><span class="sxs-lookup"><span data-stu-id="93c64-756">The following example instantiates several `ByteString` objects and calls the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method to convert them to byte values.</span></span> <span data-ttu-id="93c64-757">Viene illustrato che il <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> metodo esegue il wrapping di una chiamata al <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> metodo dell'oggetto da convertire.</span><span class="sxs-lookup"><span data-stu-id="93c64-757">It illustrates that the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> method of the object to be converted.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#13)]
 [!code-vb[System.Convert.ToByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-758">Il formato di <paramref name="value" /> non è quello della proprietà per un valore di <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-758">
              <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-759">
            <paramref name="value" /> non implementa <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-759">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
          <span data-ttu-id="93c64-760">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-760">-or-</span>
          </span>
          <span data-ttu-id="93c64-761">La conversione da <paramref name="value" /> al tipo <see cref="T:System.Byte" /> non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-761">Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-762">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-762">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToByte : string * IFormatProvider -&gt; byte" Usage="System.Convert.ToByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-763">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-763">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-764">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-764">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-765">Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 8 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-765">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-766">Intero senza segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-766">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-767">`provider` è un' <xref:System.IFormatProvider> istanza che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-767">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-768">Il <xref:System.Globalization.NumberFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-768">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-769">Se `provider` viene `null`, il <xref:System.Globalization.NumberFormatInfo> dell'oggetto per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-769">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-770">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-770">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-771">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-771">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-772">L'esempio seguente crea un oggetto personalizzato <xref:System.Globalization.NumberFormatInfo> oggetto che definisce il segno positivo come "pos" e il segno negativo come "neg", che viene utilizzato nelle chiamate al <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-772">The following example creates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the positive sign as "pos" and the negative sign as "neg", which it uses in calls to the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="93c64-773">Chiama poi il <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> metodo più volte per convertire ogni elemento nella matrice di stringhe per un <xref:System.Byte> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-773">It then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method repeatedly to convert each element in a string array to a <xref:System.Byte> value.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte4.cs#14)]
 [!code-vb[System.Convert.ToByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte4.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-774">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-774">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-775">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-775">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, fromBase As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToByte : string * int -&gt; byte" Usage="System.Convert.ToByte (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-776">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-776">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="93c64-777">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-777">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-778">Converte la rappresentazione di stringa di un numero in una base specificata nell'intero senza segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-778">Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-779">Intero senza segno a 8 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-779">An 8-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-780">Se `fromBase` è 16, è possibile anteporre al numero specificato da di `value` parametro con "0x" o "0x".</span><span class="sxs-lookup"><span data-stu-id="93c64-780">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="93c64-781">Poiché il <xref:System.Byte> tipo di dati supporta solo i valori senza segno il <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> metodo presuppone che `value` viene espressa utilizzando una rappresentazione binaria non firmati.</span><span class="sxs-lookup"><span data-stu-id="93c64-781">Because the <xref:System.Byte> data type supports unsigned values only, the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="93c64-782">In altre parole, tutte le otto bit vengono usati per rappresentare il valore numerico e il bit di segno è assente.</span><span class="sxs-lookup"><span data-stu-id="93c64-782">In other words, all eight bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="93c64-783">Di conseguenza, è possibile scrivere codice in cui byte con segno a un valore che non è compreso nell'intervallo del <xref:System.Byte> tipo di dati viene convertito in un <xref:System.Byte> valore senza il metodo che genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-783">As a result, it is possible to write code in which a signed byte value that is out of the range of the <xref:System.Byte> data type is converted to a <xref:System.Byte> value without the method throwing an exception.</span></span> <span data-ttu-id="93c64-784">L'esempio seguente converte <xref:System.SByte.MinValue> alla relativa rappresentazione di stringa esadecimale e quindi chiama il <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-784">The following example converts <xref:System.SByte.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="93c64-785">Anziché generare un'eccezione, il metodo visualizza il messaggio "converte 0x80 a 128."</span><span class="sxs-lookup"><span data-stu-id="93c64-785">Instead of throwing an exception, the method displays the message, "0x80 converts to 128."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#3)]
 [!code-vb[System.Convert.BaseConversion#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#3)]  
  
 <span data-ttu-id="93c64-786">Quando si esegue operazioni binarie o conversioni numeriche, è sempre la responsabilità dello sviluppatore per verificare che un metodo o un operatore viene utilizzata la rappresentazione numerica appropriata per interpretare un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="93c64-786">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="93c64-787">L'esempio seguente illustra una tecnica per garantire che il metodo non usa in modo non appropriato unsigned rappresentazione binaria durante la conversione di una rappresentazione di stringa esadecimale per un <xref:System.Byte> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-787">The following example illustrates one technique for ensuring that the method does not inappropriately use unsigned binary representation when it converts a hexadecimal string representation to a <xref:System.Byte> value.</span></span> <span data-ttu-id="93c64-788">Nell'esempio determina se un valore rappresenta un intero senza segno o con segno mentre converte tale valore alla relativa rappresentazione di stringa.</span><span class="sxs-lookup"><span data-stu-id="93c64-788">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="93c64-789">Quando nell'esempio viene convertito il valore di eseguire il backup per un <xref:System.Byte> valore, viene verificato se il valore originale era un intero con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-789">When the example converts the value back to a <xref:System.Byte> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="93c64-790">Se pertanto e se è impostato il bit più significativo (che indica che il valore è negativo e che usa due complemento anziché unsigned rappresentazione binaria), il metodo genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-790">If so, and if its high-order bit is set (which indicates that the value is negative and that it uses two's complement instead of unsigned binary representation), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#4)]
 [!code-vb[System.Convert.BaseConversion#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="93c64-791">In alternativa, nell'esempio seguente tenta interpretare una matrice di stringhe come la rappresentazione dei valori binari, ottali, decimale ed esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-791">The following example alternately attempts to interpret an array of strings as the representation of binary, octal, decimal, and hexadecimal values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte2.cs#11)]
 [!code-vb[System.Convert.ToByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-792">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-792">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="93c64-793">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-793">-or-</span>
          </span>
          <span data-ttu-id="93c64-794">
            <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-794">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-795">
            <paramref name="value" /> è <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-795">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-796">
            <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-796">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="93c64-797">Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-797">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-798">
            <paramref name="value" />, che rappresenta un numero senza segno in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-798">
              <paramref name="value" />, which represents a base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="93c64-799">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-799">-or-</span>
          </span>
          <span data-ttu-id="93c64-800">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-800">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToChar">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-801">Converte un valore specificato in un carattere Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-801">Converts a specified value to a Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Boolean) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(bool value);" />
      <MemberSignature Language="F#" Value="static member ToChar : bool -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-802">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-802">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-803">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-803">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-804">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-804">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-805">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-805">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-806">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-806">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Byte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToChar : byte -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-807">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-807">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-808">Converte il valore dell'intero senza segno a 8 bit specificato nel carattere Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-808">Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-809">Carattere Unicode equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-809">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-810">L'esempio seguente converte una matrice di byte senza segno a <xref:System.Char> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-810">The following example converts an array of unsigned bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#1)]
 [!code-vb[System.Convert.ToChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(char value);" />
      <MemberSignature Language="F#" Value="static member ToChar : char -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-811">Carattere Unicode da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-811">The Unicode character to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-812">Restituisce il valore del carattere Unicode specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-812">Returns the specified Unicode character value; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-813">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-813">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As DateTime) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToChar : DateTime -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-814">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-814">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-815">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-815">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-816">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-816">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-817">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-817">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-818">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-818">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToChar : decimal -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-819">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-819">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-820">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-820">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-821">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-821">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-822">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-822">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-823">Nell'esempio seguente tenta di convertire un <xref:System.Decimal> al <xref:System.Char>e genera un'eccezione <xref:System.InvalidCastException> in caso di errore.</span><span class="sxs-lookup"><span data-stu-id="93c64-823">The following example attempts to convert a <xref:System.Decimal> to <xref:System.Char>, and throws <xref:System.InvalidCastException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-824">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-824">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Double) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(double value);" />
      <MemberSignature Language="F#" Value="static member ToChar : double -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-825">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-825">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-826">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-826">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-827">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-827">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-828">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-828">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-829">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-829">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Short) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(short value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int16 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-830">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-830">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-831">Converte il valore dell'intero con segno a 16 bit specificato nel carattere Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-831">Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-832">Carattere Unicode equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-832">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-833">Nell'esempio seguente converte una matrice di interi con segno a 16 bit a <xref:System.Char> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-833">The following example converts an array of signed 16-bit integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#2)]
 [!code-vb[System.Convert.ToChar#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-834">
            <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-834">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(int value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-835">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-835">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-836">Converte il valore dell'intero con segno a 32 bit specificato nel carattere Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-836">Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-837">Carattere Unicode equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-837">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-838">Nell'esempio seguente converte una matrice di interi con segno da <xref:System.Char> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-838">The following example converts an array of signed integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#3)]
 [!code-vb[System.Convert.ToChar#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-839">
            <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" /> o maggiore di <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-839">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Long) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(long value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int64 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-840">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-840">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-841">Converte il valore dell'intero con segno a 64 bit specificato nel carattere Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-841">Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-842">Carattere Unicode equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-842">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-843">Nell'esempio seguente tenta di convertire un valore long integer a un <xref:System.Char>e genera un <xref:System.OverflowException> in caso di errore.</span><span class="sxs-lookup"><span data-stu-id="93c64-843">The following example attempts to convert a long integer to a <xref:System.Char>, and throws a <xref:System.OverflowException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#8)]
 [!code-csharp[System.Convert Snippets#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#8)]
 [!code-vb[System.Convert Snippets#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-844">
            <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" /> o maggiore di <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-844">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToChar : obj -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-845">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-845">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-846">Converte il valore dell'oggetto specificato in un carattere Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-846">Converts the value of the specified object to a Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-847">Carattere Unicode equivalente a value oppure <see cref="F:System.Char.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-847">A Unicode character that is equivalent to value, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-848">Se `value` non è `null`, questo metodo esegue il wrapping di una chiamata ai <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> implementazione del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-848">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-849">Nell'esempio seguente tenta di convertire ogni elemento nella matrice di oggetti per un <xref:System.Char> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-849">The following example attempts to convert each element in an object array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#9)]
 [!code-vb[System.Convert.ToChar#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-850">
            <paramref name="value" /> è una stringa Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-850">
              <paramref name="value" /> is a null string.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-851">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-851">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-852">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-852">-or-</span>
          </span>
          <span data-ttu-id="93c64-853">La conversione di <paramref name="value" /> in <see cref="T:System.Char" /> non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-853">The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-854">
            <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" /> o maggiore di <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-854">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As SByte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToChar : sbyte -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-855">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-855">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-856">Converte il valore dell'intero con segno a 8 bit specificato nel carattere Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-856">Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-857">Carattere Unicode equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-857">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-858">L'esempio seguente converte una matrice di byte con segno a <xref:System.Char> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-858">The following example converts an array of signed bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#4)]
 [!code-vb[System.Convert.ToChar#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-859">
            <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-859">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Single) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(float value);" />
      <MemberSignature Language="F#" Value="static member ToChar : single -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-860">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-860">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-861">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-861">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-862">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-862">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-863">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-863">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-864">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-864">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToChar : string -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-865">Stringa di lunghezza 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-865">A string of length 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-866">Converte il primo carattere di una stringa specificata in un carattere Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-866">Converts the first character of a specified string to a Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-867">Carattere Unicode equivalente al primo e unico carattere in <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-867">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-868">`value` deve essere una stringa che contiene un singolo carattere.</span><span class="sxs-lookup"><span data-stu-id="93c64-868">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="93c64-869">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Char.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-869">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-870">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-870">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-871">Nell'esempio seguente converte ogni elemento in una matrice di stringhe per un <xref:System.Char> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-871">The following example converts each element in a string array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#5)]
 [!code-vb[System.Convert.ToChar#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-872">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-872">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-873">La lunghezza di <paramref name="value" /> non è 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-873">The length of <paramref name="value" /> is not 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UShort) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint16 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-874">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-874">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-875">Converte il valore dell'intero senza segno a 16 bit specificato nel carattere Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-875">Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-876">Carattere Unicode equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-876">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-877">Nell'esempio seguente converte ogni elemento in una matrice di interi senza segno a 16 bit a un <xref:System.Char> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-877">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#6)]
 [!code-vb[System.Convert.ToChar#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UInteger) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint32 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-878">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-878">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-879">Converte il valore dell'intero senza segno a 32 bit specificato nel carattere Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-879">Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-880">Carattere Unicode equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-880">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-881">Nell'esempio seguente converte ogni elemento in una matrice di interi senza segno da un <xref:System.Char> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-881">The following example converts each element in an array of unsigned integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#7)]
 [!code-vb[System.Convert.ToChar#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-882">
            <paramref name="value" /> è maggiore di <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-882">
              <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As ULong) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint64 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-883">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-883">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-884">Converte il valore dell'intero senza segno a 64 bit specificato nel carattere Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-884">Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-885">Carattere Unicode equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-885">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-886">Nell'esempio seguente converte ogni elemento in una matrice di valori unsigned long integer a un <xref:System.Char> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-886">The following example converts each element in an array of unsigned long integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#8)]
 [!code-vb[System.Convert.ToChar#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-887">
            <paramref name="value" /> è maggiore di <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-887">
              <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToChar : obj * IFormatProvider -&gt; char" Usage="System.Convert.ToChar (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-888">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-888">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-889">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-889">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-890">Converte il valore dell'oggetto specificato nel relativo carattere Unicode equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-890">Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-891">Carattere Unicode equivalente a <paramref name="value" /> oppure <see cref="F:System.Char.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-891">A Unicode character that is equivalent to <paramref name="value" />, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-892">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-892">The return value is the result of invoking the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="93c64-893">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-893">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-894">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-894">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-895">L'esempio seguente definisce una classe che implementa <xref:System.IConvertible> e una classe che implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="93c64-895">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="93c64-896">Gli oggetti della classe che implementa <xref:System.IConvertible> contengono una matrice di <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-896">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="93c64-897">Viene passato un oggetto di ogni classe per il `ToChar` (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-897">An object of each class is passed to the `ToChar` method.</span></span> <span data-ttu-id="93c64-898">Questo metodo restituisce un carattere Unicode il cui valore è la media della matrice di <xref:System.Double> valori, utilizzando l'oggetto che implementa <xref:System.IFormatProvider> per determinare la modalità calcolare la Media.</span><span class="sxs-lookup"><span data-stu-id="93c64-898">This method returns a character whose Unicode value is the average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-899">
            <paramref name="value" /> è una stringa Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-899">
              <paramref name="value" /> is a null string.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-900">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-900">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-901">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-901">-or-</span>
          </span>
          <span data-ttu-id="93c64-902">La conversione di <paramref name="value" /> in <see cref="T:System.Char" /> non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-902">The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-903">
            <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" /> o maggiore di <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-903">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToChar : string * IFormatProvider -&gt; char" Usage="System.Convert.ToChar (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-904">Stringa di lunghezza 1 oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-904">A string of length 1 or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-905">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-905">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="93c64-906">Questo parametro viene ignorato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-906">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-907">Converte il primo carattere di una stringa specificata in un carattere Unicode mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-907">Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-908">Carattere Unicode equivalente al primo e unico carattere in <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-908">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-909">`value` deve essere una stringa che contiene un singolo carattere.</span><span class="sxs-lookup"><span data-stu-id="93c64-909">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="93c64-910">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Char.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-910">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-911">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-911">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-912">Nell'esempio seguente converte una rappresentazione di stringa di un <xref:System.Char> valore con il `ToChar` metodo, usando un <xref:System.IFormatProvider> che visualizza il tipo di provider di formato per il quale viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="93c64-912">The following example converts a string representation of a <xref:System.Char> value with the `ToChar` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="93c64-913">L'esempio mostra che il provider di formato non viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="93c64-913">The example shows that the format provider is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToNonNum_String#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CPP/stringnonnum.cpp#2)]
 [!code-csharp[System.Convert.ToNonNum_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CS/stringnonnum.cs#2)]
 [!code-vb[System.Convert.ToNonNum_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/VB/stringnonnum.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-914">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-914">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-915">La lunghezza di <paramref name="value" /> non è 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-915">The length of <paramref name="value" /> is not 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-916">Converte un valore specificato in un valore <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-916">Converts a specified value to a <see cref="T:System.DateTime" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Boolean) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : bool -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-917">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-917">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-918">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-918">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-919">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-919">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-920">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-920">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-921">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-921">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Byte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : byte -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-922">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-922">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-923">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-923">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-924">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-924">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-925">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-925">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-926">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-926">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Char) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(char value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : char -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-927">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-927">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-928">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-928">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-929">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-929">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-930">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-930">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-931">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-931">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : DateTime -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-932">Valore di data e ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-932">A date and time value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-933">Restituisce l'oggetto <see cref="T:System.DateTime" /> specificato; di fatto, non viene eseguita alcuna conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-933">Returns the specified <see cref="T:System.DateTime" /> object; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-934">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-934">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Decimal) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : decimal -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-935">Numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-935">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-936">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-936">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-937">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-937">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-938">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-938">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-939">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-939">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(double value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : double -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-940">Valore a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-940">The double-precision floating-point value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-941">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-941">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-942">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-942">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-943">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-943">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-944">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-944">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Short) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(short value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int16 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-945">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-945">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-946">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-946">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-947">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-947">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-948">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-948">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-949">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-949">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(int value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-950">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-950">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-951">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-951">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-952">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-952">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-953">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-953">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-954">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-954">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(long value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int64 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-955">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-955">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-956">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-956">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-957">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-957">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-958">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-958">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-959">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-959">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : obj -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-960">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-960">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-961">Converte il valore dell'oggetto specificato in un oggetto <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-961">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-962">Data e ora equivalenti al valore di <paramref name="value" /> oppure data e ora equivalenti a <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-962">The date and time equivalent of the value of <paramref name="value" />, or a date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-963">Per la conversione abbia esito positivo, il tipo di runtime del `value` parametro deve essere un <xref:System.DateTime> o una <xref:System.String>, o `value` deve essere `null`.</span><span class="sxs-lookup"><span data-stu-id="93c64-963">For the conversion to succeed, the runtime type of the `value` parameter must be either a <xref:System.DateTime> or a <xref:System.String>, or `value` must be `null`.</span></span> <span data-ttu-id="93c64-964">In caso contrario, il metodo genera un <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="93c64-964">Otherwise, the method throws an <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="93c64-965">Inoltre, se `value` è una stringa, deve contenere una rappresentazione valida di un valore di data e ora nelle impostazioni cultura correnti o un <xref:System.FormatException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-965">In addition, if `value` is a string, it must contain a valid representation of a date and time value in the current culture or a <xref:System.FormatException> is thrown.</span></span>  
  
 <span data-ttu-id="93c64-966">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-966">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-967">L'esempio seguente chiama il <xref:System.Convert.ToDateTime%28System.Object%29> metodo con un'ampia gamma di <xref:System.Object> variabili.</span><span class="sxs-lookup"><span data-stu-id="93c64-967">The following example calls the <xref:System.Convert.ToDateTime%28System.Object%29> method with a variety of <xref:System.Object> variables.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime1.cs#1)]
 [!code-vb[System.Convert.ToDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-968">Valore di data e ora <paramref name="value" /> non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-968">
              <paramref name="value" /> is not a valid date and time value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-969">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-969">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-970">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-970">-or-</span>
          </span>
          <span data-ttu-id="93c64-971">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-971">The conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As SByte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : sbyte -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-972">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-972">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-973">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-973">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-974">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-974">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-975">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-975">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-976">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-976">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Single) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(float value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : single -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-977">Valore a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-977">The single-precision floating-point value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-978">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-978">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-979">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-979">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-980">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-980">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-981">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-981">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-982">Rappresentazione di stringa di una data e ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-982">The string representation of a date and time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-983">Converte la rappresentazione di stringa specificata di una data e un'ora in un valore di data e ora equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-983">Converts the specified string representation of a date and time to an equivalent date and time value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-984">Data e ora equivalenti al valore di <paramref name="value" /> oppure data e ora equivalenti a <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-984">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-985">Se `value` non è `null`, il valore restituito è il risultato ottenuto richiamando la <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> metodo sul `value` usando le informazioni di formattazione in un <xref:System.Globalization.DateTimeFormatInfo> oggetto inizializzato per impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="93c64-985">If `value` is not `null`, the return value is the result of invoking the <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> method on `value` using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture.</span></span> <span data-ttu-id="93c64-986">Il `value` argomento deve contenere la rappresentazione di una data e ora in uno dei formati descritti nel <xref:System.Globalization.DateTimeFormatInfo> argomento.</span><span class="sxs-lookup"><span data-stu-id="93c64-986">The `value` argument must contain the representation of a date and time in one of the formats described in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span> <span data-ttu-id="93c64-987">Se `value` è `null`, il metodo restituisce <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-987">If `value` is `null`, the method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="93c64-988">Questo metodo tenta di analizzare `value` completamente ed evitare la generazione di un <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="93c64-988">This method tries to parse `value` completely and avoid throwing a <xref:System.FormatException>.</span></span> <span data-ttu-id="93c64-989">Completa mancante mese, giorno e anno informazioni con la data corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-989">It completes missing month, day, and year information with the current date.</span></span> <span data-ttu-id="93c64-990">Se `value` contiene solo la data e non l'ora, questo metodo utilizza un tempo pari a mezzanotte.</span><span class="sxs-lookup"><span data-stu-id="93c64-990">If `value` contains only a date and no time, this method assumes a time of midnight.</span></span> <span data-ttu-id="93c64-991">Qualsiasi, inner join, caratteri iniziali o finali spazi vuoti in `value` vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="93c64-991">Any leading, inner, or trailing white-space characters in `value` are ignored.</span></span>  
  
 <span data-ttu-id="93c64-992">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-992">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-993">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-993">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-994">L'esempio seguente usa il <xref:System.Convert.ToDateTime%2A> metodo per convertire varie rappresentazioni di stringa di date e ore a <xref:System.DateTime> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-994">The following example uses the <xref:System.Convert.ToDateTime%2A> method to convert various string representations of dates and times to <xref:System.DateTime> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime2.cs#2)]
 [!code-vb[System.Convert.ToDateTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-995">
            <paramref name="value" /> non è una stringa di data e ora formattata correttamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-995">
              <paramref name="value" /> is not a properly formatted date and time string.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md">
          <span data-ttu-id="93c64-996">Analisi delle stringhe di data e ora in .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-996">Parsing Date and Time Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UShort) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint16 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-997">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-997">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-998">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-998">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-999">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-999">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1000">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1000">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1001">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1001">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UInteger) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint32 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1002">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1002">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1003">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1003">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1004">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1004">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1005">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1005">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1006">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1006">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As ULong) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint64 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1007">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1007">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1008">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1008">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1009">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1009">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1010">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1010">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1011">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1011">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : obj * IFormatProvider -&gt; DateTime" Usage="System.Convert.ToDateTime (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1012">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1012">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1013">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1013">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1014">Converte il valore dell'oggetto specificato in un oggetto <see cref="T:System.DateTime" /> mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1014">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1015">Data e ora equivalenti al valore di <paramref name="value" /> oppure data e ora equivalenti a <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1015">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1016">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1016">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="93c64-1017">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1017">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-1018">Ad esempio, se `value` è un <xref:System.String> che rappresenta una data, `provider` potrebbe fornire informazioni specifiche delle impostazioni cultura sulla notazione usata per rappresentare la data.</span><span class="sxs-lookup"><span data-stu-id="93c64-1018">For example, if `value` is a <xref:System.String> that represents a date, `provider` could supply culture-specific information about the notation used to represent that date.</span></span> <span data-ttu-id="93c64-1019">`provider` non prevede la conversione di `value` se il tipo di runtime del `value` è un <xref:System.String>, oppure se `value` è definito dall'utente tipo la cui proprietà <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> implementazione Usa `provider`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1019">`provider` is involved in the conversion of `value` if the runtime type of `value` is a <xref:System.String>, or if `value` is a user-defined type whose <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> implementation makes use of `provider`.</span></span> <span data-ttu-id="93c64-1020">Se il tipo di runtime del `value` viene <xref:System.String> e `provider` viene `null`, il <xref:System.Globalization.CultureInfo> viene usato l'oggetto che rappresenta le impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1020">If the runtime type of `value` is <xref:System.String> and `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1021">L'esempio seguente definisce un provider di formato personalizzato `CustomProvider`, la cui <xref:System.IFormatProvider.GetFormat%2A> metodo restituisce un messaggio nella console che è stato richiamato e quindi restituisce il <xref:System.Globalization.DateTimeFormatInfo> oggetto delle impostazioni cultura il cui nome è stato passato come parametro alla relativa classe costruttore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1021">The following example defines a custom format provider, `CustomProvider`, whose <xref:System.IFormatProvider.GetFormat%2A> method outputs a message to the console that it has been invoked, and then returns the <xref:System.Globalization.DateTimeFormatInfo> object of the culture whose name was passed as a parameter to its class constructor.</span></span> <span data-ttu-id="93c64-1022">Ognuna di queste `CustomProvider` oggetti viene usata per convertire gli elementi in una matrice di oggetti ai valori di data e ora.</span><span class="sxs-lookup"><span data-stu-id="93c64-1022">Each of these `CustomProvider` objects is used to convert the elements in an object array to date and time values.</span></span> <span data-ttu-id="93c64-1023">L'output indica che il `CustomProvider` oggetto viene usato durante la conversione solo quando il tipo del `value` parametro è un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1023">The output indicates that the `CustomProvider` object is used in the conversion only when the type of the `value` parameter is a <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/todatetime4.cs#4)]
 [!code-vb[System.Convert.ToDateTime#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/todatetime4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1024">Valore di data e ora <paramref name="value" /> non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1024">
              <paramref name="value" /> is not a valid date and time value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1025">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1025">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1026">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1026">-or-</span>
          </span>
          <span data-ttu-id="93c64-1027">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1027">The conversion is not supported.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md">
          <span data-ttu-id="93c64-1028">Analisi delle stringhe di data e ora in .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1028">Parsing Date and Time Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string * IFormatProvider -&gt; DateTime" Usage="System.Convert.ToDateTime (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1029">Stringa che contiene una data e un'ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1029">A string that contains a date and time to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1030">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1030">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1031">Converte la rappresentazione di stringa specificata di un numero in un valore di data e ora equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1031">Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1032">Data e ora equivalenti al valore di <paramref name="value" /> oppure data e ora equivalenti a <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1032">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1033">Il valore restituito è il risultato ottenuto richiamando la <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metodo `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1033">The return value is the result of invoking the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="93c64-1034">`provider` è un' <xref:System.IFormatProvider> istanza che consente di ottenere un <xref:System.Globalization.DateTimeFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1034">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="93c64-1035">Il <xref:System.Globalization.DateTimeFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1035">The <xref:System.Globalization.DateTimeFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-1036">Se `provider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-1036">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-1037">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1037">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1038">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1038">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1039">L'esempio seguente converte le rappresentazioni stringa dei valori di data con il `ToDateTime` metodo, usando un <xref:System.IFormatProvider> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1039">The following example converts string representations of date values with the `ToDateTime` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime3.cs#3)]
 [!code-vb[System.Convert.ToDateTime#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1040">
            <paramref name="value" /> non è una stringa di data e ora formattata correttamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1040">
              <paramref name="value" /> is not a properly formatted date and time string.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md">
          <span data-ttu-id="93c64-1041">Analisi delle stringhe di data e ora in .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1041">Parsing Date and Time Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDecimal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-1042">Converte un valore specificato in un numero decimale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1042">Converts a specified value to a decimal number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Boolean) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : bool -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1043">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1043">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1044">Converte il valore booleano specificato nel numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1044">Converts the specified Boolean value to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1045">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1045">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1046">L'esempio seguente illustra la conversione di <xref:System.Boolean> a <xref:System.Decimal> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1046">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : byte -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1047">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1047">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1048">Converte il valore dell'intero senza segno a 8 bit specificato nel numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1048">Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1049">Numero decimale equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1049">The decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1050">L'esempio seguente converte un <xref:System.Byte> valore per un <xref:System.Decimal> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1050">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(char value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : char -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1051">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1051">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1052">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1052">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1053">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1053">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1054">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1054">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1055">Nell'esempio seguente tenta di convertire un <xref:System.Char> valore per <xref:System.Decimal>e genera un'eccezione <xref:System.InvalidCastException> in caso di errore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1055">The following example attempts to convert a <xref:System.Char> value to <xref:System.Decimal>, and throws <xref:System.InvalidCastException> upon failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1056">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1056">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As DateTime) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : DateTime -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1057">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1057">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1058">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1058">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1059">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1059">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1060">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1060">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1061">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1061">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : decimal -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1062">Numero decimale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1062">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1063">Restituisce il numero decimale specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1063">Returns the specified decimal number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1064">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1064">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(double value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : double -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1065">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1065">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1066">Converte il valore del numero a virgola mobile a precisione doppia specificato in un numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1066">Converts the value of the specified double-precision floating-point number to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1067">Numero decimale equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1067">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1068">Il <xref:System.Decimal> valore restituito da questo metodo contiene un massimo di 15 cifre significative.</span><span class="sxs-lookup"><span data-stu-id="93c64-1068">The <xref:System.Decimal> value returned by this method contains a maximum of 15 significant digits.</span></span> <span data-ttu-id="93c64-1069">Se il `value` parametro contiene più di 15 cifre significative, il valore viene arrotondato al valore più vicino.</span><span class="sxs-lookup"><span data-stu-id="93c64-1069">If the `value` parameter contains more than 15 significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="93c64-1070">Nell'esempio seguente viene illustrato come la <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> metodo Usa l'arrotondamento al più vicino a restituire un <xref:System.Decimal> valore con 15 cifre significative.</span><span class="sxs-lookup"><span data-stu-id="93c64-1070">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> method uses rounding to nearest to return a <xref:System.Decimal> value with 15 significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1071">L'esempio seguente converte un <xref:System.Double> valore per un <xref:System.Decimal> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1071">The following example converts a <xref:System.Double> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1072">
            <paramref name="value" /> è maggiore di <see cref="F:System.Decimal.MaxValue" /> o minore di <see cref="F:System.Decimal.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1072">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(short value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int16 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1073">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1073">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1074">Converte il valore dell'intero con segno a 16 bit specificato in un numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1074">Converts the value of the specified 16-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1075">Numero decimale equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1075">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1076">Nell'esempio seguente converte una matrice di interi con segno a 16 bit a <xref:System.Decimal> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1076">The following example converts an array of 16-bit signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(int value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1077">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1077">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1078">Converte il valore dell'intero con segno a 32 bit specificato in un numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1078">Converts the value of the specified 32-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1079">Numero decimale equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1079">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1080">Nell'esempio seguente converte una matrice di interi con segno da <xref:System.Decimal> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1080">The following example converts an array of signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#3)]
 [!code-vb[System.Convert.ToDecimal2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(long value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int64 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1081">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1081">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1082">Converte il valore dell'intero con segno a 64 bit specificato in un numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1082">Converts the value of the specified 64-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1083">Numero decimale equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1083">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1084">L'esempio seguente converte un' <xref:System.Int64> valore per un <xref:System.Decimal> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1084">The following example converts an <xref:System.Int64> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#10)]
 [!code-csharp[System.Convert Snippets#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#10)]
 [!code-vb[System.Convert Snippets#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : obj -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1085">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1085">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1086">Converte il valore dell'oggetto specificato in un numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1086">Converts the value of the specified object to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1087">Numero decimale equivalente a <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1087">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1088">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1088">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1089">Nell'esempio seguente prova a convertire ogni elemento nella matrice di oggetti per un <xref:System.Decimal> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1089">The following example tries to convert each element in an object array to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#4)]
 [!code-vb[System.Convert.ToDecimal2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1090">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1090">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1091">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1091">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1092">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1092">-or-</span>
          </span>
          <span data-ttu-id="93c64-1093">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1093">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1094">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1094">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : sbyte -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1095">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1095">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1096">Converte il valore dell'intero con segno a 8 bit specificato nel numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1096">Converts the value of the specified 8-bit signed integer to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1097">Numero decimale equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1097">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1098">L'esempio seguente converte ogni elemento in una matrice di byte con segno da un <xref:System.Decimal> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1098">The following example converts each element in an array of signed bytes to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#5)]
 [!code-vb[System.Convert.ToDecimal2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(float value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : single -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1099">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1099">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1100">Converte il valore del numero a virgola mobile a precisione singola specificato nel numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1100">Converts the value of the specified single-precision floating-point number to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1101">Numero decimale equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1101">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1102">Il <xref:System.Decimal> valore restituito da questo metodo contiene un massimo di sette cifre significative.</span><span class="sxs-lookup"><span data-stu-id="93c64-1102">The <xref:System.Decimal> value returned by this method contains a maximum of seven significant digits.</span></span> <span data-ttu-id="93c64-1103">Se il `value` parametro contiene più di sette cifre significative, il valore viene arrotondato al valore più vicino.</span><span class="sxs-lookup"><span data-stu-id="93c64-1103">If the `value` parameter contains more than seven significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="93c64-1104">Nell'esempio seguente viene illustrato come la <xref:System.Convert.ToDecimal%28System.Single%29> metodo Usa l'arrotondamento al più vicino a restituire un <xref:System.Decimal> valore con un numero di cifre significative.</span><span class="sxs-lookup"><span data-stu-id="93c64-1104">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Single%29> method uses rounding to nearest to return a <xref:System.Decimal> value with seven significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1105">Nell'esempio seguente prova a convertire ogni elemento in una matrice di <xref:System.Single> valori da un <xref:System.Decimal> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1105">The following example tries to convert each element in an array of <xref:System.Single> values to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#6)]
 [!code-vb[System.Convert.ToDecimal2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1106">
            <paramref name="value" /> è maggiore di <see cref="F:System.Decimal.MaxValue" /> o minore di <see cref="F:System.Decimal.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1106">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1107">Stringa che contiene un numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1107">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1108">Converte la rappresentazione di stringa specificata di un numero in un numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1108">Converts the specified string representation of a number to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1109">Numero decimale equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1109">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1110">Usando il <xref:System.Convert.ToDecimal%28System.String%29> metodo equivale a passare `value` per il <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1110">Using the <xref:System.Convert.ToDecimal%28System.String%29> method is equivalent to passing `value` to the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-1111">`value` viene interpretato utilizzando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1111">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-1112">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1112">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1113">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1113">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1114">Nell'esempio seguente viene illustrato l'utilizzo di `ToDecimal`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1114">The following example illustrates the use of `ToDecimal`.</span></span> <span data-ttu-id="93c64-1115">Tenta di convertire un <xref:System.String> a un <xref:System.Decimal>e genera le eccezioni che possono verificarsi durante la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-1115">It attempts to convert a <xref:System.String> to a <xref:System.Decimal>, and throws the possible exceptions that may arise during the conversion.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1116">
            <paramref name="value" /> non è un numero in formato valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1116">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1117">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1117">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint16 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1118">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1118">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1119">Converte il valore dell'intero senza segno a 16 bit specificato in un numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1119">Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1120">Numero decimale equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1120">The decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1121">Nell'esempio seguente converte una matrice di interi senza segno a 16 bit a <xref:System.Decimal> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1121">The following example converts an array of 16-bit unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#7)]
 [!code-vb[System.Convert.ToDecimal2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint32 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1122">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1122">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1123">Converte il valore dell'intero senza segno a 32 bit specificato in un numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1123">Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1124">Numero decimale equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1124">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1125">Nell'esempio seguente converte una matrice di interi senza segno da <xref:System.Decimal> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1125">The following example converts an array of unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#8)]
 [!code-vb[System.Convert.ToDecimal2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint64 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1126">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1126">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1127">Converte il valore dell'intero senza segno a 64 bit specificato in un numero decimale equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1127">Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1128">Numero decimale equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1128">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1129">Nell'esempio seguente converte una matrice di valori unsigned long integer a <xref:System.Decimal> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1129">The following example converts an array of unsigned long integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#9)]
 [!code-vb[System.Convert.ToDecimal2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : obj * IFormatProvider -&gt; decimal" Usage="System.Convert.ToDecimal (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1130">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1130">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1131">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1131">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1132">Converte il valore dell'oggetto specificato in un numero decimale equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1132">Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1133">Numero decimale equivalente a <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1133">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1134">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1134">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="93c64-1135">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1135">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-1136">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-1136">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1137">Nell'esempio seguente viene definita una classe `Temperature` che implementa l'interfaccia <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="93c64-1137">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#10)]
 [!code-vb[System.Convert.ToDecimal2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#10)]  
  
 <span data-ttu-id="93c64-1138">L'esempio seguente mostra che quando un `Temperature` oggetto viene passato come parametro per il <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29> metodo, il <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> implementazione del `Temperature` classe viene chiamata per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-1138">The following example shows that when a `Temperature` object is passed as a parameter to the <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29> method, the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> implementation of the `Temperature` class is called to perform the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#11)]
 [!code-vb[System.Convert.ToDecimal2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1139">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1139">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1140">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1140">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1141">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1141">-or-</span>
          </span>
          <span data-ttu-id="93c64-1142">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1142">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1143">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1143">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string * IFormatProvider -&gt; decimal" Usage="System.Convert.ToDecimal (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1144">Stringa che contiene un numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1144">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1145">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1145">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1146">Converte la rappresentazione di stringa specificata di un numero in un numero decimale equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1146">Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1147">Numero decimale equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1147">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1148">Il valore restituito è il risultato ottenuto richiamando la <xref:System.Decimal.Parse%2A?displayProperty=nameWithType> metodo `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1148">The return value is the result of invoking the <xref:System.Decimal.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="93c64-1149">`provider` è un' <xref:System.IFormatProvider> istanza che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1149">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-1150">Il <xref:System.Globalization.NumberFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1150">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-1151">Se `provider` viene `null`, il <xref:System.Globalization.NumberFormatInfo> per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-1151">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-1152">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1152">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1153">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1153">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1154">Nell'esempio seguente tenta di convertire una matrice di stringhe <xref:System.Decimal> valori mediante <xref:System.Globalization.NumberFormatInfo> gli oggetti che rappresentano due diverse impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="93c64-1154">The following example attempts to convert an array of strings to <xref:System.Decimal> values by using <xref:System.Globalization.NumberFormatInfo> objects that represent two different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal3.cs#12)]
 [!code-vb[System.Convert.ToDecimal2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal3.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1155">
            <paramref name="value" /> non è un numero in formato valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1155">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1156">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1156">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDouble">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-1157">Converte un valore specificato in un numero a virgola mobile a precisione doppia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1157">Converts a specified value to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : bool -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1158">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1158">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1159">Converte il valore booleano specificato nel numero a virgola mobile a precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1159">Converts the specified Boolean value to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1160">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1160">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1161">L'esempio seguente converte un <xref:System.Boolean> valore per un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1161">The following example converts a <xref:System.Boolean> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Byte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : byte -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1162">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1162">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1163">Converte il valore dell'intero senza segno a 8 bit specificato nel numero a virgola mobile e con precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1163">Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1164">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1164">The double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1165">L'esempio seguente converte un <xref:System.Byte> valore per un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1165">The following example converts a <xref:System.Byte> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(char value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : char -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1166">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1166">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1167">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1167">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1168">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1168">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1169">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1169">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1170">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1170">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : DateTime -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1171">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1171">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1172">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1172">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1173">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1173">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1174">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1174">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1175">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1175">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : decimal -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1176">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1176">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1177">Converte il valore del numero decimale specificato in un numero a virgola mobile a precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1177">Converts the value of the specified decimal number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1178">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1178">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1179">L'esempio seguente converte un <xref:System.Decimal> valore per un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1179">The following example converts a <xref:System.Decimal> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(double value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : double -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1180">Numero a virgola mobile e con precisione doppia da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1180">The double-precision floating-point number to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1181">Restituisce il numero a virgola mobile a precisione doppia specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1181">Returns the specified double-precision floating-point number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1182">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1182">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Short) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(short value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int16 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1183">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1183">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1184">Converte il valore dell'intero con segno a 16 bit specificato in un numero a virgola mobile e con precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1184">Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1185">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1185">A double-precision floating-point number equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1186">Nell'esempio seguente converte ogni elemento in una matrice di interi con segno a 16 bit a un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1186">The following example converts each element in an array of 16-bit signed integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#1)]
 [!code-vb[System.Convert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(int value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1187">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1187">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1188">Converte il valore dell'intero con segno a 32 bit specificato in un numero a virgola mobile a precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1188">Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1189">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1189">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1190">L'esempio seguente converte un' <xref:System.Int32> valore per un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1190">The following example converts an <xref:System.Int32> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#3)]
 [!code-csharp[System.Convert Snippets#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#3)]
 [!code-vb[System.Convert Snippets#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(long value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int64 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1191">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1191">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1192">Converte il valore dell'intero con segno a 64 bit specificato in un numero a virgola mobile a precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1192">Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1193">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1193">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1194">Nell'esempio seguente converte ogni elemento in una matrice di interi con segno a lungo per un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1194">The following example converts each element in an array of signed long integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#2)]
 [!code-vb[System.Convert.ToDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : obj -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1195">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1195">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1196">Converte il valore dell'oggetto specificato in un numero a virgola mobile a precisione doppia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1196">Converts the value of the specified object to a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1197">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1197">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1198">Se `value` non è `null`, questo metodo esegue il wrapping di una chiamata ai <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> implementazione del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1198">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1199">Nell'esempio seguente tenta di convertire ogni valore in una matrice di oggetti per un <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1199">The following example attempts to convert each value in an object array to a <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#3)]
 [!code-vb[System.Convert.ToDouble#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1200">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1200">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1201">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1201">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1202">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1202">-or-</span>
          </span>
          <span data-ttu-id="93c64-1203">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1203">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1204">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Double.MinValue" /> o maggiore di <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1204">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As SByte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : sbyte -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1205">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1205">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1206">Converte il valore dell'intero con segno a 8 bit specificato nel numero a virgola mobile a precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1206">Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1207">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1207">The 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1208">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.SByte> valori da un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1208">The following example converts each element in an array of <xref:System.SByte> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#4)]
 [!code-vb[System.Convert.ToDouble#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Single) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(float value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : single -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1209">Numero a virgola mobile e con precisione singola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1209">The single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1210">Converte il valore del numero a virgola mobile e con precisione singola specificato in un numero a virgola mobile e con precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1210">Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1211">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1211">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1212">L'esempio seguente converte un <xref:System.Single> valore per un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1212">The following example converts a <xref:System.Single> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#6)]
 [!code-csharp[System.Convert Snippets#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#6)]
 [!code-vb[System.Convert Snippets#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1213">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1213">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1214">Converte la rappresentazione di stringa specificata di un numero in un numero a virgola mobile a precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1214">Converts the specified string representation of a number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1215">Numero a virgola mobile e con precisione doppia equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1215">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1216">Usando il <xref:System.Convert.ToDouble%28System.String%29> metodo equivale a passare `value` per il <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1216">Using the <xref:System.Convert.ToDouble%28System.String%29> method is equivalent to passing `value` to the <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-1217">`value` viene interpretato utilizzando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1217">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-1218">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Double.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1218">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1219">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1219">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1220">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di stringhe numeriche in un <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1220">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Double>.</span></span> <span data-ttu-id="93c64-1221">L'output dell'esempio è da un sistema le cui impostazioni cultura corrente sono en-US.</span><span class="sxs-lookup"><span data-stu-id="93c64-1221">The example's output is from a system whose current culture is en-US.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/example8.cs#8)]
 [!code-vb[System.Convert.ToDouble#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/example8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1222">
            <paramref name="value" /> non è un numero in formato valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1222">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1223">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Double.MinValue" /> o maggiore di <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1223">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UShort) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint16 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1224">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1224">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1225">Converte il valore dell'intero senza segno a 16 bit specificato nel numero a virgola mobile a precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1225">Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1226">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1226">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1227">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.UInt16> valori da un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1227">The following example converts each element in an array of <xref:System.UInt16> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#5)]
 [!code-vb[System.Convert.ToDouble#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint32 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1228">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1228">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1229">Converte il valore dell'intero senza segno a 32 bit specificato in un numero a virgola mobile a precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1229">Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1230">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1230">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1231">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.UInt32> valori da un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1231">The following example converts each element in an array of <xref:System.UInt32> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#6)]
 [!code-vb[System.Convert.ToDouble#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As ULong) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint64 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1232">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1232">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1233">Converte il valore dell'intero senza segno a 64 bit specificato in un numero a virgola mobile a precisione doppia equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1233">Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1234">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1234">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1235">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.UInt64> valori da un <xref:System.Double> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1235">The following example converts each element in an array of <xref:System.UInt64> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#7)]
 [!code-vb[System.Convert.ToDouble#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDouble : obj * IFormatProvider -&gt; double" Usage="System.Convert.ToDouble (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1236">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1236">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1237">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1237">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1238">Converte il valore dell'oggetto specificato in un numero a virgola mobile e con precisione doppia mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1238">Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1239">Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1239">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1240">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1240">The return value is the result of invoking the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="93c64-1241">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1241">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-1242">Ad esempio, se `value` è un <xref:System.String> che rappresenta un numero, `provider` potrebbe fornire informazioni specifiche delle impostazioni cultura sulla notazione usata per rappresentare il numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1242">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="93c64-1243">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-1243">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1244">L'esempio seguente definisce una classe che implementa <xref:System.IConvertible> e una classe che implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1244">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="93c64-1245">Gli oggetti della classe che implementa <xref:System.IConvertible> contengono una matrice di <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1245">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="93c64-1246">Viene passato un oggetto di ogni classe per il `ToDouble` (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1246">An object of each class is passed to the `ToDouble` method.</span></span> <span data-ttu-id="93c64-1247">Questo metodo restituisce una media della matrice di <xref:System.Double> valori, utilizzando l'oggetto che implementa <xref:System.IFormatProvider> per determinare la modalità calcolare la Media.</span><span class="sxs-lookup"><span data-stu-id="93c64-1247">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1248">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1248">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1249">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1249">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1250">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Double.MinValue" /> o maggiore di <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1250">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string * IFormatProvider -&gt; double" Usage="System.Convert.ToDouble (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1251">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1251">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1252">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1252">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1253">Converte la rappresentazione di stringa specificata di un numero in un numero a virgola mobile a precisione doppia equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1253">Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1254">Numero a virgola mobile e con precisione doppia equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1254">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1255">Il valore restituito è il risultato ottenuto richiamando la <xref:System.Double.Parse%2A?displayProperty=nameWithType> metodo `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1255">The return value is the result of invoking the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="93c64-1256">`provider` è un' <xref:System.IFormatProvider> istanza che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1256">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-1257">Il <xref:System.Globalization.NumberFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1257">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-1258">Se `provider` viene `null`, il <xref:System.Globalization.NumberFormatInfo> per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-1258">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-1259">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Double.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1259">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1260">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1260">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1261">L'esempio seguente converte le rappresentazioni di stringa del <xref:System.Double> i valori con il `ToDouble` metodo, usando un <xref:System.IFormatProvider> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1261">The following example converts string representations of <xref:System.Double> values with the `ToDouble` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToReals_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToReals_String/CS/todouble.cs#2)]
 [!code-vb[System.Convert.ToReals_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToReals_String/VB/todouble.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1262">
            <paramref name="value" /> non è un numero in formato valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1262">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1263">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Double.MinValue" /> o maggiore di <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1263">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-1264">Converte un valore specificato in un intero con segno a 16 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1264">Converts a specified value to a 16-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Boolean) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : bool -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1265">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1265">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1266">Converte il valore booleano specificato nell'intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1266">Converts the specified Boolean value to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1267">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1267">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1268">L'esempio seguente converte i valori booleani `true` e `false` a <xref:System.Int16> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1268">The following example converts the Boolean values `true` and `false` to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Convert.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Byte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : byte -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1269">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1269">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1270">Converte il valore dell'intero senza segno a 8 bit specificato nell'intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1270">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1271">Intero con segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1271">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1272">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Byte> valori da un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1272">The following example converts each element in an array of <xref:System.Byte> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#2)]
 [!code-vb[System.Convert.ToInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Char) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : char -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1273">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1273">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1274">Converte il valore del carattere Unicode specificato nell'intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1274">Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1275">Intero con segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1275">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1276">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Char> valori da un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1276">The following example attempts to convert each element in an array of <xref:System.Char> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#3)]
 [!code-vb[System.Convert.ToInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1277">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1277">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As DateTime) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : DateTime -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1278">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1278">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1279">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1279">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1280">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1280">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1281">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1281">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1282">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1282">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : decimal -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1283">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1283">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1284">Converte il valore del numero decimale specificato in un intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1284">Converts the value of the specified decimal number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1285">
            <paramref name="value" />, arrotondato all'intero con segno a 16 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1285">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1286">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1286">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1287">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Decimal> valori da un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1287">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a 16-bit signed integer.</span></span> <span data-ttu-id="93c64-1288">Nell'esempio viene illustrato che una parte frazionaria di un <xref:System.Decimal> valore viene arrotondato quando si esegue la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-1288">The example illustrates that any fractional part of a <xref:System.Decimal> value is rounded when performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#4)]
 [!code-vb[System.Convert.ToInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1289">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" /> o minore di <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1289">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Double) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : double -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1290">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1290">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1291">Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1291">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1292">
            <paramref name="value" />, arrotondato all'intero con segno a 16 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1292">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1293">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1293">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1294">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Double> valori da un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1294">The following example converts each element in an array of <xref:System.Double> values to a 16-bit signed integer.</span></span> <span data-ttu-id="93c64-1295">Nell'esempio viene illustrato che una parte frazionaria di un <xref:System.Double> valore viene arrotondato prima di eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-1295">The example illustrates that any fractional part of a <xref:System.Double> value is rounded before performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#5)]
 [!code-vb[System.Convert.ToInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1296">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" /> o minore di <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1296">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int16 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1297">Intero con segno a 16 bit da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1297">The 16-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1298">Restituisce l'intero con segno a 16 bit specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1298">Returns the specified 16-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1299">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1299">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1300">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1300">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1301">Converte il valore dell'intero con segno a 32 bit specificato in un intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1301">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1302">Intero con segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1302">The 16-bit signed integer equivalent of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1303">Nell'esempio seguente prova a convertire ogni elemento in una matrice di integer in un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1303">The following example attempts to convert each element in an array of integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#6)]
 [!code-vb[System.Convert.ToInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1304">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" /> o minore di <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1304">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Long) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int64 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1305">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1305">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1306">Converte il valore dell'intero con segno a 64 bit specificato in un intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1306">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1307">Intero con segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1307">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1308">Nell'esempio seguente prova a convertire ogni elemento in una matrice di valori long integer in un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1308">The following example attempts to convert each element in an array of long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#7)]
 [!code-vb[System.Convert.ToInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1309">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" /> o minore di <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1309">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : obj -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1310">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1310">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1311">Converte il valore dell'oggetto specificato in un intero con segno a 16 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1311">Converts the value of the specified object to a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1312">Intero con segno a 16 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1312">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1313">Se `value` non è `null`, questo metodo esegue il wrapping di una chiamata ai <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> implementazione del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1313">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1314">Nell'esempio seguente prova a convertire ogni elemento nella matrice di oggetti in un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1314">The following example attempts to convert each element in an object array to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#8)]
 [!code-vb[System.Convert.ToInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1315">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1315">
              <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1316">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1316">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1317">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1317">-or-</span>
          </span>
          <span data-ttu-id="93c64-1318">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1318">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1319">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1319">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As SByte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : sbyte -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1320">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1320">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1321">Converte il valore dell'intero con segno a 8 bit specificato nell'intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1321">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1322">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1322">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1323">Nell'esempio seguente converte ogni elemento in una matrice di byte con segno in un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1323">The following example converts each element in an array of signed bytes to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#9)]
 [!code-vb[System.Convert.ToInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Single) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : single -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1324">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1324">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1325">Converte il valore del numero a virgola mobile a precisione singola specificato in un intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1325">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1326">
            <paramref name="value" />, arrotondato all'intero con segno a 16 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1326">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1327">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1327">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1328">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Single> valori da un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1328">The following example attempts to convert each element in an array of <xref:System.Single> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#10)]
 [!code-vb[System.Convert.ToInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1329">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" /> o minore di <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1329">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1330">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1330">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1331">Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1331">Converts the specified string representation of a number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1332">Intero con segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1332">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1333">Usando il <xref:System.Convert.ToInt16%28System.String%29> metodo equivale a passare `value` per il <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1333">Using the <xref:System.Convert.ToInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-1334">`value` viene interpretato utilizzando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1334">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-1335">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1335">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1336">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1336">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1337">L'esempio seguente converte le rappresentazioni di stringa di interi a 16 bit con la `ToInt16` metodo, usando la formattazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="93c64-1337">The following example converts string representations of 16-bit integers with the `ToInt16` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1338">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1338">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1339">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1339">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UShort) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint16 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1340">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1340">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1341">Converte il valore dell'intero senza segno a 16 bit specificato nell'intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1341">Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1342">Intero con segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1342">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1343">Nell'esempio seguente prova a convertire ogni elemento in una matrice di interi senza segno a 16 bit in un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1343">The following example attempts to convert each element in an array of unsigned 16-bit integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#11)]
 [!code-vb[System.Convert.ToInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1344">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1344">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint32 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1345">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1345">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1346">Converte il valore dell'intero senza segno a 32 bit specificato in un intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1346">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1347">Intero con segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1347">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1348">Nell'esempio seguente prova a convertire ogni elemento in una matrice di interi senza segno in un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1348">The following example attempts to convert each element in an array of unsigned integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#12)]
 [!code-vb[System.Convert.ToInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1349">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1349">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As ULong) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint64 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1350">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1350">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1351">Converte il valore dell'intero senza segno a 64 bit specificato in un intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1351">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1352">Intero con segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1352">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1353">Nell'esempio seguente prova a convertire ogni elemento in una matrice di valori unsigned long integer in un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1353">The following example attempts to convert each element in an array of unsigned long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#13)]
 [!code-vb[System.Convert.ToInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1354">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1354">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : obj * IFormatProvider -&gt; int16" Usage="System.Convert.ToInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1355">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1355">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1356">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1356">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1357">Converte il valore dell'oggetto specificato in un intero con segno a 16 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1357">Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1358">Intero con segno a 16 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1358">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1359">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1359">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-1360">Ad esempio, se `value` è un <xref:System.String> che rappresenta un numero, `provider` potrebbe fornire informazioni specifiche delle impostazioni cultura sulla notazione usata per rappresentare il numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1360">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="93c64-1361">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-1361">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1362">L'esempio seguente definisce una classe che implementa <xref:System.IConvertible> e una classe che implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1362">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="93c64-1363">Gli oggetti della classe che implementa <xref:System.IConvertible> contengono una matrice di <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1363">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="93c64-1364">Viene passato un oggetto di ogni classe per il `ToInt16` (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1364">An object of each class is passed to the `ToInt16` method.</span></span> <span data-ttu-id="93c64-1365">Questo metodo restituisce una media della matrice di <xref:System.Double> valori, utilizzando l'oggetto che implementa <xref:System.IFormatProvider> per determinare la modalità calcolare la Media.</span><span class="sxs-lookup"><span data-stu-id="93c64-1365">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1366">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1366">
              <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1367">
            <paramref name="value" /> non implementa <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1367">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1368">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1368">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string * IFormatProvider -&gt; int16" Usage="System.Convert.ToInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1369">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1369">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1370">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1370">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1371">Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 16 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1371">Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1372">Intero con segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1372">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1373">`provider` è un' <xref:System.IFormatProvider> istanza che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1373">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-1374">Il <xref:System.Globalization.NumberFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1374">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-1375">Se `provider` viene `null`, il <xref:System.Globalization.NumberFormatInfo> per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-1375">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-1376">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1376">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1377">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1377">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1378">L'esempio seguente converte le rappresentazioni di stringa di interi a 16 bit con la `ToInt16` metodo, usando un <xref:System.IFormatProvider> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1378">The following example converts string representations of 16-bit integers with the `ToInt16` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1379">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1379">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1380">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1380">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, fromBase As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string * int -&gt; int16" Usage="System.Convert.ToInt16 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1381">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1381">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="93c64-1382">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1382">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1383">Converte la rappresentazione di stringa di un numero in una base specificata nell'intero con segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1383">Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1384">Intero con segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1384">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1385">Se `fromBase` è 16, è possibile anteporre al numero specificato da di `value` parametro con "0x" o "0x".</span><span class="sxs-lookup"><span data-stu-id="93c64-1385">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="93c64-1386">Poiché il segno negativo non è supportato per la rappresentazione numerica non in base 10, il <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> metodo presuppone che i numeri negativi per la rappresentazione di complemento a uno di due.</span><span class="sxs-lookup"><span data-stu-id="93c64-1386">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="93c64-1387">In altre parole, il metodo sempre interpreta i bit più significativo binario di un numero intero (15 bit) come bit di segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1387">In other words, the method always interprets the highest-order binary bit of an integer (bit 15) as its sign bit.</span></span> <span data-ttu-id="93c64-1388">Di conseguenza, è possibile scrivere codice in cui una non in base 10 numeri che è compreso nell'intervallo del <xref:System.Int16> tipo di dati viene convertito in un <xref:System.Int16> valore senza il metodo che genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-1388">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int16> data type is converted to an <xref:System.Int16> value without the method throwing an exception.</span></span> <span data-ttu-id="93c64-1389">Gli incrementi di esempio seguenti <xref:System.Int16.MaxValue?displayProperty=nameWithType> di uno, converte il numero risulta nella relativa rappresentazione di stringa esadecimale e quindi chiama il <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1389">The following example increments <xref:System.Int16.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="93c64-1390">Anziché generare un'eccezione, il metodo visualizza il messaggio "0x8000 viene convertito da -32768".</span><span class="sxs-lookup"><span data-stu-id="93c64-1390">Instead of throwing an exception, the method displays the message, "0x8000 converts to -32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#5)]
 [!code-vb[System.Convert.BaseConversion#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#5)]  
  
 <span data-ttu-id="93c64-1391">Quando si esegue operazioni binarie o conversioni numeriche, è sempre la responsabilità dello sviluppatore per verificare che un metodo viene utilizzata la rappresentazione numerica appropriata per interpretare un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="93c64-1391">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="93c64-1392">Come illustrato nell'esempio seguente, è possibile garantire che i metodo consente di gestire gli overflow in modo appropriato, recuperando prima il segno del valore numerico prima di convertirlo nella relativa rappresentazione di stringa esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-1392">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="93c64-1393">Generare un'eccezione se il valore originale era positivo, ma la conversione in un intero produce un valore negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1393">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#6)]
 [!code-vb[System.Convert.BaseConversion#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#6)]  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1394">Nell'esempio seguente tenta di interpretazione di ogni elemento nella matrice di stringhe come stringa esadecimale e di convertirlo in un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-1394">The following example attempts to interpret each element in a string array as a hexadecimal string and to convert it to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_2.cs#14)]
 [!code-vb[System.Convert.ToInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-1395">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1395">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="93c64-1396">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1396">-or-</span>
          </span>
          <span data-ttu-id="93c64-1397">
            <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1397">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-1398">
            <paramref name="value" /> è <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1398">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1399">
            <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1399">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="93c64-1400">Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1400">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1401">
            <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1401">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="93c64-1402">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1402">-or-</span>
          </span>
          <span data-ttu-id="93c64-1403">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1403">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-1404">Converte un valore specificato in un intero con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1404">Converts a specified value to a 32-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : bool -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1405">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1405">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1406">Converte il valore booleano specificato nell'intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1406">Converts the specified Boolean value to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1407">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1407">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1408">L'esempio seguente converte la <xref:System.Boolean> i valori `true` e `false` a numeri interi.</span><span class="sxs-lookup"><span data-stu-id="93c64-1408">The following example converts the <xref:System.Boolean> values `true` and `false` to integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Convert.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : byte -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1409">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1409">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1410">Converte il valore dell'intero senza segno a 8 bit specificato nell'intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1410">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1411">Intero con segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1411">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1412">Nell'esempio seguente converte ogni elemento in una matrice di byte in un intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1412">The following example converts each element in an array of bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#2)]
 [!code-vb[System.Convert.ToInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : char -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1413">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1413">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1414">Converte il valore del carattere Unicode specificato nell'intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1414">Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1415">Intero con segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1415">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1416">Il <xref:System.Convert.ToInt32%28System.Char%29> metodo restituisce un intero con segno a 32 bit che rappresenta l'unità di codice codificata UTF-16 del `value` argomento.</span><span class="sxs-lookup"><span data-stu-id="93c64-1416">The <xref:System.Convert.ToInt32%28System.Char%29> method returns a 32-bit signed integer that represents the UTF-16 encoded code unit of the `value` argument.</span></span> <span data-ttu-id="93c64-1417">Se `value` non è un surrogato basso o un surrogato alto, questo valore restituito rappresenta anche il punto di codice Unicode del valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1417">If `value` is not a low surrogate or a high surrogate, this return value also represents the Unicode code point of value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1418">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Char> valori in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1418">The following example converts each element in an array of <xref:System.Char> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#3)]
 [!code-vb[System.Convert.ToInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : DateTime -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1419">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1419">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1420">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1420">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1421">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1421">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1422">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1422">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1423">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1423">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : decimal -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1424">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1424">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1425">Converte il valore del numero decimale specificato in un intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1425">Converts the value of the specified decimal number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1426">
            <paramref name="value" />, arrotondato all'intero con segno a 32 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1426">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1427">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1427">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1428">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Decimal> valori in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1428">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
 [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1429">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" /> o minore di <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1429">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : double -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1430">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1430">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1431">Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1431">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1432">
            <paramref name="value" />, arrotondato all'intero con segno a 32 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1432">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1433">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1433">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1434">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Double> valori aninteger.</span><span class="sxs-lookup"><span data-stu-id="93c64-1434">The following example attempts to convert each element in an array of <xref:System.Double> values to aninteger.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#5)]
 [!code-vb[System.Convert.ToInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1435">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" /> o minore di <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1435">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int16 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1436">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1436">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1437">Converte il valore dell'intero con segno a 16 bit specificato in un intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1437">Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1438">Intero con segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1438">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1439">Nell'esempio seguente converte ogni elemento in una matrice di interi con segno a 16 bit in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1439">The following example converts each element in an array of 16-bit signed integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#6)]
 [!code-vb[System.Convert.ToInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1440">Intero con segno a 32 bit da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1440">The 32-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1441">Restituisce l'intero con segno a 32 bit specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1441">Returns the specified 32-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1442">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1442">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int64 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1443">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1443">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1444">Converte il valore dell'intero con segno a 64 bit specificato in un intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1444">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1445">Intero con segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1445">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1446">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di valori long integer in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1446">The following example attempts to convert each element in an array of long integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#7)]
 [!code-vb[System.Convert.ToInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1447">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" /> o minore di <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1447">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : obj -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1448">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1448">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1449">Converte il valore dell'oggetto specificato in un intero con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1449">Converts the value of the specified object to a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1450">Intero con segno a 32 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1450">A 32-bit signed integer equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1451">Se`value` non è `null`, questo metodo esegue il wrapping di una chiamata ai <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> implementazione del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1451">If`value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1452">Nell'esempio seguente tenta di convertire ogni elemento nella matrice di oggetti in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1452">The following example attempts to convert each element in an object array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#8)]
 [!code-vb[System.Convert.ToInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1453">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1453">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1454">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1454">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1455">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1455">-or-</span>
          </span>
          <span data-ttu-id="93c64-1456">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1456">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1457">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1457">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : sbyte -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1458">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1458">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1459">Converte il valore dell'intero con segno a 8 bit specificato nell'intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1459">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1460">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1460">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1461">Nell'esempio seguente converte ogni elemento in una matrice di byte con segno in un intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1461">The following example converts each element in an array of signed bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#9)]
 [!code-vb[System.Convert.ToInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : single -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1462">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1462">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1463">Converte il valore del numero a virgola mobile a precisione singola specificato in un intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1463">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1464">
            <paramref name="value" />, arrotondato all'intero con segno a 32 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1464">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1465">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1465">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1466">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Single> valori in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1466">The following example attempts to convert each element in an array of <xref:System.Single> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#10)]
 [!code-vb[System.Convert.ToInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1467">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" /> o minore di <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1467">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1468">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1468">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1469">Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1469">Converts the specified string representation of a number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1470">Intero con segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1470">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1471">Usando il <xref:System.Convert.ToInt32%28System.String%29> metodo equivale a passare `value` per il <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> (metodo).`value`</span><span class="sxs-lookup"><span data-stu-id="93c64-1471">Using the <xref:System.Convert.ToInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.`value`</span></span> <span data-ttu-id="93c64-1472">viene interpretata usando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1472">is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-1473">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1473">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1474">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1474">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1475">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di stringhe numeriche in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1475">The following example attempts to convert each element in a numeric string array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#11)]
 [!code-vb[System.Convert.ToInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1476">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1476">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1477">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1477">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint16 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1478">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1478">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1479">Converte il valore dell'intero senza segno a 16 bit specificato nell'intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1479">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1480">Intero con segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1480">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1481">Nell'esempio seguente converte ogni elemento in una matrice di interi senza segno a 16 bit in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1481">The following example converts each element in an array of 16-bit unsigned integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#12)]
 [!code-vb[System.Convert.ToInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint32 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1482">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1482">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1483">Converte il valore dell'intero senza segno a 32 bit specificato in un intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1483">Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1484">Intero con segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1484">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1485">Nell'esempio seguente prova a convertire ogni elemento in una matrice di interi senza segno in un intero con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1485">The following example attempts to convert each element in an array of unsigned integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#13)]
 [!code-vb[System.Convert.ToInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1486">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1486">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint64 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1487">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1487">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1488">Converte il valore dell'intero senza segno a 64 bit specificato in un intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1488">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1489">Intero con segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1489">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1490">Nell'esempio seguente prova a convertire ogni elemento in una matrice di valori unsigned long integer in un intero con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1490">The following example attempts to convert each element in an array of unsigned long integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#14)]
 [!code-vb[System.Convert.ToInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1491">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1491">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : obj * IFormatProvider -&gt; int" Usage="System.Convert.ToInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1492">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1492">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1493">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1493">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1494">Converte il valore dell'oggetto specificato in un intero con segno a 32 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1494">Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1495">Intero con segno a 32 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1495">A 32-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1496">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1496">The return value is the result of invoking the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="93c64-1497">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1497">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-1498">Ad esempio, se `value` è un <xref:System.String> che rappresenta un numero, `provider` potrebbe fornire informazioni specifiche delle impostazioni cultura sulla notazione usata per rappresentare il numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1498">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="93c64-1499">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-1499">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1500">L'esempio seguente definisce una classe che implementa <xref:System.IConvertible> e una classe che implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1500">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="93c64-1501">Gli oggetti della classe che implementa <xref:System.IConvertible> contengono una matrice di <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1501">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="93c64-1502">Viene passato un oggetto di ogni classe per il `ToInt32` (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1502">An object of each class is passed to the `ToInt32` method.</span></span> <span data-ttu-id="93c64-1503">Questo metodo restituisce una media della matrice di <xref:System.Double> valori, utilizzando l'oggetto che implementa <xref:System.IFormatProvider> per determinare la modalità calcolare la Media.</span><span class="sxs-lookup"><span data-stu-id="93c64-1503">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1504">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1504">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1505">
            <paramref name="value" /> non implementa <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1505">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1506">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1506">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string * IFormatProvider -&gt; int" Usage="System.Convert.ToInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1507">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1507">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1508">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1508">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1509">Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 32 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1509">Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1510">Intero con segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1510">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1511">Il valore restituito è il risultato ottenuto richiamando la <xref:System.Int32.Parse%2A?displayProperty=nameWithType> metodo `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1511">The return value is the result of invoking the <xref:System.Int32.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="93c64-1512">`provider` è un' <xref:System.IFormatProvider> istanza che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1512">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-1513">Il <xref:System.Globalization.NumberFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1513">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-1514">Se `provider` viene `null`, il <xref:System.Globalization.NumberFormatInfo> per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-1514">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-1515">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1515">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1516">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1516">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1517">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> che riconosce la stringa "pos" come segno positivo e la stringa "neg" come il segno negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1517">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="93c64-1518">Tenta di convertire ogni elemento della matrice di stringhe numeriche in un intero utilizzando questo provider di entrambi e <xref:System.Globalization.NumberFormatInfo> provider per le impostazioni cultura invarianti.</span><span class="sxs-lookup"><span data-stu-id="93c64-1518">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_2.cs#15)]
 [!code-vb[System.Convert.ToInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1519">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1519">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1520">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1520">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, fromBase As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string * int -&gt; int" Usage="System.Convert.ToInt32 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1521">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1521">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="93c64-1522">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1522">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1523">Converte la rappresentazione di stringa di un numero in una base specificata nell'intero con segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1523">Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1524">Intero con segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1524">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1525">Se `fromBase` è 16, è possibile anteporre al numero specificato da di `value` parametro con "0x" o "0x".</span><span class="sxs-lookup"><span data-stu-id="93c64-1525">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="93c64-1526">Poiché il segno negativo non è supportato per la rappresentazione numerica non in base 10, il <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> metodo presuppone che i numeri negativi per la rappresentazione di complemento a uno di due.</span><span class="sxs-lookup"><span data-stu-id="93c64-1526">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="93c64-1527">In altre parole, il metodo sempre interpreta i bit più significativo binario di un numero intero (31 bit) come bit di segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1527">In other words, the method always interprets the highest-order binary bit of an integer (bit 31) as its sign bit.</span></span> <span data-ttu-id="93c64-1528">Di conseguenza, è possibile scrivere codice in cui una non in base 10 numeri che è compreso nell'intervallo del <xref:System.Int32> tipo di dati viene convertito in un <xref:System.Int32> valore senza il metodo che genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-1528">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int32> data type is converted to an <xref:System.Int32> value without the method throwing an exception.</span></span> <span data-ttu-id="93c64-1529">Gli incrementi di esempio seguenti <xref:System.Int32.MaxValue?displayProperty=nameWithType> di uno, converte il numero risulta nella relativa rappresentazione di stringa esadecimale e quindi chiama il <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1529">The following example increments <xref:System.Int32.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="93c64-1530">Anziché generare un'eccezione, il metodo visualizza il messaggio "0x80000000 viene convertito in tra -2147483648".</span><span class="sxs-lookup"><span data-stu-id="93c64-1530">Instead of throwing an exception, the method displays the message, "0x80000000 converts to -2147483648."</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#1)]
 [!code-csharp[System.Convert.BaseConversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#1)]
 [!code-vb[System.Convert.BaseConversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#1)]  
  
 <span data-ttu-id="93c64-1531">Quando si esegue operazioni binarie o conversioni numeriche, è sempre la responsabilità dello sviluppatore per verificare che un metodo viene utilizzata la rappresentazione numerica appropriata per interpretare un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="93c64-1531">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="93c64-1532">Come illustrato nell'esempio seguente, è possibile garantire che i metodo consente di gestire gli overflow in modo appropriato, recuperando prima il segno del valore numerico prima di convertirlo nella relativa rappresentazione di stringa esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-1532">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="93c64-1533">Generare un'eccezione se il valore originale era positivo, ma la conversione in un intero produce un valore negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1533">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#2)]
 [!code-csharp[System.Convert.BaseConversion#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#2)]
 [!code-vb[System.Convert.BaseConversion#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-1534">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1534">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="93c64-1535">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1535">-or-</span>
          </span>
          <span data-ttu-id="93c64-1536">
            <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1536">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-1537">
            <paramref name="value" /> è <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1537">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1538">
            <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1538">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="93c64-1539">Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1539">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1540">
            <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1540">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="93c64-1541">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1541">-or-</span>
          </span>
          <span data-ttu-id="93c64-1542">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1542">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-1543">Converte un valore specificato in un intero con segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1543">Converts a specified value to a 64-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Boolean) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : bool -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1544">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1544">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1545">Converte il valore booleano specificato nell'intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1545">Converts the specified Boolean value to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1546">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1546">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1547">L'esempio seguente converte la <xref:System.Boolean> i valori `true` e `false` in long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1547">The following example converts the <xref:System.Boolean> values `true` and `false` to long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Convert.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Byte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : byte -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1548">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1548">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1549">Converte il valore dell'intero senza segno a 8 bit specificato nell'intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1549">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1550">Intero con segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1550">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1551">Nell'esempio seguente converte ogni elemento in una matrice di byte in un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1551">The following example converts each element in an array of bytes to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#2)]
 [!code-vb[System.Convert.ToInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Char) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : char -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1552">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1552">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1553">Converte il valore del carattere Unicode specificato nell'intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1553">Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1554">Intero con segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1554">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1555">Nell'esempio seguente converte ogni elemento in un <xref:System.Char> matrice a un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1555">The following example converts each element in a <xref:System.Char> array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#3)]
 [!code-vb[System.Convert.ToInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As DateTime) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : DateTime -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1556">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1556">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1557">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1557">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1558">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1558">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1559">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1559">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1560">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1560">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : decimal -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1561">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1561">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1562">Converte il valore del numero decimale specificato in un intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1562">Converts the value of the specified decimal number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1563">
            <paramref name="value" />, arrotondato all'intero con segno a 64 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1563">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1564">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1564">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1565">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Decimal> valori da un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1565">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#4)]
 [!code-vb[System.Convert.ToInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1566">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int64.MaxValue" /> o minore di <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1566">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : double -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1567">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1567">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1568">Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1568">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1569">
            <paramref name="value" />, arrotondato all'intero con segno a 64 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1569">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1570">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1570">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1571">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Double> valori da un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1571">The following example attempts to convert each element in an array of <xref:System.Double> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#5)]
 [!code-vb[System.Convert.ToInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1572">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int64.MaxValue" /> o minore di <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1572">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Short) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int16 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1573">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1573">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1574">Converte il valore dell'intero con segno a 16 bit specificato in un intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1574">Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1575">Intero con segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1575">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1576">Nell'esempio seguente converte ogni elemento in una matrice di interi a 16 bit in un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1576">The following example converts each element in an array of 16-bit integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#6)]
 [!code-vb[System.Convert.ToInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1577">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1577">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1578">Converte il valore dell'intero con segno a 32 bit specificato in un intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1578">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1579">Intero con segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1579">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int64 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1580">Intero con segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1580">A 64-bit signed integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1581">Restituisce l'intero con segno a 64 bit specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1581">Returns the specified 64-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1582">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1582">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1583">Nell'esempio seguente converte ogni elemento in una matrice di integer in un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1583">The following example converts each element in an array of integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#7)]
 [!code-vb[System.Convert.ToInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : obj -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1584">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1584">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1585">Converte il valore dell'oggetto specificato in un intero con segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1585">Converts the value of the specified object to a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1586">Intero con segno a 64 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1586">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1587">Se `value` non è `null`, questo metodo esegue il wrapping di una chiamata ai <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> implementazione del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1587">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1588">Nell'esempio seguente prova a convertire ogni elemento nella matrice di oggetti in un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1588">The following example attempts to convert each element in an object array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#8)]
 [!code-vb[System.Convert.ToInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1589">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1589">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1590">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1590">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1591">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1591">-or-</span>
          </span>
          <span data-ttu-id="93c64-1592">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1592">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1593">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1593">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As SByte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : sbyte -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1594">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1594">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1595">Converte il valore dell'intero con segno a 8 bit specificato nell'intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1595">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1596">Intero con segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1596">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1597">Nell'esempio seguente converte ogni elemento in una matrice di byte con segno in un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1597">The following example converts each element in a signed byte array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#9)]
 [!code-vb[System.Convert.ToInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Single) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : single -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1598">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1598">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1599">Converte il valore del numero a virgola mobile a precisione singola specificato in un intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1599">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1600">
            <paramref name="value" />, arrotondato all'intero con segno a 64 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1600">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1601">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1601">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1602">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Single> valori da un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1602">The following example attempts to convert each element in an array of <xref:System.Single> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#10)]
 [!code-vb[System.Convert.ToInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1603">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int64.MaxValue" /> o minore di <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1603">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1604">Stringa che contiene un numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1604">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1605">Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1605">Converts the specified string representation of a number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1606">Intero con segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1606">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1607">Usando il <xref:System.Convert.ToInt64%28System.String%29> metodo equivale a passare `value` per il <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1607">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-1608">`value` viene interpretato utilizzando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1608">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-1609">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1609">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1610">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1610">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1611">Nell'esempio seguente prova a convertire ogni elemento in una matrice di stringhe numeriche in un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1611">The following example attempts to convert each element in an array of numeric strings to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#11)]
 [!code-vb[System.Convert.ToInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1612">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1612">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1613">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1613">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UShort) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint16 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1614">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1614">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1615">Converte il valore dell'intero senza segno a 16 bit specificato nell'intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1615">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1616">Intero con segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1616">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1617">Nell'esempio seguente converte ogni elemento in una matrice di interi senza segno a 16 bit in un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1617">The following example converts each element in an array of 16-bit unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#12)]
 [!code-vb[System.Convert.ToInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint32 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1618">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1618">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1619">Converte il valore dell'intero senza segno a 32 bit specificato in un intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1619">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1620">Intero con segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1620">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1621">Nell'esempio seguente converte ogni elemento in una matrice di interi senza segno in un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1621">The following example converts each element in an array of unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#13)]
 [!code-vb[System.Convert.ToInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As ULong) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint64 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1622">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1622">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1623">Converte il valore dell'intero senza segno a 64 bit specificato in un intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1623">Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1624">Intero con segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1624">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1625">Nell'esempio seguente prova a convertire ogni elemento in una matrice di valori unsigned long integer in un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1625">The following example attempts to convert each element in an array of unsigned long integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#14)]
 [!code-vb[System.Convert.ToInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1626">
            <paramref name="value" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1626">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : obj * IFormatProvider -&gt; int64" Usage="System.Convert.ToInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1627">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1627">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1628">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1628">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1629">Converte il valore dell'oggetto specificato in un intero con segno a 64 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1629">Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1630">Intero con segno a 64 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1630">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1631">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1631">The return value is the result of invoking the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="93c64-1632">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1632">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-1633">Ad esempio, se `value` è un <xref:System.String> che rappresenta un numero, `provider` potrebbe fornire informazioni specifiche delle impostazioni cultura sulla notazione usata per rappresentare il numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1633">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="93c64-1634">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-1634">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1635">L'esempio seguente definisce una classe che implementa <xref:System.IConvertible> e una classe che implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1635">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="93c64-1636">Gli oggetti della classe che implementa <xref:System.IConvertible> contengono una matrice di <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1636">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="93c64-1637">Viene passato un oggetto di ogni classe per il `ToInt64` (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1637">An object of each class is passed to the `ToInt64` method.</span></span> <span data-ttu-id="93c64-1638">Questo metodo restituisce una media della matrice di <xref:System.Double> valori, utilizzando l'oggetto che implementa <xref:System.IFormatProvider> per determinare la modalità calcolare la Media.</span><span class="sxs-lookup"><span data-stu-id="93c64-1638">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1639">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1639">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1640">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1640">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1641">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1641">-or-</span>
          </span>
          <span data-ttu-id="93c64-1642">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1642">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1643">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1643">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string * IFormatProvider -&gt; int64" Usage="System.Convert.ToInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1644">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1644">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1645">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1645">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1646">Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 64 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1646">Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1647">Intero con segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1647">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1648">Il valore restituito è il risultato ottenuto richiamando la <xref:System.Int64.Parse%2A?displayProperty=nameWithType> metodo `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1648">The return value is the result of invoking the <xref:System.Int64.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="93c64-1649">`provider` è un' `IFormatProvider` istanza che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1649">`provider` is an `IFormatProvider` instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-1650">Il `NumberFormatInfo` oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1650">The `NumberFormatInfo` object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-1651">Se `provider` viene `null`, il `NumberFormatInfo` per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-1651">If `provider` is `null`, the `NumberFormatInfo` for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-1652">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1652">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1653">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1653">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1654">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> che riconosce la stringa "pos" come segno positivo e la stringa "neg" come il segno negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1654">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="93c64-1655">Tenta di convertire ogni elemento della matrice di stringhe numeriche in un intero utilizzando questo provider di entrambi e <xref:System.Globalization.NumberFormatInfo> provider per le impostazioni cultura invarianti.</span><span class="sxs-lookup"><span data-stu-id="93c64-1655">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_3.cs#16)]
 [!code-vb[System.Convert.ToInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1656">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1656">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1657">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1657">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, fromBase As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string * int -&gt; int64" Usage="System.Convert.ToInt64 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1658">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1658">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="93c64-1659">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1659">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1660">Converte la rappresentazione di stringa di un numero in una base specificata nell'intero con segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1660">Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1661">Intero con segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1661">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1662">Se `fromBase` è 16, è possibile anteporre al numero specificato da di `value` parametro con "0x" o "0x".</span><span class="sxs-lookup"><span data-stu-id="93c64-1662">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="93c64-1663">Poiché il segno negativo non è supportato per la rappresentazione numerica non in base 10, il <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> metodo presuppone che i numeri negativi per la rappresentazione di complemento a uno di due.</span><span class="sxs-lookup"><span data-stu-id="93c64-1663">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="93c64-1664">In altre parole, il metodo sempre interpreta i bit più significativo binario di un long integer (63 bit) come bit di segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1664">In other words, the method always interprets the highest-order binary bit of a long integer (bit 63) as its sign bit.</span></span> <span data-ttu-id="93c64-1665">Di conseguenza, è possibile scrivere codice in cui una non in base 10 numeri che è compreso nell'intervallo del <xref:System.Int64> tipo di dati viene convertito in un <xref:System.Int64> valore senza il metodo che genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-1665">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int64> data type is converted to an <xref:System.Int64> value without the method throwing an exception.</span></span> <span data-ttu-id="93c64-1666">L'esempio seguente converte <xref:System.UInt64.MaxValue> alla relativa rappresentazione di stringa esadecimale e quindi chiama il <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1666">The following example converts <xref:System.UInt64.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="93c64-1667">Anziché generare un'eccezione, il metodo visualizza il messaggio "0xFFFFFFFFFFFFFFFF viene convertito in -1".</span><span class="sxs-lookup"><span data-stu-id="93c64-1667">Instead of throwing an exception, the method displays the message, "0xFFFFFFFFFFFFFFFF converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#7)]
 [!code-vb[System.Convert.BaseConversion#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#7)]  
  
 <span data-ttu-id="93c64-1668">Quando si esegue operazioni binarie o conversioni numeriche, è sempre la responsabilità dello sviluppatore per verificare che un metodo viene utilizzata la rappresentazione numerica appropriata per interpretare un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="93c64-1668">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="93c64-1669">Come illustrato nell'esempio seguente, è possibile garantire che i metodo consente di gestire gli overflow in modo appropriato determinando innanzitutto se un valore rappresenta un unsigned o un tipo con segno quando convertirlo nella relativa rappresentazione di stringa esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-1669">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="93c64-1670">Generare un'eccezione se il valore originale è un tipo unsigned, ma la conversione in un intero produce un valore il cui bit di segno è attivo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1670">Throw an exception if the original value was an unsigned type but the conversion back to an integer yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#8)]
 [!code-vb[System.Convert.BaseConversion#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#8)]  
  
 <span data-ttu-id="93c64-1671">Nell'esempio seguente prova a ogni elemento nella matrice di stringhe come stringa esadecimale di interpretare e convertirlo in un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-1671">The following example attempts to interpret each element in a string array as a hexadecimal string and convert it to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_2.cs#15)]
 [!code-vb[System.Convert.ToInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-1672">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1672">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="93c64-1673">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1673">-or-</span>
          </span>
          <span data-ttu-id="93c64-1674">
            <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1674">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-1675">
            <paramref name="value" /> è <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1675">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1676">
            <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1676">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="93c64-1677">Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1677">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1678">
            <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1678">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="93c64-1679">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1679">-or-</span>
          </span>
          <span data-ttu-id="93c64-1680">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1680">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-1681">Converte un valore specificato in un intero con segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1681">Converts a specified value to an 8-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Boolean) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(bool value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : bool -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1682">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1682">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1683">Converte il valore booleano specificato nell'intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1683">Converts the specified Boolean value to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1684">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1684">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1685">L'esempio seguente converte i valori booleani `true` e `false` per valori di byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1685">The following example converts the Boolean values `true` and `false` to signed byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Convert.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Byte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : byte -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1686">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1686">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1687">Converte il valore dell'intero senza segno a 8 bit specificato nell'intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1687">Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1688">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1688">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1689">Nell'esempio seguente prova a convertire ogni elemento in una matrice di byte in un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1689">The following example attempts to convert each element in a byte array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#2)]
 [!code-vb[System.Convert.ToSByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1690">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1690">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Char) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(char value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : char -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1691">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1691">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1692">Converte il valore del carattere Unicode specificato nell'intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1692">Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1693">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1693">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1694">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Char> valori a un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1694">The following example attempts to convert each element in an array of <xref:System.Char> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#3)]
 [!code-vb[System.Convert.ToSByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1695">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1695">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As DateTime) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : DateTime -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1696">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1696">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1697">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1697">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1698">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1698">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1699">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1699">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1700">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1700">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : decimal -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1701">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1701">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1702">Converte il valore del numero decimale specificato in un intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1702">Converts the value of the specified decimal number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1703">
            <paramref name="value" />, arrotondato all'intero con segno a 8 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1703">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1704">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1704">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1705">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Decimal> valori a un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1705">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#4)]
 [!code-vb[System.Convert.ToSByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1706">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1706">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Double) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(double value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : double -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1707">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1707">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1708">Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1708">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1709">
            <paramref name="value" />, arrotondato all'intero con segno a 8 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1709">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1710">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1710">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1711">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Double> valori a un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1711">The following example attempts to convert each element in an array of <xref:System.Double> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#5)]
 [!code-vb[System.Convert.ToSByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1712">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1712">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Short) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(short value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int16 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1713">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1713">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1714">Converte il valore dell'intero con segno a 16 bit specificato nell'intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1714">Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1715">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1715">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1716">Nell'esempio seguente prova a convertire ogni elemento in una matrice di interi con segno a 16 bit in un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1716">The following example attempts to convert each element in an array of signed 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#6)]
 [!code-vb[System.Convert.ToSByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1717">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1717">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(int value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1718">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1718">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1719">Converte il valore dell'intero con segno a 32 bit specificato in un intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1719">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1720">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1720">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1721">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di interi con segno a un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1721">The following example attempts to convert each element in an array of signed integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#7)]
 [!code-vb[System.Convert.ToSByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1722">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1722">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Long) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(long value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int64 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1723">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1723">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1724">Converte il valore dell'intero con segno a 64 bit specificato in un intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1724">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1725">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1725">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1726">Nell'esempio seguente prova a convertire ogni elemento in una matrice di valori long integer in un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1726">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#8)]
 [!code-vb[System.Convert.ToSByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1727">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1727">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : obj -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1728">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1728">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1729">Converte il valore dell'oggetto specificato in un intero con segno a 8 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1729">Converts the value of the specified object to an 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1730">Intero con segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1730">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1731">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1731">The return value is the result of invoking the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1732">Nell'esempio seguente tenta di convertire ogni elemento nella matrice di oggetti a un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1732">The following example attempts to convert each element in an object array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1733">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1733">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1734">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1734">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1735">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1735">-or-</span>
          </span>
          <span data-ttu-id="93c64-1736">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1736">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1737">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1737">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : sbyte -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1738">Intero con segno a 8 bit da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1738">The 8-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1739">Restituisce l'intero con segno a 8 bit specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1739">Returns the specified 8-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1740">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1740">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Single) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(float value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : single -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1741">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1741">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1742">Converte il valore del numero a virgola mobile a precisione singola specificato in un intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1742">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1743">
            <paramref name="value" />, arrotondato all'intero con segno a 8 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1743">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="93c64-1744">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1744">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1745">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Single> valori a un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1745">The following example attempts to convert each element in an array of <xref:System.Single> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1746">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1746">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1747">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1747">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1748">Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1748">Converts the specified string representation of a number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1749">Intero con segno a 8 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se value è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1749">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1750">Usando il <xref:System.Convert.ToSByte%28System.String%29> metodo equivale a passare `value` per il <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1750">Using the <xref:System.Convert.ToSByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-1751">`value` viene interpretato utilizzando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1751">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-1752">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1752">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1753">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1753">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1754">L'esempio seguente converte le rappresentazioni di stringa del <xref:System.SByte> i valori con il `ToSByte` metodo, usando la formattazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="93c64-1754">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1755">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1755">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1756">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1756">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UShort) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint16 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1757">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1757">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1758">Converte il valore dell'intero senza segno a 16 bit specificato nell'intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1758">Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1759">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1759">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1760">Nell'esempio seguente prova a convertire ogni elemento in una matrice di interi senza segno a 16 bit in un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1760">The following example attempts to convert each element in an array of unsigned 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#11)]
 [!code-vb[System.Convert.ToSByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1761">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1761">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint32 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1762">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1762">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1763">Converte il valore dell'intero senza segno a 32 bit specificato in un intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1763">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1764">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1764">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1765">Nell'esempio seguente tenta di convertire ogni elemento nella matrice di interi a un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1765">The following example attempts to convert each element in an integer array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#12)]
 [!code-vb[System.Convert.ToSByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1766">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1766">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As ULong) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint64 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1767">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1767">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1768">Converte il valore dell'intero senza segno a 64 bit specificato in un intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1768">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1769">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1769">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1770">Nell'esempio seguente prova a convertire ogni elemento in una matrice di valori long integer in un byte con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1770">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#13)]
 [!code-vb[System.Convert.ToSByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1771">
            <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1771">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSByte : obj * IFormatProvider -&gt; sbyte" Usage="System.Convert.ToSByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1772">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1772">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1773">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1773">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1774">Converte il valore dell'oggetto specificato in un intero con segno a 8 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1774">Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1775">Intero con segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1775">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1776">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1776">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-1777">Ad esempio, se `value` è un <xref:System.String> che rappresenta un numero, `provider` potrebbe fornire informazioni specifiche delle impostazioni cultura sulla notazione usata per rappresentare il numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1777">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="93c64-1778">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-1778">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1779">L'esempio seguente definisce un `ByteString` memorizza entrambi classe firmati e byte come stringhe esadecimali insieme con un campo che indica il segno del byte.</span><span class="sxs-lookup"><span data-stu-id="93c64-1779">The following example defines a `ByteString` class that stores both signed and unsigned bytes as hexadecimal strings along with a field that indicates the sign of the byte.</span></span> <span data-ttu-id="93c64-1780">La classe `ByteString` implementa l'interfaccia <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1780">The `ByteString` class implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="93c64-1781">Relativi <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> chiamate al metodo il <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29> metodo per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-1781">Its <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method calls the <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29> method to perform the conversion.</span></span> <span data-ttu-id="93c64-1782">In caso contrario, genera un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1782">If it fails, it throws an <xref:System.OverflowException>.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#14)]
 [!code-vb[System.Convert.ToSByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#14)]  
  
 <span data-ttu-id="93c64-1783">L'esempio seguente illustra come la <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> implementazione del `ByteString` classe viene chiamata dal <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1783">The following example shows how the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> implementation of the `ByteString` class is called by the <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#15)]
 [!code-vb[System.Convert.ToSByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1784">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1784">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1785">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1785">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1786">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1786">-or-</span>
          </span>
          <span data-ttu-id="93c64-1787">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1787">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1788">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1788">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string * IFormatProvider -&gt; sbyte" Usage="System.Convert.ToSByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1789">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1789">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1790">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1790">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1791">Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 8 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1791">Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1792">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1792">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1793">`provider` è un' <xref:System.IFormatProvider> istanza che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1793">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-1794">Il <xref:System.Globalization.NumberFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1794">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-1795">Se `provider` viene `null`, il <xref:System.Globalization.NumberFormatInfo> per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-1795">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-1796">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1796">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1797">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1797">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1798">L'esempio seguente converte le rappresentazioni di stringa del <xref:System.SByte> i valori con il `ToSByte` metodo, usando un <xref:System.IFormatProvider> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1798">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93c64-1799">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1799">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1800">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1800">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1801">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1801">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, fromBase As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string * int -&gt; sbyte" Usage="System.Convert.ToSByte (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1802">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1802">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="93c64-1803">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1803">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1804">Converte la rappresentazione di stringa di un numero in una base specificata nell'intero con segno a 8 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1804">Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1805">Intero con segno a 8 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1805">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1806">Se `fromBase` è 16, è possibile anteporre al numero specificato da di `value` parametro con "0x" o "0x".</span><span class="sxs-lookup"><span data-stu-id="93c64-1806">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="93c64-1807">Poiché il segno negativo non è supportato per la rappresentazione numerica non in base 10, il <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> metodo presuppone che i numeri negativi per la rappresentazione di complemento a uno di due.</span><span class="sxs-lookup"><span data-stu-id="93c64-1807">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="93c64-1808">In altre parole, il metodo sempre interpreta i bit più significativo di un byte (7 bit) come bit di segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1808">In other words, the method always interprets the high-order bit of a byte (bit 7) as its sign bit.</span></span> <span data-ttu-id="93c64-1809">Di conseguenza, è possibile scrivere codice in cui una non in base 10 numeri che è compreso nell'intervallo del <xref:System.SByte> tipo di dati viene convertito in un <xref:System.SByte> valore senza il metodo che genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-1809">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.SByte> data type is converted to an <xref:System.SByte> value without the method throwing an exception.</span></span> <span data-ttu-id="93c64-1810">L'esempio seguente converte <xref:System.Byte.MaxValue> alla relativa rappresentazione di stringa esadecimale e quindi chiama il <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1810">The following example converts <xref:System.Byte.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="93c64-1811">Anziché generare un'eccezione, il metodo visualizza il messaggio "0xff converte su -1".</span><span class="sxs-lookup"><span data-stu-id="93c64-1811">Instead of throwing an exception, the method displays the message, "0xff converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#9)]
 [!code-vb[System.Convert.BaseConversion#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#9)]  
  
 <span data-ttu-id="93c64-1812">Quando si esegue operazioni binarie o conversioni numeriche, è sempre la responsabilità dello sviluppatore per verificare che un metodo viene utilizzata la rappresentazione numerica appropriata per interpretare un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="93c64-1812">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="93c64-1813">Come illustrato nell'esempio seguente, è possibile garantire che i metodo consente di gestire gli overflow in modo appropriato determinando innanzitutto se un valore rappresenta un unsigned o un tipo con segno quando convertirlo nella relativa rappresentazione di stringa esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-1813">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="93c64-1814">Generare un'eccezione se il valore originale è un tipo unsigned, ma la conversione in un byte con segno produce un valore il cui bit di segno è attivo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1814">Throw an exception if the original value was an unsigned type but the conversion back to a signed byte yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#10)]
 [!code-vb[System.Convert.BaseConversion#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#10)]  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1815">Nell'esempio seguente tenta di interpretare gli elementi in una matrice di stringhe in formato binario, ottale e una rappresentazione esadecimale di valori numerici per convertirli in byte senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-1815">The following example attempts to interpret the elements in a string array as the binary, octal, and hexadecimal representation of numeric values in order to convert them to unsigned bytes.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte3.cs#16)]
 [!code-vb[System.Convert.ToSByte#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-1816">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1816">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="93c64-1817">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1817">-or-</span>
          </span>
          <span data-ttu-id="93c64-1818">
            <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1818">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-1819">
            <paramref name="value" /> è <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1819">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1820">
            <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1820">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="93c64-1821">Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1821">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1822">
            <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1822">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="93c64-1823">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1823">-or-</span>
          </span>
          <span data-ttu-id="93c64-1824">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1824">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSingle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-1825">Converte un valore specificato in un numero a virgola mobile a precisione singola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1825">Converts a specified value to a single-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Boolean) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(bool value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : bool -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1826">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1826">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1827">Converte il valore booleano specificato nel numero a virgola mobile e con precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1827">Converts the specified Boolean value to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1828">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1828">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1829">L'esempio seguente converte i valori booleani `true` e `false` a <xref:System.Single> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1829">The following example converts the Boolean values `true` and `false` to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#1)]
 [!code-vb[System.Convert.ToSingle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Byte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : byte -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1830">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1830">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1831">Converte il valore dell'intero senza segno a 8 bit specificato nel numero a virgola mobile a precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1831">Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1832">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1832">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1833">L'esempio seguente converte ogni elemento in una matrice di valori di byte da un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1833">The following example converts each element in an array of byte values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#2)]
 [!code-vb[System.Convert.ToSingle#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Char) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(char value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : char -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1834">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1834">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1835">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1835">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1836">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1836">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1837">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1837">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1838">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1838">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As DateTime) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : DateTime -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1839">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1839">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1840">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1840">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1841">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1841">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-1842">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1842">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1843">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1843">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : decimal -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1844">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1844">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1845">Converte il valore del numero decimale specificato in un numero a virgola mobile a precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1845">Converts the value of the specified decimal number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1846">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1846">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="93c64-1847">
            <paramref name="value" /> viene arrotondato al valore più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1847">
              <paramref name="value" /> is rounded using rounding to nearest.</span>
          </span>
          <span data-ttu-id="93c64-1848">Se arrotondato a due numeri decimali, ad esempio, il valore 2,345 diventa 2,34 e il valore 2,355 diventa 2,36.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1848">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1849">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Decimal> valori da un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1849">The following example converts each element in an array of <xref:System.Decimal> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#3)]
 [!code-vb[System.Convert.ToSingle#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Double) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(double value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : double -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1850">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1850">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1851">Converte il valore del numero a virgola mobile a precisione doppia specificato in un numero a virgola mobile a precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1851">Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1852">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1852">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="93c64-1853">
            <paramref name="value" /> viene arrotondato al valore più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1853">
              <paramref name="value" /> is rounded using rounding to nearest.</span>
          </span>
          <span data-ttu-id="93c64-1854">Se arrotondato a due numeri decimali, ad esempio, il valore 2,345 diventa 2,34 e il valore 2,355 diventa 2,36.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1854">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1855">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Double> valori da un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1855">The following example converts each element in an array of <xref:System.Double> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#4)]
 [!code-vb[System.Convert.ToSingle#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Short) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(short value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int16 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1856">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1856">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1857">Converte il valore dell'intero con segno a 16 bit specificato in un numero a virgola mobile a precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1857">Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1858">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1858">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1859">L'esempio seguente converte ogni elemento in una matrice di interi a 16 bit da un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1859">The following example converts each element in an array of 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#5)]
 [!code-vb[System.Convert.ToSingle#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(int value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1860">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1860">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1861">Converte il valore dell'intero con segno a 32 bit specificato in un numero a virgola mobile a precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1861">Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1862">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1862">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1863">Nell'esempio seguente converte ogni elemento in una matrice di integer in un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1863">The following example converts each element in an integer array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#6)]
 [!code-vb[System.Convert.ToSingle#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Long) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(long value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int64 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1864">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1864">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1865">Converte il valore dell'intero con segno a 64 bit specificato in un numero a virgola mobile a precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1865">Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1866">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1866">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1867">L'esempio seguente converte ogni elemento in una matrice di long integer in un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1867">The following example converts each element in an array of long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#7)]
 [!code-vb[System.Convert.ToSingle#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : obj -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1868">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1868">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1869">Converte il valore dell'oggetto specificato in un numero a virgola mobile a precisione singola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1869">Converts the value of the specified object to a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1870">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1870">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1871">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1871">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1872">Nell'esempio seguente tenta di convertire ogni elemento nella matrice di oggetti per un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1872">The following example attempts to convert each element in an object array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#8)]
 [!code-vb[System.Convert.ToSingle#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1873">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1873">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1874">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1874">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-1875">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1875">-or-</span>
          </span>
          <span data-ttu-id="93c64-1876">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1876">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1877">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Single.MinValue" /> o maggiore di <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1877">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As SByte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : sbyte -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1878">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1878">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1879">Converte il valore dell'intero con segno a 8 bit specificato nel numero a virgola mobile a precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1879">Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1880">Intero con segno a 8 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1880">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1881">Nell'esempio seguente converte ogni elemento in una matrice di byte con segno a un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1881">The following example converts each element in a signed byte array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#9)]
 [!code-vb[System.Convert.ToSingle#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(float value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : single -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1882">Numero a virgola mobile e con precisione singola da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1882">The single-precision floating-point number to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1883">Restituisce il numero a virgola mobile e con precisione singola specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1883">Returns the specified single-precision floating-point number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1884">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1884">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1885">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1885">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1886">Converte la rappresentazione di stringa specificata di un numero in un numero a virgola mobile e con precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1886">Converts the specified string representation of a number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1887">Numero a virgola mobile e con precisione singola equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1887">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1888">Usando il <xref:System.Convert.ToSingle%28System.String%29> metodo equivale a passare `value` per il <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1888">Using the <xref:System.Convert.ToSingle%28System.String%29> method is equivalent to passing `value` to the <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-1889">`value` viene interpretato utilizzando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1889">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-1890">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Single.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1890">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1891">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1891">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1892">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di stringhe numeriche in un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1892">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#10)]
 [!code-vb[System.Convert.ToSingle#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1893">
            <paramref name="value" /> non è un numero in formato valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1893">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1894">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Single.MinValue" /> o maggiore di <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1894">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UShort) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint16 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1895">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1895">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1896">Converte il valore dell'intero senza segno a 16 bit specificato nel numero a virgola mobile a precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1896">Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1897">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1897">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1898">Nell'esempio seguente converte ogni elemento in una matrice di interi senza segno a 16 bit a un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1898">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#11)]
 [!code-vb[System.Convert.ToSingle#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint32 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1899">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1899">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1900">Converte il valore dell'intero senza segno a 32 bit specificato in un numero a virgola mobile e con precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1900">Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1901">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1901">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1902">Nell'esempio seguente converte ogni elemento in una matrice di interi senza segno da un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1902">The following example converts each element in an array of unsigned integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#12)]
 [!code-vb[System.Convert.ToSingle#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As ULong) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint64 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1903">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1903">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1904">Converte il valore dell'intero senza segno a 64 bit specificato in un numero a virgola mobile a precisione singola equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1904">Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1905">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1905">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-1906">Nell'esempio seguente converte ogni elemento in una matrice di valori unsigned long integer a un <xref:System.Single> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1906">The following example converts each element in an array of unsigned long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#13)]
 [!code-vb[System.Convert.ToSingle#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSingle : obj * IFormatProvider -&gt; single" Usage="System.Convert.ToSingle (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1907">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1907">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1908">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1908">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1909">Converte il valore dell'oggetto specificato in un numero a virgola mobile a precisione singola mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1909">Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1910">Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1910">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1911">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1911">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="93c64-1912">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1912">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-1913">Ad esempio, se `value` è un <xref:System.String> che rappresenta un numero, `provider` potrebbe fornire informazioni specifiche delle impostazioni cultura sulla notazione usata per rappresentare il numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-1913">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="93c64-1914">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-1914">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1915">Nell'esempio seguente viene definita una classe `Temperature` che implementa l'interfaccia <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="93c64-1915">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="93c64-1916">L'implementazione del <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> metodo viene restituito il valore interno di un private <xref:System.Single> variabile che rappresenta la temperatura.</span><span class="sxs-lookup"><span data-stu-id="93c64-1916">Its implementation of the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method returns the internal value of a private <xref:System.Single> variable that represents the temperature.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#14)]
 [!code-vb[System.Convert.ToSingle#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#14)]  
  
 <span data-ttu-id="93c64-1917">Nell'esempio seguente viene illustrato come una chiamata ai <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metodo, a sua volta, chiama il <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> implementazione del `Temperature` classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-1917">The following example illustrates how a call to the <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, calls the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#15)]
 [!code-vb[System.Convert.ToSingle#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1918">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1918">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-1919">
            <paramref name="value" /> non implementa <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1919">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1920">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Single.MinValue" /> o maggiore di <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1920">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string * IFormatProvider -&gt; single" Usage="System.Convert.ToSingle (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1921">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1921">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-1922">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1922">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1923">Converte la rappresentazione di stringa specificata di un numero in un numero a virgola mobile e con precisione singola equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1923">Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1924">Numero a virgola mobile e con precisione singola equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1924">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1925">Il valore restituito è il risultato ottenuto richiamando la <xref:System.Single.Parse%2A?displayProperty=nameWithType> metodo `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1925">The return value is the result of invoking the <xref:System.Single.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="93c64-1926">`provider` è un' <xref:System.IFormatProvider> istanza che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-1926">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-1927">Il <xref:System.Globalization.NumberFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1927">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-1928">Se `provider` viene `null`, il <xref:System.Globalization.NumberFormatInfo> per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-1928">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-1929">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.Single.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-1929">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-1930">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1930">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1931">L'esempio seguente usa <xref:System.IFormatProvider> gli oggetti che rappresentano le impostazioni cultura en-US e fr-FR quando converte gli elementi in una matrice di stringhe numeriche in <xref:System.Single> valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1931">The following example uses <xref:System.IFormatProvider> objects that represent the en-US and fr-FR cultures when it converts the elements in an array of numeric strings to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle3.cs#16)]
 [!code-vb[System.Convert.ToSingle#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-1932">
            <paramref name="value" /> non è un numero in formato valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1932">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-1933">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Single.MinValue" /> o maggiore di <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1933">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-1934">Converte il valore specificato nella rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1934">Converts the specified value to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value);" />
      <MemberSignature Language="F#" Value="static member ToString : bool -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1935">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1935">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1936">Converte il valore booleano specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1936">Converts the specified Boolean value to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1937">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1937">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1938">Questa implementazione è identica alla <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1938">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="93c64-1939">Viene restituito <xref:System.Boolean.TrueString?displayProperty=nameWithType> per `true` i valori e <xref:System.Boolean.FalseString?displayProperty=nameWithType> per `false` valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-1939">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1940">L'esempio seguente illustra la conversione di un <xref:System.Boolean> a un <xref:System.String>, usando `ToString`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1940">The following example illustrates the conversion of a <xref:System.Boolean> to a <xref:System.String>, using `ToString`.</span></span> <span data-ttu-id="93c64-1941">Viene inoltre illustrato che la stringa restituita dalla conversione è uguale a <xref:System.Boolean.TrueString?displayProperty=nameWithType> o <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1941">It also illustrates that the string returned by the conversion equals either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Convert.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString_Bool1.cs#1)]
 [!code-vb[System.Convert.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString_Bool1.vb#1)]  
 [!code-fsharp[System.Convert.ToString#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Bool1.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToString : byte -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1942">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1942">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1943">Converte il valore dell'intero senza segno a 8 bit specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1943">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1944">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1944">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1945">Questa implementazione è identica alla <xref:System.Byte.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1945">This implementation is identical to <xref:System.Byte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1946">L'esempio seguente converte ogni valore in un <xref:System.Byte> matrice a una stringa.</span><span class="sxs-lookup"><span data-stu-id="93c64-1946">The following example converts each value in a <xref:System.Byte> array to a string.</span></span>  
  
 [!code-csharp[System.Convert.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString.Byte1.cs#3)]
 [!code-vb[System.Convert.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString.Byte1.vb#3)]
 [!code-fsharp[System.Convert.ToString#3](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Byte1.fs#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1947">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1947">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1948">Converte il valore del carattere Unicode specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1948">Converts the value of the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1949">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1949">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1950">Questa implementazione è identica alla <xref:System.Char.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1950">This implementation is identical to <xref:System.Char.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1951">L'esempio seguente converte un <xref:System.Char> a un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1951">The following example converts a <xref:System.Char> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#14)]
 [!code-csharp[System.Convert Snippets#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#14)]
 [!code-vb[System.Convert Snippets#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1952">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1952">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1953">Converte il valore dell'oggetto <see cref="T:System.DateTime" /> specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1953">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1954">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1954">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1955">Questa implementazione è identica alla <xref:System.DateTime.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1955">This implementation is identical to <xref:System.DateTime.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="93c64-1956">Usa le convenzioni di formattazione delle impostazioni cultura correnti e l'identificatore di formato "G" per convertire un <xref:System.DateTime> valore alla relativa rappresentazione di stringa.</span><span class="sxs-lookup"><span data-stu-id="93c64-1956">It uses the formatting conventions of the current culture and the "G" format specifier to convert a <xref:System.DateTime> value to its string representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1957">Nell'esempio seguente converte ogni elemento in una matrice di un <xref:System.DateTime> valore per un <xref:System.String> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-1957">The following example converts each element in an array of a <xref:System.DateTime> value to a <xref:System.String> value.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#1)]
 [!code-vb[System.Convert.ToString2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1958">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1958">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1959">Converte il valore del numero decimale specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1959">Converts the value of the specified decimal number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1960">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1960">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1961">Questa implementazione è identica alla <xref:System.Decimal.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1961">This implementation is identical to <xref:System.Decimal.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1962">L'esempio seguente converte un <xref:System.Decimal> a un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1962">The following example converts a <xref:System.Decimal> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value);" />
      <MemberSignature Language="F#" Value="static member ToString : double -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1963">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1963">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1964">Converte il valore del numero a virgola mobile a precisione doppia specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1964">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1965">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1965">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1966">Questa implementazione è identica alla <xref:System.Double.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1966">This implementation is identical to <xref:System.Double.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1967">L'esempio seguente converte un <xref:System.Double> a un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1967">The following example converts a <xref:System.Double> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#7)]
 [!code-csharp[System.Convert Snippets#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#7)]
 [!code-vb[System.Convert Snippets#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1968">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1968">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1969">Converte il valore dell'intero con segno a 16 bit specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1969">Converts the value of the specified 16-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1970">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1970">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1971">Questa implementazione è identica alla <xref:System.Int16.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1971">This implementation is identical to <xref:System.Int16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1972">Nell'esempio seguente converte ogni elemento in una matrice di interi a 16 bit nella relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1972">The following example converts each element in an array of 16-bit integers to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#2)]
 [!code-vb[System.Convert.ToString2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value);" />
      <MemberSignature Language="F#" Value="static member ToString : int -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1973">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1973">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1974">Converte il valore dell'intero con segno a 32 bit specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1974">Converts the value of the specified 32-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1975">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1975">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1976">Questa implementazione è identica alla <xref:System.Int32.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1976">This implementation is identical to <xref:System.Int32.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="93c64-1977">Formatta `value` usando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1977">It formats `value` by using the formatting conventions of the current thread culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1978">Nell'esempio seguente vengono confrontate le <xref:System.Convert.ToString%28System.Int32%29> metodo con il <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-1978">The following example compares the <xref:System.Convert.ToString%28System.Int32%29> method with the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="93c64-1979">Definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> oggetto che usa la stringa "meno" per rappresentare il segno negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-1979">It defines a custom <xref:System.Globalization.NumberFormatInfo> object that uses the sting "minus" to represent the negative sign.</span></span> <span data-ttu-id="93c64-1980">Converte ogni elemento nella matrice di interi nella relativa rappresentazione di stringa equivalente usando la formattazione predefinita (le convenzioni di formattazione delle impostazioni cultura) e il provider di formato personalizzato.</span><span class="sxs-lookup"><span data-stu-id="93c64-1980">It converts each element in an integer array to its equivalent string representation using default formatting (the formatting conventions of the current culture) and the custom format provider.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring7.cs#27)]
 [!code-vb[System.Convert.ToString2#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring7.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1981">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1981">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1982">Converte il valore dell'intero con segno a 64 bit specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1982">Converts the value of the specified 64-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1983">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1983">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1984">Questa implementazione è identica alla <xref:System.Int64.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1984">This implementation is identical to <xref:System.Int64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1985">Nell'esempio seguente converte ogni elemento in una matrice di tipo long integer nella relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1985">The following example converts each element in a long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring6.cs#28)]
 [!code-vb[System.Convert.ToString2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring6.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : obj -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1986">Oggetto che fornisce il valore da convertire oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1986">An object that supplies the value to convert, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1987">Converte il valore dell'oggetto specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1987">Converts the value of the specified object to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1988">Rappresentazione di stringa di <paramref name="value" /> oppure <see cref="F:System.String.Empty" /> se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1988">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1989">Per convertire `value` rappresentazione di stringa, il metodo tenta di chiamare il <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType> implementazione di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1989">To convert `value` to its string representation, the method tries to call the <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="93c64-1990">Se `value` non implementa le <xref:System.IConvertible> interfaccia, il metodo tenta di chiamare le <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementazione di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1990">If `value` does not implement the <xref:System.IConvertible> interface, the method tries to call the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="93c64-1991">Se il valore non implementa il <xref:System.IFormattable> dell'interfaccia, le chiamate al metodo il `ToString` metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-1991">If value does not implement the <xref:System.IFormattable> interface, the method calls the `ToString` method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1992">Nell'esempio seguente converte ogni elemento nella matrice di oggetti nella relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1992">The following example converts each element in an object array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#3)]
 [!code-vb[System.Convert.ToString2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1993">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1993">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1994">Converte il valore dell'intero con segno a 8 bit specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1994">Converts the value of the specified 8-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-1995">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1995">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-1996">Questa implementazione è identica alla <xref:System.SByte.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-1996">This implementation is identical to <xref:System.SByte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-1997">Nell'esempio seguente converte ogni elemento in una matrice di byte con segno in rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-1997">The following example converts each element in a signed byte array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#4)]
 [!code-vb[System.Convert.ToString2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value);" />
      <MemberSignature Language="F#" Value="static member ToString : single -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-1998">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1998">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-1999">Converte il valore del numero a virgola mobile a precisione singola specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-1999">Converts the value of the specified single-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2000">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2000">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2001">Questa implementazione è identica alla <xref:System.Single.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2001">This implementation is identical to <xref:System.Single.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2002">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Single> valori alla relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2002">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#5)]
 [!code-vb[System.Convert.ToString2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : string -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2003">Stringa da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2003">The string to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2004">Restituisce l'istanza di stringa specificata; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2004">Returns the specified string instance; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2005">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2005">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2006">L'esempio seguente passa una stringa per il <xref:System.Convert.ToString%28System.String%29> metodo e chiama il <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> metodo per confermare che il metodo restituisce la stringa originale.</span><span class="sxs-lookup"><span data-stu-id="93c64-2006">The following example passes a string to the <xref:System.Convert.ToString%28System.String%29> method and calls the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to confirm that the method returns the original string.</span></span> <span data-ttu-id="93c64-2007">Nell'esempio viene inoltre chiamato il <xref:System.String.IsInterned%2A?displayProperty=nameWithType> metodo per assicurarsi che le due stringhe non sono identiche poiché la stringa originale è inserita.</span><span class="sxs-lookup"><span data-stu-id="93c64-2007">The example also calls the <xref:System.String.IsInterned%2A?displayProperty=nameWithType> method to ensure that the two strings are not identical because the original string is interned.</span></span>  
  
 [!code-csharp[System.Convert.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/tostring_string1.cs#2)]
 [!code-vb[System.Convert.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/tostring_string1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2008">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2008">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2009">Converte il valore dell'intero senza segno a 16 bit specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2009">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2010">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2010">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2011">Questa implementazione è identica alla <xref:System.UInt16.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2011">This implementation is identical to <xref:System.UInt16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2012">Nell'esempio seguente converte ogni elemento in una matrice di valori unsigned integer a 16 bit nella relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2012">The following example converts each element in an array of unsigned 16-bit integer values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#6)]
 [!code-vb[System.Convert.ToString2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2013">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2013">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2014">Converte il valore dell'intero senza segno a 32 bit specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2014">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2015">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2015">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2016">Questa implementazione è identica alla <xref:System.UInt32.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2016">This implementation is identical to <xref:System.UInt32.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2017">Nell'esempio seguente converte ogni elemento nella matrice di interi senza segno alla relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2017">The following example converts each element in an unsigned integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#7)]
 [!code-vb[System.Convert.ToString2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2018">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2018">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2019">Converte il valore dell'intero senza segno a 64 bit specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2019">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2020">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2020">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2021">Questa implementazione è identica alla <xref:System.UInt64.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2021">This implementation is identical to <xref:System.UInt64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2022">Nell'esempio seguente converte ogni elemento in una matrice di intero lungo senza segno alla relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2022">The following example converts each element in an unsigned long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#8)]
 [!code-vb[System.Convert.ToString2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : bool * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2023">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2023">The Boolean value to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2024">Istanza di un oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2024">An instance of an object.</span>
          </span>
          <span data-ttu-id="93c64-2025">Questo parametro viene ignorato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2025">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2026">Converte il valore booleano specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2026">Converts the specified Boolean value to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2027">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2027">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2028">Questa implementazione è identica alla <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2028">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="93c64-2029">Viene restituito <xref:System.Boolean.TrueString?displayProperty=nameWithType> per `true` i valori e <xref:System.Boolean.FalseString?displayProperty=nameWithType> per `false` valori.</span><span class="sxs-lookup"><span data-stu-id="93c64-2029">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2030">L'esempio seguente converte un <xref:System.Boolean> valore per un <xref:System.String> con il `ToString` metodo, usando un <xref:System.IFormatProvider> che visualizza il tipo di provider di formato per il quale viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="93c64-2030">The following example converts a <xref:System.Boolean> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="93c64-2031">L'esempio mostra che il <xref:System.IFormatProvider> oggetto non viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="93c64-2031">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : byte * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2032">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2032">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2033">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2033">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2034">Converte il valore dell'intero senza segno a 8 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2034">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2035">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2035">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2036">Questa implementazione è identica alla <xref:System.Byte.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2036">This implementation is identical to <xref:System.Byte.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2037">Nell'esempio seguente converte ogni elemento in una matrice di byte senza segno alla relativa rappresentazione di stringa equivalente usando le convenzioni di formattazione delle impostazioni cultura en-US e fr-FR.</span><span class="sxs-lookup"><span data-stu-id="93c64-2037">The following example converts each element in an unsigned byte array to its equivalent string representation using the formatting conventions of the en-US and fr-FR cultures.</span></span> <span data-ttu-id="93c64-2038">Poiché l'identificatore "G" per impostazione predefinita restituisce solo le cifre decimali nella rappresentazione di stringa del valore di byte di `provider` parametro non influenza la formattazione della stringa restituita.</span><span class="sxs-lookup"><span data-stu-id="93c64-2038">Because the "G" specifier by default outputs only decimal digits in a byte value's string representation, the `provider` parameter does not affect the formatting of the returned string.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#16)]
 [!code-vb[System.Convert.ToString2#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : byte * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2039">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2039">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="93c64-2040">Base del valore restituito, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2040">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2041">Converte il valore di un intero senza segno a 8 bit nella rappresentazione di stringa equivalente in una base specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2041">Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2042">Rappresentazione di stringa di <paramref name="value" /> in base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2042">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2043">Se `toBase` è uguale a 10, la stringa restituita dal <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType> metodo rappresenta `value` da solo l'ampiezza.</span><span class="sxs-lookup"><span data-stu-id="93c64-2043">If `toBase` does not equal 10, the string that is returned by the <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType> method represents `value` by its magnitude only.</span></span> <span data-ttu-id="93c64-2044">Se il metodo viene chiamato per creare una stringa che verrà convertita in un secondo momento indietro su un numero, un metodo corrispondente in cui si presuppone una rappresentazione numerica solo grandezza deve essere chiamato per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2044">If the method is called to create a string that will later be converted back to a number, a corresponding method that assumes a magnitude-only numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="93c64-2045">Tali metodi includono <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> o <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2045">Such methods include <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2046">Nell'esempio seguente converte ogni elemento in una matrice di byte nelle relative rappresentazioni di stringa equivalente binario, esadecimali, decimal ed esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-2046">The following example converts each element in a byte array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#9)]
 [!code-vb[System.Convert.ToString2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#9)]
 [!code-fsharp[System.Convert.ToString2#9](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-2047">Il valore di <paramref name="toBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2047">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : char * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2048">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2048">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2049">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2049">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="93c64-2050">Questo parametro viene ignorato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2050">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2051">Converte il valore del carattere Unicode specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2051">Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2052">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2052">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2053">Questa implementazione è identica alla <xref:System.Char.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2053">This implementation is identical to <xref:System.Char.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="93c64-2054">Il `provider` parametro viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="93c64-2054">The `provider` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2055">L'esempio seguente converte un <xref:System.Char> valore per un <xref:System.String> con il `ToString` metodo, usando un <xref:System.IFormatProvider> che visualizza il tipo di provider di formato per il quale viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="93c64-2055">The following example converts a <xref:System.Char> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="93c64-2056">L'esempio mostra che il <xref:System.IFormatProvider> oggetto non viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="93c64-2056">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2057">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2057">The date and time value to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2058">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2058">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2059">Converte il valore dell'oggetto <see cref="T:System.DateTime" /> specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2059">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2060">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2060">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2061">Questa implementazione è identica alla <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2061">This implementation is identical to <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2062">L'esempio seguente converte un <xref:System.DateTime> valore nella relativa rappresentazione di stringa equivalente in otto diverse impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="93c64-2062">The following example converts a <xref:System.DateTime> value to its equivalent string representation in eight different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#13)]
 [!code-vb[System.Convert.ToString2#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2063">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2063">The decimal number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2064">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2064">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2065">Converte il valore del numero decimale specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2065">Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2066">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2066">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2067">Questa implementazione è identica alla <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2067">This implementation is identical to <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2068">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Decimal> valori alla relativa rappresentazione di stringa equivalente in quattro diverse impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="93c64-2068">The following example converts each element in an array of <xref:System.Decimal> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#14)]
 [!code-vb[System.Convert.ToString2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : double * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2069">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2069">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2070">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2070">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2071">Converte il valore del numero a virgola mobile a precisione doppia specificato nella relativa rappresentazione di stringa equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2071">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2072">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2072">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2073">Questa implementazione è identica a <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="93c64-2073">This implementation is identical to <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2074">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Double> valori alla relativa rappresentazione di stringa equivalente in quattro diverse impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="93c64-2074">The following example converts each element in an array of <xref:System.Double> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#15)]
 [!code-vb[System.Convert.ToString2#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2075">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2075">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2076">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2076">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2077">Converte il valore dell'intero con segno a 16 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2077">Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2078">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2078">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2079">Questa implementazione è identica alla <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2079">This implementation is identical to <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2080">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> classe che definisce il segno negativo come stringa "~"e il segno positivo come la stringa"!".</span><span class="sxs-lookup"><span data-stu-id="93c64-2080">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="93c64-2081">Chiama quindi il <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29> metodo per convertire ogni elemento in una matrice di interi a 16 bit nella relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2081">It then calls the <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29> method to convert each element in an array of 16-bit integers to its equivalent string representation.</span></span> <span data-ttu-id="93c64-2082">La conversione Usa le impostazioni cultura invarianti, nonché l'oggetto personalizzato <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2082">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#19)]
 [!code-vb[System.Convert.ToString2#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2083">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2083">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="93c64-2084">Base del valore restituito, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2084">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2085">Converte il valore di un intero con segno a 16 bit nella relativa rappresentazione di stringa equivalente in una base specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2085">Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2086">Rappresentazione di stringa di <paramref name="value" /> in base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2086">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2087">Se `value` è positivo e `toBase` è 2, 8 o 16, la stringa restituita Usa la rappresentazione di segno e grandezza.</span><span class="sxs-lookup"><span data-stu-id="93c64-2087">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="93c64-2088">Se `value` è negativo e `toBase` è 2, 8 o 16, la stringa restituita Usa la rappresentazione in complemento a due.</span><span class="sxs-lookup"><span data-stu-id="93c64-2088">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="93c64-2089">Ciò significa che il bit di ordine superiore del byte alto (15 bit) viene interpretato come il bit di segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2089">This means that the high-order bit of the high-order byte (bit 15) is interpreted as the sign bit.</span></span> <span data-ttu-id="93c64-2090">Se il <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> metodo viene chiamato per creare una stringa che verrà convertita in un secondo momento indietro su un numero, un metodo corrispondente in cui si presuppone una rappresentazione numerica simile deve essere chiamato per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2090">If the <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="93c64-2091">Tali metodi includono <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> e <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2091">Such methods include <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2092">Nell'esempio seguente converte ogni elemento in una matrice di interi con segno a 16 bit nelle relative rappresentazioni di stringa binaria, ottale, decimali ed esadecimale equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2092">The following example converts each element in an array of 16-bit signed integers to its equivalent binary, octal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#10)]
 [!code-vb[System.Convert.ToString2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#10)]
 [!code-fsharp[System.Convert.ToString2#10](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-2093">Il valore di <paramref name="toBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2093">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2094">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2094">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2095">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2095">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2096">Converte il valore dell'intero con segno a 32 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2096">Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2097">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2097">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2098">Questa implementazione è identica alla <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2098">This implementation is identical to <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2099">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> classe che definisce il segno negativo come stringa "~"e il segno positivo come la stringa"!".</span><span class="sxs-lookup"><span data-stu-id="93c64-2099">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="93c64-2100">Chiama quindi il <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29> metodo per convertire ogni elemento in una matrice di numeri interi nella relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2100">It then calls the <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29> method to convert each element in an array of integers to its equivalent string representation.</span></span> <span data-ttu-id="93c64-2101">La conversione Usa le impostazioni cultura invarianti, nonché l'oggetto personalizzato <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2101">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#20)]
 [!code-vb[System.Convert.ToString2#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2102">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2102">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="93c64-2103">Base del valore restituito, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2103">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2104">Converte il valore di un intero con segno a 32 bit nella relativa rappresentazione di stringa equivalente in una base specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2104">Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2105">Rappresentazione di stringa di <paramref name="value" /> in base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2105">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2106">Se `value` è positivo e `toBase` è 2, 8 o 16, la stringa restituita Usa la rappresentazione di segno e grandezza.</span><span class="sxs-lookup"><span data-stu-id="93c64-2106">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="93c64-2107">Se `value` è negativo e `toBase` è 2, 8 o 16, la stringa restituita Usa la rappresentazione in complemento a due.</span><span class="sxs-lookup"><span data-stu-id="93c64-2107">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="93c64-2108">Ciò significa che il bit di ordine superiore del byte più significativo (31 bit) viene interpretato come il bit di segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2108">This means that the high-order bit of the highest-order byte (bit 31) is interpreted as the sign bit.</span></span> <span data-ttu-id="93c64-2109">Se il <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> metodo viene chiamato per creare una stringa che verrà convertita in un secondo momento indietro su un numero, un metodo corrispondente in cui si presuppone una rappresentazione numerica simile deve essere chiamato per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2109">If the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="93c64-2110">Tali metodi includono <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> e <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2110">Such methods include <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2111">L'esempio seguente converte ogni elemento nella matrice di interi nelle relative rappresentazioni di stringa equivalente binario, esadecimali, decimal ed esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-2111">The following example converts each element in an integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#11)]
 [!code-vb[System.Convert.ToString2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#11)]
 [!code-fsharp[System.Convert.ToString2#11](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-2112">Il valore di <paramref name="toBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2112">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2113">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2113">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2114">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2114">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2115">Converte il valore dell'intero con segno a 64 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2115">Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2116">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2116">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2117">Questa implementazione è identica alla <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2117">This implementation is identical to <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2118">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> classe che definisce il segno negativo come stringa "~"e il segno positivo come la stringa"!".</span><span class="sxs-lookup"><span data-stu-id="93c64-2118">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="93c64-2119">Chiama quindi il <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29> metodo per convertire ogni elemento in una matrice di tipo long integer nella relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2119">It then calls the <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29> method to convert each element in a long integer array to its equivalent string representation.</span></span> <span data-ttu-id="93c64-2120">La conversione Usa le impostazioni cultura invarianti, nonché l'oggetto personalizzato <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2120">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#21)]
 [!code-vb[System.Convert.ToString2#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2121">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2121">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="93c64-2122">Base del valore restituito, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2122">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2123">Converte il valore di un intero con segno a 64 bit nella relativa rappresentazione di stringa equivalente in una base specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2123">Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2124">Rappresentazione di stringa di <paramref name="value" /> in base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2124">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2125">Se `value` è positivo e `toBase` non è 10, la stringa restituita Usa la rappresentazione di segno e grandezza.</span><span class="sxs-lookup"><span data-stu-id="93c64-2125">If `value` is positive and `toBase` is not 10, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="93c64-2126">Se `value` è negativo e `toBase` non è 10, la stringa restituita Usa la rappresentazione di complemento a uno di due.</span><span class="sxs-lookup"><span data-stu-id="93c64-2126">If `value` is negative and `toBase` is not 10, the returned string uses two's complement representation.</span></span> <span data-ttu-id="93c64-2127">Ciò significa che il bit di ordine superiore del byte più significativo (63 bit) viene interpretato come il bit di segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2127">This means that the high-order bit of the highest-order byte (bit 63) is interpreted as the sign bit.</span></span> <span data-ttu-id="93c64-2128">Se il <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> metodo viene chiamato per creare una stringa che verrà convertita in un secondo momento indietro su un numero, un metodo corrispondente in cui si presuppone una rappresentazione numerica simile deve essere chiamato per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2128">If the <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="93c64-2129">Tali metodi includono <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> e <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2129">Such methods include <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2130">Nell'esempio seguente converte ogni elemento in una matrice di interi lunghi nelle relative rappresentazioni di stringa equivalente binario, esadecimali, decimal ed esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-2130">The following example converts each element in a long integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#12)]
 [!code-vb[System.Convert.ToString2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#12)]  
 [!code-fsharp[System.Convert.ToString2#12](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#12)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-2131">Il valore di <paramref name="toBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2131">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : obj * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2132">Oggetto che fornisce il valore da convertire oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2132">An object that supplies the value to convert, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2133">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2133">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2134">Converte il valore dell'oggetto specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2134">Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2135">Rappresentazione di stringa di <paramref name="value" /> o <see cref="F:System.String.Empty" /> se <paramref name="value" /> è un oggetto il cui valore è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2135">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is an object whose value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="93c64-2136">Se <paramref name="value" /> è <see langword="null" />, il metodo restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2136">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2137">Se il `value` parametro implementa le <xref:System.IConvertible> dell'interfaccia, le chiamate al metodo il <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> implementazione di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2137">If the `value` parameter implements the <xref:System.IConvertible> interface, the method calls the <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="93c64-2138">In caso contrario, se il `value` parametro implementa le <xref:System.IFormattable> dell'interfaccia, le chiamate al metodo relativo <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> implementazione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2138">Otherwise, if the `value` parameter implements the <xref:System.IFormattable> interface, the method calls its <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="93c64-2139">Se `value` implementa alcuna interfaccia, le chiamate al metodo il `value` del parametro `ToString()` metodo e il `provider` parametro viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="93c64-2139">If `value` implements neither interface, the method calls the `value` parameter's `ToString()` method, and the `provider` parameter is ignored.</span></span>  
  
 <span data-ttu-id="93c64-2140">Il `provider` parametro viene usato se la `value` parametro implementa la <xref:System.IConvertible> o <xref:System.IFormattable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-2140">The `provider` parameter is used if the `value` parameter implements the <xref:System.IConvertible> or <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="93c64-2141">L'uso più comune del `provider` parametro consiste nello specificare le informazioni specifiche delle impostazioni cultura utilizzate durante la conversione di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2141">The most common use of the `provider` parameter is to specify culture-specific information used in the conversion of `value`.</span></span> <span data-ttu-id="93c64-2142">Ad esempio, se il `value` parametro è un numero decimale negativo, il `provider` parametro può fornire informazioni specifiche delle impostazioni cultura relative la notazione usata per il segno negativo e il separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-2142">For example, if the `value` parameter is a negative decimal number, the `provider` parameter can supply culture-specific information about the notation used for the negative sign and decimal separator.</span></span> <span data-ttu-id="93c64-2143">Nel secondo esempio nella sezione successiva viene illustrato un provider di formato che non fornisce informazioni di formattazione dipendenti dalle impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="93c64-2143">The second example in the next section illustrates a format provider that does not supply culture-sensitive formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2144">L'esempio seguente definisce un `Temperature` che esegue l'override di <xref:System.Object.ToString%2A?displayProperty=nameWithType> (metodo), ma non implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-2144">The following example defines a `Temperature` class that overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="93c64-2145">Nell'esempio viene illustrato come le chiamate al <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metodo, a sua volta, chiamare il `Temperature.ToString` (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-2145">The example illustrates how calls to the <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, call the `Temperature.ToString` method.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring5.cs#26)]
 [!code-vb[System.Convert.ToString2#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring5.vb#26)]  
  
 <span data-ttu-id="93c64-2146">L'esempio seguente definisce una `Temperature` classe che implementa le <xref:System.IFormattable> dell'interfaccia, ma non implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-2146">The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="93c64-2147">Relativi <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementazione rappresenta il `Temperature` valore in gradi Celsius, gradi Fahrenheit o Kelvin, a seconda della stringa di formato.</span><span class="sxs-lookup"><span data-stu-id="93c64-2147">Its <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation represents the `Temperature` value in Celsius, Fahrenheit, or Kelvin, depending on the format  string.</span></span> <span data-ttu-id="93c64-2148">L'esempio definisce anche un `TemperatureProvider` classe che implementa <xref:System.IFormatProvider> e fornisce una stringa di formato generato casualmente che viene usata per il <xref:System.IFormattable> implementazione del `Temperature` classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-2148">The example also defines a `TemperatureProvider` class that implements <xref:System.IFormatProvider> and provides a randomly generated format string that is used by the <xref:System.IFormattable> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring_obj30.cs#30)]
 [!code-vb[System.Convert.ToString2#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring_obj30.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2149">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2149">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2150">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2150">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2151">Converte il valore dell'intero con segno a 8 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2151">Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2152">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2152">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2153">Questa implementazione è identica alla <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2153">This implementation is identical to <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2154">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> classe che definisce il segno negativo come stringa "~"e il segno positivo come la stringa"!".</span><span class="sxs-lookup"><span data-stu-id="93c64-2154">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="93c64-2155">Chiama quindi il <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metodo per convertire ogni elemento nella matrice di byte con segno in rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2155">It then calls the <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to convert each element in signed byte array to its equivalent string representation.</span></span> <span data-ttu-id="93c64-2156">La conversione Usa le impostazioni cultura invarianti, nonché l'oggetto personalizzato <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2156">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#17)]
 [!code-vb[System.Convert.ToString2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : single * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2157">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2157">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2158">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2158">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2159">Converte il valore del numero a virgola mobile a precisione singola specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2159">Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2160">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2160">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2161">Questa implementazione è identica alla <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2161">This implementation is identical to <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2162">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Single> valori alla relativa rappresentazione di stringa equivalente in quattro diverse impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="93c64-2162">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#18)]
 [!code-vb[System.Convert.ToString2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : string * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2163">Stringa da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2163">The string to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2164">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2164">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="93c64-2165">Questo parametro viene ignorato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2165">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2166">Restituisce l'istanza di stringa specificata; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2166">Returns the specified string instance; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2167">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2167">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2168">L'esempio seguente chiama il `ToString` metodo con un <xref:System.String> parametro.</span><span class="sxs-lookup"><span data-stu-id="93c64-2168">The following example calls the `ToString` method with a <xref:System.String> parameter.</span></span> <span data-ttu-id="93c64-2169">Il metodo viene restituito invariato <xref:System.String> senza fare riferimento il <xref:System.IFormatProvider> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2169">The method returns the unmodified <xref:System.String> without referencing the <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2170">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2170">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2171">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2171">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2172">Converte il valore dell'intero senza segno a 16 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2172">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2173">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2173">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2174">Questa implementazione è identica alla <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2174">This implementation is identical to <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2175">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> classe che definisce il segno negativo come stringa "~"e il segno positivo come la stringa"!".</span><span class="sxs-lookup"><span data-stu-id="93c64-2175">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="93c64-2176">Chiama quindi il <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> metodo per convertire un valore intero senza segno a 16 bit nella relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2176">It then calls the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method to convert a 16-bit unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="93c64-2177">La conversione Usa le impostazioni cultura invarianti sia personalizzata <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2177">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-2178">L'output indica che queste informazioni di formattazione non viene utilizzate, poiché per impostazione predefinita l'identificatore di formato "G" include un segno positivo con i valori positivi.</span><span class="sxs-lookup"><span data-stu-id="93c64-2178">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#22)]
 [!code-vb[System.Convert.ToString2#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2179">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2179">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2180">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2180">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2181">Converte il valore dell'intero senza segno a 32 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2181">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2182">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2182">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2183">Questa implementazione è identica alla <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2183">This implementation is identical to <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2184">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> classe che definisce il segno negativo come stringa "~"e il segno positivo come la stringa"!".</span><span class="sxs-lookup"><span data-stu-id="93c64-2184">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="93c64-2185">Chiama quindi il <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29> metodo per convertire un valore unsigned integer nella relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2185">It then calls the <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29> method to convert an unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="93c64-2186">La conversione Usa le impostazioni cultura invarianti sia personalizzata <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2186">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-2187">L'output indica che queste informazioni di formattazione non viene utilizzate, poiché per impostazione predefinita l'identificatore di formato "G" include un segno positivo con i valori positivi.</span><span class="sxs-lookup"><span data-stu-id="93c64-2187">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#23)]
 [!code-vb[System.Convert.ToString2#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2188">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2188">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2189">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2189">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2190">Converte il valore dell'intero senza segno a 64 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2190">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2191">Rappresentazione di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2191">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2192">Questa implementazione è identica alla <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93c64-2192">This implementation is identical to <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2193">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> classe che definisce il segno negativo come stringa "~"e il segno positivo come la stringa"!".</span><span class="sxs-lookup"><span data-stu-id="93c64-2193">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="93c64-2194">Chiama quindi il <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29> metodo per convertire un valore unsigned long integer nella relativa rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2194">It then calls the <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29> method to convert an unsigned long integer value to its equivalent string representation.</span></span> <span data-ttu-id="93c64-2195">La conversione Usa le impostazioni cultura invarianti sia personalizzata <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2195">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-2196">L'output indica che queste informazioni di formattazione non viene utilizzate, poiché per impostazione predefinita l'identificatore di formato "G" include un segno positivo con i valori positivi.</span><span class="sxs-lookup"><span data-stu-id="93c64-2196">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#24)]
 [!code-vb[System.Convert.ToString2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-2197">Converte un valore specificato in un intero senza segno a 16 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2197">Converts a specified value to a 16-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Boolean) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : bool -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2198">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2198">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2199">Converte il valore booleano specificato nell'intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2199">Converts the specified Boolean value to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2200">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2200">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2201">L'esempio seguente converte i valori booleani `true` e `false` di interi senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2201">The following example converts the Boolean values `true` and `false` to unsigned 16-bit integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Convert.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Byte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : byte -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2202">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2202">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2203">Converte il valore dell'intero senza segno a 8 bit specificato nell'intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2203">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2204">Intero senza segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2204">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2205">Nell'esempio seguente converte ogni elemento in una matrice di byte in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2205">The following example converts each element in a byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#2)]
 [!code-vb[System.Convert.ToUInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Char) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : char -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2206">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2206">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2207">Converte il valore del carattere Unicode specificato nell'intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2207">Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2208">Intero senza segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2208">The 16-bit unsigned integer equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2209">Nell'esempio seguente converte ogni elemento in una matrice di caratteri in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2209">The following example converts each element in a character array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#3)]
 [!code-vb[System.Convert.ToUInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As DateTime) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : DateTime -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2210">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2210">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2211">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2211">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2212">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2212">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-2213">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2213">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-2214">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2214">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : decimal -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2215">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2215">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2216">Converte il valore del numero decimale specificato in un intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2216">Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2217">
            <paramref name="value" />, arrotondato all'intero senza segno a 16 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2217">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-2218">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2218">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2219">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Decimal> valori intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2219">The following example converts each element in an array of <xref:System.Decimal> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#4)]
 [!code-vb[System.Convert.ToUInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2220">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2220">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Double) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : double -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2221">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2221">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2222">Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2222">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2223">
            <paramref name="value" />, arrotondato all'intero senza segno a 16 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2223">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-2224">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2224">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2225">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.Double> valori intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2225">The following example converts each element in an array of <xref:System.Double> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#5)]
 [!code-vb[System.Convert.ToUInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2226">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2226">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Short) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int16 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2227">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2227">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2228">Converte il valore dell'intero con segno a 16 bit specificato nell'intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2228">Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2229">Intero senza segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2229">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2230">Nell'esempio seguente prova a convertire ogni elemento in una matrice di interi a 16 bit in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2230">The following example attempts to convert each element in a 16-bit integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#6)]
 [!code-vb[System.Convert.ToUInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2231">
            <paramref name="value" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2231">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2232">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2232">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2233">Converte il valore dell'intero con segno a 32 bit specificato in un intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2233">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2234">Intero senza segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2234">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2235">Nell'esempio seguente converte ogni elemento in una matrice di integer in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2235">The following example converts each element in an integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#7)]
 [!code-vb[System.Convert.ToUInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2236">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2236">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Long) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int64 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2237">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2237">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2238">Converte il valore dell'intero con segno a 64 bit specificato in un intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2238">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2239">Intero senza segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2239">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2240">Nell'esempio seguente converte ogni elemento in una matrice di tipo long integer in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2240">The following example converts each element in a long integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#8)]
 [!code-vb[System.Convert.ToUInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2241">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2241">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : obj -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2242">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2242">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2243">Converte il valore dell'oggetto specificato in un intero senza segno a 16 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2243">Converts the value of the specified object to a 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2244">Intero senza segno a 16 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2244">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2245">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2245">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2246">Nell'esempio seguente prova a convertire ogni elemento nella matrice di oggetti in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2246">The following example attempts to convert each element in an object array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#9)]
 [!code-vb[System.Convert.ToUInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2247">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2247">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-2248">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2248">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-2249">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2249">-or-</span>
          </span>
          <span data-ttu-id="93c64-2250">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2250">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2251">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2251">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As SByte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : sbyte -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2252">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2252">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2253">Converte il valore dell'intero con segno a 8 bit specificato nell'intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2253">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2254">Intero senza segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2254">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2255">Nell'esempio seguente converte ogni elemento in una matrice di byte con segno in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2255">The following example converts each element in a signed byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#10)]
 [!code-vb[System.Convert.ToUInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2256">
            <paramref name="value" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2256">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Single) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : single -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2257">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2257">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2258">Converte il valore del numero a virgola mobile a precisione singola specificato in un intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2258">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2259">
            <paramref name="value" />, arrotondato all'intero senza segno a 16 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2259">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-2260">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2260">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2261">Nell'esempio seguente converte ogni elemento in una matrice di <xref:System.String> valori intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2261">The following example converts each element in an array of <xref:System.String> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#11)]
 [!code-vb[System.Convert.ToUInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2262">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2262">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2263">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2263">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2264">Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2264">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2265">Intero senza segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2265">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2266">Usando il <xref:System.Convert.ToUInt16%28System.String%29> metodo equivale a passare `value` per il <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-2266">Using the <xref:System.Convert.ToUInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-2267">`value` viene interpretato utilizzando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2267">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-2268">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-2268">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-2269">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-2269">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2270">Nell'esempio seguente prova a convertire ogni elemento in una matrice di stringhe numeriche in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2270">The following example attempts to convert each element in a numeric string array to a 16-bit unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#12)]
 [!code-vb[System.Convert.ToUInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2271">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2271">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2272">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2272">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint16 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2273">Intero senza segno a 16 bit da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2273">The 16-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2274">Restituisce l'intero senza segno a 16 bit specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2274">Returns the specified 16-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2275">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2275">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint32 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2276">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2276">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2277">Converte il valore dell'intero senza segno a 32 bit specificato in un intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2277">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2278">Intero senza segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2278">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2279">Nell'esempio seguente prova a convertire ogni elemento in una matrice di interi senza segno in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2279">The following example attempts to convert each element in an array of unsigned integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#13)]
 [!code-vb[System.Convert.ToUInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2280">
            <paramref name="value" /> è maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2280">
              <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As ULong) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint64 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2281">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2281">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2282">Converte il valore dell'intero senza segno a 64 bit specificato in un intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2282">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2283">Intero senza segno a 16 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2283">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2284">Nell'esempio seguente prova a convertire ogni elemento in una matrice di valori unsigned long integer in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2284">The following example attempts to convert each element in an array of unsigned long integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#14)]
 [!code-vb[System.Convert.ToUInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2285">
            <paramref name="value" /> è maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2285">
              <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : obj * IFormatProvider -&gt; uint16" Usage="System.Convert.ToUInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2286">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2286">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2287">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2287">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2288">Converte il valore dell'oggetto specificato in un intero senza segno a 16 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2288">Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2289">Intero senza segno a 16 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2289">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2290">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2290">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="93c64-2291">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2291">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-2292">Ad esempio, se `value` è un <xref:System.String> che rappresenta un numero, `provider` potrebbe fornire informazioni specifiche delle impostazioni cultura sulla notazione usata per rappresentare il numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-2292">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="93c64-2293">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-2293">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2294">L'esempio seguente definisce una `HexString` classe che implementa il <xref:System.IConvertible> interfaccia e che è progettato per contenere la rappresentazione di stringa di entrambi valori senza segno a 16 bit con segno e a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2294">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 16-bit signed and 16-bit unsigned values.</span></span> <span data-ttu-id="93c64-2295">La classe include una `Sign` proprietà che indica il segno del relativo valore esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-2295">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#16)]
 [!code-vb[System.Convert.ToUInt16#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#16)]  
  
 <span data-ttu-id="93c64-2296">Nell'esempio seguente mostra che una chiamata ai <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29> metodo che passa un `HexString` oggetto come parametro, chiama a sua volta, il <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> implementazione del `HexString` classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-2296">The following example shows that a call to the <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#17)]
 [!code-vb[System.Convert.ToUInt16#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2297">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2297">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-2298">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2298">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-2299">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2299">-or-</span>
          </span>
          <span data-ttu-id="93c64-2300">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2300">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2301">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2301">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string * IFormatProvider -&gt; uint16" Usage="System.Convert.ToUInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2302">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2302">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2303">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2303">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2304">Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 16 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2304">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2305">Intero senza segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2305">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2306">Il valore restituito è il risultato ottenuto richiamando <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> su `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2306">The return value is the result of invoking <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="93c64-2307">`provider` è un' <xref:System.IFormatProvider> istanza che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2307">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-2308">Il <xref:System.Globalization.NumberFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2308">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-2309">Se `provider` viene `null`, il <xref:System.Globalization.NumberFormatInfo> per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-2309">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-2310">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-2310">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-2311">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-2311">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2312">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> che riconosce la stringa "pos" come segno positivo e la stringa "neg" come il segno negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-2312">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="93c64-2313">Tenta di convertire ogni elemento della matrice di stringhe numeriche in un intero utilizzando questo provider di entrambi e <xref:System.Globalization.NumberFormatInfo> provider per le impostazioni cultura invarianti.</span><span class="sxs-lookup"><span data-stu-id="93c64-2313">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_4.cs#18)]
 [!code-vb[System.Convert.ToUInt16#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2314">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2314">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2315">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2315">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, fromBase As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string * int -&gt; uint16" Usage="System.Convert.ToUInt16 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2316">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2316">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="93c64-2317">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2317">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2318">Converte la rappresentazione di stringa di un numero in una base specificata nell'intero senza segno a 16 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2318">Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2319">Intero senza segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2319">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2320">Se `fromBase` è 16, è possibile anteporre al numero specificato da di `value` parametro con "0x" o "0x".</span><span class="sxs-lookup"><span data-stu-id="93c64-2320">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="93c64-2321">Poiché il <xref:System.UInt16> tipo di dati supporta solo i valori senza segno il <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> metodo presuppone che `value` viene espressa utilizzando una rappresentazione binaria non firmati.</span><span class="sxs-lookup"><span data-stu-id="93c64-2321">Because the <xref:System.UInt16> data type supports unsigned values only, the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="93c64-2322">In altre parole, tutti i 16 bit vengono usati per rappresentare il valore numerico e il bit di segno è assente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2322">In other words, all 16 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="93c64-2323">Di conseguenza, è possibile scrivere codice in cui un intero con segno valore che è compreso nell'intervallo del <xref:System.UInt16> tipo di dati viene convertito in un <xref:System.UInt16> valore senza il metodo che genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2323">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt16> data type is converted to a <xref:System.UInt16> value without the method throwing an exception.</span></span> <span data-ttu-id="93c64-2324">L'esempio seguente converte <xref:System.Int16.MinValue?displayProperty=nameWithType> alla relativa rappresentazione di stringa esadecimale e quindi chiama il <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-2324">The following example converts <xref:System.Int16.MinValue?displayProperty=nameWithType> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="93c64-2325">Anziché generare un'eccezione, il metodo visualizza il messaggio "0x8000 viene convertito a 32768."</span><span class="sxs-lookup"><span data-stu-id="93c64-2325">Instead of throwing an exception, the method displays the message, "0x8000 converts to 32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#11)]
 [!code-vb[System.Convert.BaseConversion#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#11)]  
  
 <span data-ttu-id="93c64-2326">Quando si esegue operazioni binarie o conversioni numeriche, è sempre la responsabilità dello sviluppatore per verificare che un metodo o un operatore viene utilizzata la rappresentazione numerica appropriata per interpretare un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="93c64-2326">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="93c64-2327">L'esempio seguente illustra una tecnica per garantire che il metodo non utilizzi in modo non appropriato rappresentazione binaria per interpretare un valore che utilizza la rappresentazione in complemento a due quando si converte una stringa esadecimale in un <xref:System.UInt16> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-2327">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="93c64-2328">Nell'esempio determina se un valore rappresenta un intero senza segno o con segno mentre converte tale valore alla relativa rappresentazione di stringa.</span><span class="sxs-lookup"><span data-stu-id="93c64-2328">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="93c64-2329">Quando l'esempio converte il valore in un <xref:System.UInt16> valore, viene verificato se il valore originale era un intero con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2329">When the example converts the value to a <xref:System.UInt16> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="93c64-2330">Caso in questo e se è impostato il bit più significativo (che indica che il valore originale è stato negativo), il metodo genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2330">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#12)]
 [!code-vb[System.Convert.BaseConversion#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#12)]  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2331">Nell'esempio seguente tenta di interpretazione di ogni elemento in una matrice di stringhe numeriche come valore esadecimale e di convertirlo in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2331">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_2.cs#15)]
 [!code-vb[System.Convert.ToUInt16#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-2332">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2332">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="93c64-2333">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2333">-or-</span>
          </span>
          <span data-ttu-id="93c64-2334">
            <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2334">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-2335">
            <paramref name="value" /> è <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2335">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2336">
            <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2336">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="93c64-2337">Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2337">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2338">
            <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2338">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="93c64-2339">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2339">-or-</span>
          </span>
          <span data-ttu-id="93c64-2340">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2340">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-2341">Converte un valore specificato in un intero senza segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2341">Converts a specified value to a 32-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Boolean) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : bool -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2342">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2342">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2343">Converte il valore booleano specificato nell'intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2343">Converts the specified Boolean value to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2344">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2344">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2345">L'esempio seguente converte i valori booleani `true` e `false` a valori unsigned integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2345">The following example converts the Boolean values `true` and `false` to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Convert.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Byte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : byte -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2346">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2346">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2347">Converte il valore dell'intero senza segno a 8 bit specificato nell'intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2347">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2348">Intero senza segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2348">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2349">Nell'esempio seguente converte ogni elemento in una matrice di byte in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2349">The following example converts each element in a byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#2)]
 [!code-vb[System.Convert.ToUInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Char) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : char -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2350">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2350">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2351">Converte il valore del carattere Unicode specificato nell'intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2351">Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2352">Intero senza segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2352">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2353">Nell'esempio seguente converte ogni elemento in una matrice di caratteri in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2353">The following example converts each element in a character array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#3)]
 [!code-vb[System.Convert.ToUInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As DateTime) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : DateTime -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2354">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2354">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2355">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2355">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2356">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2356">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-2357">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2357">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-2358">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2358">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : decimal -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2359">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2359">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2360">Converte il valore del numero decimale specificato in un intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2360">Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2361">
            <paramref name="value" />, arrotondato all'intero senza segno a 32 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2361">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-2362">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2362">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2363">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Decimal> valori in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2363">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#4)]
 [!code-vb[System.Convert.ToUInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2364">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2364">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Double) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : double -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2365">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2365">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2366">Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2366">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2367">
            <paramref name="value" />, arrotondato all'intero senza segno a 32 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2367">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-2368">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2368">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2369">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Double> valori in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2369">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#5)]
 [!code-vb[System.Convert.ToUInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2370">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2370">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Short) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int16 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2371">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2371">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2372">Converte il valore dell'intero con segno a 16 bit specificato nell'intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2372">Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2373">Intero senza segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2373">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2374">Nell'esempio seguente prova a convertire ogni elemento in una matrice di interi a 16 bit in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2374">The following example attempts to convert each element in a 16-bit integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#6)]
 [!code-vb[System.Convert.ToUInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2375">
            <paramref name="value" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2375">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2376">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2376">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2377">Converte il valore dell'intero con segno a 32 bit specificato in un intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2377">Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2378">Intero senza segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2378">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2379">Nell'esempio seguente prova a convertire ogni elemento nella matrice di valori integer in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2379">The following example attempts to convert each element in an integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#7)]
 [!code-vb[System.Convert.ToUInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2380">
            <paramref name="value" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2380">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Long) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int64 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2381">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2381">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2382">Converte il valore dell'intero con segno a 64 bit specificato in un intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2382">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2383">Intero senza segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2383">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2384">Nell'esempio seguente prova a convertire ogni elemento in una matrice di tipo long integer in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2384">The following example attempts to convert each element in a long integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#8)]
 [!code-vb[System.Convert.ToUInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2385">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2385">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : obj -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2386">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2386">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2387">Converte il valore dell'oggetto specificato in un intero senza segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2387">Converts the value of the specified object to a 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2388">Intero senza segno a 32 bit equivalente a <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2388">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2389">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2389">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2390">Nell'esempio seguente prova a convertire ogni elemento nella matrice di oggetti in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2390">The following example attempts to convert each element in an object array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#9)]
 [!code-vb[System.Convert.ToUInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2391">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2391">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-2392">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2392">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-2393">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2393">-or-</span>
          </span>
          <span data-ttu-id="93c64-2394">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2394">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2395">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2395">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As SByte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : sbyte -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2396">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2396">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2397">Converte il valore dell'intero con segno a 8 bit specificato nell'intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2397">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2398">Intero senza segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2398">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2399">Nell'esempio seguente prova a convertire ogni elemento in una matrice di byte con segno in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2399">The following example attempts to convert each element in a signed byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#10)]
 [!code-vb[System.Convert.ToUInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2400">
            <paramref name="value" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2400">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Single) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : single -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2401">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2401">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2402">Converte il valore del numero a virgola mobile a precisione singola specificato in un intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2402">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2403">
            <paramref name="value" />, arrotondato all'intero senza segno a 32 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2403">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-2404">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2404">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2405">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Single> valori in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2405">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#11)]
 [!code-vb[System.Convert.ToUInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2406">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2406">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2407">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2407">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2408">Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2408">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2409">Intero senza segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2409">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2410">Usando il <xref:System.Convert.ToUInt32%28System.String%29> metodo equivale a passare `value` per il <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-2410">Using the <xref:System.Convert.ToUInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-2411">`value` viene interpretato utilizzando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2411">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-2412">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-2412">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-2413">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-2413">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2414">Nell'esempio seguente vengono interpretati gli elementi in una matrice di stringhe numeriche e tenta di convertire tali a valori unsigned integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2414">The following example interprets the elements in a string array as numeric strings and attempts to convert them to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#12)]
 [!code-vb[System.Convert.ToUInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2415">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2415">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2416">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2416">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UShort) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint16 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2417">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2417">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2418">Converte il valore dell'intero senza segno a 16 bit specificato nell'intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2418">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2419">Intero senza segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2419">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2420">L'esempio seguente converte ogni elemento in una matrice di intero senza segno a 16 bit in un valore intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2420">The following example converts each element in an unsigned 16-bit integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#13)]
 [!code-vb[System.Convert.ToUInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint32 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2421">Intero senza segno a 32 bit da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2421">The 32-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2422">Restituisce l'intero senza segno a 32 bit specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2422">Returns the specified 32-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2423">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2423">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As ULong) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint64 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2424">Intero senza segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2424">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2425">Converte il valore dell'intero senza segno a 64 bit specificato in un intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2425">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2426">Intero senza segno a 32 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2426">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2427">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di intero lungo senza segno in un valore intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2427">The following example attempts to convert each element in an unsigned long integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#14)]
 [!code-vb[System.Convert.ToUInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2428">
            <paramref name="value" /> è maggiore di <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2428">
              <paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : obj * IFormatProvider -&gt; uint32" Usage="System.Convert.ToUInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2429">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2429">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2430">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2430">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2431">Converte il valore dell'oggetto specificato in un intero senza segno a 32 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2431">Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2432">Intero senza segno a 32 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2432">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2433">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2433">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="93c64-2434">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2434">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-2435">Ad esempio, se `value` è un <xref:System.String> che rappresenta un numero, `provider` potrebbe fornire informazioni specifiche delle impostazioni cultura sulla notazione usata per rappresentare il numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-2435">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="93c64-2436">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-2436">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2437">L'esempio seguente definisce una `HexString` classe che implementa il <xref:System.IConvertible> interfaccia e che è progettato per contenere la rappresentazione di stringa di entrambi valori senza segno a 32 bit con segno e a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2437">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 32-bit signed and 32-bit unsigned values.</span></span> <span data-ttu-id="93c64-2438">La classe include una `Sign` proprietà che indica il segno del relativo valore esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-2438">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#17)]
 [!code-vb[System.Convert.ToUInt32#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#17)]  
  
 <span data-ttu-id="93c64-2439">Nell'esempio seguente mostra che una chiamata ai <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29> metodo che passa un `HexString` oggetto come parametro, chiama a sua volta, il <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> implementazione del `HexString` classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-2439">The following example shows that a call to the <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#18)]
 [!code-vb[System.Convert.ToUInt32#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2440">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2440">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-2441">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2441">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-2442">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2442">-or-</span>
          </span>
          <span data-ttu-id="93c64-2443">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2443">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2444">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2444">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string * IFormatProvider -&gt; uint32" Usage="System.Convert.ToUInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2445">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2445">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2446">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2446">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2447">Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 32 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2447">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2448">Intero senza segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2448">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2449">Il valore restituito è il risultato ottenuto richiamando <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> su `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2449">The return value is the result of invoking <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="93c64-2450">`provider` è un' <xref:System.IFormatProvider> istanza che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2450">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-2451">Il <xref:System.Globalization.NumberFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2451">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-2452">Se `provider` viene `null`, il <xref:System.Globalization.NumberFormatInfo> per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-2452">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-2453">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-2453">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-2454">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-2454">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2455">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> che riconosce la stringa "pos" come segno positivo e la stringa "neg" come il segno negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-2455">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="93c64-2456">Tenta di convertire ogni elemento della matrice di stringhe numeriche in un intero utilizzando questo provider di entrambi e <xref:System.Globalization.NumberFormatInfo> provider per le impostazioni cultura invarianti.</span><span class="sxs-lookup"><span data-stu-id="93c64-2456">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_2.cs#15)]
 [!code-vb[System.Convert.ToUInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2457">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2457">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2458">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2458">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, fromBase As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string * int -&gt; uint32" Usage="System.Convert.ToUInt32 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2459">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2459">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="93c64-2460">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2460">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2461">Converte la rappresentazione di stringa di un numero in una base specificata nell'intero senza segno a 32 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2461">Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2462">Intero senza segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2462">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2463">Se `fromBase` è 16, è possibile anteporre al numero specificato da di `value` parametro con "0x" o "0x".</span><span class="sxs-lookup"><span data-stu-id="93c64-2463">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="93c64-2464">Poiché il <xref:System.UInt32> tipo di dati supporta solo i valori senza segno il <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> metodo presuppone che `value` viene espressa utilizzando una rappresentazione binaria non firmati.</span><span class="sxs-lookup"><span data-stu-id="93c64-2464">Because the <xref:System.UInt32> data type supports unsigned values only, the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="93c64-2465">In altre parole, tutte le 32 bit vengono usati per rappresentare il valore numerico e il bit di segno è assente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2465">In other words, all 32 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="93c64-2466">Di conseguenza, è possibile scrivere codice in cui un intero con segno valore che è compreso nell'intervallo del <xref:System.UInt32> tipo di dati viene convertito in un <xref:System.UInt32> valore senza il metodo che genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2466">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt32> data type is converted to a <xref:System.UInt32> value without the method throwing an exception.</span></span> <span data-ttu-id="93c64-2467">L'esempio seguente converte <xref:System.Int32.MinValue> alla relativa rappresentazione di stringa esadecimale e quindi chiama il <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-2467">The following example converts <xref:System.Int32.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="93c64-2468">Anziché generare un'eccezione, il metodo visualizza il messaggio "0x80000000 viene convertito in 2147483648".</span><span class="sxs-lookup"><span data-stu-id="93c64-2468">Instead of throwing an exception, the method displays the message, "0x80000000 converts to 2147483648."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#13)]
 [!code-vb[System.Convert.BaseConversion#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#13)]  
  
 <span data-ttu-id="93c64-2469">Quando si esegue operazioni binarie o conversioni numeriche, è sempre la responsabilità dello sviluppatore per verificare che un metodo o un operatore viene utilizzata la rappresentazione numerica appropriata per interpretare un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="93c64-2469">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="93c64-2470">L'esempio seguente illustra una tecnica per garantire che il metodo non utilizzi in modo non appropriato rappresentazione binaria per interpretare un valore che utilizza la rappresentazione in complemento a due quando si converte una stringa esadecimale in un <xref:System.UInt32> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-2470">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt32> value.</span></span> <span data-ttu-id="93c64-2471">Nell'esempio determina se un valore rappresenta un intero senza segno o con segno mentre converte tale valore alla relativa rappresentazione di stringa.</span><span class="sxs-lookup"><span data-stu-id="93c64-2471">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="93c64-2472">Quando l'esempio converte il valore in un <xref:System.UInt32> valore, viene verificato se il valore originale era un intero con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2472">When the example converts the value to a <xref:System.UInt32> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="93c64-2473">Caso in questo e se è impostato il bit più significativo (che indica che il valore originale è stato negativo), il metodo genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2473">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#14)]
 [!code-vb[System.Convert.BaseConversion#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#14)]  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2474">Nell'esempio seguente tenta di ogni elemento in una matrice di stringhe numeriche come valore esadecimale di interpretare e per convertire i dati in un intero senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2474">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_3.cs#16)]
 [!code-vb[System.Convert.ToUInt32#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-2475">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2475">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="93c64-2476">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2476">-or-</span>
          </span>
          <span data-ttu-id="93c64-2477">
            <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2477">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-2478">
            <paramref name="value" /> è <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2478">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2479">
            <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2479">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="93c64-2480">Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2480">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2481">
            <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2481">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="93c64-2482">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2482">-or-</span>
          </span>
          <span data-ttu-id="93c64-2483">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2483">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93c64-2484">Converte un valore specificato in un intero senza segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2484">Converts a specified value to a 64-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Boolean) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : bool -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2485">Valore booleano da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2485">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2486">Converte il valore booleano specificato nell'intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2486">Converts the specified Boolean value to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2487">Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2487">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2488">L'esempio seguente converte booleani `true` e `false` valori a valori unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2488">The following example converts Boolean `true` and `false` values to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Convert.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Byte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : byte -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2489">Intero senza segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2489">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2490">Converte il valore dell'intero senza segno a 8 bit specificato nell'intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2490">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2491">Intero con segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2491">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2492">Nell'esempio seguente converte ogni elemento in una matrice di byte in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2492">The following example converts each element in a byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#2)]
 [!code-vb[System.Convert.ToUInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Char) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : char -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2493">Carattere Unicode da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2493">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2494">Converte il valore del carattere Unicode specificato nell'intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2494">Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2495">Intero senza segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2495">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2496">Nell'esempio seguente converte ogni elemento in una matrice di caratteri in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2496">The following example converts each element in a character array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#3)]
 [!code-vb[System.Convert.ToUInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As DateTime) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : DateTime -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2497">Valore di data e ora da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2497">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2498">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2498">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2499">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2499">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="93c64-2500">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2500">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-2501">Questa conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2501">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : decimal -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2502">Numero decimale da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2502">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2503">Converte il valore del numero decimale specificato in un intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2503">Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2504">
            <paramref name="value" />, arrotondato all'intero senza segno a 64 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2504">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-2505">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2505">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2506">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Decimal> valori intero lungo senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2506">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#4)]
 [!code-vb[System.Convert.ToUInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2507">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2507">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Double) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : double -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2508">Numero a virgola mobile e con precisione doppia da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2508">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2509">Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2509">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2510">
            <paramref name="value" />, arrotondato all'intero senza segno a 64 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2510">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-2511">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2511">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2512">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Double> valori intero lungo senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2512">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#5)]
 [!code-vb[System.Convert.ToUInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2513">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2513">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Short) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int16 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2514">Intero con segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2514">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2515">Converte il valore dell'intero con segno a 16 bit specificato nell'intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2515">Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2516">Intero senza segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2516">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2517">Nell'esempio seguente prova a convertire ogni elemento in una matrice di interi a 16 bit in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2517">The following example attempts to convert each element in an array of 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#6)]
 [!code-vb[System.Convert.ToUInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2518">
            <paramref name="value" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2518">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2519">Intero con segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2519">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2520">Converte il valore dell'intero con segno a 32 bit specificato in un intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2520">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2521">Intero senza segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2521">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2522">Nell'esempio seguente prova a convertire ogni elemento in una matrice di integer in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2522">The following example attempts to convert each element in an array of integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#7)]
 [!code-vb[System.Convert.ToUInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2523">
            <paramref name="value" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2523">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Long) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int64 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2524">Intero con segno a 64 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2524">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2525">Converte il valore dell'intero con segno a 64 bit specificato in un intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2525">Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2526">Intero senza segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2526">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2527">Nell'esempio seguente prova a convertire ogni elemento in una matrice di valori long integer in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2527">The following example attempts to convert each element in an array of long integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#8)]
 [!code-vb[System.Convert.ToUInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2528">
            <paramref name="value" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2528">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : obj -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2529">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2529">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2530">Converte il valore dell'oggetto specificato in un intero senza segno a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2530">Converts the value of the specified object to a 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2531">Intero senza segno a 64 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2531">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2532">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2532">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2533">Nell'esempio seguente prova a convertire ogni elemento nella matrice di oggetti in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2533">The following example attempts to convert each element in an object array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#9)]
 [!code-vb[System.Convert.ToUInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2534">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2534">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-2535">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2535">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-2536">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2536">-or-</span>
          </span>
          <span data-ttu-id="93c64-2537">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2537">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2538">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2538">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As SByte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : sbyte -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2539">Intero con segno a 8 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2539">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2540">Converte il valore dell'intero con segno a 8 bit specificato nell'intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2540">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2541">Intero senza segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2541">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2542">Nell'esempio seguente prova a convertire ogni elemento in una matrice di byte con segno in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2542">The following example attempts to convert each element in a signed byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#10)]
 [!code-vb[System.Convert.ToUInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2543">
            <paramref name="value" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2543">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Single) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : single -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2544">Numero a virgola mobile e con precisione singola da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2544">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2545">Converte il valore del numero a virgola mobile a precisione singola specificato in un intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2545">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2546">
            <paramref name="value" />, arrotondato all'intero senza segno a 64 bit più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2546">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="93c64-2547">Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2547">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2548">Nell'esempio seguente tenta di convertire ogni elemento in una matrice di <xref:System.Single> valori intero lungo senza segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2548">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned long integer.</span></span> <span data-ttu-id="93c64-2549">L'output mostra che i valori frazionari vengono arrotondati prima di eseguita la conversione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2549">The output shows that fractional values are rounded before the conversion is performed.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#11)]
 [!code-vb[System.Convert.ToUInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2550">
            <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2550">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2551">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2551">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2552">Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2552">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2553">Intero con segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2553">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2554">Usando il <xref:System.Convert.ToInt64%28System.String%29> metodo equivale a passare `value` per il <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-2554">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93c64-2555">`value` viene interpretato utilizzando le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2555">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="93c64-2556">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-2556">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-2557">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-2557">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2558">Nell'esempio seguente interpreta gli elementi di una matrice di stringhe come stringhe numeriche e si tenta di convertirli in unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2558">The following example interprets the elements of a string array as numeric strings and attempts to convert them to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#12)]
 [!code-vb[System.Convert.ToUInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2559">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2559">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2560">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2560">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UShort) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint16 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2561">Intero senza segno a 16 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2561">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2562">Converte il valore dell'intero senza segno a 16 bit specificato nell'intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2562">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2563">Intero senza segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2563">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2564">Nell'esempio seguente converte ogni elemento in una matrice di interi senza segno a 16 bit in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2564">The following example converts each element in an array of unsigned 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#13)]
 [!code-vb[System.Convert.ToUInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint32 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2565">Intero senza segno a 32 bit da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2565">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2566">Converte il valore dell'intero senza segno a 32 bit specificato in un intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2566">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2567">Intero senza segno a 64 bit equivalente a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2567">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93c64-2568">Nell'esempio seguente converte ogni elemento nella matrice di interi senza segno in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2568">The following example converts each element in an unsigned integer array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#14)]
 [!code-vb[System.Convert.ToUInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint64 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2569">Intero senza segno a 64 bit da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2569">The 64-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2570">Restituisce l'intero senza segno a 64 bit specificato; non viene eseguita alcuna conversione effettiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2570">Returns the specified 64-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2571">
            <paramref name="value" /> viene restituito invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2571">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : obj * IFormatProvider -&gt; uint64" Usage="System.Convert.ToUInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2572">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2572">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2573">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2573">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2574">Converte il valore dell'oggetto specificato in un intero senza segno a 64 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2574">Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2575">Intero senza segno a 64 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2575">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2576">Il valore restituito è il risultato ottenuto richiamando la <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> metodo del tipo sottostante di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2576">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="93c64-2577">`provider` consente all'utente di specificare le informazioni specifiche delle impostazioni cultura conversione sul contenuto di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2577">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="93c64-2578">Ad esempio, se `value` è un <xref:System.String> che rappresenta un numero, `provider` potrebbe fornire informazioni specifiche delle impostazioni cultura sulla notazione usata per rappresentare il numero.</span><span class="sxs-lookup"><span data-stu-id="93c64-2578">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="93c64-2579">Ignorano i tipi di base `provider`; tuttavia, il parametro può essere utilizzato se `value` è un tipo definito dall'utente che implementa il <xref:System.IConvertible> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="93c64-2579">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2580">L'esempio seguente definisce una `HexString` classe che implementa il <xref:System.IConvertible> interfaccia e che è progettato per contenere la rappresentazione di stringa di entrambi valori senza segno a 64 bit con segno e a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="93c64-2580">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 64-bit signed and 64-bit unsigned values.</span></span> <span data-ttu-id="93c64-2581">La classe include una `Sign` proprietà che indica il segno del relativo valore esadecimale.</span><span class="sxs-lookup"><span data-stu-id="93c64-2581">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#17)]
 [!code-vb[System.Convert.ToUInt64#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#17)]  
  
 <span data-ttu-id="93c64-2582">Nell'esempio seguente mostra che una chiamata ai <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29> metodo che passa un `HexString` oggetto come parametro, chiama a sua volta, il <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> implementazione del `HexString` classe.</span><span class="sxs-lookup"><span data-stu-id="93c64-2582">The following example shows that a call to the <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#18)]
 [!code-vb[System.Convert.ToUInt64#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2583">Il formato di <paramref name="value" /> non è appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2583">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93c64-2584">
            <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2584">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="93c64-2585">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2585">-or-</span>
          </span>
          <span data-ttu-id="93c64-2586">La conversione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2586">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2587">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2587">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string * IFormatProvider -&gt; uint64" Usage="System.Convert.ToUInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2588">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2588">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="93c64-2589">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2589">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2590">Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 64 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2590">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2591">Intero senza segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2591">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2592">Il valore restituito è il risultato ottenuto richiamando <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> su `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2592">The return value is the result of invoking <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="93c64-2593">`provider` è un' <xref:System.IFormatProvider> implementazione che consente di ottenere un <xref:System.Globalization.NumberFormatInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="93c64-2593">`provider` is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="93c64-2594">Il <xref:System.Globalization.NumberFormatInfo> oggetto fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="93c64-2594">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="93c64-2595">Se `provider` viene `null`, il <xref:System.Globalization.NumberFormatInfo> dell'oggetto per la lingua corrente viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="93c64-2595">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="93c64-2596">Se si preferisce non gestire un'eccezione se la conversione non riesce, è possibile chiamare il <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="93c64-2596">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="93c64-2597">Restituisce un <xref:System.Boolean> valore che indica se la conversione ha avuto esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-2597">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2598">L'esempio seguente definisce una classe personalizzata <xref:System.Globalization.NumberFormatInfo> che riconosce la stringa "pos" come segno positivo e la stringa "neg" come il segno negativo.</span><span class="sxs-lookup"><span data-stu-id="93c64-2598">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="93c64-2599">Viene quindi tenta di convertire ogni elemento della matrice di stringhe numeriche in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2599">It then attempts to convert each element of a numeric string array to an unsigned long integer.</span></span> <span data-ttu-id="93c64-2600">La conversione Usa sia il provider personalizzato e <xref:System.Globalization.NumberFormatInfo> provider per le impostazioni cultura invarianti.</span><span class="sxs-lookup"><span data-stu-id="93c64-2600">The conversion uses both the custom provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_2.cs#15)]
 [!code-vb[System.Convert.ToUInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2601">
            <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2601">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2602">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2602">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, fromBase As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string * int -&gt; uint64" Usage="System.Convert.ToUInt64 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93c64-2603">Stringa che contiene il numero da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2603">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="93c64-2604">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2604">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c64-2605">Converte la rappresentazione di stringa di un numero in una base specificata nell'intero senza segno a 64 bit equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2605">Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93c64-2606">Intero senza segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2606">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c64-2607">Se `fromBase` è 16, è possibile anteporre al numero specificato da di `value` parametro con "0x" o "0x".</span><span class="sxs-lookup"><span data-stu-id="93c64-2607">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="93c64-2608">Poiché il <xref:System.UInt64> tipo di dati supporta solo i valori senza segno il <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> metodo presuppone che `value` viene espressa utilizzando una rappresentazione binaria non firmati.</span><span class="sxs-lookup"><span data-stu-id="93c64-2608">Because the <xref:System.UInt64> data type supports unsigned values only, the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="93c64-2609">In altre parole, tutti i 64 bit vengono usati per rappresentare il valore numerico e il bit di segno è assente.</span><span class="sxs-lookup"><span data-stu-id="93c64-2609">In other words, all 64 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="93c64-2610">Di conseguenza, è possibile scrivere codice in cui un valore long integer con segno valore che è compreso nell'intervallo del <xref:System.UInt64> tipo di dati viene convertito in un <xref:System.UInt64> valore senza il metodo che genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2610">As a result, it is possible to write code in which a signed long integer value that is out of the range of the <xref:System.UInt64> data type is converted to a <xref:System.UInt64> value without the method throwing an exception.</span></span> <span data-ttu-id="93c64-2611">L'esempio seguente converte <xref:System.Int64.MinValue> alla relativa rappresentazione di stringa esadecimale e quindi chiama il <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="93c64-2611">The following example converts <xref:System.Int64.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="93c64-2612">Anziché generare un'eccezione, il metodo visualizza il messaggio "0x8000000000000000 viene convertito in 9223372036854775808".</span><span class="sxs-lookup"><span data-stu-id="93c64-2612">Instead of throwing an exception, the method displays the message, "0x8000000000000000 converts to 9223372036854775808."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#15)]
 [!code-vb[System.Convert.BaseConversion#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#15)]  
  
 <span data-ttu-id="93c64-2613">Quando si esegue operazioni binarie o conversioni numeriche, è sempre la responsabilità dello sviluppatore per verificare che un metodo o un operatore viene utilizzata la rappresentazione numerica appropriata per interpretare un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="93c64-2613">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="93c64-2614">L'esempio seguente illustra una tecnica per garantire che il metodo non utilizzi in modo non appropriato rappresentazione binaria per interpretare un valore che utilizza la rappresentazione in complemento a due quando si converte una stringa esadecimale in un <xref:System.UInt64> valore.</span><span class="sxs-lookup"><span data-stu-id="93c64-2614">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="93c64-2615">Nell'esempio determina se un valore rappresenta un intero senza segno o con segno mentre converte tale valore alla relativa rappresentazione di stringa.</span><span class="sxs-lookup"><span data-stu-id="93c64-2615">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="93c64-2616">Quando l'esempio converte il valore in un <xref:System.UInt64> valore, viene verificato se il valore originale era un intero con segno.</span><span class="sxs-lookup"><span data-stu-id="93c64-2616">When the example converts the value to a <xref:System.UInt64> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="93c64-2617">Caso in questo e se è impostato il bit più significativo (che indica che il valore originale è stato negativo), il metodo genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="93c64-2617">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#16)]
 [!code-vb[System.Convert.BaseConversion#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#16)]  
  
   
  
## Examples  
 <span data-ttu-id="93c64-2618">Nell'esempio seguente tenta di interpretazione di ogni elemento in una matrice di stringhe numeriche come valore esadecimale e di convertirlo in un unsigned long integer.</span><span class="sxs-lookup"><span data-stu-id="93c64-2618">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_3.cs#16)]
 [!code-vb[System.Convert.ToUInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93c64-2619">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2619">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="93c64-2620">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2620">-or-</span>
          </span>
          <span data-ttu-id="93c64-2621">
            <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2621">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93c64-2622">
            <paramref name="value" /> è <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2622">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="93c64-2623">
            <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2623">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="93c64-2624">Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2624">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="93c64-2625">
            <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2625">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="93c64-2626">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2626">-or-</span>
          </span>
          <span data-ttu-id="93c64-2627">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c64-2627">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64Chars (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64Chars(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64Chars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64Chars (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64Chars(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryFromBase64Chars : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; *  -&gt; bool" Usage="System.Convert.TryFromBase64Chars (chars, bytes, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64String">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64String (string s, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64String(string s, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64String(System.String,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64String (s As String, bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64String(System::String ^ s, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryFromBase64String : string * Span&lt;byte&gt; *  -&gt; bool" Usage="System.Convert.TryFromBase64String (s, bytes, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryToBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryToBase64Chars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, out int charsWritten, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryToBase64Chars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, [out] int32&amp; charsWritten, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryToBase64Chars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryToBase64Chars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), ByRef charsWritten As Integer, Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryToBase64Chars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; *  * Base64FormattingOptions -&gt; bool" Usage="System.Convert.TryToBase64Chars (bytes, chars, charsWritten, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>