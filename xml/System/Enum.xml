<Type Name="Enum" FullName="System.Enum">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7fbf78cb66a29f9b14bfa93ea0c7f6c82fc2d8b1" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39766188" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Enum : ValueType, IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Enum extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Enum" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Enum&#xA;Inherits ValueType&#xA;Implements IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Enum abstract : ValueType, IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="F#" Value="type Enum = class&#xA;    inherit ValueType&#xA;    interface IComparable&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="410a2-101">Si tratta della classe base per le enumerazioni.</span>
      <span class="sxs-lookup">
        <span data-stu-id="410a2-101">Provides the base class for enumerations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-102">Un'enumerazione è un set di costanti denominate cui tipo sottostante è qualsiasi tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="410a2-102">An enumeration is a set of named constants whose underlying type is any integral type.</span></span> <span data-ttu-id="410a2-103">Se nessun tipo sottostante è dichiarato in modo esplicito, <xref:System.Int32> viene usato.</span><span class="sxs-lookup"><span data-stu-id="410a2-103">If no underlying type is explicitly declared, <xref:System.Int32> is used.</span></span> <span data-ttu-id="410a2-104"><xref:System.Enum> è la classe base per tutte le enumerazioni di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="410a2-104"><xref:System.Enum> is the base class for all enumerations in the .NET Framework.</span></span> <span data-ttu-id="410a2-105">Tipi di enumerazione sono definiti mediante il `enum` parola chiave nel linguaggio c# e il `Enum`... `End Enum` costruire in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="410a2-105">Enumeration types are defined by the `enum` keyword in C# and the `Enum`...`End Enum` construct in Visual Basic.</span></span>  
  
 <span data-ttu-id="410a2-106"><xref:System.Enum> fornisce metodi per confrontare le istanze di questa classe, conversione del valore di un'istanza alla relativa rappresentazione di stringa, conversione la rappresentazione di stringa di un numero in un'istanza di questa classe e la creazione di un'istanza di un'enumerazione specificata e un valore.</span><span class="sxs-lookup"><span data-stu-id="410a2-106"><xref:System.Enum> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.</span></span>  
  
 <span data-ttu-id="410a2-107">È anche possibile considerare un'enumerazione come campo di bit.</span><span class="sxs-lookup"><span data-stu-id="410a2-107">You can also treat an enumeration as a bit field.</span></span> <span data-ttu-id="410a2-108">Per altre informazioni, vedere la [i membri Non esclusiva e l'attributo Flags](#Flags) sezione e <xref:System.FlagsAttribute> argomento.</span><span class="sxs-lookup"><span data-stu-id="410a2-108">For more information, see the [Non-Exclusive Members and the Flags Attribute](#Flags) section and the <xref:System.FlagsAttribute> topic.</span></span>  
  
 <span data-ttu-id="410a2-109">In questo argomento</span><span class="sxs-lookup"><span data-stu-id="410a2-109">In this topic:</span></span>  
  
 <span data-ttu-id="410a2-110">[Creazione di un tipo di enumerazione](#Creating) </span><span class="sxs-lookup"><span data-stu-id="410a2-110">[Creating an enumeration type](#Creating) </span></span>  
 <span data-ttu-id="410a2-111">[Creare un'istanza di un tipo di enumerazione](#Instantiating) </span><span class="sxs-lookup"><span data-stu-id="410a2-111">[Instantiating an enumeration type](#Instantiating) </span></span>  
 <span data-ttu-id="410a2-112">[Le procedure consigliate di enumerazione](#BestPractices) </span><span class="sxs-lookup"><span data-stu-id="410a2-112">[Enumeration best practices](#BestPractices) </span></span>  
 <span data-ttu-id="410a2-113">[Esecuzione di operazioni con le enumerazioni](#Operations) </span><span class="sxs-lookup"><span data-stu-id="410a2-113">[Performing operations with enumerations](#Operations) </span></span>  
 [<span data-ttu-id="410a2-114">Esecuzione delle conversioni</span><span class="sxs-lookup"><span data-stu-id="410a2-114">Performing conversions</span></span>](#conversions)  
 [<span data-ttu-id="410a2-115">L'analisi dei valori di enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-115">Parsing enumeration values</span></span>](#parsing)  
 [<span data-ttu-id="410a2-116">Formattazione dei valori di enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-116">Formatting enumeration values</span></span>](#formatting)  
[<span data-ttu-id="410a2-117">L'iterazione di membri dell'enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-117">Iterating enumeration members</span></span>](#iterating)  
[<span data-ttu-id="410a2-118">I membri non esclusiva e l'attributo Flags</span><span class="sxs-lookup"><span data-stu-id="410a2-118">Non-exclusive members and the Flags attribute</span></span>](#Flags)  
[<span data-ttu-id="410a2-119">Aggiunta di metodi di enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-119">Adding enumeration methods</span></span>](#methods)  
  
<a name="Creating"></a>   
## <a name="creating-an-enumeration-type"></a><span data-ttu-id="410a2-120">Creazione di un tipo di enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-120">Creating an enumeration type</span></span>  
 <span data-ttu-id="410a2-121">I linguaggi di programmazione in genere forniscono la sintassi per dichiarare un'enumerazione che è costituito da un set di costanti denominate e i relativi valori.</span><span class="sxs-lookup"><span data-stu-id="410a2-121">Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values.</span></span> <span data-ttu-id="410a2-122">Nell'esempio seguente viene illustrata la sintassi usata da codice c# e Visual Basic per definire un'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-122">The following example illustrates the syntax used by C# and Visual Basic to define an enumeration.</span></span> <span data-ttu-id="410a2-123">Crea un enumeratore chiamato `ArrivalStatus` che dispone di tre membri: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, e `ArrivalStatus.Late`.</span><span class="sxs-lookup"><span data-stu-id="410a2-123">It creates an enumeration named `ArrivalStatus` that has three members: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, and `ArrivalStatus.Late`.</span></span> <span data-ttu-id="410a2-124">Si noti che in entrambi i casi, l'enumerazione non esplicitamente eredita da <xref:System.Enum>; la relazione di ereditarietà viene gestita in modo implicito dal compilatore.</span><span class="sxs-lookup"><span data-stu-id="410a2-124">Note that in both cases, the enumeration does not explicitly inherit from <xref:System.Enum>; the inheritance relationship is handled implicitly by the compiler.</span></span>  
  
 [!code-csharp[System.Enum.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#1)]
 [!code-vb[System.Enum.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#1)]  
  
> [!WARNING]
>  <span data-ttu-id="410a2-125">È consigliabile non creare mai un tipo di enumerazione il cui tipo sottostante è non integrali o <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="410a2-125">You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>.</span></span> <span data-ttu-id="410a2-126">Sebbene sia possibile creare un tipo di enumerazione tramite reflection, chiamate ai metodi che utilizzano il tipo risulta sono inaffidabili e può anche generare ulteriori eccezioni.</span><span class="sxs-lookup"><span data-stu-id="410a2-126">Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.</span></span>  
  
<a name="Instantiating"></a>   
## <a name="instantiating-an-enumeration-type"></a><span data-ttu-id="410a2-127">Creare un'istanza di un tipo di enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-127">Instantiating an enumeration type</span></span>  
 <span data-ttu-id="410a2-128">È possibile creare un'istanza di un tipo di enumerazione esattamente come si crea un'istanza di qualsiasi altro tipo di valore: dichiarando una variabile e assegnarle una delle costanti dell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-128">You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it.</span></span> <span data-ttu-id="410a2-129">Nell'esempio seguente crea un `ArrivalStatus` il cui valore è `ArrivalStatus.OnTime`.</span><span class="sxs-lookup"><span data-stu-id="410a2-129">The following example instantiates an `ArrivalStatus` whose value is `ArrivalStatus.OnTime`.</span></span>  
  
 [!code-csharp[System.Enum.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#2)]
 [!code-vb[System.Enum.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#2)]  
  
 <span data-ttu-id="410a2-130">È anche possibile creare un'istanza di un valore di enumerazione nei modi seguenti:</span><span class="sxs-lookup"><span data-stu-id="410a2-130">You can also instantiate an enumeration value in the following ways:</span></span>  
  
-   <span data-ttu-id="410a2-131">Usando le funzionalità di un particolare linguaggio di programmazione per eseguire il cast (come in c#) o convertire (ad esempio Visual Basic) un valore intero in un valore di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-131">By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value.</span></span> <span data-ttu-id="410a2-132">L'esempio seguente crea un `ArrivalStatus` il cui valore è `ArrivalStatus.Early` in questo modo.</span><span class="sxs-lookup"><span data-stu-id="410a2-132">The following example creates an `ArrivalStatus` object whose value is `ArrivalStatus.Early` in this way.</span></span>  
  
     [!code-csharp[System.Enum.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#4)]
     [!code-vb[System.Enum.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#4)]  
  
-   <span data-ttu-id="410a2-133">Chiamando il costruttore predefinito implicito.</span><span class="sxs-lookup"><span data-stu-id="410a2-133">By calling its implicit default constructor.</span></span> <span data-ttu-id="410a2-134">Come illustrato nell'esempio seguente, in questo caso il valore sottostante dell'istanza di enumerazione è 0.</span><span class="sxs-lookup"><span data-stu-id="410a2-134">As the following example shows, in this case the underlying value of the enumeration instance is 0.</span></span> <span data-ttu-id="410a2-135">Tuttavia, ciò non è necessariamente il valore di costante valido nell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-135">However, this is not necessarily the value of a valid constant in the enumeration.</span></span>  
  
     [!code-csharp[System.Enum.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#3)]
     [!code-vb[System.Enum.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#3)]  
  
-   <span data-ttu-id="410a2-136">Chiamando il <xref:System.Enum.Parse%2A> o <xref:System.Enum.TryParse%2A> metodo per analizzare una stringa che contiene il nome di una costante nell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-136">By calling the <xref:System.Enum.Parse%2A> or <xref:System.Enum.TryParse%2A> method to parse a string that contains the name of a constant in the enumeration.</span></span> <span data-ttu-id="410a2-137">Per altre informazioni, vedere la [l'analisi dei valori di enumerazione](#parsing) sezione.</span><span class="sxs-lookup"><span data-stu-id="410a2-137">For more information, see the [Parsing Enumeration Values](#parsing) section.</span></span>  
  
-   <span data-ttu-id="410a2-138">Chiamando il <xref:System.Enum.ToObject%2A> metodo per convertire un valore integrale in un tipo di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-138">By calling the <xref:System.Enum.ToObject%2A> method to convert an integral value to an enumeration type.</span></span> <span data-ttu-id="410a2-139">Per altre informazioni, vedere la [esecuzione di conversioni](#conversions) sezione.</span><span class="sxs-lookup"><span data-stu-id="410a2-139">For more information, see the [Performing Conversions](#conversions) section.</span></span>  
  
<a name="BestPractices"></a>   
## <a name="enumeration-best-practices"></a><span data-ttu-id="410a2-140">Le procedure consigliate di enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-140">Enumeration best practices</span></span>  
 <span data-ttu-id="410a2-141">È consigliabile usare le procedure consigliate seguenti quando si definiscono i tipi di enumerazione:</span><span class="sxs-lookup"><span data-stu-id="410a2-141">We recommend that you use the following best practices when you define enumeration types:</span></span>  
  
-   <span data-ttu-id="410a2-142">Se non è stato definito un membro di enumerazione il cui valore è 0, è consigliabile creare un `None` costante enumerata.</span><span class="sxs-lookup"><span data-stu-id="410a2-142">If you have not defined an enumeration member whose value is 0, consider creating a `None` enumerated constant.</span></span> <span data-ttu-id="410a2-143">Per impostazione predefinita, la memoria utilizzata per l'enumerazione viene inizializzata su zero da common language runtime.</span><span class="sxs-lookup"><span data-stu-id="410a2-143">By default, the memory used for the enumeration is initialized to zero by the common language runtime.</span></span> <span data-ttu-id="410a2-144">Di conseguenza, se non si definisce una costante il cui valore è uguale a zero, l'enumerazione contiene un valore non valido al momento della creazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-144">Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.</span></span>  
  
-   <span data-ttu-id="410a2-145">Se un caso predefinito evidente che l'applicazione deve rappresentare, è consigliabile usare enumerato costante il cui valore è zero per rappresentarlo.</span><span class="sxs-lookup"><span data-stu-id="410a2-145">If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it.</span></span> <span data-ttu-id="410a2-146">Se non c'è nessun caso predefinito, è consigliabile utilizzare una costante enumerata il cui valore è uguale a zero per specificare il case che non è rappresentato da una delle altre costanti enumerate.</span><span class="sxs-lookup"><span data-stu-id="410a2-146">If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.</span></span>  
  
-   <span data-ttu-id="410a2-147">Non si specifica costanti enumerate che sono riservate per utilizzi futuri.</span><span class="sxs-lookup"><span data-stu-id="410a2-147">Do not specify enumerated constants that are reserved for future use.</span></span>  
  
-   <span data-ttu-id="410a2-148">Quando si definisce un metodo o proprietà che accetta un valore costante enumerata, prendere in considerazione la convalida del valore.</span><span class="sxs-lookup"><span data-stu-id="410a2-148">When you define a method or property that takes an enumerated constant as a value, consider validating the value.</span></span> <span data-ttu-id="410a2-149">Il motivo è è possibile eseguire il cast di un valore numerico per il tipo di enumerazione anche se tale valore numerico non è definito nell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-149">The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.</span></span>  
  
 <span data-ttu-id="410a2-150">Procedure consigliate aggiuntive per i tipi di enumerazione cui costanti sono campi di bit sono racchiusi il [i membri Non esclusiva e l'attributo Flags](#Flags) sezione.</span><span class="sxs-lookup"><span data-stu-id="410a2-150">Additional best practices for enumeration types whose constants are bit fields are listed in the [Non-Exclusive Members and the Flags Attribute](#Flags) section.</span></span>  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-enumerations"></a><span data-ttu-id="410a2-151">Esecuzione di operazioni con le enumerazioni</span><span class="sxs-lookup"><span data-stu-id="410a2-151">Performing operations with enumerations</span></span>  
 <span data-ttu-id="410a2-152">È possibile definire nuovi metodi durante la creazione di un'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-152">You cannot define new methods when you are creating an enumeration.</span></span> <span data-ttu-id="410a2-153">Tuttavia, un tipo di enumerazione eredita un set completo di statici e metodi di istanza dal <xref:System.Enum> classe.</span><span class="sxs-lookup"><span data-stu-id="410a2-153">However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class.</span></span> <span data-ttu-id="410a2-154">Le sezioni seguenti del sondaggio la maggior parte di questi metodi, oltre a diversi altri metodi che vengono usate quando si lavora con valori di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-154">The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.</span></span>  
  
<a name="conversions"></a>   
### <a name="performing-conversions"></a><span data-ttu-id="410a2-155">Esecuzione delle conversioni</span><span class="sxs-lookup"><span data-stu-id="410a2-155">Performing conversions</span></span>  
 <span data-ttu-id="410a2-156">È possibile convertire tra un membro di enumerazione e il relativo tipo sottostante usando un cast (in c#) o un operatore di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="410a2-156">You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator.</span></span> <span data-ttu-id="410a2-157">L'esempio seguente usa gli operatori di conversione o cast per eseguire le conversioni da un integer a un valore di enumerazione e dal valore di enumerazione in un numero intero.</span><span class="sxs-lookup"><span data-stu-id="410a2-157">The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.</span></span>  
  
 [!code-csharp[System.Enum.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#5)]
 [!code-vb[System.Enum.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#5)]  
  
 <span data-ttu-id="410a2-158">Il <xref:System.Enum> classe include anche un <xref:System.Enum.ToObject%2A> metodo che converte un valore di qualsiasi tipo integrale in un valore di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-158">The <xref:System.Enum> class also includes a <xref:System.Enum.ToObject%2A> method that converts a value of any integral type to an enumeration value.</span></span> <span data-ttu-id="410a2-159">L'esempio seguente usa il <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> metodo per convertire un' <xref:System.Int32> a un `ArrivalStatus` valore.</span><span class="sxs-lookup"><span data-stu-id="410a2-159">The following example uses the <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method to convert an <xref:System.Int32> to an `ArrivalStatus` value.</span></span> <span data-ttu-id="410a2-160">Si noti che, in quanto il <xref:System.Enum.ToObject%2A> restituisce un valore di tipo <xref:System.Object>, l'uso di un operatore cast o conversione potrebbe essere ancora necessario il cast dell'oggetto nel tipo di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-160">Note that, because the <xref:System.Enum.ToObject%2A> returns a value of type <xref:System.Object>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#6)]
 [!code-vb[System.Enum.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#6)]  
  
 <span data-ttu-id="410a2-161">Quando si converte un numero intero a un valore di enumerazione, è possibile assegnare un valore che non è effettivamente un membro dell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-161">When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration.</span></span> <span data-ttu-id="410a2-162">Per evitare questo problema, è possibile passare il valore integer per il <xref:System.Enum.IsDefined%2A> metodo prima di eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="410a2-162">To prevent this, you can pass the integer to the <xref:System.Enum.IsDefined%2A> method before performing the conversion.</span></span> <span data-ttu-id="410a2-163">L'esempio seguente usa questo metodo per determinare se gli elementi in una matrice di valori integer possono essere convertiti in `ArrivalStatus` valori.</span><span class="sxs-lookup"><span data-stu-id="410a2-163">The following example uses this method to determine whether the elements in an array of integer values can be converted to `ArrivalStatus` values.</span></span>  
  
 [!code-csharp[System.Enum.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion1.cs#7)]
 [!code-vb[System.Enum.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion1.vb#7)]  
  
 <span data-ttu-id="410a2-164">Anche se il <xref:System.Enum> classe fornisce le implementazioni esplicite dell'interfaccia del <xref:System.IConvertible> interfaccia per la conversione da un valore di enumerazione a un tipo integrale, è consigliabile usare i metodi delle <xref:System.Convert> classe, ad esempio <xref:System.Convert.ToInt32%2A>, a eseguire queste conversioni.</span><span class="sxs-lookup"><span data-stu-id="410a2-164">Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions.</span></span> <span data-ttu-id="410a2-165">L'esempio seguente illustra come usare il <xref:System.Enum.GetUnderlyingType%2A> metodo con il <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> metodo per convertire un valore di enumerazione al relativo tipo sottostante.</span><span class="sxs-lookup"><span data-stu-id="410a2-165">The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method to convert an enumeration value to its underlying type.</span></span> <span data-ttu-id="410a2-166">Si noti che questo esempio non richiede il tipo sottostante dell'enumerazione deve essere noto in fase di compilazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-166">Note that this example does not require the underlying type of the enumeration to be known at compile time.</span></span>  
  
 [!code-csharp[System.Enum.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion2.cs#8)]
 [!code-vb[System.Enum.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion2.vb#8)]  
  
<a name="parsing"></a>   
### <a name="parsing-enumeration-values"></a><span data-ttu-id="410a2-167">L'analisi dei valori di enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-167">Parsing enumeration values</span></span>  
 <span data-ttu-id="410a2-168">Il <xref:System.Enum.Parse%2A> e <xref:System.Enum.TryParse%2A> metodi consentono di convertire la rappresentazione di stringa del valore di enumerazione in tale valore.</span><span class="sxs-lookup"><span data-stu-id="410a2-168">The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value.</span></span> <span data-ttu-id="410a2-169">La rappresentazione di stringa può essere il nome o il valore sottostante di una costante di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-169">The string representation can be either the name or the underlying value of an enumeration constant.</span></span> <span data-ttu-id="410a2-170">Si noti che i metodi di analisi convertirà correttamente le rappresentazioni di stringa di numeri che non sono membri di un'enumerazione particolare se le stringhe possono essere convertite in un valore di tipo sottostante dell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-170">Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type.</span></span> <span data-ttu-id="410a2-171">Per evitare questo problema, il <xref:System.Enum.IsDefined%2A> metodo può essere chiamato per garantire che il risultato del metodo di analisi è un valore di enumerazione valido.</span><span class="sxs-lookup"><span data-stu-id="410a2-171">To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value.</span></span> <span data-ttu-id="410a2-172">L'esempio illustra questo approccio e illustra le chiamate a entrambe le <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> e <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="410a2-172">The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="410a2-173">Si noti che il metodo di analisi non generica restituisce un oggetto che potrebbe essere necessario eseguire il cast (in c#) o convertire (in Visual Basic) per il tipo di enumerazione appropriati.</span><span class="sxs-lookup"><span data-stu-id="410a2-173">Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classparse1.cs#9)]
 [!code-vb[System.Enum.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classparse1.vb#9)]  
  
<a name="formatting"></a>   
### <a name="formatting-enumeration-values"></a><span data-ttu-id="410a2-174">Formattazione dei valori di enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-174">Formatting enumeration values</span></span>  
 <span data-ttu-id="410a2-175">È possibile convertire i valori di enumerazione per le rappresentazioni di stringa chiamando il metodo statico <xref:System.Enum.Format%2A> metodo, nonché l'overload dell'istanza <xref:System.Enum.ToString%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-175">You can convert enumeration values to their string representations by calling the static <xref:System.Enum.Format%2A> method, as well as the overloads of the instance <xref:System.Enum.ToString%2A> method.</span></span> <span data-ttu-id="410a2-176">È possibile utilizzare una stringa di formato per controllare il modo esatto in cui un valore di enumerazione è rappresentato sotto forma di stringa.</span><span class="sxs-lookup"><span data-stu-id="410a2-176">You can use a format string to control the precise way in which an enumeration value is represented as a string.</span></span> <span data-ttu-id="410a2-177">Per altre informazioni, vedere [stringhe di formato di enumerazione](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="410a2-177">For more information, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="410a2-178">L'esempio seguente Usa tutte le stringhe di formato di enumerazione supportata ("G" o "g", "D" o "d", "X" o "x" e "F" o "f") per convertire un membro del `ArrivalStatus` relative rappresentazioni di stringa dell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-178">The following example uses each of the supported enumeration format strings ("G" or "g", "D" or "d", "X" or "x", and "F" or "f" ) to convert a member of the `ArrivalStatus` enumeration to its string representations.</span></span>  
  
 [!code-csharp[System.Enum.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classformat1.cs#10)]
 [!code-vb[System.Enum.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classformat1.vb#10)]  
  
<a name="iterating"></a>   
### <a name="iterating-enumeration-members"></a><span data-ttu-id="410a2-179">L'iterazione di membri dell'enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-179">Iterating enumeration members</span></span>  
 <span data-ttu-id="410a2-180">Il <xref:System.Enum> tipo non implementa le <xref:System.Collections.IEnumerable> o <xref:System.Collections.Generic.IEnumerable%601> interfaccia, che consentirà di scorrere i membri di una raccolta utilizzando una `foreach` (in c#) o `For Each` (in Visual Basic), costruire.</span><span class="sxs-lookup"><span data-stu-id="410a2-180">The <xref:System.Enum> type does not implement the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interface, which would enable you to iterate members of a collection by using a `foreach` (in C#) or `For Each` (in Visual Basic) construct.</span></span> <span data-ttu-id="410a2-181">Tuttavia, è possibile enumerare i membri in due modi diversi.</span><span class="sxs-lookup"><span data-stu-id="410a2-181">However, you can enumerate members in either of two ways.</span></span>  
  
-   <span data-ttu-id="410a2-182">È possibile chiamare il <xref:System.Enum.GetNames%2A> metodo per recuperare una matrice di stringhe contenente i nomi dei membri dell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-182">You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members.</span></span> <span data-ttu-id="410a2-183">Successivamente, per ogni elemento della matrice di stringhe, è possibile chiamare il <xref:System.Enum.Parse%2A> metodo per convertire la stringa equivalente valore di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-183">Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value.</span></span> <span data-ttu-id="410a2-184">Questo approccio viene illustrato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="410a2-184">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#11)]
     [!code-vb[System.Enum.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#11)]  
  
-   <span data-ttu-id="410a2-185">È possibile chiamare il <xref:System.Enum.GetValues%2A> metodo per recuperare una matrice che contiene l'oggetto sottostante per i valori nell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-185">You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration.</span></span> <span data-ttu-id="410a2-186">Successivamente, per ogni elemento della matrice, è possibile chiamare il <xref:System.Enum.ToObject%2A> metodo per convertire il valore intero equivalente valore di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-186">Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value.</span></span> <span data-ttu-id="410a2-187">Questo approccio viene illustrato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="410a2-187">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#12)]
     [!code-vb[System.Enum.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#12)]  
  
<a name="Flags"></a>   
## <a name="non-exclusive-members-and-the-flags-attribute"></a><span data-ttu-id="410a2-188">I membri non esclusiva e l'attributo Flags</span><span class="sxs-lookup"><span data-stu-id="410a2-188">Non-exclusive members and the Flags attribute</span></span>  
 <span data-ttu-id="410a2-189">Viene in genere utilizzato di un'enumerazione per rappresentare un set di valori si escludono a vicenda.</span><span class="sxs-lookup"><span data-stu-id="410a2-189">One common use of an enumeration is to represent a set of mutually exclusive values.</span></span> <span data-ttu-id="410a2-190">Ad esempio, un' `ArrivalStatus` istanza può avere un valore pari `Early`, `OnTime`, o `Late`.</span><span class="sxs-lookup"><span data-stu-id="410a2-190">For example, an `ArrivalStatus` instance can have a value of `Early`, `OnTime`, or `Late`.</span></span> <span data-ttu-id="410a2-191">Non ha senso per il valore di un `ArrivalStatus` istanza per riflettere più di una costante di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-191">It makes no sense for the value of an `ArrivalStatus` instance to reflect more than one enumeration constant.</span></span>  
  
 <span data-ttu-id="410a2-192">In altri casi, tuttavia, il valore di un oggetto di enumerazione può includere più membri dell'enumerazione e ogni membro rappresenta un campo di bit nel valore di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-192">In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value.</span></span> <span data-ttu-id="410a2-193">Il <xref:System.FlagsAttribute> attributo può essere utilizzato per indicare che l'enumerazione è costituita da campi di bit.</span><span class="sxs-lookup"><span data-stu-id="410a2-193">The <xref:System.FlagsAttribute> attribute can be used to indicate that the enumeration consists of bit fields.</span></span> <span data-ttu-id="410a2-194">Ad esempio, un'enumerazione denominata `Pets` potrebbe essere utilizzato per indicare i tipi di animali domestici in casa.</span><span class="sxs-lookup"><span data-stu-id="410a2-194">For example, an enumeration named `Pets` might be used to indicate the kinds of pets in a household.</span></span> <span data-ttu-id="410a2-195">Può essere definita come indicato di seguito.</span><span class="sxs-lookup"><span data-stu-id="410a2-195">It can be defined as follows.</span></span>  
  
 [!code-csharp[System.Enum.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#13)]
 [!code-vb[System.Enum.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#13)]  
  
 <span data-ttu-id="410a2-196">Il `Pets` enumerazione può quindi essere utilizzata come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="410a2-196">The `Pets` enumeration can then be used as shown in the following example.</span></span>  
  
 [!code-csharp[System.Enum.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#14)]
 [!code-vb[System.Enum.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#14)]  
  
 <span data-ttu-id="410a2-197">Usare le procedure consigliate seguenti quando si definisce un bit per bit dell'enumerazione e applicando la <xref:System.FlagsAttribute> attributo.</span><span class="sxs-lookup"><span data-stu-id="410a2-197">The following best practices should be used when defining a bitwise enumeration and applying the <xref:System.FlagsAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="410a2-198">Usare il <xref:System.FlagsAttribute> attributo personalizzato per un'enumerazione solo se un'operazione OR bit per bit (AND, OR esclusivo o) deve essere eseguita su un valore numerico.</span><span class="sxs-lookup"><span data-stu-id="410a2-198">Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.</span></span>  
  
-   <span data-ttu-id="410a2-199">Definire le costanti di enumerazione in potenze di due, ovvero 1, 2, 4, 8 e così via.</span><span class="sxs-lookup"><span data-stu-id="410a2-199">Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.</span></span> <span data-ttu-id="410a2-200">Ciò significa che i singoli flag in costanti di enumerazione combinato non si sovrappongano.</span><span class="sxs-lookup"><span data-stu-id="410a2-200">This means the individual flags in combined enumeration constants do not overlap.</span></span>  
  
-   <span data-ttu-id="410a2-201">È consigliabile creare una costante enumerata per le combinazioni di flag di uso comune.</span><span class="sxs-lookup"><span data-stu-id="410a2-201">Consider creating an enumerated constant for commonly used flag combinations.</span></span> <span data-ttu-id="410a2-202">Ad esempio, se si dispone di un'enumerazione utilizzata per le operazioni dei / o file che contiene le costanti enumerate `Read = 1` e `Write = 2`, è consigliabile creare costante enumerata `ReadWrite = Read OR Write`, che combina il `Read` e `Write` flag.</span><span class="sxs-lookup"><span data-stu-id="410a2-202">For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags.</span></span> <span data-ttu-id="410a2-203">Inoltre, l'operazione OR bit per bit usato per combinare i flag può essere considerato un concetto avanzato in alcuni casi che non dovrebbe essere necessaria per eseguire semplici operazioni.</span><span class="sxs-lookup"><span data-stu-id="410a2-203">In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.</span></span>  
  
-   <span data-ttu-id="410a2-204">Prestare attenzione se si definisce un numero negativo come una costante enumerata flag perché molte posizioni di flag potrebbero essere impostate su 1, che potrebbe rendere il codice di confusione e incoraggiare gli errori di codifica.</span><span class="sxs-lookup"><span data-stu-id="410a2-204">Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.</span></span>  
  
-   <span data-ttu-id="410a2-205">Un modo pratico per verificare se un flag è impostato in un valore numerico deve chiamare l'istanza <xref:System.Enum.HasFlag%2A> metodo, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="410a2-205">A convenient way to test whether a flag is set in a numeric value is to call the instance <xref:System.Enum.HasFlag%2A> method, as shown in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#15)]
     [!code-vb[System.Enum.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#15)]  
  
     <span data-ttu-id="410a2-206">È equivalente all'esecuzione di un'operazione con AND bit per bit tra il valore numerico e costante enumerata flag, che imposta tutti i bit nel valore numerico a zero, che non corrispondono al flag, e quindi a verificare se il risultato di tale operazione è uguale al Costante enumerata flag.</span><span class="sxs-lookup"><span data-stu-id="410a2-206">It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant.</span></span> <span data-ttu-id="410a2-207">Questa procedura è illustrata nell'esempio riportato di seguito.</span><span class="sxs-lookup"><span data-stu-id="410a2-207">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#16)]
     [!code-vb[System.Enum.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#16)]  
  
-   <span data-ttu-id="410a2-208">Usare `None` come il nome del flag enumerato costante il cui valore è zero.</span><span class="sxs-lookup"><span data-stu-id="410a2-208">Use `None` as the name of the flag enumerated constant whose value is zero.</span></span> <span data-ttu-id="410a2-209">Non è possibile usare il `None` costante enumerata in un'operazione con AND bit per bit per testare un flag perché il risultato è sempre zero.</span><span class="sxs-lookup"><span data-stu-id="410a2-209">You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.</span></span> <span data-ttu-id="410a2-210">Tuttavia, è possibile eseguire una logica, non un confronto bit per bit tra il valore numerico e `None` costante enumerata per determinare se si assegnano bit nel valore numerico.</span><span class="sxs-lookup"><span data-stu-id="410a2-210">However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set.</span></span> <span data-ttu-id="410a2-211">Questa procedura è illustrata nell'esempio riportato di seguito.</span><span class="sxs-lookup"><span data-stu-id="410a2-211">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#17)]
     [!code-vb[System.Enum.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#17)]  
  
-   <span data-ttu-id="410a2-212">Non definire un valore di enumerazione esclusivamente per rispecchiare lo stato dell'enumerazione stessa.</span><span class="sxs-lookup"><span data-stu-id="410a2-212">Do not define an enumeration value solely to mirror the state of the enumeration itself.</span></span> <span data-ttu-id="410a2-213">Ad esempio, si definisce una costante enumerata che si limita a contrassegnare la fine dell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-213">For example, do not define an enumerated constant that merely marks the end of the enumeration.</span></span> <span data-ttu-id="410a2-214">Se è necessario determinare l'ultimo valore dell'enumerazione, verificare la presenza di tale valore in modo esplicito.</span><span class="sxs-lookup"><span data-stu-id="410a2-214">If you need to determine the last value of the enumeration, check for that value explicitly.</span></span> <span data-ttu-id="410a2-215">Inoltre, è possibile eseguire una verifica di intervallo per costante enumerata e il cognome se tutti i valori all'interno dell'intervallo sono validi.</span><span class="sxs-lookup"><span data-stu-id="410a2-215">In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.</span></span>  
  
<a name="methods"></a>   
## <a name="adding-enumeration-methods"></a><span data-ttu-id="410a2-216">Aggiunta di metodi di enumerazione</span><span class="sxs-lookup"><span data-stu-id="410a2-216">Adding enumeration methods</span></span>  
 <span data-ttu-id="410a2-217">Poiché i tipi di enumerazione definiti dalle strutture di linguaggio, quali `enum` (c#) e `Enum` (Visual Basic), non è possibile definire metodi personalizzati per un tipo di enumerazione diverso da tali metodi ereditati dal <xref:System.Enum> classe.</span><span class="sxs-lookup"><span data-stu-id="410a2-217">Because enumeration types are defined by language structures, such as `enum` (C#) and `Enum` (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <xref:System.Enum> class.</span></span>  <span data-ttu-id="410a2-218">Tuttavia, è possibile utilizzare i metodi di estensione per aggiungere funzionalità a un tipo di enumerazione specifico.</span><span class="sxs-lookup"><span data-stu-id="410a2-218">However, you can use extension methods to add functionality to a particular enumeration type.</span></span>  
  
 <span data-ttu-id="410a2-219">Nell'esempio seguente, l'enumerazione `Grades` rappresenta il voto che uno studente potrebbe ricevere in un corso.</span><span class="sxs-lookup"><span data-stu-id="410a2-219">In the following example, the `Grades` enumeration represents the possible letter grades that a student may receive in a class.</span></span> <span data-ttu-id="410a2-220">Il metodo di estensione denominato `Passing` viene aggiunto al tipo `Grades` in modo che ogni istanza di tale tipo ora "sa" se rappresenta un voto sufficiente oppure no.</span><span class="sxs-lookup"><span data-stu-id="410a2-220">An extension method named `Passing` is added to the `Grades` type so that each instance of that type now "knows" whether it represents a passing grade or not.</span></span>       <span data-ttu-id="410a2-221">Il `Extensions` classe contiene inoltre una variabile statica di lettura / scrittura che definisce il voto minimo.</span><span class="sxs-lookup"><span data-stu-id="410a2-221">The `Extensions` class also contains a static read-write variable that defines the minimum passing grade.</span></span> <span data-ttu-id="410a2-222">Il valore restituito del `Passing` metodo di estensione riflette il valore corrente della variabile.</span><span class="sxs-lookup"><span data-stu-id="410a2-222">The return value of the `Passing` extension method reflects the current value of that variable.</span></span>  
  
 [!code-csharp[System.Enum.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/Extensions.cs#18)]
 [!code-vb[System.Enum.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/Extensions.vb#18)]  
  
   
  
## Examples  
 <span data-ttu-id="410a2-223">Nell'esempio seguente illustra l'uso di un'enumerazione per rappresentare valori denominati e un'altra enumerazione per rappresentare i campi di bit denominato.</span><span class="sxs-lookup"><span data-stu-id="410a2-223">The following example demonstrates using an enumeration to represent named values and another enumeration to represent named bit fields.</span></span>  
  
 [!code-cpp[enummain#1](~/samples/snippets/cpp/VS_Snippets_CLR/enummain/CPP/EnumMain.cpp#1)]
 [!code-csharp[enummain#1](~/samples/snippets/csharp/VS_Snippets_CLR/enummain/CS/EnumMain.cs#1)]
 [!code-vb[enummain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enummain/VB/EnumMain.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="410a2-224">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="410a2-224">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.ValueType" />
    <altmember cref="T:System.FlagsAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Enum ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Enum();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="410a2-225">Inizializza una nuova istanza della classe <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-225">Initializes a new instance of the <see cref="T:System.Enum" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (target As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="enum.CompareTo target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="410a2-226">Oggetto da confrontare o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-226">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-227">Confronta questa istanza con un oggetto specificato e restituisce un'indicazione dei valori relativi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-227">Compares this instance to a specified object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-228">Numero con segno che indica i valori relativi di questa istanza e <paramref name="target" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-228">A signed number that indicates the relative values of this instance and <paramref name="target" />.</span>
          </span>
          <span data-ttu-id="410a2-229">
            <list type="table">
              <listheader>
                <term> Valore  </term>
                <description> Significato  </description>
              </listheader>
              <item>
                <term> Minore di zero  </term>
                <description> Il valore dell'istanza è minore del valore di <paramref name="target" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> Il valore dell'istanza è uguale al valore di <paramref name="target" />.  </description>
              </item>
              <item>
                <term> Maggiore di zero  </term>
                <description> Il valore dell'istanza è maggiore del valore di  <paramref name="target" />.  -oppure-  <paramref name="target" /> è <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-229">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The value of this instance is less than the value of <paramref name="target" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The value of this instance is equal to the value of <paramref name="target" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The value of this instance is greater than the value of <paramref name="target" />.  -or-  <paramref name="target" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="410a2-230">Nell'esempio seguente viene illustrato l'utilizzo di `CompareTo` nel contesto di `Enum`.</span><span class="sxs-lookup"><span data-stu-id="410a2-230">The following example illustrates the use of `CompareTo` in the context of `Enum`.</span></span>  
  
 [!code-cpp[enumcompareto#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumcompareto/CPP/EnumCompareTo.cpp#1)]
 [!code-csharp[enumcompareto#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumcompareto/CS/EnumCompareTo.cs#1)]
 [!code-vb[enumcompareto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumcompareto/VB/EnumCompareTo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-231">
            <paramref name="target" /> e questa istanza non sono dello stesso tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-231">
              <paramref name="target" /> and this instance are not the same type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="410a2-232">Questa istanza non è di tipo <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" /> o <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-232">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="enum.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="410a2-233">Oggetto da confrontare con questa istanza o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-233">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-234">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-234">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-235">
            <see langword="true" /> se <paramref name="obj" /> è un valore di enumerazione dello stesso tipo e con lo stesso valore sottostante dell'istanza; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-235">
              <see langword="true" /> if <paramref name="obj" /> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-236">Il <xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> override dei metodi <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> per definire come membri dell'enumerazione vengono valutati per verificarne l'uguaglianza.</span><span class="sxs-lookup"><span data-stu-id="410a2-236">The <xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> to define how enumeration members are evaluated for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-237">Nell'esempio riportato di seguito viene illustrato l'utilizzo del metodo <xref:System.Enum.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="410a2-237">The following example illustrates the use of the <xref:System.Enum.Equals%2A> method.</span></span>  
  
 [!code-cpp[enumequals#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumequals/CPP/EnumEquals.cpp#1)]
 [!code-csharp[enumequals#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumequals/CS/EnumEquals.cs#1)]
 [!code-vb[enumequals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumequals/VB/EnumEquals.vb#1)]  
  
 <span data-ttu-id="410a2-238">L'esempio seguente definisce due tipi di enumerazione `SledDog` e `WorkDog`.</span><span class="sxs-lookup"><span data-stu-id="410a2-238">The following example defines two enumeration types, `SledDog` and `WorkDog`.</span></span> <span data-ttu-id="410a2-239">Il `SledDog` enumerazione contiene due membri, `SledDog.AlaskanMalamute` e `SledDog.Malamute`, che hanno lo stesso valore sottostante.</span><span class="sxs-lookup"><span data-stu-id="410a2-239">The `SledDog` enumeration has two members, `SledDog.AlaskanMalamute` and `SledDog.Malamute`, that have the same underlying value.</span></span> <span data-ttu-id="410a2-240">La chiamata al <xref:System.Enum.Equals%2A> metodo indica che questi valori sono uguali perché i relativi valori sottostante sono uguali.</span><span class="sxs-lookup"><span data-stu-id="410a2-240">The call to the <xref:System.Enum.Equals%2A> method indicates that these values are equal because their underlying values are the same.</span></span> <span data-ttu-id="410a2-241">Il `SledDog.Malamute` e `WorkDog.Newfoundland` membri hanno lo stesso valore sottostante, anche se rappresentano i tipi di enumerazione diverso.</span><span class="sxs-lookup"><span data-stu-id="410a2-241">The `SledDog.Malamute` and `WorkDog.Newfoundland` members have the same underlying value, although they represent different enumeration types.</span></span> <span data-ttu-id="410a2-242">Una chiamata al <xref:System.Enum.Equals%2A> metodo indica che questi valori non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="410a2-242">A call to the <xref:System.Enum.Equals%2A> method indicates that these values are not equal.</span></span>  
  
 [!code-csharp[System.Enum.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.equals/cs/enumequals.cs#1)]
 [!code-vb[System.Enum.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.equals/vb/enumequals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Enum.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (Type enumType, object value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.Type enumType, object value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (enumType As Type, value As Object, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(Type ^ enumType, System::Object ^ value, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Format : Type * obj * string -&gt; string" Usage="System.Enum.Format (enumType, value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-243">Tipo di enumerazione del valore da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-243">The enumeration type of the value to convert.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-244">Valore da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-244">The value to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="410a2-245">Formato di output da usare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-245">The output format to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-246">Converte il valore specificato di un determinato tipo enumerato nella rappresentazione di stringa equivalente, secondo il formato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-246">Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-247">Rappresentazione in forma di stringa di <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-247">A string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-248">Nella tabella seguente illustra i valori validi per il `format` parametro.</span><span class="sxs-lookup"><span data-stu-id="410a2-248">The following table shows the valid values for the `format` parameter.</span></span>  
  
|<span data-ttu-id="410a2-249">Formato</span><span class="sxs-lookup"><span data-stu-id="410a2-249">Format</span></span>|<span data-ttu-id="410a2-250">Descrizione</span><span class="sxs-lookup"><span data-stu-id="410a2-250">Description</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="410a2-251">"G" o "g"</span><span class="sxs-lookup"><span data-stu-id="410a2-251">"G" or "g"</span></span>|<span data-ttu-id="410a2-252">Se `value` è uguale a una costante enumerata denominata, il nome della costante è restituita; in caso contrario, l'equivalente decimale `value` viene restituito.</span><span class="sxs-lookup"><span data-stu-id="410a2-252">If `value` is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of `value` is returned.</span></span><br /><br /> <span data-ttu-id="410a2-253">Si supponga, ad esempio, la sola costante enumerata denominata Red e il relativo valore è 1.</span><span class="sxs-lookup"><span data-stu-id="410a2-253">For example, suppose the only enumerated constant is named Red, and its value is 1.</span></span> <span data-ttu-id="410a2-254">Se `value` viene specificata come 1, questo formato restituisce "Red".</span><span class="sxs-lookup"><span data-stu-id="410a2-254">If `value` is specified as 1, this format returns "Red".</span></span> <span data-ttu-id="410a2-255">Tuttavia, se `value` viene specificato come 2, questo formato restituisce "2".</span><span class="sxs-lookup"><span data-stu-id="410a2-255">However, if `value` is specified as 2, this format returns "2".</span></span><br /><br /> <span data-ttu-id="410a2-256">oppure</span><span class="sxs-lookup"><span data-stu-id="410a2-256">-or-</span></span><br /><br /> <span data-ttu-id="410a2-257">Se il <xref:System.FlagsAttribute> attributo personalizzato viene applicato all'enumerazione `value` viene considerato come un campo di bit che contiene uno o più flag costituiti da uno o più bit.</span><span class="sxs-lookup"><span data-stu-id="410a2-257">If the <xref:System.FlagsAttribute> custom attribute is applied to the enumeration, `value` is treated as a bit field that contains one or more flags that consist of one or more bits.</span></span><br /><br /> <span data-ttu-id="410a2-258">Se `value` è uguale a una combinazione di costanti enumerate denominate, viene restituito un elenco separati da delimitatori di nomi delle costanti.</span><span class="sxs-lookup"><span data-stu-id="410a2-258">If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned.</span></span> <span data-ttu-id="410a2-259">`value` viene eseguita la ricerca i flag, dal flag con il valore più grande al più piccolo valore.</span><span class="sxs-lookup"><span data-stu-id="410a2-259">`value` is searched for flags, going from the flag with the largest value to the smallest value.</span></span> <span data-ttu-id="410a2-260">Per ogni flag che corrisponde a un campo di bit in `value`, il nome della costante viene concatenato all'elenco separati da delimitatori.</span><span class="sxs-lookup"><span data-stu-id="410a2-260">For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list.</span></span> <span data-ttu-id="410a2-261">Il valore del flag viene quindi considerato ulteriormente e continua la ricerca per il contrassegno next.</span><span class="sxs-lookup"><span data-stu-id="410a2-261">The value of that flag is then excluded from further consideration, and the search continues for the next flag.</span></span><br /><br /> <span data-ttu-id="410a2-262">Se `value` non è uguale a una combinazione di costanti enumerate, l'equivalente decimale denominate `value` viene restituito.</span><span class="sxs-lookup"><span data-stu-id="410a2-262">If `value` is not equal to a combination of named enumerated constants, the decimal equivalent of `value` is returned.</span></span>|  
|<span data-ttu-id="410a2-263">"X" o "x"</span><span class="sxs-lookup"><span data-stu-id="410a2-263">"X" or "x"</span></span>|<span data-ttu-id="410a2-264">Rappresenta `value` in formato esadecimale senza un iniziale "0x".</span><span class="sxs-lookup"><span data-stu-id="410a2-264">Represents `value` in hexadecimal format without a leading "0x".</span></span>|  
|<span data-ttu-id="410a2-265">"D" o "d"</span><span class="sxs-lookup"><span data-stu-id="410a2-265">"D" or "d"</span></span>|<span data-ttu-id="410a2-266">Rappresenta `value` in formato decimale.</span><span class="sxs-lookup"><span data-stu-id="410a2-266">Represents `value` in decimal form.</span></span>|  
|<span data-ttu-id="410a2-267">"F" o "f"</span><span class="sxs-lookup"><span data-stu-id="410a2-267">"F" or "f"</span></span>|<span data-ttu-id="410a2-268">Si comporta come "G" o "g", ad eccezione del fatto che il <xref:System.FlagsAttribute> non deve essere presente nel <xref:System.Enum> dichiarazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-268">Behaves identically to "G" or "g", except that the <xref:System.FlagsAttribute> is not required to be present on the <xref:System.Enum> declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="410a2-269">Nell'esempio seguente viene illustrato l'utilizzo di `Format` nel contesto di `Enum`.</span><span class="sxs-lookup"><span data-stu-id="410a2-269">The following example illustrates the use of `Format` in the context of `Enum`.</span></span>  
  
 [!code-cpp[enumformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumformat/CPP/EnumFormat.cpp#1)]
 [!code-csharp[enumformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumformat/CS/EnumFormat.cs#1)]
 [!code-vb[enumformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumformat/VB/EnumFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-270">Il parametro <paramref name="enumType" />, <paramref name="value" /> o <paramref name="format" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-270">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-271">Il parametro <paramref name="enumType" /> non è di tipo <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-271">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.</span>
          </span>
          <span data-ttu-id="410a2-272">-oppure- Il parametro <paramref name="value" /> deriva da un'enumerazione con un tipo differente rispetto a <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-272">-or-  The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.</span>
          </span>
          <span data-ttu-id="410a2-273">-oppure-  Il tipo di <paramref name="value" /> non è un tipo sottostante di <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-273">-or-  The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="410a2-274">Il parametro <paramref name="format" /> contiene un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-274">The <paramref name="format" /> parameter contains an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="410a2-275">
            <paramref name="format" /> è uguale a "X", ma il tipo di enumerazione è sconosciuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-275">
              <paramref name="format" /> equals "X", but the enumeration type is unknown.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.ToString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="enum.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="410a2-276">Viene restituito il codice hash per il valore dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-276">Returns the hash code for the value of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-277">Codice hash di un intero con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-277">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetName(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (enumType As Type, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetName : Type * obj -&gt; string" Usage="System.Enum.GetName (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-278">Tipo di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-278">An enumeration type.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-279">Valore di una determinata costante enumerata in base al relativo tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-279">The value of a particular enumerated constant in terms of its underlying type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-280">Restituisce il nome della costante nell'enumerazione del valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-280">Retrieves the name of the constant in the specified enumeration that has the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-281">Stringa contenente il nome della costante enumerata in <paramref name="enumType" />, il cui valore è <paramref name="value" /> oppure <see langword="null" /> se tale costante non viene rilevata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-281">A string containing the name of the enumerated constant in <paramref name="enumType" /> whose value is <paramref name="value" />; or <see langword="null" /> if no such constant is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-282">Se lo stesso valore sottostante, dispongono di più membri dell'enumerazione di <xref:System.Enum.GetName%2A> metodo garantisce che restituirà il nome di uno dei membri di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-282">If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members.</span></span> <span data-ttu-id="410a2-283">Tuttavia, non garantisce che restituirà sempre il nome del membro dell'enumerazione stessa.</span><span class="sxs-lookup"><span data-stu-id="410a2-283">However, it does not guarantee that it will always return the name of the same enumeration member.</span></span> <span data-ttu-id="410a2-284">Di conseguenza, quando più membri di enumerazione hanno lo stesso valore, il codice dell'applicazione non deve mai dipendono dal metodo che restituisce il nome di un membro specifico.</span><span class="sxs-lookup"><span data-stu-id="410a2-284">As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-285">Nell'esempio seguente viene illustrato l'utilizzo di `GetName`.</span><span class="sxs-lookup"><span data-stu-id="410a2-285">The following example illustrates the use of `GetName`.</span></span>  
  
 [!code-cpp[enumgetname#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetname/CPP/EnumGetName.cpp#1)]
 [!code-csharp[enumgetname#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetname/CS/EnumGetName.cs#1)]
 [!code-vb[enumgetname#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetname/VB/EnumGetName.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-286">
            <paramref name="enumType" /> o <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-286">
              <paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-287">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-287">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
          <span data-ttu-id="410a2-288">-oppure-  <paramref name="value" /> non è di tipo <paramref name="enumType" /> e non ha lo stesso tipo sottostante di <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-288">-or-  <paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNames">
      <MemberSignature Language="C#" Value="public static string[] GetNames (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetNames(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetNames(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNames (enumType As Type) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetNames(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetNames : Type -&gt; string[]" Usage="System.Enum.GetNames enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-289">Tipo di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-289">An enumeration type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-290">Restituisce una matrice dei nomi delle costanti in una enumerazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-290">Retrieves an array of the names of the constants in a specified enumeration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-291">Matrice di stringhe dei nomi delle costanti in <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-291">A string array of the names of the constants in <paramref name="enumType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-292">Gli elementi della matrice di valori restituiti vengono ordinati in base ai valori binari di costanti enumerate (vale a dire, dalla grandezza senza segno).</span><span class="sxs-lookup"><span data-stu-id="410a2-292">The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="410a2-293">Nell'esempio seguente fornisce informazioni consente di visualizzare la matrice restituita dal <xref:System.Enum.GetNames%2A> metodo per un'enumerazione che include un valore negativo, zero e un valore positivo.</span><span class="sxs-lookup"><span data-stu-id="410a2-293">The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getnames/cs/getnames1.cs#1)]
 [!code-vb[System.Enum.GetNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getnames/vb/getnames1.vb#1)]  
  
 <span data-ttu-id="410a2-294">Se sono presenti costanti enumerate con stesso valore, non è specificato l'ordine dei nomi corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="410a2-294">If there are enumerated constants with same value, the order of their corresponding names is unspecified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-295">Nell'esempio riportato di seguito viene illustrato l'utilizzo del metodo <xref:System.Enum.GetNames%2A>.</span><span class="sxs-lookup"><span data-stu-id="410a2-295">The following example illustrates the use of the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 [!code-cpp[enumgetnames#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetnames/CPP/EnumGetNames.cpp#1)]
 [!code-csharp[enumgetnames#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetnames/CS/EnumGetNames.cs#1)]
 [!code-vb[enumgetnames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetnames/VB/EnumGetNames.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-296">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-296">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-297">Il parametro <paramref name="enumType" /> non è un oggetto <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-297">
              <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="enum.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="410a2-298">Restituisce il codice del tipo sottostante di questo membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-298">Returns the type code of the underlying type of this enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-299">Codice del tipo sottostante di questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-299">The type code of the underlying type of this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="410a2-300">Il tipo di enumerazione è sconosciuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-300">The enumeration type is unknown.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.GetUnderlyingType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnderlyingType">
      <MemberSignature Language="C#" Value="public static Type GetUnderlyingType (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetUnderlyingType(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetUnderlyingType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnderlyingType (enumType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetUnderlyingType(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetUnderlyingType : Type -&gt; Type" Usage="System.Enum.GetUnderlyingType enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-301">Enumerazione il cui tipo sottostante verrà recuperato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-301">The enumeration whose underlying type will be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-302">Restituisce il tipo sottostante dell'enumerazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-302">Returns the underlying type of the specified enumeration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-303">Tipo sottostante di <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-303">The underlying type of <paramref name="enumType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-304">Il <xref:System.Enum> struttura consente i valori essere rappresentato come costanti denominate.</span><span class="sxs-lookup"><span data-stu-id="410a2-304">The <xref:System.Enum> structure enables values to be represented as named constants.</span></span> <span data-ttu-id="410a2-305">Il tipo di dati dei valori dell'enumerazione è noto come relativo tipo sottostante.</span><span class="sxs-lookup"><span data-stu-id="410a2-305">The data type of the enumeration's values is known as its underlying type.</span></span> <span data-ttu-id="410a2-306">Ad esempio, il tipo sottostante del <xref:System.DayOfWeek> enumerazione, che è costituito dalle costanti che rappresentano ogni giorno della settimana (<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>, <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>e così via), è <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="410a2-306">For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>, <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>, and so on), is <xref:System.Int32>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-307">L'esempio seguente chiama il <xref:System.Enum.GetUnderlyingType%2A> metodo per visualizzare il tipo sottostante di alcuni membri dell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-307">The following example calls the <xref:System.Enum.GetUnderlyingType%2A> method to display the underlying type of some enumeration members.</span></span>  
  
 [!code-csharp[System.Enum.GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getunderlyingtype/cs/getunderlyingtype1.cs#1)]
 [!code-vb[System.Enum.GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getunderlyingtype/vb/getunderlyingtype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-308">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-308">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-309">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-309">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.GetTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public static Array GetValues (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array GetValues(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetValues(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValues (enumType As Type) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ GetValues(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetValues : Type -&gt; Array" Usage="System.Enum.GetValues enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-310">Tipo di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-310">An enumeration type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-311">Restituisce una matrice dei valori delle costanti in una enumerazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-311">Retrieves an array of the values of the constants in a specified enumeration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-312">Matrice contenente i valori delle costanti in <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-312">An array that contains the values of the constants in <paramref name="enumType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-313">Gli elementi della matrice vengono ordinati in base ai valori delle costanti di enumerazione binari (vale a dire, dalla grandezza senza segno).</span><span class="sxs-lookup"><span data-stu-id="410a2-313">The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="410a2-314">L'esempio seguente visualizza informazioni matrice restituita dal <xref:System.Enum.GetValues%2A> metodo per un'enumerazione che include un valore negativo, zero e un valore positivo.</span><span class="sxs-lookup"><span data-stu-id="410a2-314">The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues1.cs#1)]
 [!code-vb[System.Enum.GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues1.vb#1)]  
  
 <span data-ttu-id="410a2-315">Il <xref:System.Enum.GetValues%2A> metodo restituisce una matrice che contiene un valore per ogni membro del `enumType` enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-315">The <xref:System.Enum.GetValues%2A> method returns an array that contains a value for each member of the `enumType` enumeration.</span></span> <span data-ttu-id="410a2-316">Se più membri hanno lo stesso valore, la matrice restituita include valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="410a2-316">If multiple members have the same value, the returned array includes duplicate values.</span></span> <span data-ttu-id="410a2-317">In questo caso, la chiamata di <xref:System.Enum.GetName%2A> metodo con ogni valore nella matrice restituita non ripristina i nomi univoci assegnati a membri che contengono valori duplicati.</span><span class="sxs-lookup"><span data-stu-id="410a2-317">In this case, calling the <xref:System.Enum.GetName%2A> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values.</span></span> <span data-ttu-id="410a2-318">Per recuperare correttamente tutti i nomi dei membri dell'enumerazione, chiamare il <xref:System.Enum.GetNames%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-318">To retrieve all the names of enumeration members successfully, call the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 <span data-ttu-id="410a2-319">Il <xref:System.Enum.GetValues%2A> (metodo) non può essere richiamato tramite reflection in un contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="410a2-319">The <xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context.</span></span> <span data-ttu-id="410a2-320">In alternativa, è possibile recuperare il valore di tutti i membri di enumerazione utilizzando il <xref:System.Type.GetFields%2A?displayProperty=nameWithType> metodo per ottenere una matrice di <xref:System.Reflection.FieldInfo> gli oggetti che rappresentano i membri di enumerazione e chiamano quindi il <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> metodo su ogni elemento della matrice.</span><span class="sxs-lookup"><span data-stu-id="410a2-320">Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> method on each element of the array.</span></span> <span data-ttu-id="410a2-321">L'esempio seguente illustra questa tecnica.</span><span class="sxs-lookup"><span data-stu-id="410a2-321">The following example illustrates this technique.</span></span> <span data-ttu-id="410a2-322">Richiede la definizione di enumerazione seguente in un assembly denominato Enumerations.dll:</span><span class="sxs-lookup"><span data-stu-id="410a2-322">It requires that you define the following enumeration in an assembly named Enumerations.dll:</span></span>  
  
 [!code-csharp[System.Enum.GetValues#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#2)]
 [!code-vb[System.Enum.GetValues#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#2)]  
  
 <span data-ttu-id="410a2-323">L'assembly viene caricato in un contesto reflection-only, un <xref:System.Type> oggetto che rappresenta il `Pets` enumerazione viene creata un'istanza, una matrice di <xref:System.Reflection.FieldInfo> vengono recuperati gli oggetti e i valori dei campi vengono visualizzati nella console.</span><span class="sxs-lookup"><span data-stu-id="410a2-323">The assembly is loaded in a reflection-only context, a <xref:System.Type> object that represents the `Pets` enumeration is instantiated, an array of <xref:System.Reflection.FieldInfo> objects is retrieved, and the field values are displayed to the console.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#3)]
 [!code-vb[System.Enum.GetValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="410a2-324">Nell'esempio seguente viene illustrato l'utilizzo di <xref:System.Enum.GetValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="410a2-324">The following example illustrates the use of <xref:System.Enum.GetValues%2A>.</span></span>  
  
 [!code-cpp[enumgetvalues#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetvalues/CPP/EnumGetValues.cpp#1)]
 [!code-csharp[enumgetvalues#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetvalues/CS/EnumGetValues.cs#1)]
 [!code-vb[enumgetvalues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetvalues/VB/EnumGetValues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-325">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-325">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-326">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-326">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="410a2-327">Il metodo viene richiamato tramite reflection in un contesto di sola reflection - oppure - <paramref name="enumType" /> è un tipo proveniente da un assembly caricato in un contesto di sola reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-327">The method is invoked by reflection in a reflection-only context,  -or-  <paramref name="enumType" /> is a type from an assembly loaded in a reflection-only context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasFlag">
      <MemberSignature Language="C#" Value="public bool HasFlag (Enum flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasFlag(class System.Enum flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.HasFlag(System.Enum)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFlag (flag As Enum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFlag(Enum ^ flag);" />
      <MemberSignature Language="F#" Value="member this.HasFlag : Enum -&gt; bool" Usage="enum.HasFlag flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Enum" />
      </Parameters>
      <Docs>
        <param name="flag">
          <span data-ttu-id="410a2-328">Valore di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-328">An enumeration value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-329">Determina se uno o più campi di bit vengono impostati nell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-329">Determines whether one or more bit fields are set in the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-330">
            <see langword="true" /> se il campo di bit o i campi di bit impostati in <paramref name="flag" /> vengono impostati anche nell'istanza corrente. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-330">
              <see langword="true" /> if the bit field or bit fields that are set in <paramref name="flag" /> are also set in the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-331">Il <xref:System.Enum.HasFlag%2A> restituisce il risultato dell'espressione booleana seguente.</span><span class="sxs-lookup"><span data-stu-id="410a2-331">The <xref:System.Enum.HasFlag%2A> method returns the result of the following Boolean expression.</span></span>  
  
```  
thisInstance And flag = flag   
```  
  
 <span data-ttu-id="410a2-332">Se il valore sottostante del `flag` è uguale a zero, il metodo restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="410a2-332">If the underlying value of `flag` is zero, the method returns `true`.</span></span> <span data-ttu-id="410a2-333">Se questo comportamento non è auspicabile, è possibile usare la <xref:System.Enum.Equals%2A> metodo per verificare l'uguaglianza con zero e chiamare <xref:System.Enum.HasFlag%2A> solo se il valore sottostante del `flag` è diverso da zero, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="410a2-333">If this behavior is not desirable, you can use the <xref:System.Enum.Equals%2A> method to test for equality with zero and call <xref:System.Enum.HasFlag%2A> only if the underlying value of `flag` is non-zero, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag0.cs#1)]
 [!code-vb[System.Enum.HasFlag#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag0.vb#1)]  
  
 <span data-ttu-id="410a2-334">Il <xref:System.Enum.HasFlag%2A> metodo è progettato per essere utilizzati con tipi di enumerazione che sono contrassegnati con il <xref:System.FlagsAttribute> attributo e può essere utilizzato per determinare se sono impostati più campi di bit.</span><span class="sxs-lookup"><span data-stu-id="410a2-334">The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set.</span></span> <span data-ttu-id="410a2-335">Per i tipi di enumerazione che non siano contrassegnati con il <xref:System.FlagsAttribute> dell'attributo, chiamare il <xref:System.Enum.Equals%2A> metodo o il <xref:System.Enum.CompareTo%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-335">For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-336">L'esempio seguente definisce un `ItemsOrdered` enumerazione che riflette le categorie di elementi che un cliente può ordinare in un ristorante.</span><span class="sxs-lookup"><span data-stu-id="410a2-336">The following example defines an `ItemsOrdered` enumeration that reflects categories of items that a customer can order in a restaurant.</span></span> <span data-ttu-id="410a2-337">L'esempio verifica se il cliente ha ordinato un entrata sia delle bibite.</span><span class="sxs-lookup"><span data-stu-id="410a2-337">The example tests whether the customer has ordered both an entrée and a beverage.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag1.cs#2)]
 [!code-vb[System.Enum.HasFlag#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-338">
            <paramref name="flag" /> è un tipo diverso rispetto all'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-338">
              <paramref name="flag" /> is a different type than the current instance.</span>
          </span>
        </exception>
        <altmember cref="T:System.FlagsAttribute" />
        <altmember cref="M:System.Enum.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.IsDefined(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (enumType As Type, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDefined : Type * obj -&gt; bool" Usage="System.Enum.IsDefined (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-339">Tipo di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-339">An enumeration type.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-340">Valore o nome di una costante in <c>enumType</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-340">The value or name of a constant in <c>enumType</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-341">Restituisce un valore booleano se in un'enumerazione specificata esiste un determinato valore integrale o il relativo nome sotto forma di stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-341">Returns a Boolean telling whether a given integral value, or its name as a string, exists in a specified enumeration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-342">
            <see langword="true" /> se una costante in <paramref name="enumType" /> ha un valore uguale a <paramref name="value" /> ; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-342">
              <see langword="true" /> if a constant in <paramref name="enumType" /> has a value equal to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-343">Il `value` parametro può essere uno dei seguenti:</span><span class="sxs-lookup"><span data-stu-id="410a2-343">The `value` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="410a2-344">Qualsiasi membro del tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-344">Any member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="410a2-345">Una variabile il cui valore è un membro di enumerazione di tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-345">A variable whose value is an enumeration member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="410a2-346">La rappresentazione di stringa del nome di un membro di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-346">The string representation of the name of an enumeration member.</span></span> <span data-ttu-id="410a2-347">I caratteri nella stringa devono avere lo stesso evento come il nome del membro dell'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-347">The characters in the string must have the same case as the enumeration member name.</span></span>  
  
-   <span data-ttu-id="410a2-348">Un valore del tipo sottostante di `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-348">A value of the underlying type of `enumType`.</span></span>  
  
 <span data-ttu-id="410a2-349">Se le costanti `enumType` definire un set di campi di bit e `value` contiene i valori, i nomi o valori sottostanti dei diversi campi di bit, il <xref:System.Enum.IsDefined%2A> restituzione del metodo `false`.</span><span class="sxs-lookup"><span data-stu-id="410a2-349">If the constants in `enumType` define a set of bit fields and `value` contains the values, names, or underlying values of multiple bit fields, the <xref:System.Enum.IsDefined%2A> method returns `false`.</span></span> <span data-ttu-id="410a2-350">In altre parole, per le enumerazioni che definiscono un set di campi di bit, il metodo determina solo se un campo di bit appartiene all'enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-350">In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration.</span></span> <span data-ttu-id="410a2-351">Per determinare se più campi di bit vengono impostati in un tipo di enumerazione contrassegnata con il <xref:System.FlagsAttribute> attributo, è possibile chiamare il <xref:System.Enum.HasFlag%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-351">To determine whether multiple bit fields are set in an enumeration type that is tagged with the <xref:System.FlagsAttribute> attribute, you can call the <xref:System.Enum.HasFlag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-352">L'esempio seguente definisce un'enumerazione denominata `PetType` costituito da tre campi di bit.</span><span class="sxs-lookup"><span data-stu-id="410a2-352">The following example defines an enumeration named `PetType` that consists of individual bit fields.</span></span> <span data-ttu-id="410a2-353">Chiama quindi il <xref:System.Enum.IsDefined%2A> metodo con i possibili sottostanti i valori di enumerazione, nomi di tipo stringa e compositi valori risultanti dall'impostazione più campi di bit.</span><span class="sxs-lookup"><span data-stu-id="410a2-353">It then calls the <xref:System.Enum.IsDefined%2A> method with possible underlying enumeration values, string names, and composite values that result from setting multiple bit fields.</span></span>  
  
 [!code-csharp[System.Enum.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined1.cs#1)]
 [!code-vb[System.Enum.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/IsDefined1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-354">
            <paramref name="enumType" /> o <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-354">
              <paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-355">
            <paramref name="enumType" /> non è un elemento <see langword="Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-355">
              <paramref name="enumType" /> is not an <see langword="Enum" />.</span>
          </span>
          <span data-ttu-id="410a2-356">-oppure- Il tipo di <paramref name="value" /> è un'enumerazione, ma non è un'enumerazione di tipo <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-356">-or-  The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.</span>
          </span>
          <span data-ttu-id="410a2-357">-oppure-  Il tipo di <paramref name="value" /> non è un tipo sottostante di <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-357">-or-  The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="410a2-358">
            <paramref name="value" /> non è di tipo <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" /> o <see cref="T:System.UInt64" /> oppure <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-358">
              <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="410a2-359">
            <para>Se <paramref name="enumType" /> è un'enumerazione che viene definita tramite il <see cref="T:System.FlagsAttribute" /> dell'attributo, il metodo restituisce <see langword="false" /> se i campi bit più <paramref name="value" /> vengono impostati ma <paramref name="value" /> non corrisponde a un valore di enumerazione composito, oppure se <paramref name="value" /> è una concatenazione di stringhe dei nomi di più flag di bit. Nell'esempio seguente, un <c>Pets</c> enumerazione viene definita con la <see cref="T:System.FlagsAttribute" /> attributo. Il <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> restituzione del metodo <see langword="false" /> quando si passa il valore di enumerazione che contiene due campi di bit (<c>Pets.Dog</c> e <c>Pets.Cat</c>) impostato, e quando si passa la rappresentazione di stringa di valore di enumerazione ("cane, gatto").  [! codice-csharp[System.Enum.IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [! codice vb[System.Enum.IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)] è possibile determinare se più campi di bit vengono impostati chiamando la <see cref="M:System.Enum.HasFlag(System.Enum)" /> (metodo).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-359">
              <para>If <paramref name="enumType" /> is an enumeration that is defined by using the <see cref="T:System.FlagsAttribute" /> attribute, the method returns <see langword="false" /> if multiple bit fields in <paramref name="value" /> are set but <paramref name="value" /> does not correspond to a composite enumeration value, or if <paramref name="value" /> is a string concatenation of the names of multiple bit flags. In the following example, a <c>Pets</c> enumeration is defined with the <see cref="T:System.FlagsAttribute" /> attribute. The <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> method returns <see langword="false" /> when you pass it an enumeration value that has two bit fields (<c>Pets.Dog</c> and <c>Pets.Cat</c>) set, and when you pass it the string representation of that enumeration value ("Dog, Cat").  [!code-csharp[System.Enum.IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [!code-vb[System.Enum.IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)]  You can determine whether multiple bit fields are set by calling the <see cref="M:System.Enum.HasFlag(System.Enum)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Enum.GetName(System.Type,System.Object)" />
        <altmember cref="M:System.Enum.GetNames(System.Type)" />
        <altmember cref="M:System.Enum.GetValues(System.Type)" />
        <altmember cref="M:System.Enum.HasFlag(System.Enum)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="410a2-360">Converte la rappresentazione di stringa del nome o del valore numerico di una o più costanti enumerate in un oggetto enumerato equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-360">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
        </summary>
        <altmember cref="M:System.Enum.TryParse``1(System.String,``0@)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string -&gt; obj" Usage="System.Enum.Parse (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-361">Tipo di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-361">An enumeration type.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-362">Stringa che contiene il nome o il valore da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-362">A string containing the name or value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-363">Converte la rappresentazione di stringa del nome o del valore numerico di una o più costanti enumerate in un oggetto enumerato equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-363">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-364">Oggetto di tipo <paramref name="enumType" /> il cui valore è rappresentato da <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-364">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-365">Il `value` parametro contiene la rappresentazione di stringa del valore sottostante un membro di enumerazione o una costante denominata o un elenco di costanti denominate delimitato da virgole (,).</span><span class="sxs-lookup"><span data-stu-id="410a2-365">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="410a2-366">Uno o più spazi vuoti possono precedere o seguire ogni valore, il nome o virgole nel `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-366">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="410a2-367">Se `value` è un elenco, il valore restituito è il valore dei nomi specificati combinati con un bit per bit `OR` operazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-367">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="410a2-368">Se `value` è un nome che non corrisponde a una costante denominata del `enumType`, il metodo genera un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="410a2-368">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="410a2-369">Se `value` è la rappresentazione di stringa di un numero intero che rappresenta un valore sottostante pari il `enumType` enumerazione, il metodo restituisce un membro di enumerazione il cui valore sottostante è `value` convertito in un tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="410a2-369">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="410a2-370">Se questo comportamento è indesiderato, chiamare il <xref:System.Enum.IsDefined%2A> metodo affinché abbia effettivamente un membro di una rappresentazione particolare di un intero `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-370">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="410a2-371">L'esempio seguente definisce una `Colors` enumerazione, chiama il <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metodo per convertire le stringhe per i corrispondenti valori di enumerazione e chiama il <xref:System.Enum.IsDefined%2A> metodo per assicurarsi che i valori integrali particolari sottostanti i valori in il `Colors` enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-371">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample1.cs#1)]
 [!code-vb[System.Enum.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample1.vb#1)]  
  
 <span data-ttu-id="410a2-372">Questa operazione è tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="410a2-372">This operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-373">L'esempio seguente usa il <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metodo per analizzare una matrice di stringhe che vengono create chiamando il <xref:System.Enum.GetNames%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-373">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="410a2-374">Usa inoltre il <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metodo analizzare il valore di enumerazione che è costituito da un campo di bit.</span><span class="sxs-lookup"><span data-stu-id="410a2-374">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 [!code-cpp[enumparse#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumparse/CPP/EnumParse.cpp#1)]
 [!code-csharp[enumparse#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumparse/CS/EnumParse.cs#1)]
 [!code-vb[enumparse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumparse/VB/EnumParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-375">
            <paramref name="enumType" /> o <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-375">
              <paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-376">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-376">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
          <span data-ttu-id="410a2-377">-oppure- <paramref name="value" /> è una stringa vuota o contiene solo spazi vuoti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-377">-or-  <paramref name="value" /> is either an empty string or only contains white space.</span>
          </span>
          <span data-ttu-id="410a2-378">-oppure- <paramref name="value" /> è un nome, ma non una delle costanti denominate definite per l'enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-378">-or-  <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="410a2-379">
            <paramref name="value" /> non è compreso nell'intervallo del tipo sottostante di <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-379">
              <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string * bool -&gt; obj" Usage="System.Enum.Parse (enumType, value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-380">Tipo di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-380">An enumeration type.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-381">Stringa che contiene il nome o il valore da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-381">A string containing the name or value to convert.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="410a2-382">
            <see langword="true" /> per ignorare la distinzione tra maiuscole e minuscole; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-382">
              <see langword="true" /> to ignore case; <see langword="false" /> to regard case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-383">Converte la rappresentazione di stringa del nome o del valore numerico di una o più costanti enumerate in un oggetto enumerato equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-383">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
          <span data-ttu-id="410a2-384">Un parametro specifica se l'operazione verrà eseguita senza distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-384">A parameter specifies whether the operation is case-insensitive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-385">Oggetto di tipo <paramref name="enumType" /> il cui valore è rappresentato da <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-385">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-386">Il `value` parametro contiene la rappresentazione di stringa del valore sottostante un membro di enumerazione o una costante denominata o un elenco di costanti denominate delimitato da virgole (,).</span><span class="sxs-lookup"><span data-stu-id="410a2-386">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="410a2-387">Uno o più spazi vuoti possono precedere o seguire ogni valore, il nome o virgole nel `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-387">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="410a2-388">Se `value` è un elenco, il valore restituito è il valore dei nomi specificati combinati con un bit per bit `OR` operazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-388">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="410a2-389">Se `value` è un nome che non corrisponde a una costante denominata del `enumType`, il metodo genera un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="410a2-389">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="410a2-390">Se `value` è la rappresentazione di stringa di un numero intero che rappresenta un valore sottostante pari il `enumType` enumerazione, il metodo restituisce un membro di enumerazione il cui valore sottostante è `value` convertito in un tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="410a2-390">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="410a2-391">Se questo comportamento è indesiderato, chiamare il <xref:System.Enum.IsDefined%2A> metodo affinché abbia effettivamente un membro di una rappresentazione particolare di un intero `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-391">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="410a2-392">L'esempio seguente definisce una `Colors` enumerazione, chiama il <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> metodo per convertire le stringhe per i corrispondenti valori di enumerazione e chiama il <xref:System.Enum.IsDefined%2A> metodo per assicurarsi che i valori integrali particolari sottostanti i valori in il `Colors` enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-392">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]
 [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  
  
 <span data-ttu-id="410a2-393">Il `ignoreCase` parametro specifica se questa operazione è tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="410a2-393">The `ignoreCase` parameter specifies whether this operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-394">L'esempio seguente usa il <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> metodo per analizzare una matrice di stringhe che vengono create chiamando il <xref:System.Enum.GetNames%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-394">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="410a2-395">Usa inoltre il <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metodo analizzare il valore di enumerazione che è costituito da un campo di bit.</span><span class="sxs-lookup"><span data-stu-id="410a2-395">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]
 [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-396">
            <paramref name="enumType" /> o <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-396">
              <paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-397">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-397">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
          <span data-ttu-id="410a2-398">-oppure- <paramref name="value" /> è una stringa vuota ("") o contiene solo spazi vuoti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-398">-or-  <paramref name="value" /> is either an empty string ("") or only contains white space.</span>
          </span>
          <span data-ttu-id="410a2-399">-oppure- <paramref name="value" /> è un nome, ma non una delle costanti denominate definite per l'enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-399">-or-  <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="410a2-400">
            <paramref name="value" /> non è compreso nell'intervallo del tipo sottostante di <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-400">
              <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value, bool ignoreCase) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String, ignoreCase As Boolean) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : string * bool -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse (value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-401">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-401">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-402">Converte il valore corrente in un valore booleano basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-402">Converts the current value to a Boolean value based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-403">Questo membro genera sempre un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-403">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-404">Attualmente non implementato.</span><span class="sxs-lookup"><span data-stu-id="410a2-404">Currently not implemented.</span></span> <span data-ttu-id="410a2-405">Genera sempre un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="410a2-405">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="410a2-406">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-406">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-407">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-407">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-408">Converte il valore corrente in un intero senza segno a 8 bit basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-408">Converts the current value to an 8-bit unsigned integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-409">Valore convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-409">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-410">Usa <xref:System.Convert> per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="410a2-410">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-411">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-411">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-412">Converte il valore corrente in un carattere Unicode basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-412">Converts the current value to a Unicode character based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-413">Questo membro genera sempre un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-413">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-414">Attualmente non implementato.</span><span class="sxs-lookup"><span data-stu-id="410a2-414">Currently not implemented.</span></span> <span data-ttu-id="410a2-415">Genera sempre un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="410a2-415">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="410a2-416">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-416">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-417">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-417">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-418">Converte il valore corrente in un oggetto <see cref="T:System.DateTime" /> basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-418">Converts the current value to a <see cref="T:System.DateTime" /> based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-419">Questo membro genera sempre un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-419">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-420">Attualmente non implementato.</span><span class="sxs-lookup"><span data-stu-id="410a2-420">Currently not implemented.</span></span> <span data-ttu-id="410a2-421">Genera sempre un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="410a2-421">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="410a2-422">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-422">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-423">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-423">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-424">Converte il valore corrente in un oggetto <see cref="T:System.Decimal" /> basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-424">Converts the current value to a <see cref="T:System.Decimal" /> based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-425">Questo membro genera sempre un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-425">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-426">Attualmente non implementato.</span><span class="sxs-lookup"><span data-stu-id="410a2-426">Currently not implemented.</span></span> <span data-ttu-id="410a2-427">Genera sempre un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="410a2-427">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="410a2-428">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-428">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-429">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-429">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-430">Converte il valore corrente in un numero a virgola mobile e precisione doppia basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-430">Converts the current value to a double-precision floating point number based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-431">Questo membro genera sempre un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-431">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-432">Attualmente non implementato.</span><span class="sxs-lookup"><span data-stu-id="410a2-432">Currently not implemented.</span></span> <span data-ttu-id="410a2-433">Genera sempre un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="410a2-433">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="410a2-434">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-434">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-435">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-435">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-436">Converte il valore corrente in un intero con segno a 16 bit basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-436">Converts the current value to a 16-bit signed integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-437">Valore convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-437">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-438">Usa <xref:System.Convert> per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="410a2-438">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-439">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-439">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-440">Converte il valore corrente in un intero con segno a 32 bit basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-440">Converts the current value to a 32-bit signed integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-441">Valore convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-441">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-442">Usa <xref:System.Convert> per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="410a2-442">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-443">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-443">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-444">Converte il valore corrente in un intero con segno a 64 bit basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-444">Converts the current value to a 64-bit signed integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-445">Valore convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-445">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-446">Usa <xref:System.Convert> per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="410a2-446">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-447">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-447">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-448">Converte il valore corrente in un intero con segno a 8 bit basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-448">Converts the current value to an 8-bit signed integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-449">Valore convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-449">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-450">Usa <xref:System.Convert> per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="410a2-450">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-451">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-451">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-452">Converte il valore corrente in un numero a virgola mobile e con precisione singola in base al tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-452">Converts the current value to a single-precision floating-point number based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-453">Questo membro genera sempre un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-453">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-454">Attualmente non implementato.</span><span class="sxs-lookup"><span data-stu-id="410a2-454">Currently not implemented.</span></span> <span data-ttu-id="410a2-455">Genera sempre un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="410a2-455">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="410a2-456">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-456">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString().")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="410a2-457">Tipo in cui eseguire la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-457">The type to convert to.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="410a2-458">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-458">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-459">Converte il valore corrente in un tipo specificato basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-459">Converts the current value to a specified type based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-460">Valore convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-460">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-461">Usa <xref:System.Convert> per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="410a2-461">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-462">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-462">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-463">Converte il valore corrente in un intero senza segno a 16 bit basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-463">Converts the current value to a 16-bit unsigned integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-464">Valore convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-464">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-465">Usa <xref:System.Convert> per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="410a2-465">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-466">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-466">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-467">Converte il valore corrente in un intero senza segno a 32 bit basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-467">Converts the current value to a 32-bit unsigned integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-468">Valore convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-468">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-469">Usa <xref:System.Convert> per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="410a2-469">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-470">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-470">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-471">Converte il valore corrente in un intero senza segno a 64 bit basato sul tipo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-471">Converts the current value to a 64-bit unsigned integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-472">Valore convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-472">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-473">Usa <xref:System.Convert> per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="410a2-473">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="410a2-474">Converte un valore intero specificato in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-474">Converts a specified integer value to an enumeration member.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Byte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * byte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-475">Tipo di enumerazione da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-475">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-476">Valore da convertire in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-476">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-477">Converte l'intero senza segno a 8 bit specificato in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-477">Converts the specified 8-bit unsigned integer to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-478">Istanza di enumerazione impostata su <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-478">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-479">Il <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> metodo converte `value` a un membro di enumerazione il cui valore sottostante è `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-479">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="410a2-480">Si noti che la conversione ha esito positivo anche se è di fuori dei limiti del valore `enumType` membri.</span><span class="sxs-lookup"><span data-stu-id="410a2-480">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="410a2-481">Per assicurarsi che `value` è un valore sottostante valido il `enumType` enumerazione, passarlo al <xref:System.Enum.IsDefined%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-481">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="410a2-482">Questo metodo di conversione restituisce un valore di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="410a2-482">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="410a2-483">È quindi possibile eseguirne il cast o convertirlo in un oggetto di tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-483">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-484">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-484">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-485">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-485">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, short value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-486">Tipo di enumerazione da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-486">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-487">Valore da convertire in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-487">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-488">Converte l'intero con segno a 16 bit specificato in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-488">Converts the specified 16-bit signed integer to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-489">Istanza di enumerazione impostata su <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-489">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-490">Il <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> metodo converte `value` a un membro di enumerazione il cui valore sottostante è `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-490">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="410a2-491">Si noti che la conversione ha esito positivo anche se è di fuori dei limiti del valore `enumType` membri.</span><span class="sxs-lookup"><span data-stu-id="410a2-491">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="410a2-492">Per assicurarsi che `value` è un valore sottostante valido il `enumType` enumerazione, passarlo al <xref:System.Enum.IsDefined%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-492">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="410a2-493">Questo metodo di conversione restituisce un valore di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="410a2-493">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="410a2-494">È quindi possibile eseguirne il cast o convertirlo in un oggetto di tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-494">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-495">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-495">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-496">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-496">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, int value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-497">Tipo di enumerazione da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-497">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-498">Valore da convertire in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-498">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-499">Converte l'intero con segno a 32 bit specificato in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-499">Converts the specified 32-bit signed integer to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-500">Istanza di enumerazione impostata su <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-500">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-501">Il <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> metodo converte `value` a un membro di enumerazione il cui valore sottostante è `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-501">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="410a2-502">Si noti che la conversione ha esito positivo anche se è di fuori dei limiti del valore `enumType` membri.</span><span class="sxs-lookup"><span data-stu-id="410a2-502">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="410a2-503">Per assicurarsi che `value` è un valore sottostante valido il `enumType` enumerazione, passarlo al <xref:System.Enum.IsDefined%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-503">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="410a2-504">Questo metodo di conversione restituisce un valore di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="410a2-504">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="410a2-505">È quindi possibile eseguirne il cast o convertirlo in un oggetto di tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-505">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-506">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-506">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-507">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-507">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, long value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-508">Tipo di enumerazione da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-508">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-509">Valore da convertire in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-509">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-510">Converte l'intero con segno a 64 bit specificato in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-510">Converts the specified 64-bit signed integer to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-511">Istanza di enumerazione impostata su <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-511">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-512">Il <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> metodo converte `value` a un membro di enumerazione il cui valore sottostante è `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-512">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="410a2-513">Si noti che la conversione ha esito positivo anche se è di fuori dei limiti del valore `enumType` membri.</span><span class="sxs-lookup"><span data-stu-id="410a2-513">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="410a2-514">Per assicurarsi che `value` è un valore sottostante valido il `enumType` enumerazione, passarlo al <xref:System.Enum.IsDefined%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-514">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="410a2-515">Questo metodo di conversione restituisce un valore di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="410a2-515">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="410a2-516">È quindi possibile eseguirne il cast o convertirlo in un oggetto di tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-516">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-517">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-517">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-518">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-518">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * obj -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-519">Tipo di enumerazione da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-519">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-520">Valore da convertire in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-520">The value convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-521">Converte l'oggetto specificato con un valore intero in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-521">Converts the specified object with an integer value to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-522">Oggetto di enumerazione il cui valore è <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-522">An enumeration object whose value is <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-523">Il <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> metodo converte il valore integrale `value` a un membro di enumerazione il cui valore sottostante è `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-523">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> method converts the integral value `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="410a2-524">Si noti che la conversione ha esito positivo anche se è di fuori dei limiti del valore `enumType` membri.</span><span class="sxs-lookup"><span data-stu-id="410a2-524">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="410a2-525">Per assicurarsi che `value` è un valore sottostante valido il `enumType` enumerazione, passarlo al <xref:System.Enum.IsDefined%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-525">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="410a2-526">Questo metodo di conversione restituisce un valore di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="410a2-526">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="410a2-527">È quindi possibile eseguirne il cast o convertirlo in un oggetto di tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-527">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-528">
            <paramref name="enumType" /> o <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-528">
              <paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-529">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-529">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
          <span data-ttu-id="410a2-530">-oppure-  <paramref name="value" /> non è di tipo <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" /> o <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-530">-or-  <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As SByte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * sbyte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-531">Tipo di enumerazione da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-531">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-532">Valore da convertire in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-532">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-533">Converte il valore dell'intero con segno a 8 bit specificato in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-533">Converts the specified 8-bit signed integer value to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-534">Istanza di enumerazione impostata su <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-534">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-535">Il <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> metodo converte `value` a un membro di enumerazione il cui valore sottostante è `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-535">The <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="410a2-536">Si noti che la conversione ha esito positivo anche se è di fuori dei limiti del valore `enumType` membri.</span><span class="sxs-lookup"><span data-stu-id="410a2-536">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="410a2-537">Per assicurarsi che `value` è un valore sottostante valido il `enumType` enumerazione, passarlo al <xref:System.Enum.IsDefined%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-537">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="410a2-538">Questo metodo di conversione restituisce un valore di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="410a2-538">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="410a2-539">È quindi possibile eseguirne il cast o convertirlo in un oggetto di tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-539">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-540">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-540">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-541">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-541">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UShort) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-542">Tipo di enumerazione da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-542">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-543">Valore da convertire in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-543">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-544">Converte il valore dell'intero senza segno a 16 bit specificato in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-544">Converts the specified 16-bit unsigned integer value to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-545">Istanza di enumerazione impostata su <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-545">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-546">Il <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> metodo converte `value` a un membro di enumerazione il cui valore sottostante è `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-546">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="410a2-547">Si noti che la conversione ha esito positivo anche se è di fuori dei limiti del valore `enumType` membri.</span><span class="sxs-lookup"><span data-stu-id="410a2-547">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="410a2-548">Per assicurarsi che `value` è un valore sottostante valido il `enumType` enumerazione, passarlo al <xref:System.Enum.IsDefined%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-548">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="410a2-549">Questo metodo di conversione restituisce un valore di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="410a2-549">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="410a2-550">È quindi possibile eseguirne il cast o convertirlo in un oggetto di tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-550">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-551">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-551">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-552">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-552">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UInteger) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint32 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-553">Tipo di enumerazione da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-553">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-554">Valore da convertire in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-554">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-555">Converte il valore dell'intero senza segno a 32 bit specificato in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-555">Converts the specified 32-bit unsigned integer value to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-556">Istanza di enumerazione impostata su <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-556">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-557">Il <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> metodo converte `value` a un membro di enumerazione il cui valore sottostante è `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-557">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="410a2-558">Si noti che la conversione ha esito positivo anche se è di fuori dei limiti del valore `enumType` membri.</span><span class="sxs-lookup"><span data-stu-id="410a2-558">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="410a2-559">Per assicurarsi che `value` è un valore sottostante valido il `enumType` enumerazione, passarlo al <xref:System.Enum.IsDefined%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-559">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="410a2-560">Questo metodo di conversione restituisce un valore di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="410a2-560">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="410a2-561">È quindi possibile eseguirne il cast o convertirlo in un oggetto di tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-561">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-562">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-562">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-563">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-563">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As ULong) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="410a2-564">Tipo di enumerazione da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-564">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="410a2-565">Valore da convertire in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-565">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-566">Converte il valore dell'intero senza segno a 64 bit specificato in un membro di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-566">Converts the specified 64-bit unsigned integer value to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-567">Istanza di enumerazione impostata su <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-567">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-568">Il <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> metodo converte `value` a un membro di enumerazione il cui valore sottostante è `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-568">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="410a2-569">Si noti che la conversione ha esito positivo anche se è di fuori dei limiti del valore `enumType` membri.</span><span class="sxs-lookup"><span data-stu-id="410a2-569">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="410a2-570">Per assicurarsi che `value` è un valore sottostante valido il `enumType` enumerazione, passarlo al <xref:System.Enum.IsDefined%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="410a2-570">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="410a2-571">Questo metodo di conversione restituisce un valore di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="410a2-571">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="410a2-572">È quindi possibile eseguirne il cast o convertirlo in un oggetto di tipo `enumType`.</span><span class="sxs-lookup"><span data-stu-id="410a2-572">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="410a2-573">
            <paramref name="enumType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-573">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-574">
            <paramref name="enumType" /> non è un elemento <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-574">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="410a2-575">Converte il valore dell'istanza corrente nell'equivalente rappresentazione di stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-575">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="enum.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="410a2-576">Converte il valore dell'istanza corrente nell'equivalente rappresentazione di stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-576">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-577">Rappresentazione di stringa del valore dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-577">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-578">Il valore restituito viene formattato con l'identificatore di formato generale ("G").</span><span class="sxs-lookup"><span data-stu-id="410a2-578">The return value is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="410a2-579">Vale a dire, se il <xref:System.FlagsAttribute> non viene applicato a questo tipo enumerato e vi è una costante denominata uguale al valore di questa istanza, quindi il valore restituito è una stringa contenente il nome della costante.</span><span class="sxs-lookup"><span data-stu-id="410a2-579">That is, if the <xref:System.FlagsAttribute> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant.</span></span> <span data-ttu-id="410a2-580">Se il <xref:System.FlagsAttribute> viene applicata una combinazione di uno o più costanti denominate è uguale al valore di questa istanza, quindi il valore restituito è una stringa contenente un elenco separati da delimitatori di nomi delle costanti.</span><span class="sxs-lookup"><span data-stu-id="410a2-580">If the <xref:System.FlagsAttribute> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants.</span></span> <span data-ttu-id="410a2-581">In caso contrario, il valore restituito è la rappresentazione di stringa del valore numerico di questa istanza.</span><span class="sxs-lookup"><span data-stu-id="410a2-581">Otherwise, the return value is the string representation of the numeric value of this instance.</span></span> <span data-ttu-id="410a2-582">Per altre informazioni sulla formattazione dei valori di enumerazione, vedere [stringhe di formato di enumerazione](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="410a2-582">For more information about formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="410a2-583">Per altre informazioni sulla formattazione in generale, vedere [formattazione di tipi](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="410a2-583">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-584">L'esempio seguente illustra la conversione di un valore enumerato in una stringa.</span><span class="sxs-lookup"><span data-stu-id="410a2-584">The following example demonstrates converting an enumerated value to a string.</span></span>  
  
 [!code-cpp[Classic Enum.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Enum.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CS/source.cs#1)]
 [!code-vb[Classic Enum.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="410a2-585">
            <para>Se più membri di enumerazione hanno lo stesso valore sottostante e si tenta di recuperare la rappresentazione di stringa del nome di un membro di enumerazione basato sul relativo valore sottostante, il codice non deve verificare supposizioni su quale nome verrà restituito il metodo. Ad esempio, l'enumerazione seguente definisce due membri, <c>Shade. Gray</c> e <c>Shade. Grey</c>, che hanno lo stesso valore sottostante.  [! codice-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [! codice vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)] la seguente chiamata al metodo tenta di recuperare il nome di un membro del <c>Shade</c> enumerazione il cui valore sottostante è 1. Il metodo può restituire "Gray" o "Grey" e il codice non deve verificare supposizioni su cui verrà restituito string.  [! codice-csharp[System.Enum.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [! codice vb[System.Enum.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-585">
              <para>If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return. For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.  [!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]  The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1. The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.  [!code-csharp[System.Enum.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [!code-vb[System.Enum.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="enum.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString().")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="410a2-586">(obsoleto)</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-586">(obsolete)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-587">Questo overload del metodo è obsoleto; utilizzare <see cref="M:System.Enum.ToString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-587">This method overload is obsolete; use <see cref="M:System.Enum.ToString" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-588">Rappresentazione di stringa del valore dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-588">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="enum.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="410a2-589">Stringa di formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-589">A format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-590">Converte il valore dell'istanza corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-590">Converts the value of this instance to its equivalent string representation using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-591">Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-591">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-592">Il `format` parametro può essere una delle stringhe di formato seguente: "G" o "g", "D" o "d", "X" o "x" e "F" o "f" (la stringa di formato non distinzione maiuscole/minuscole).</span><span class="sxs-lookup"><span data-stu-id="410a2-592">The `format` parameter can be one of the following format strings: "G" or "g", "D" or "d", "X" or "x", and "F" or "f" (the format string is not case-sensitive).</span></span> <span data-ttu-id="410a2-593">Se `format` è `null` o una stringa vuota (""), viene usato l'identificatore di formato generale ("G").</span><span class="sxs-lookup"><span data-stu-id="410a2-593">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="410a2-594">Per altre informazioni sulle stringhe di formato di enumerazione e formattazione dei valori di enumerazione, vedere [stringhe di formato di enumerazione](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="410a2-594">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="410a2-595">Per altre informazioni sulla formattazione in generale, vedere [formattazione di tipi](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="410a2-595">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-596">Nell'esempio seguente viene illustrato come convertire un valore enumerato in una stringa.</span><span class="sxs-lookup"><span data-stu-id="410a2-596">The following example demonstrates how to convert an enumerated value to a string.</span></span>  
  
 [!code-cpp[enum.tostring#1](~/samples/snippets/cpp/VS_Snippets_CLR/enum.tostring/CPP/tostr.cpp#1)]
 [!code-csharp[enum.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/enum.tostring/CS/tostr.cs#1)]
 [!code-vb[enum.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enum.tostring/VB/tostr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="410a2-597">
            <paramref name="format" /> contiene una specifica non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-597">
              <paramref name="format" /> contains an invalid specification.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="410a2-598">
            <paramref name="format" /> è uguale a "X", ma il tipo di enumerazione è sconosciuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-598">
              <paramref name="format" /> equals "X", but the enumeration type is unknown.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="410a2-599">
            <para>Se più membri di enumerazione hanno lo stesso valore sottostante e si tenta di recuperare la rappresentazione di stringa del nome di un membro di enumerazione basato sul relativo valore sottostante, il codice non deve verificare supposizioni su quale nome verrà restituito il metodo. Ad esempio, l'enumerazione seguente definisce due membri, <c>Shade. Gray</c> e <c>Shade. Grey</c>, che hanno lo stesso valore sottostante.  [! codice-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [! codice vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)] la seguente chiamata al metodo tenta di recuperare il nome di un membro del <c>Shade</c> enumerazione il cui valore sottostante è 1. Il metodo può restituire "Gray" o "Grey" e il codice non deve verificare supposizioni su cui verrà restituito string.  [! codice-csharp[System.Enum.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [! codice vb[System.Enum.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-599">
              <para>If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return. For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.  [!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]  The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1. The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.  [!code-csharp[System.Enum.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [!code-vb[System.Enum.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
        <altmember cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="enum.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="410a2-600">Specifica di formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-600">A format specification.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="410a2-601">(Obsoleto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-601">(Obsolete.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-602">Questo overload del metodo è obsoleto; utilizzare <see cref="M:System.Enum.ToString(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-602">This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-603">Rappresentazione di stringa del valore dell'istanza, in base a quanto specificato da <paramref name="format" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-603">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-604">Il `format` parametro può essere una delle stringhe di formato seguente: "G" o "g", "D" o "d", "X" o "x" e "F" o "f" (la stringa di formato non distinzione maiuscole/minuscole).</span><span class="sxs-lookup"><span data-stu-id="410a2-604">The `format` parameter can be one of the following format strings: "G" or "g", "D" or "d", "X" or "x", and "F" or "f" (the format string is not case-sensitive).</span></span> <span data-ttu-id="410a2-605">Se `format` è `null` o una stringa vuota (""), viene usato l'identificatore di formato generale ("G").</span><span class="sxs-lookup"><span data-stu-id="410a2-605">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="410a2-606">Per altre informazioni sulle stringhe di formato di enumerazione e formattazione dei valori di enumerazione, vedere [stringhe di formato di enumerazione](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="410a2-606">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="410a2-607">Per altre informazioni sulla formattazione in generale, vedere [formattazione di tipi](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="410a2-607">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="410a2-608">Specificare solo `format`; il `provider` parametro è obsoleto.</span><span class="sxs-lookup"><span data-stu-id="410a2-608">Specify only `format`; the `provider` parameter is obsolete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="410a2-609">
            <paramref name="format" /> non contiene una specifica di formato valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-609">
              <paramref name="format" /> does not contain a valid format specification.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="410a2-610">
            <paramref name="format" /> è uguale a "X", ma il tipo di enumerazione è sconosciuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-610">
              <paramref name="format" /> equals "X", but the enumeration type is unknown.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="410a2-611">Converte la rappresentazione di stringa del nome o del valore numerico di una o più costanti enumerate in un oggetto enumerato equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-611">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
          <span data-ttu-id="410a2-612">Il valore restituito indica se la conversione è riuscita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-612">The return value indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string *  -&gt; bool" Usage="System.Enum.TryParse (enumType, value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, bool ignoreCase, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, bool ignoreCase, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ignoreCase As Boolean, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string * bool *  -&gt; bool" Usage="System.Enum.TryParse (enumType, value, ignoreCase, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="result" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, out TEnum result) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="TEnum" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">
          <span data-ttu-id="410a2-613">Il tipo di enumerazione nel quale convertire <c>valore</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-613">The enumeration type to which to convert <c>value</c>.</span>
          </span>
        </typeparam>
        <param name="value">
          <span data-ttu-id="410a2-614">Rappresentazione di stringa con distinzione tra maiuscole e minuscole del nome di enumerazione o del valore sottostante da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-614">The case-sensitive string representation of the enumeration name or underlying value to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="410a2-615">Quando il metodo termina, l'elemento <c>result</c> contiene un oggetto di tipo <c>TEnum</c> il cui valore è rappresentato dal parametro <c>value</c> se l'operazione di analisi è riuscita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-615">When this method returns, <c>result</c> contains an object of type <c>TEnum</c> whose value is represented by <c>value</c> if the parse operation succeeds.</span>
          </span>
          <span data-ttu-id="410a2-616">Se l'operazione di analisi non è riuscita, l'elemento <c>result</c> contiene il valore predefinito del tipo sottostante di <c>TEnum</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-616">If the parse operation fails, <c>result</c> contains the default value of the underlying type of <c>TEnum</c>.</span>
          </span>
          <span data-ttu-id="410a2-617">Si noti che questo valore non deve necessariamente essere un membro dell'enumerazione di <c>TEnum</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-617">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span>
          </span>
          <span data-ttu-id="410a2-618">Questo parametro viene passato non inizializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-618">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-619">Converte la rappresentazione di stringa del nome o del valore numerico di una o più costanti enumerate in un oggetto enumerato equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-619">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
          <span data-ttu-id="410a2-620">Il valore restituito indica se la conversione è riuscita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-620">The return value indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-621">
            <see langword="true" /> se il parametro <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-621">
              <see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-622"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> è identico per le <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metodo, con la differenza che anziché generare un'eccezione, restituisce `false` se la conversione non riesce.</span><span class="sxs-lookup"><span data-stu-id="410a2-622"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="410a2-623">Elimina la necessità di gestione durante l'analisi la rappresentazione di stringa del valore di enumerazione delle eccezioni.</span><span class="sxs-lookup"><span data-stu-id="410a2-623">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="410a2-624">Il `value` parametro contiene la rappresentazione di stringa del valore sottostante un membro di enumerazione o una costante denominata o un elenco di costanti denominate o sottostanti valori delimitati da virgole (,).</span><span class="sxs-lookup"><span data-stu-id="410a2-624">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="410a2-625">Se `value` include più costanti o valori denominati, uno o più spazi vuoti possono precedere o seguire ogni valore, il nome o virgole nel `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-625">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="410a2-626">Se `value` è riportato un elenco `result` riflette il valore dei nomi specificati o dei valori combinati con un bit per bit sottostanti `OR` operazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-626">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="410a2-627">Se `value` è la rappresentazione di stringa del nome di un valore di enumerazione, il confronto di `value` con enumerazione nomi è tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="410a2-627">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names is case-sensitive.</span></span>  
  
 <span data-ttu-id="410a2-628">Se `value` è un nome che non corrisponde a una costante denominata del `TEnum`, il metodo restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="410a2-628">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="410a2-629">Se `value` è la rappresentazione di stringa di un numero intero che rappresenta un valore sottostante pari il `TEnum` enumerazione, il metodo restituisce un membro di enumerazione il cui valore sottostante è `value` convertito in un tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="410a2-629">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="410a2-630">Se questo comportamento è indesiderato, chiamare il <xref:System.Enum.IsDefined%2A> metodo affinché abbia effettivamente un membro di una rappresentazione particolare di un intero `TEnum`.</span><span class="sxs-lookup"><span data-stu-id="410a2-630">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-631">L'esempio seguente definisce una `Colors` enumerazione, chiama il <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> metodo per convertire le stringhe per i corrispondenti valori di enumerazione e chiama il <xref:System.Enum.IsDefined%2A> metodo per assicurarsi che i valori integrali particolari sottostanti i valori in il `Colors` enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-631">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Enum.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-632">
            <paramref name="TEnum" /> non è un tipo di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-632">
              <paramref name="TEnum" /> is not an enumeration type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, bool ignoreCase, out TEnum result) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ignoreCase As Boolean, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * bool *  -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, ignoreCase, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="result" Type="TEnum" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">
          <span data-ttu-id="410a2-633">Il tipo di enumerazione nel quale convertire <c>valore</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-633">The enumeration type to which to convert <c>value</c>.</span>
          </span>
        </typeparam>
        <param name="value">
          <span data-ttu-id="410a2-634">Rappresentazione di stringa del nome di enumerazione o del valore sottostante da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-634">The string representation of the enumeration name or underlying value to convert.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="410a2-635">
            <see langword="true" /> per ignorare la distinzione tra maiuscole e minuscole, <see langword="false" /> per non ignorarla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-635">
              <see langword="true" /> to ignore case; <see langword="false" /> to consider case.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="410a2-636">Quando il metodo termina, l'elemento <c>result</c> contiene un oggetto di tipo <c>TEnum</c> il cui valore è rappresentato dal parametro <c>value</c> se l'operazione di analisi è riuscita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-636">When this method returns, <c>result</c> contains an object of type <c>TEnum</c> whose value is represented by <c>value</c> if the parse operation succeeds.</span>
          </span>
          <span data-ttu-id="410a2-637">Se l'operazione di analisi non è riuscita, l'elemento <c>result</c> contiene il valore predefinito del tipo sottostante di <c>TEnum</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-637">If the parse operation fails, <c>result</c> contains the default value of the underlying type of <c>TEnum</c>.</span>
          </span>
          <span data-ttu-id="410a2-638">Si noti che questo valore non deve necessariamente essere un membro dell'enumerazione di <c>TEnum</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-638">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span>
          </span>
          <span data-ttu-id="410a2-639">Questo parametro viene passato non inizializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-639">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="410a2-640">Converte la rappresentazione di stringa del nome o del valore numerico di una o più costanti enumerate in un oggetto enumerato equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-640">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
          <span data-ttu-id="410a2-641">Un parametro specifica se l'operazione verrà eseguita con distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-641">A parameter specifies whether the operation is case-sensitive.</span>
          </span>
          <span data-ttu-id="410a2-642">Il valore restituito indica se la conversione è riuscita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-642">The return value indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="410a2-643">
            <see langword="true" /> se il parametro <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-643">
              <see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="410a2-644"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> è identico per le <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> metodo, con la differenza che anziché generare un'eccezione, restituisce `false` se la conversione non riesce.</span><span class="sxs-lookup"><span data-stu-id="410a2-644"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="410a2-645">Elimina la necessità di gestione durante l'analisi la rappresentazione di stringa del valore di enumerazione delle eccezioni.</span><span class="sxs-lookup"><span data-stu-id="410a2-645">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="410a2-646">Il `value` parametro contiene la rappresentazione di stringa del valore sottostante un membro di enumerazione o una costante denominata o un elenco di costanti denominate o sottostanti valori delimitati da virgole (,).</span><span class="sxs-lookup"><span data-stu-id="410a2-646">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="410a2-647">Se `value` include più costanti o valori denominati, uno o più spazi vuoti possono precedere o seguire ogni valore, il nome o virgole nel `value`.</span><span class="sxs-lookup"><span data-stu-id="410a2-647">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="410a2-648">Se `value` è riportato un elenco `result` riflette il valore dei nomi specificati o dei valori combinati con un bit per bit sottostanti `OR` operazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-648">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="410a2-649">Se `value` è la rappresentazione di stringa del nome di un valore di enumerazione, il confronto dei `value` enumerazione nomi dipende il `ignoreCase` parametro.</span><span class="sxs-lookup"><span data-stu-id="410a2-649">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names depends on the `ignoreCase` parameter.</span></span> <span data-ttu-id="410a2-650">Se `true`, il confronto è tra maiuscole e minuscole; se `false`, si tratta di distinzione maiuscole/minuscole.</span><span class="sxs-lookup"><span data-stu-id="410a2-650">If `true`, the comparison is case-insensitive; if `false`, it is case-sensitive.</span></span>  
  
 <span data-ttu-id="410a2-651">Se `value` è un nome che non corrisponde a una costante denominata del `TEnum`, il metodo restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="410a2-651">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="410a2-652">Se `value` è la rappresentazione di stringa di un numero intero che rappresenta un valore sottostante pari il `TEnum` enumerazione, il metodo restituisce un membro di enumerazione il cui valore sottostante è `value` convertito in un tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="410a2-652">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="410a2-653">Se questo comportamento è indesiderato, chiamare il <xref:System.Enum.IsDefined%2A> metodo affinché abbia effettivamente un membro di una rappresentazione particolare di un intero `TEnum`.</span><span class="sxs-lookup"><span data-stu-id="410a2-653">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="410a2-654">L'esempio seguente definisce una `Colors` enumerazione, chiama il <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> metodo per convertire le stringhe per i corrispondenti valori di enumerazione e chiama il <xref:System.Enum.IsDefined%2A> metodo per assicurarsi che i valori integrali particolari sottostanti i valori in il `Colors` enumerazione.</span><span class="sxs-lookup"><span data-stu-id="410a2-654">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span> <span data-ttu-id="410a2-655">Il <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> metodo utilizza il confronto tra maiuscole e minuscole durante il tentativo di convertire le rappresentazioni di stringa di denominato costanti per valori di enumerazione equivalente.</span><span class="sxs-lookup"><span data-stu-id="410a2-655">The <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method uses case-insensitive comparison when trying to convert the string representations of named constants to their equivalent enumeration values.</span></span>  
  
 [!code-csharp[System.Enum.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.Enum.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="410a2-656">
            <paramref name="TEnum" /> non è un tipo di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="410a2-656">
              <paramref name="TEnum" /> is not an enumeration type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>