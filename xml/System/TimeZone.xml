<Type Name="TimeZone" FullName="System.TimeZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="caaf039a73d0cf0514e89fcdf846526119ecb686" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728955" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TimeZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TimeZone extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.TimeZone" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TimeZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZone abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un fuso orario.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un fuso orario è un'area geografica in cui viene utilizzata la stessa ora solare.  
  
> [!IMPORTANT]
>  Se possibile, utilizzare il <xref:System.TimeZoneInfo> classe anziché la <xref:System.TimeZone> classe.  
  
 È possibile utilizzare il <xref:System.TimeZone> (classe) per recuperare le informazioni sul fuso orario corrente e la conversione da ora locale in ora Coordinated Universal Time (UTC) o viceversa. Tuttavia, è possibile usare la <xref:System.TimeZone> classe per rappresentare fusi orari diversi da quello locale o per gestire le conversioni data e ora da un fuso orario a un altro. A tale scopo, utilizzare la <xref:System.TimeZoneInfo> classe. È possibile utilizzare questa classe per recuperare informazioni su qualsiasi fuso orario definito nel sistema locale, per creare fusi orari personalizzati e la conversione da un fuso orario a un altro.  
  
 La <xref:System.TimeZone> classe supporta solo una regola di regolazione dell'ora legale singolo per il fuso orario locale. Di conseguenza, la <xref:System.TimeZone> classe in modo accurato può segnalare informazioni sull'ora legale o eseguire la conversione tra l'ora UTC e l'ora locale solo per il periodo in cui viene applicata la regola di rettifica più recente. Al contrario, la <xref:System.TimeZoneInfo> classe supporta più regole di regolazione, che rende possibile l'utilizzo dei dati cronologici fuso orario.  
  
   
  
## Examples  
 L'esempio seguente vengono visualizzati selezionati `TimeZone` gli elementi della classe.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Oltre a fornire implementazioni per il relativo <see langword="abstract" /> membri (quelli contrassegnati <see langword="MustOverride" /> in Visual Basic), è importante che le classi derivate da <see cref="T:System.TimeZone" /> eseguire l'override del comportamento predefinito del <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> metodo. In questo modo il comportamento predefinito di <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> in .NET Framework versione 2.0 non dipende da una chiamata a <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />, come nelle versioni 1.0 e 1.1 di .NET Framework.  Per informazioni dettagliate, vedere il <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> metodo.</para>
    </block>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeZone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TimeZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.TimeZone" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZone CurrentTimeZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZone CurrentTimeZone" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.CurrentTimeZone" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentTimeZone As TimeZone" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZone ^ CurrentTimeZone { TimeZone ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il fuso orario del computer corrente.</summary>
        <value>Oggetto <see cref="T:System.TimeZone" /> che rappresenta il fuso orario locale corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeZone.CurrentTimeZone%2A> proprietà corrisponde al <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> proprietà. Se possibile, utilizzare il <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> proprietà.  
  
   
  
## Examples  
 Il seguente esempio si fa riferimento il `CurrentTimeZone` proprietà e consente di visualizzare i nomi per l'ora solare e l'ora legale per il fuso orario locale.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>I dati del fuso orario locale vengono memorizzati nella cache dopo aver utilizzato prima <see cref="P:System.TimeZone.CurrentTimeZone" /> per recuperare le informazioni sul fuso orario. Se il fuso orario locale del sistema viene successivamente modificato, la proprietà <see cref="P:System.TimeZone.CurrentTimeZone" /> non riflette tale modifica. Se è necessario gestire le modifiche del fuso orario mentre l'applicazione è in esecuzione, utilizzare la classe <see cref="T:System.TimeZoneInfo" /> e chiamare il relativo metodo <see cref="M:System.TimeZoneInfo.ClearCachedData" />.</para>
        </block>
        <altmember cref="P:System.TimeZoneInfo.Local" />
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public abstract string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del fuso orario con l'ora legale.</summary>
        <value>Nome del fuso orario con l'ora legale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'ora legale non viene utilizzato il fuso orario, una stringa vuota ("") viene restituito.  
  
 Il <xref:System.TimeZone.DaylightName%2A> proprietà corrisponde al <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> proprietà. Se possibile, utilizzare il <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> proprietà.  
  
   
  
## Examples  
 L'esempio seguente vengono visualizzati il `DaylightName` proprietà del fuso orario corrente.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.DaylightName" />
      </Docs>
    </Member>
    <Member MemberName="GetDaylightChanges">
      <MemberSignature Language="C#" Value="public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.DaylightTime GetDaylightChanges(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaylightChanges (year As Integer) As DaylightTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Globalization::DaylightTime ^ GetDaylightChanges(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DaylightTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Anno per il quale viene applicata l'ora legale.</param>
        <summary>Restituisce il periodo di applicazione dell'ora legale per un anno specifico.</summary>
        <returns>Oggetto <see cref="T:System.Globalization.DaylightTime" /> contenente la data di inizio e fine dell'ora legale in <paramref name="year" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È supportato solo un periodo di ora legale all'anno.  
  
 Se l'ora legale non viene utilizzato il fuso orario corrente, il valore restituito è un <xref:System.Globalization.DaylightTime> oggetto, in cui il valore di <xref:System.Globalization.DaylightTime.Start%2A> e <xref:System.Globalization.DaylightTime.End%2A> è <xref:System.DateTime.MinValue?displayProperty=nameWithType>e il valore di <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=nameWithType> è un <xref:System.TimeSpan> inizializzato a 0 segni di graduazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> è minore di 1 o maggiore di 9999.</exception>
        <block subset="none" type="usage">
          <para>Poiché il <see cref="T:System.TimeZone" /> classe supporta solo una regola di regolazione dell'ora legale, il <see cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" /> metodo si applica la regola di rettifica corrente per ogni anno, indipendentemente dal fatto che la regola di rettifica effettivamente applicato a tale anno. Supponendo che il sistema operativo stesso possieda dati accurati per un determinato anno, un risultato più accurato è disponibile quando si lavora con la matrice di <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> gli oggetti restituiti dal <see cref="M:System.TimeZoneInfo.GetAdjustmentRules" /> metodo. Il <see cref="P:System.Globalization.DaylightTime.Start" />, <see cref="P:System.Globalization.DaylightTime.End" />, e <see cref="P:System.Globalization.DaylightTime.Delta" /> le proprietà corrispondenti al <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />, <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />, e <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> proprietà.</para>
        </block>
        <altmember cref="M:System.TimeZoneInfo.GetAdjustmentRules" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public abstract TimeSpan GetUtcOffset (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUtcOffset (time As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TimeSpan GetUtcOffset(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Valore di data e ora.</param>
        <summary>Restituisce lo scostamento dall'ora UTC (Coordinated Universal Time) per l'ora locale specificata.</summary>
        <returns>Offset dell'ora UTC (Coordinated Universal Time) da <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo restituisce l'offset o differenza tra il `time` parametro e Coordinated Universal Time (UTC). Ovvero:  
  
 `time` = UTC + offset  
  
 Il metodo interpreta il fuso orario del `time` in base alle relative <xref:System.DateTime.Kind%2A> proprietà. Se il valore di <xref:System.DateTime.Kind%2A> proprietà <xref:System.DateTimeKind.Local?displayProperty=nameWithType> o <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, il metodo restituisce l'offset del fuso orario locale. Se il valore di <xref:System.DateTime.Kind%2A> proprietà <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, il metodo restituisce un offset uguale a <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.  
  
 Se il fuso orario locale utilizza l'ora legale, <xref:System.TimeZone.GetUtcOffset%2A> si applica la regola di rettifica corrente per `time` per determinare l'offset del fuso orario locale. Vale a dire, offset restituito da <xref:System.TimeZone.GetUtcOffset%2A> riflette se `time` rientra nell'ora solare del fuso orario o l'ora legale.  
  
> [!NOTE]
>  Il <xref:System.TimeZone.GetUtcOffset%2A> metodo riconosce solo la regola di regolazione dell'ora legale corrente per il fuso orario locale. Di conseguenza, è sicuramente accurata restituisce l'offset UTC di un'ora locale solo durante il periodo in cui viene applicata la regola di rettifica più recente. Può restituire risultati non accurati se `time` è una cronologiche valore data e ora che è soggetto a una regola di rettifica precedente.  
  
 Il <xref:System.TimeZone.GetUtcOffset%2A> metodo corrisponde alla <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> metodo. Se possibile, utilizzare il <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> metodo.  
  
 Poiché il valore di data e ora rappresentato da `time` e offset di tale valore rispetto all'ora UTC non sono strettamente collegati, una data locale o non specificata e il valore di ora può restituire un valore di offset diverso quando eseguito in computer diversi o nello stesso computer in fusi orari diversi. Se questo comportamento è inaccettabile, utilizzare un <xref:System.DateTimeOffset> invece opportuno. Il <xref:System.DateTimeOffset> tipo di dati strettamente collegato a un valore di data e ora con l'offset dall'ora UTC.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un valore che indica se una data e un'ora specificate sono comprese in un periodo di applicazione dell'ora legale.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public virtual bool IsDaylightSavingTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDaylightSavingTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDaylightSavingTime (time As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDaylightSavingTime(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Data e ora.</param>
        <summary>Restituisce un valore che indica se la data e l'ora specificate sono comprese in un periodo di applicazione dell'ora legale.</summary>
        <returns>
          <see langword="true" /> se <paramref name="time" /> è compreso in un periodo di applicazione dell'ora legale; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'anno a cui si applica il periodo di ora legale è derivato dal `time` parametro.  
  
 Poiché il <xref:System.TimeZone> classe supporta una regola di regolazione dell'ora legale singolo, il <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> metodo si applica la regola di rettifica corrente a qualsiasi data, indipendentemente dal fatto che la regola di rettifica è stata applicata in tale data. Supponendo che il sistema operativo ha dati cronologici precisi sull'ora legale, un risultato più accurato è disponibile tramite il <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> metodo. Se possibile, utilizzare il <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDaylightSavingTime(valuetype System.DateTime time, class System.Globalization.DaylightTime daylightTimes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDaylightSavingTime (time As DateTime, daylightTimes As DaylightTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDaylightSavingTime(DateTime time, System::Globalization::DaylightTime ^ daylightTimes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="daylightTimes" Type="System.Globalization.DaylightTime" />
      </Parameters>
      <Docs>
        <param name="time">Data e ora.</param>
        <param name="daylightTimes">To be added.</param>
        <summary>Restituisce un valore che indica se la data e l'ora specificate sono comprese nel periodo di applicazione dell'ora legale specificato.</summary>
        <returns>
          <see langword="true" /> se <paramref name="time" /> è compreso in <paramref name="daylightTimes" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> metodo fornisce la stessa funzionalità di questo overload del metodo di <xref:System.TimeZone.IsDaylightSavingTime%2A> metodo. Se possibile, utilizzare il <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="daylightTimes" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public abstract string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del fuso orario standard.</summary>
        <value>Nome del fuso orario standard.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeZone.StandardName%2A> proprietà corrisponde al <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> proprietà. Se possibile, utilizzare il <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> proprietà.  
  
   
  
## Examples  
 L'esempio seguente vengono visualizzati il `StandardName` proprietà del fuso orario corrente.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">È stato effettuato un tentativo di impostare la proprietà su <see langword="null" />.</exception>
        <altmember cref="P:System.TimeZoneInfo.StandardName" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToLocalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToLocalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToLocalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToLocalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToLocalTime(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Ora UTC (Coordinated Universal Time).</param>
        <summary>Restituisce l'ora locale corrispondente a un valore di data e ora specificato.</summary>
        <returns>Oggetto <see cref="T:System.DateTime" /> il cui valore è l'ora locale corrispondente a <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente viene illustrata la relazione tra il `time` parametro e <xref:System.DateTime> valore restituito da questo metodo.  
  
|Parametro `time`.|Comportamento|Valore restituito|  
|----------------------|--------------|------------------|  
|Un'ora (UTC) Coordinated Universal Time (<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>).|Converte l'ora dall'ora UTC per l'ora locale.|Oggetto <xref:System.DateTime> il cui valore è l'ora locale corrispondente a `time`.|  
|Un'ora locale (<xref:System.DateTimeKind.Local?displayProperty=nameWithType>).|Nessuna conversione necessaria.|Lo stesso <xref:System.DateTime> valore rappresentato dal `time` parametro.|  
|Un'ora non specificata (<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>).|Presuppone che l'ora UTC e converte l'ora locale rispetto a UTC.|Oggetto <xref:System.DateTime> il cui valore è l'ora locale corrispondente a `time`.|  
  
 Se il fuso orario locale utilizza l'ora legale, <xref:System.TimeZone.ToLocalTime%2A> si applica la regola di rettifica corrente per `time` quando si esegue la conversione.  
  
> [!NOTE]
>  Il <xref:System.TimeZone.ToLocalTime%2A> metodo riconosce solo la regola di regolazione dell'ora legale corrente per il fuso orario locale. Di conseguenza, è sicuramente accurata restituiscono l'ora locale corrispondente a una determinata ora UTC per il periodo in cui viene applicata la regola di rettifica più recente. Può restituire risultati non accurati se `time` è una cronologiche valore data e ora che è soggetto a una regola di rettifica precedente.  
  
 Il <xref:System.TimeZone.ToLocalTime%2A> metodo corrisponde alla <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> metodo con il relativo `destinationTimeZone` parametro impostato su <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>. Se possibile, utilizzare il <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> metodo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Sebbene non sia obbligatorio, nella maggior parte dei casi le classi derivate in esecuzione in .NET Framework versione 2.0 devono eseguire l'override l'implementazione predefinita di questo metodo. In .NET Framework versioni 1.0 e 1.1, il <see langword="ToLocalTime" /> metodo chiamato di <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> metodo rettificato per l'ora legale, quando viene restituita l'ora locale. Tuttavia, a partire da .NET Framework 2.0, il comportamento dell'implementazione predefinita dipende il <see cref="P:System.DateTime.Kind" /> proprietà del <paramref name="time" /> parametro. Se il valore è <see cref="F:System.DateTimeKind.Local" />, questo metodo restituisce <paramref name="time" /> subisce modifiche. Se il valore è <see cref="F:System.DateTimeKind.Utc" /> o <see cref="F:System.DateTimeKind.Unspecified" />, questo metodo presuppone <paramref name="time" /> sia UTC e lo converte per l'ora di sistema locale senza chiamare il <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> metodo.  
  
 Il codice seguente fornisce un semplice override dell'implementazione predefinita del <see langword="ToLocalTime" /> metodo. In questo codice, il <see langword="internalTimeZone" /> variabile rappresenta un'istanza privata della <see langword="TimeZone" /> classe:  
  
 [!code-csharp[System.TimeZone.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/CS/TimeZone_ToLocalTime.cs#1)]
 [!code-vb[System.TimeZone.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/VB/TimeZone_ToLocalTime.vb#1)]</para>
        </block>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToUniversalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToUniversalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToUniversalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToUniversalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToUniversalTime(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Data e ora.</param>
        <summary>Restituisce l'ora UTC (Coordinated Universal Time) corrispondente a un'ora specificata.</summary>
        <returns>Oggetto <see cref="T:System.DateTime" /> il cui valore è l'ora UTC (Coordinated Universal Time) corrispondente a <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il fuso orario locale utilizza l'ora legale, <xref:System.TimeZone.ToUniversalTime%2A> si applica la regola di rettifica corrente per il `time` parametro quando si esegue la conversione.  
  
> [!NOTE]
>  Il <xref:System.TimeZone.ToUniversalTime%2A> metodo riconosce solo la regola di regolazione dell'ora legale corrente per il fuso orario locale. Di conseguenza, è sicuramente restituire in modo accurato il tempo universale coordinato (UTC) corrispondente a una particolare ora locale per il periodo in cui viene applicata la regola di rettifica più recente. Può restituire risultati non accurati se `time` è una cronologiche valore data e ora che è soggetto a una regola di rettifica precedente.  
  
 Se il `time` parametro non è un'ora ambigua, il metodo presuppone che sia un'ora solare. (Un'ora ambigua è che è possibile eseguire il mapping a un'ora solare o a un'ora legale del fuso orario locale). Se `time` è un'ora non valida, il metodo sottrae semplicemente l'ora locale rispetto all'ora UTC del fuso orario locale offset per restituire l'ora UTC. (Un'ora non valida è che non esiste a causa dell'applicazione delle regole di regolazione dell'ora legale).  
  
 Poiché `time` viene interpretato in relazione al fuso orario corrente del sistema corrente, la data e l'ora restituita da questo metodo può essere diverso se un'applicazione viene eseguita su computer diversi o nello stesso computer con fusi orari diversi. Per i casi in cui un valore di data e ora deve rappresentare un singolo e non ambigua nel tempo, utilizzare un <xref:System.DateTimeOffset> valore per rappresentare l'ora locale.  
  
 Il <xref:System.TimeZone.ToUniversalTime%2A> metodo corrisponde alla <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> overload del metodo con un <xref:System.DateTime> parametro il cui <xref:System.DateTime.Kind%2A> proprietà non è uguale <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>. Se possibile, utilizzare il <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> overload del metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      </Docs>
    </Member>
  </Members>
</Type>