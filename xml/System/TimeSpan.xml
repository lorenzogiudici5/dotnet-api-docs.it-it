<Type Name="TimeSpan" FullName="System.TimeSpan">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="90a076d03307ceac618c45b2b9f5a52db113fadd" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48649761" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct TimeSpan : IComparable, IComparable&lt;TimeSpan&gt;, IEquatable&lt;TimeSpan&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit TimeSpan extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.TimeSpan&gt;, class System.IEquatable`1&lt;valuetype System.TimeSpan&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.TimeSpan" />
  <TypeSignature Language="VB.NET" Value="Public Structure TimeSpan&#xA;Implements IComparable, IComparable(Of TimeSpan), IEquatable(Of TimeSpan), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class TimeSpan : IComparable, IComparable&lt;TimeSpan&gt;, IEquatable&lt;TimeSpan&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type TimeSpan = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.TimeSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un intervallo di tempo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.TimeSpan> oggetto rappresenta un intervallo di tempo (durata di tempo o il tempo trascorso) che viene misurato come un numero positivo o negativo di giorni, ore, minuti, secondi e frazioni di secondo. Il <xref:System.TimeSpan> struttura può essere utilizzata anche per rappresentare l'ora del giorno, ma solo se il tempo è correlato a una determinata data. In caso contrario, il <xref:System.DateTime> o <xref:System.DateTimeOffset> struttura da utilizzare in sostituzione. (Per altre informazioni sull'uso di <xref:System.TimeSpan> struttura per riflettere l'ora del giorno, vedere [scelta tra DateTime, DateTimeOffset, TimeSpan e TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).)  
  
> [!NOTE]
>  Oggetto <xref:System.TimeSpan> valore rappresenta un intervallo di tempo e può essere espresso come un numero specifico di giorni, ore, minuti, secondi e millisecondi. Perché rappresenta un intervallo generale senza riferimento a un particolare punto iniziale o finale, non possono essere espressi in termini di anni e mesi, che dispongono di un numero variabile di giorni. Differisce da un <xref:System.DateTime> valore, che rappresenta una data e ora senza riferimento a un determinato fuso orario, o un <xref:System.DateTimeOffset> valore, che rappresenta un momento specifico del tempo.  
  
 L'unità massima di tempo durante cui la <xref:System.TimeSpan> struttura viene utilizzato per misurare la durata è un giorno. Gli intervalli di tempo sono misurati in giorni per coerenza, poiché il numero di giorni nell'unità di tempo, ad esempio mesi e anni, più grandi varia.  
  
 Il valore di un <xref:System.TimeSpan> oggetto è il numero di tick che equivalgono all'intervallo di tempo rappresentato. Un segno di graduazione è pari a 100 nanosecondi, oppure un decimilionesimo di secondo. Il valore di una <xref:System.TimeSpan> oggetto può essere compreso tra <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> a <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.  
  
## <a name="instantiating-a-timespan-value"></a>Creare un'istanza di un valore TimeSpan  
 È possibile creare un'istanza di un <xref:System.TimeSpan> valore in diversi modi:  
  
-   Chiamando il costruttore predefinito implicito. Questo passaggio Crea un oggetto il cui valore è <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, come illustrato nell'esempio seguente.  
  
     [!code-csharp[System.TimeSpan.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#2)]
     [!code-vb[System.TimeSpan.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#2)]  
  
-   Chiamando uno dei relativi costruttori espliciti. Nell'esempio seguente viene inizializzato un <xref:System.TimeSpan> valore su un numero di ore, minuti e secondi specificato.  
  
     [!code-csharp[System.TimeSpan.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#3)]
     [!code-vb[System.TimeSpan.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#3)]  
  
-   Chiamando un metodo o eseguendo un'operazione che restituisce un <xref:System.TimeSpan> valore. Ad esempio, è possibile creare un'istanza di un <xref:System.TimeSpan> valore che rappresenta l'intervallo tra due valori di data e ora, come illustrato nell'esempio seguente.  
  
     [!code-csharp[System.TimeSpan.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#4)]
     [!code-vb[System.TimeSpan.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#4)]  
  
     È anche possibile inizializzare un <xref:System.TimeSpan> oggetto da un valore zero in questo modo, come illustrato nell'esempio seguente.  
  
     [!code-csharp[System.TimeSpan.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/zero1.cs#6)]
     [!code-vb[System.TimeSpan.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/zero1.vb#6)]  
  
     <xref:System.TimeSpan> valori restituiti da metodi e gli operatori aritmetici il <xref:System.DateTime>, <xref:System.DateTimeOffset>, e <xref:System.TimeSpan> strutture.  
  
-   Analizzando la rappresentazione di stringa di un <xref:System.TimeSpan> valore. È possibile usare la <xref:System.TimeSpan.Parse%2A> e <xref:System.TimeSpan.TryParse%2A> metodi per convertire le stringhe che contengono intervalli di tempo per <xref:System.TimeSpan> valori. L'esempio seguente usa il <xref:System.TimeSpan.Parse%2A> metodo per convertire una matrice di stringhe da <xref:System.TimeSpan> valori.  
  
     [!code-csharp[System.TimeSpan.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#5)]
     [!code-vb[System.TimeSpan.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#5)]  
  
     Inoltre, è possibile definire il formato preciso della stringa di input per essere analizzato e convertito in un <xref:System.TimeSpan> valore chiamando il <xref:System.TimeSpan.ParseExact%2A> o <xref:System.TimeSpan.TryParseExact%2A> (metodo).  
  
## <a name="performing-operations-on-timespan-values"></a>Esecuzione di operazioni su valori TimeSpan  
 È possibile aggiungere o sottrarre intervalli di tempo usando la <xref:System.TimeSpan.op_Addition%2A> e <xref:System.TimeSpan.op_Subtraction%2A> operatori, oppure chiamando il <xref:System.TimeSpan.Add%2A> e <xref:System.TimeSpan.Subtract%2A> metodi. È anche possibile confrontare due intervalli di tempo chiamando il <xref:System.TimeSpan.Compare%2A>, <xref:System.TimeSpan.CompareTo%2A>, e <xref:System.TimeSpan.Equals%2A> metodi. Il <xref:System.TimeSpan> struttura include anche il <xref:System.TimeSpan.Duration%2A> e <xref:System.TimeSpan.Negate%2A> metodi, che consente di convertire gli intervalli di tempo valori positivi e negativi,  
  
 L'intervallo di <xref:System.TimeSpan> valori viene <xref:System.TimeSpan.MinValue> a <xref:System.TimeSpan.MaxValue>.  
  
## <a name="formatting-a-timespan-value"></a>Formattazione di un valore TimeSpan  
 Oggetto <xref:System.TimeSpan> valore può essere rappresentato come [*-*]*1!d*.* hh*:*mm*:*ss*.* FF*, in cui il segno meno (-) facoltativo indica un intervallo di tempo negativo, il *1!d* componente giorni, viene *hh* nel formato a 24 ore, le ore *mm* minuti, viene *ss* secondi, e *ff* le frazioni di secondo. Vale a dire, un intervallo di tempo è costituito da un numero positivo o negativo di giorni senza un'ora del giorno o un numero di giorni con un'ora del giorno o solo l'ora del giorno.  
  
 Inizia con la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], il <xref:System.TimeSpan> struttura supporta la formattazione con distinzione delle impostazioni cultura tramite gli overload del relativo <xref:System.TimeSpan.ToString%2A> metodo, che converte un <xref:System.TimeSpan> valore alla relativa rappresentazione di stringa. Il valore predefinito <xref:System.TimeSpan.ToString?displayProperty=nameWithType> metodo restituisce un intervallo di tempo utilizzando un formato invariante identico al relativo valore restituito nelle versioni precedenti di .NET Framework. Il <xref:System.TimeSpan.ToString%28System.String%29?displayProperty=nameWithType> overload consente di specificare una stringa di formato che definisce la rappresentazione di stringa dell'intervallo di tempo. Il <xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload consente di specificare una stringa di formato e le impostazioni cultura le cui convenzioni di formattazione utilizzate per creare la rappresentazione di stringa dell'intervallo di tempo. <xref:System.TimeSpan> supporta entrambe le stringhe di formato standard e personalizzate. (Per altre informazioni, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md).) Tuttavia, solo le stringhe di formato standard sono dipendenti dalle impostazioni cultura.  
  
## <a name="restoring-legacy-timespan-formatting"></a>Il ripristino TimeSpan Legacy di formattazione  
 In alcuni casi, codice che è stata formati <xref:System.TimeSpan> i valori [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e versioni precedenti ha esito negativo [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. Si tratta più comune nel codice che chiama un' [elemento < TimeSpan_LegacyFormatMode >](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md) metodo per formattare un <xref:System.TimeSpan> valore con una stringa di formato. L'esempio seguente formatta correttamente una <xref:System.TimeSpan> valore in [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e versioni precedenti, ma genera un'eccezione in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] e versioni successive. Si noti che tenta di formattare un <xref:System.TimeSpan> valore utilizzando un identificatore di formato non supportato, ignorato in [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e nelle versioni precedenti.  
  
 [!code-csharp[System.TimeSpan.Class.Legacy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.legacy/cs/legacycode1.cs#1)]
 [!code-vb[System.TimeSpan.Class.Legacy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.legacy/vb/legacycode1.vb#1)]  
  
 Se non è possibile modificare il codice, è possibile ripristinare la formattazione legacy di <xref:System.TimeSpan> valori in uno dei modi seguenti:  
  
-   Per la creazione di un file di configurazione che contiene il [elemento < TimeSpan_LegacyFormatMode >](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md). Impostare i tohoto prvku `enabled` dell'attributo `true` Ripristina legacy <xref:System.TimeSpan> formattazione in base all'applicazione.  
  
-   Impostando la compatibilità "NetFx40_TimeSpanLegacyFormatMode" passare quando si crea un dominio dell'applicazione. In questo modo legacy <xref:System.TimeSpan> la formattazione per ogni dominio applicazione. L'esempio seguente crea un dominio dell'applicazione che usa legacy <xref:System.TimeSpan> formattazione.  
  
     [!code-csharp[System.TimeSpan.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.appdomain/cs/perappdomain1.cs#1)]
     [!code-vb[System.TimeSpan.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.appdomain/vb/perappdomain1.vb#1)]  
  
     Quando il codice seguente viene eseguita nel nuovo dominio applicazione, viene ripristinato il legacy <xref:System.TimeSpan> comportamento di formattazione.  
  
     [!code-csharp[System.TimeSpan.Class.AppDomain#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.appdomain/cs/showtimespan.cs#2)]
     [!code-vb[System.TimeSpan.Class.AppDomain#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.appdomain/vb/showtimespan.vb#2)]  
  
   
  
## Examples  
 Nell'esempio seguente crea un <xref:System.TimeSpan> oggetto che rappresenta la differenza tra due date. Viene quindi visualizzato il <xref:System.TimeSpan> proprietà dell'oggetto.  
  
 [!code-csharp[System.TimeSpan.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/structure1.cs#1)]
 [!code-vb[System.TimeSpan.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/structure1.vb#1)]  
 [!code-powershell[System.TimeSpan.Class#1](~/samples/snippets/powershell/VS_Snippets_CLR_System/system.timespan.class/ps/structure1.ps1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.Globalization.Calendar" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.TimeSpan" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(long ticks);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int64 -&gt; TimeSpan" Usage="new System.TimeSpan ticks" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks">Periodo di tempo espresso in unità di 100 nanosecondi.</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.TimeSpan" /> su un numero di tick specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un singolo tick rappresenta 100 nanosecondi oppure un decimilionesimo di secondo. Sono presenti 10.000 Tick di un millisecondo.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> di oggetti usando l'overload del costruttore che inizializza un <xref:System.TimeSpan> su un numero specificato di segni di graduazione.  
  
 [!code-cpp[System.TimeSpan.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctorl.cpp#1)]
 [!code-csharp[System.TimeSpan.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctorl.cs#1)]
 [!code-vb[System.TimeSpan.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctorl.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Ticks" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int hours, int minutes, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 hours, int32 minutes, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hours As Integer, minutes As Integer, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int hours, int minutes, int seconds);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int * int * int -&gt; TimeSpan" Usage="new System.TimeSpan (hours, minutes, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hours">Numero di ore.</param>
        <param name="minutes">Numero di minuti.</param>
        <param name="seconds">Numero di secondi.</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.TimeSpan" /> su un numero di ore, minuti e secondi specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto specificato `hours`, `minutes`, e `seconds` vengono convertiti in tick, e tale valore inizializza questa istanza.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> di oggetti usando l'overload del costruttore che inizializza un <xref:System.TimeSpan> su un numero di ore, minuti e secondi specificato.  
  
 [!code-cpp[System.TimeSpan.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriii.cpp#2)]
 [!code-csharp[System.TimeSpan.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriii.cs#2)]
 [!code-vb[System.TimeSpan.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">I parametri specificano un valore <see cref="T:System.TimeSpan" /> minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int days, int hours, int minutes, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (days As Integer, hours As Integer, minutes As Integer, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int days, int hours, int minutes, int seconds);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int * int * int * int -&gt; TimeSpan" Usage="new System.TimeSpan (days, hours, minutes, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="days" Type="System.Int32" />
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="days">Numero di giorni.</param>
        <param name="hours">Numero di ore.</param>
        <param name="minutes">Numero di minuti.</param>
        <param name="seconds">Numero di secondi.</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.TimeSpan" /> su un numero di giorni, ore, minuti e secondi specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto specificato `days`, `hours`, `minutes`, e `seconds` vengono convertiti in tick, e tale valore inizializza questa istanza.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> di oggetti usando l'overload del costruttore che inizializza un <xref:System.TimeSpan> su un numero di giorni, ore, minuti e secondi specificato.  
  
 [!code-cpp[System.TimeSpan.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriiii.cpp#3)]
 [!code-csharp[System.TimeSpan.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriiii.cs#3)]
 [!code-vb[System.TimeSpan.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriiii.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">I parametri specificano un valore <see cref="T:System.TimeSpan" /> minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int days, int hours, int minutes, int seconds, int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds, int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (days As Integer, hours As Integer, minutes As Integer, seconds As Integer, milliseconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int days, int hours, int minutes, int seconds, int milliseconds);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int * int * int * int * int -&gt; TimeSpan" Usage="new System.TimeSpan (days, hours, minutes, seconds, milliseconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="days" Type="System.Int32" />
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="days">Numero di giorni.</param>
        <param name="hours">Numero di ore.</param>
        <param name="minutes">Numero di minuti.</param>
        <param name="seconds">Numero di secondi.</param>
        <param name="milliseconds">Numero di millisecondi.</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.TimeSpan" /> su un numero di giorni, ore, minuti, secondi e millisecondi specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto specificato `days`, `hours`, `minutes`, `seconds`, e `milliseconds` vengono convertiti in tick, e tale valore inizializza questa istanza.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> di oggetti usando l'overload del costruttore che inizializza un <xref:System.TimeSpan> su un numero di giorni, ore, minuti, secondi e millisecondi specificato.  
  
 [!code-cpp[System.TimeSpan.Ctor#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriiiii.cpp#4)]
 [!code-csharp[System.TimeSpan.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriiiii.cs#4)]
 [!code-vb[System.TimeSpan.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriiiii.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">I parametri specificano un valore <see cref="T:System.TimeSpan" /> minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public TimeSpan Add (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Add(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Add(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ts As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Add(TimeSpan ts);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; TimeSpan" Usage="timeSpan.Add ts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts">Intervallo di tempo da aggiungere.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.TimeSpan" /> il cui valore è la somma dell'oggetto <see cref="T:System.TimeSpan" /> specificato e di questa istanza.</summary>
        <returns>Nuovo oggetto che rappresenta la somma tra il valore di questa istanza e il valore di <paramref name="ts" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito deve essere compreso tra <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> e <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>; in caso contrario, viene generata un'eccezione.  
  
 Il valore restituito è una nuova <xref:System.TimeSpan>; originale <xref:System.TimeSpan> non viene modificato.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.TimeSpan.Add%2A> per aggiungere ogni elemento in una matrice di intervalli di tempo a una base <xref:System.TimeSpan> valore.  
  
 [!code-csharp[System.TimeSpan.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.add/cs/add1.cs#1)]
 [!code-vb[System.TimeSpan.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.add/vb/add1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">Il valore risultante di <see cref="T:System.TimeSpan" /> è minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (t1 As TimeSpan, t2 As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member Compare : TimeSpan * TimeSpan -&gt; int" Usage="System.TimeSpan.Compare (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">Primo intervallo di tempo da confrontare.</param>
        <param name="t2">Secondo intervallo di tempo da confrontare.</param>
        <summary>Confronta due valori <see cref="T:System.TimeSpan" /> e restituisce un intero che indica se il primo valore è più breve, uguale o più lungo del secondo valore.</summary>
        <returns>Uno dei valori seguenti.  
  
 <list type="table"><listheader><term> Valore 
 </term><description> Descrizione 
 </description></listheader><item><term> -1 
 </term><description><paramref name="t1" /> è più breve di <paramref name="t2" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="t1" /> è uguale a <paramref name="t2" />.  
  
 </description></item><item><term> 1 
 </term><description><paramref name="t1" /> è più lungo di <paramref name="t2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente usa il <xref:System.TimeSpan.Compare%2A> metodo per confrontare i diversi <xref:System.TimeSpan> gli oggetti con un <xref:System.TimeSpan> oggetto il cui valore è un intervallo di tempo di 2 ore.  
  
 [!code-csharp[System.TimeSpan.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.compare/cs/compare1.cs#1)]
 [!code-vb[System.TimeSpan.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.compare/vb/compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Confronta questa istanza con un oggetto specificato o un oggetto <see cref="T:System.TimeSpan" /> e restituisce un intero che indica se questa istanza è più breve, uguale o più lunga dell'oggetto specificato o dell'oggetto <see cref="T:System.TimeSpan" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I due overload del <xref:System.TimeSpan.CompareTo%2A> metodo di restituire un numero con segno che indica il valore relativo di questa istanza e il `value` argomento, come illustrato nella tabella seguente.  
  
|Valore|Descrizione|  
|-----------|-----------------|  
|Minore di zero|L'istanza è più breve di `value`.|  
|Zero|Questa istanza è uguale al parametro `value`.|  
|Maggiore di zero|L'istanza è più lunga di `value`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="timeSpan.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da confrontare o <see langword="null" />.</param>
        <summary>Confronta questa istanza con un oggetto specificato e restituisce un intero che indica se questa istanza è più breve, uguale o più lunga dell'oggetto specificato.</summary>
        <returns>Uno dei valori seguenti.  
  
 <list type="table"><listheader><term> Valore 
 </term><description> Descrizione 
 </description></listheader><item><term> -1 
 </term><description> L'istanza è più breve di <paramref name="value" />.  
  
 </description></item><item><term> 0 
 </term><description> L'istanza è uguale a <paramref name="value" />.  
  
 </description></item><item><term> 1 
 </term><description> L'istanza è più lunga di <paramref name="value" />.  
  
oppure 
 <paramref name="value" /> è <see langword="null" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualsiasi istanza di <xref:System.TimeSpan>, indipendentemente dal relativo valore, viene considerato maggiore `null`.  
  
 Il `value` parametro deve essere un'istanza di <xref:System.TimeSpan> o `null`; in caso contrario, viene generata un'eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente vengono confrontate alcune <xref:System.TimeSpan> strutture e altri oggetti per un riferimento <xref:System.TimeSpan> struttura usando la <xref:System.TimeSpan.CompareTo%2A> (metodo).  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.TimeSpan.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> non è un oggetto <see cref="T:System.TimeSpan" />.</exception>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.CompareTo(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(TimeSpan value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : TimeSpan -&gt; int&#xA;override this.CompareTo : TimeSpan -&gt; int" Usage="timeSpan.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da confrontare con questa istanza.</param>
        <summary>Confronta questa istanza con un oggetto <see cref="T:System.TimeSpan" /> specificato e restituisce un intero che indica se questa istanza è più breve, uguale o più lunga dell'oggetto <see cref="T:System.TimeSpan" />.</summary>
        <returns>Numero con segno che indica i valori relativi di questa istanza e di <paramref name="value" />.  
  
 <list type="table"><listheader><term> Valore 
 </term><description> Descrizione 
 </description></listheader><item><term> Intero negativo 
 </term><description> L'istanza è più breve di <paramref name="value" />.  
  
 </description></item><item><term> Zero 
 </term><description> L'istanza è uguale a <paramref name="value" />.  
  
 </description></item><item><term> Intero positivo 
 </term><description> L'istanza è più lunga di <paramref name="value" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo implementa il <xref:System.IComparable%601?displayProperty=nameWithType> interfaccia ed esegue leggermente migliori rispetto il <xref:System.TimeSpan.CompareTo%2A?displayProperty=nameWithType> metodo perché non è necessario convertire il `value` parametro a un oggetto.  
  
   
  
## Examples  
 L'esempio seguente illustra le versioni generiche e del <xref:System.TimeSpan.CompareTo%2A> metodo per diversi tipi di riferimento e valore.  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Days">
      <MemberSignature Language="C#" Value="public int Days { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Days" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Days" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Days As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Days { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Days : int" Usage="System.TimeSpan.Days" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo ai giorni dell'intervallo di tempo rappresentato dalla struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
        <value>Componente dell'istanza relativo al giorno. Il valore restituito può essere positivo o negativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.TimeSpan> valore può essere rappresentato come [*-*]*1!d*.* hh*:*mm*:*ss*.* FF*, in cui il segno meno (-) facoltativo indica un intervallo di tempo negativo, il *1!d* componente giorni, viene *hh* nel formato a 24 ore, le ore *mm* minuti, viene *ss* secondi, e *ff* le frazioni di secondo. Il valore della <xref:System.TimeSpan.Days%2A> proprietà è il componente giorno *1!d*.  
  
 Il <xref:System.TimeSpan.Days%2A> proprietà rappresenta completamente giorni, mentre il <xref:System.TimeSpan.TotalDays%2A> proprietà rappresenta i giorni interi e frazionari.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti e consente di visualizzare il <xref:System.TimeSpan.Days%2A> proprietà di ciascuno.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalDays" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public TimeSpan Divide (double divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Divide(float64 divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Divide(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide (divisor As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Divide(double divisor);" />
      <MemberSignature Language="F#" Value="member this.Divide : double -&gt; TimeSpan" Usage="timeSpan.Divide divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="divisor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public double Divide (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Divide(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Divide(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide (ts As TimeSpan) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Divide(TimeSpan ts);" />
      <MemberSignature Language="F#" Value="member this.Divide : TimeSpan -&gt; double" Usage="timeSpan.Divide ts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Duration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Function Duration () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Duration();" />
      <MemberSignature Language="F#" Value="member this.Duration : unit -&gt; TimeSpan" Usage="timeSpan.Duration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.TimeSpan" /> il cui valore è il valore assoluto dell'oggetto <see cref="T:System.TimeSpan" /> corrente.</summary>
        <returns>Nuovo oggetto il cui valore è il valore assoluto dell'oggetto <see cref="T:System.TimeSpan" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente applica il <xref:System.TimeSpan.Duration%2A> metodo a diversi <xref:System.TimeSpan> oggetti.  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">Il valore di questa istanza è <see cref="F:System.TimeSpan.MinValue" />.</exception>
        <altmember cref="P:System.TimeSpan.Ticks" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un valore che indica se due istanze di <see cref="T:System.TimeSpan" /> sono uguali.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="timeSpan.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da confrontare con l'istanza.</param>
        <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
        <returns>
          <see langword="true" /> se <paramref name="value" /> è un oggetto <see cref="T:System.TimeSpan" /> che rappresenta lo stesso intervallo di tempo della struttura <see cref="T:System.TimeSpan" /> corrente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente vengono confrontate alcune <xref:System.TimeSpan> e ad altri oggetti di un riferimento <xref:System.TimeSpan> usando il <xref:System.TimeSpan.Equals%2A> (metodo).  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.TimeSpan.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeSpan obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.TimeSpan obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeSpan obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeSpan -&gt; bool" Usage="timeSpan.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare con l'istanza.</param>
        <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
        <returns>
          <see langword="true" /> se <paramref name="obj" /> rappresenta lo stesso intervallo di tempo dell'istanza; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo implementa il <xref:System.IEquatable%601?displayProperty=nameWithType> interfaccia le prestazioni leggermente migliori rispetto <xref:System.TimeSpan.Equals%2A> perché non è necessario convertire il `obj` parametro a un oggetto.  
  
   
  
## Examples  
 L'esempio seguente illustra le versioni generiche e del <xref:System.TimeSpan.CompareTo%2A> metodo per diversi tipi di riferimento e valore.  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
        <altmember cref="Overload:System.TimeSpan.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member Equals : TimeSpan * TimeSpan -&gt; bool" Usage="System.TimeSpan.Equals (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">Primo intervallo di tempo da confrontare.</param>
        <param name="t2">Secondo intervallo di tempo da confrontare.</param>
        <summary>Restituisce un valore che indica se due istanze specificate di <see cref="T:System.TimeSpan" /> sono uguali.</summary>
        <returns>
          <see langword="true" /> se i valori di <paramref name="t1" /> e <paramref name="t2" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente vengono confrontate alcune <xref:System.TimeSpan> oggetti da un riferimento <xref:System.TimeSpan> usando il metodo statico dell'oggetto <xref:System.TimeSpan.Equals%2A> (metodo).  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/comp_equal.cpp#2)]
 [!code-csharp[System.TimeSpan.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/comp_equal.cs#2)]
 [!code-vb[System.TimeSpan.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/comp_equal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FromDays">
      <MemberSignature Language="C#" Value="public static TimeSpan FromDays (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromDays(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDays (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromDays(double value);" />
      <MemberSignature Language="F#" Value="static member FromDays : double -&gt; TimeSpan" Usage="System.TimeSpan.FromDays value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Numero di giorni, approssimato al millisecondo più vicino.</param>
        <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un numero di giorni specificato, in cui la specifica è approssimata al millisecondo più vicino.</summary>
        <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `value` parametro viene convertito in millisecondi, che viene convertito in tick, e tale numero di segni di graduazione viene utilizzato per inizializzare la nuova <xref:System.TimeSpan>. Pertanto, `value` verrà considerata solo precisione al millisecondo più vicino. Si noti che, a causa della perdita di precisione del <xref:System.Double> tipo di dati, questa conversione può causare un' <xref:System.OverflowException> per i valori che sono prossimi a ma comunque nell'intervallo di entrambi <xref:System.TimeSpan.MinValue> o <xref:System.TimeSpan.MaxValue>. Ad esempio, ciò causa un <xref:System.OverflowException> durante il seguente tentativo di creare un'istanza di un <xref:System.TimeSpan> oggetto.  
  
 [!code-csharp[System.TimeSpan.FromMinutes#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#2)]
 [!code-vb[System.TimeSpan.FromMinutes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#2)]  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti mediante il <xref:System.TimeSpan.FromDays%2A> (metodo).  
  
 [!code-cpp[System.TimeSpan.From#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromdays.cpp#6)]
 [!code-csharp[System.TimeSpan.From#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromdays.cs#6)]
 [!code-vb[System.TimeSpan.From#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromdays.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="value" /> è minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
 <paramref name="value" /> è <see cref="F:System.Double.PositiveInfinity" />.  
  
oppure 
 <paramref name="value" /> è <see cref="F:System.Double.NegativeInfinity" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />.</exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromHours">
      <MemberSignature Language="C#" Value="public static TimeSpan FromHours (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromHours(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHours (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromHours(double value);" />
      <MemberSignature Language="F#" Value="static member FromHours : double -&gt; TimeSpan" Usage="System.TimeSpan.FromHours value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Numero di ore, approssimato al millisecondo più vicino.</param>
        <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un numero di ore specificato, in cui la specifica è approssimata al millisecondo più vicino.</summary>
        <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `value` parametro viene convertito in millisecondi, che viene convertito in tick, e tale numero di segni di graduazione viene utilizzato per inizializzare la nuova <xref:System.TimeSpan>. Pertanto, `value` verrà considerata solo precisione al millisecondo più vicino. Si noti che, a causa della perdita di precisione del <xref:System.Double> tipo di dati, questa conversione può generare un' <xref:System.OverflowException> per i valori che sono prossimi a ma comunque nell'intervallo di entrambi <xref:System.TimeSpan.MinValue> o <xref:System.TimeSpan.MaxValue>. Ad esempio, ciò causa un <xref:System.OverflowException> durante il seguente tentativo di creare un'istanza di un <xref:System.TimeSpan> oggetto.  
  
 [!code-csharp[System.TimeSpan.FromMinutes#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#3)]
 [!code-vb[System.TimeSpan.FromMinutes#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#3)]  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti mediante il <xref:System.TimeSpan.FromHours%2A> (metodo).  
  
 [!code-cpp[System.TimeSpan.From#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromhours.cpp#5)]
 [!code-csharp[System.TimeSpan.From#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromhours.cs#5)]
 [!code-vb[System.TimeSpan.From#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromhours.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="value" /> è minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
 <paramref name="value" /> è <see cref="F:System.Double.PositiveInfinity" />.  
  
oppure 
 <paramref name="value" /> è <see cref="F:System.Double.NegativeInfinity" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />.</exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromMilliseconds">
      <MemberSignature Language="C#" Value="public static TimeSpan FromMilliseconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromMilliseconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMilliseconds (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromMilliseconds(double value);" />
      <MemberSignature Language="F#" Value="static member FromMilliseconds : double -&gt; TimeSpan" Usage="System.TimeSpan.FromMilliseconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Numero di millisecondi.</param>
        <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un numero di millisecondi specificato.</summary>
        <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `value` parametro viene convertito in tick, e tale numero di segni di graduazione viene utilizzato per inizializzare la nuova <xref:System.TimeSpan>. Pertanto, `value` verrà considerata solo precisione al millisecondo più vicino. Si noti che, a causa della perdita di precisione del <xref:System.Double> tipo di dati, questa conversione può generare un' <xref:System.OverflowException> per i valori che sono prossimi a ma comunque nell'intervallo di entrambi <xref:System.TimeSpan.MinValue> o <xref:System.TimeSpan.MaxValue>. Ad esempio, ciò causa un <xref:System.OverflowException> durante il seguente tentativo di creare un'istanza di un <xref:System.TimeSpan> oggetto.  
  
 [!code-csharp[System.TimeSpan.FromMinutes#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#4)]
 [!code-vb[System.TimeSpan.FromMinutes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#4)]  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> gli oggetti utilizzando il <xref:System.TimeSpan.FromMilliseconds%2A> (metodo).  
  
 [!code-cpp[System.TimeSpan.From#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/frommillisec.cpp#2)]
 [!code-csharp[System.TimeSpan.From#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/frommillisec.cs#2)]
 [!code-vb[System.TimeSpan.From#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/frommillisec.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="value" /> è minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
 <paramref name="value" /> è <see cref="F:System.Double.PositiveInfinity" />.  
  
oppure 
 <paramref name="value" /> è <see cref="F:System.Double.NegativeInfinity" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />.</exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromMinutes">
      <MemberSignature Language="C#" Value="public static TimeSpan FromMinutes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromMinutes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMinutes (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromMinutes(double value);" />
      <MemberSignature Language="F#" Value="static member FromMinutes : double -&gt; TimeSpan" Usage="System.TimeSpan.FromMinutes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Numero di minuti, approssimato al millisecondo più vicino.</param>
        <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un numero di minuti specificato, in cui la specifica è approssimata al millisecondo più vicino.</summary>
        <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `value` parametro viene convertito in millisecondi, che viene convertito in tick, e tale numero di segni di graduazione viene utilizzato per inizializzare la nuova <xref:System.TimeSpan>. Pertanto, `value` verrà considerata solo precisione al millisecondo più vicino. Si noti che, a causa della perdita di precisione del <xref:System.Double> tipo di dati, questa conversione può generare un' <xref:System.OverflowException> per i valori che sono prossimi a ma comunque nell'intervallo di entrambi <xref:System.TimeSpan.MinValue> o <xref:System.TimeSpan.MaxValue>. Ad esempio, ciò causa un <xref:System.OverflowException> durante il seguente tentativo di creare un'istanza di un <xref:System.TimeSpan> oggetto.  
  
 [!code-csharp[System.TimeSpan.FromMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#1)]
 [!code-vb[System.TimeSpan.FromMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#1)]  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti mediante il <xref:System.TimeSpan.FromMinutes%2A> (metodo).  
  
 [!code-cpp[System.TimeSpan.From#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromminutes.cpp#4)]
 [!code-csharp[System.TimeSpan.From#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromminutes.cs#4)]
 [!code-vb[System.TimeSpan.From#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromminutes.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="value" /> è minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
 <paramref name="value" /> è <see cref="F:System.Double.PositiveInfinity" />.  
  
oppure 
 <paramref name="value" /> è <see cref="F:System.Double.NegativeInfinity" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />.</exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromSeconds">
      <MemberSignature Language="C#" Value="public static TimeSpan FromSeconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromSeconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSeconds (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromSeconds(double value);" />
      <MemberSignature Language="F#" Value="static member FromSeconds : double -&gt; TimeSpan" Usage="System.TimeSpan.FromSeconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Numero di secondi, approssimato al millisecondo più vicino.</param>
        <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un numero di secondi specificato, in cui la specifica è approssimata al millisecondo più vicino.</summary>
        <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `value` parametro viene convertito in millisecondi, che viene convertito in tick, e tale numero di segni di graduazione viene utilizzato per inizializzare la nuova <xref:System.TimeSpan>. Pertanto, `value` verrà considerata solo precisione al millisecondo più vicino. Si noti che, a causa della perdita di precisione del <xref:System.Double> tipo di dati, ciò può generare un' <xref:System.OverflowException> per i valori che si trovano vicino ma comunque nell'intervallo di entrambi <xref:System.TimeSpan.MinValue> o <xref:System.TimeSpan.MaxValue>, questa è la causa di un <xref:System.OverflowException>, ad esempio, nel seguente tentativo di creare un'istanza di un <xref:System.TimeSpan> oggetto.  
  
 [!code-csharp[System.TimeSpan.FromMinutes#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#5)]
 [!code-vb[System.TimeSpan.FromMinutes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#5)]  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti mediante il <xref:System.TimeSpan.FromSeconds%2A> (metodo).  
  
 [!code-cpp[System.TimeSpan.From#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromseconds.cpp#3)]
 [!code-csharp[System.TimeSpan.From#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromseconds.cs#3)]
 [!code-vb[System.TimeSpan.From#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromseconds.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="value" /> è minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
 <paramref name="value" /> è <see cref="F:System.Double.PositiveInfinity" />.  
  
oppure 
 <paramref name="value" /> è <see cref="F:System.Double.NegativeInfinity" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />.</exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromTicks">
      <MemberSignature Language="C#" Value="public static TimeSpan FromTicks (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromTicks(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTicks (value As Long) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromTicks(long value);" />
      <MemberSignature Language="F#" Value="static member FromTicks : int64 -&gt; TimeSpan" Usage="System.TimeSpan.FromTicks value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Numero di tick che rappresentano un periodo di tempo.</param>
        <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> che rappresenta un'ora specificata, in cui la specifica è espressa in unità di tick.</summary>
        <returns>Oggetto che rappresenta l'oggetto <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di un metodo pratico con lo stesso comportamento come il <xref:System.TimeSpan.%23ctor%28System.Int64%29?displayProperty=nameWithType> costruttore. Un singolo tick rappresenta 100 nanosecondi oppure un decimilionesimo di secondo. Sono presenti 10.000 Tick di un millisecondo.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti mediante il <xref:System.TimeSpan.FromTicks%2A> (metodo).  
  
 [!code-cpp[System.TimeSpan.From#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromticks.cpp#1)]
 [!code-csharp[System.TimeSpan.From#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromticks.cs#1)]
 [!code-vb[System.TimeSpan.From#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromticks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="timeSpan.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un codice hash per questa istanza.</summary>
        <returns>Codice hash di un intero con segno a 32 bit.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Due <xref:System.TimeSpan> gli oggetti possono avere lo stesso codice hash, anche se rappresentano valori temporali diversi.  
  
   
  
## Examples  
 L'esempio seguente genera i codici hash delle diverse <xref:System.TimeSpan> degli oggetti mediante il <xref:System.TimeSpan.GetHashCode%2A> (metodo).  
  
 [!code-cpp[System.TimeSpan.GetHashCode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/CPP/hashcode.cpp#1)]
 [!code-csharp[System.TimeSpan.GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[System.TimeSpan.GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hours">
      <MemberSignature Language="C#" Value="public int Hours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hours" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Hours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hours As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hours { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hours : int" Usage="System.TimeSpan.Hours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo alle ore dell'intervallo di tempo rappresentato dalla struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
        <value>Componente relativo alle ore della struttura <see cref="T:System.TimeSpan" /> corrente. Il valore restituito è compreso tra -23 e 23.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.TimeSpan> valore può essere rappresentato come [*-*]*1!d*.* hh*:*mm*:*ss*.* FF*, in cui il segno meno (-) facoltativo indica un intervallo di tempo negativo, il *1!d* componente giorni, viene *hh* nel formato a 24 ore, le ore *mm* minuti, viene *ss* secondi, e *ff* le frazioni di secondo. Il valore della <xref:System.TimeSpan.Hours%2A> proprietà è il componente ore, *hh*.  
  
 Il <xref:System.TimeSpan.Hours%2A> proprietà rappresenta completamente ore, mentre il <xref:System.TimeSpan.TotalHours%2A> proprietà rappresenta ore intere e frazionarie.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti e consente di visualizzare il <xref:System.TimeSpan.Hours%2A> proprietà di ciascuno.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : TimeSpan" Usage="System.TimeSpan.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il valore massimo di <see cref="T:System.TimeSpan" />. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questo campo è equivalente a <xref:System.Int64.MaxValue?displayProperty=nameWithType> segni di graduazione. La rappresentazione di stringa di questo valore è positivo 10675199.02:48:05.4775807 o leggermente superiore a 10.675.199 giorni.  
  
   
  
## Examples  
 Nell'esempio seguente fa riferimento e visualizza il valore della <xref:System.TimeSpan.MaxValue> campo.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="Milliseconds">
      <MemberSignature Language="C#" Value="public int Milliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Milliseconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Milliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Milliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Milliseconds { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Milliseconds : int" Usage="System.TimeSpan.Milliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo ai millisecondi dell'intervallo di tempo rappresentato dalla struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
        <value>Componente relativo ai millisecondi della struttura <see cref="T:System.TimeSpan" /> corrente. Il valore restituito è compreso tra -999 e 999.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.TimeSpan> valore può essere rappresentato come [*-*]*1!d*.* hh*:*mm*:*ss*.* FF*, in cui il segno meno (-) facoltativo indica un intervallo di tempo negativo, il *1!d* componente giorni, viene *hh* nel formato a 24 ore, le ore *mm* minuti, viene *ss* secondi, e *ff* le frazioni di secondo. Il valore della <xref:System.TimeSpan.Milliseconds%2A> proprietà è il secondo componente frazionario *ff*.  
  
 Il <xref:System.TimeSpan.Milliseconds%2A> proprietà rappresenta millisecondi interi, mentre il <xref:System.TimeSpan.TotalMilliseconds%2A> proprietà rappresenta millisecondi interi e frazionari.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti e consente di visualizzare il <xref:System.TimeSpan.Milliseconds%2A> proprietà di ciascuno.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="Minutes">
      <MemberSignature Language="C#" Value="public int Minutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minutes" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Minutes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minutes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minutes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minutes : int" Usage="System.TimeSpan.Minutes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo ai minuti dell'intervallo di tempo rappresentato dalla struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
        <value>Componente relativo ai minuti della struttura <see cref="T:System.TimeSpan" /> corrente. Il valore restituito è compreso tra -59 e 59.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.TimeSpan> valore può essere rappresentato come [*-*]*1!d*.* hh*:*mm*:*ss*.* FF*, in cui il segno meno (-) facoltativo indica un intervallo di tempo negativo, il *1!d* componente giorni, viene *hh* nel formato a 24 ore, le ore *mm* minuti, viene *ss* secondi, e *ff* le frazioni di secondo. Il valore della <xref:System.TimeSpan.Minutes%2A> proprietà è il componente minuto *mm*.  
  
 Il <xref:System.TimeSpan.Minutes%2A> proprietà rappresenta minuti interi, mentre il <xref:System.TimeSpan.TotalMinutes%2A> proprietà rappresenta minuti interi e frazionari.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti e consente di visualizzare il <xref:System.TimeSpan.Minutes%2A> proprietà di ciascuno.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan MinValue" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : TimeSpan" Usage="System.TimeSpan.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il valore minimo di <see cref="T:System.TimeSpan" />. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questo campo è equivalente a <xref:System.Int64.MinValue?displayProperty=nameWithType> segni di graduazione. La rappresentazione di stringa di questo valore è negativo 10675199.02:48:05.4775808 o leggermente superiore a negativi 10.675.199 giorni.  
  
   
  
## Examples  
 Nell'esempio seguente fa riferimento e visualizza il valore della <xref:System.TimeSpan.MinValue> campo.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public TimeSpan Multiply (double factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Multiply(float64 factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Multiply(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Multiply (factor As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Multiply(double factor);" />
      <MemberSignature Language="F#" Value="member this.Multiply : double -&gt; TimeSpan" Usage="timeSpan.Multiply factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public TimeSpan Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Negate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Negate" />
      <MemberSignature Language="VB.NET" Value="Public Function Negate () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Negate();" />
      <MemberSignature Language="F#" Value="member this.Negate : unit -&gt; TimeSpan" Usage="timeSpan.Negate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.TimeSpan" /> il cui valore è il valore negato di questa istanza.</summary>
        <returns>Nuovo oggetto con lo stesso valore numerico di questa istanza, ma con segno opposto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente applica il <xref:System.TimeSpan.Negate%2A> metodo a diversi <xref:System.TimeSpan> oggetti.  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">Il valore negato di questa istanza non può essere rappresentato da un <see cref="T:System.TimeSpan" />, quindi il valore dell'istanza è <see cref="F:System.TimeSpan.MinValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static TimeSpan operator + (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Addition(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (t1 As TimeSpan, t2 As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator +(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : TimeSpan * TimeSpan -&gt; TimeSpan" Usage="t1 + t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">Primo intervallo di tempo da aggiungere.</param>
        <param name="t2">Secondo intervallo di tempo da aggiungere.</param>
        <summary>Aggiunge due istanze di <see cref="T:System.TimeSpan" /> specificate.</summary>
        <returns>Oggetto il cui valore è la somma dei valori <paramref name="t1" /> e <paramref name="t2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.op_Addition%2A> metodo consente di definire l'operatore di addizione per <xref:System.TimeSpan> valori. Consente codice simile al seguente:  
  
 [!code-csharp[System.TimeSpan.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.operators/cs/operators1.cs#1)]
 [!code-vb[System.TimeSpan.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.operators/vb/operators1.vb#1)]  
  
 I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.TimeSpan.Add%2A> metodo invece.  
  
 È il metodo equivalente per l'operatore <xref:System.TimeSpan.Add%28System.TimeSpan%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">Il valore risultante di <see cref="T:System.TimeSpan" /> è minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <altmember cref="M:System.TimeSpan.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static TimeSpan operator / (TimeSpan timeSpan, double divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Division(valuetype System.TimeSpan timeSpan, float64 divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Division(System.TimeSpan,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator /(TimeSpan timeSpan, double divisor);" />
      <MemberSignature Language="F#" Value="static member ( / ) : TimeSpan * double -&gt; TimeSpan" Usage="timeSpan / divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
        <Parameter Name="divisor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="timeSpan">To be added.</param>
        <param name="divisor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static double operator / (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Division(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Division(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (t1 As TimeSpan, t2 As TimeSpan) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double operator /(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( / ) : TimeSpan * TimeSpan -&gt; double" Usage="t1 / t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">To be added.</param>
        <param name="t2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 = t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">Primo intervallo di tempo da confrontare.</param>
        <param name="t2">Secondo intervallo di tempo da confrontare.</param>
        <summary>Indica se due istanze di <see cref="T:System.TimeSpan" /> sono uguali.</summary>
        <returns>
          <see langword="true" /> se i valori di <paramref name="t1" /> e <paramref name="t2" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[È il metodo equivalente per l'operatore <xref:System.TimeSpan.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 Nell'esempio seguente vengono confrontate alcune <xref:System.TimeSpan> oggetti da un riferimento <xref:System.TimeSpan> usando il <xref:System.TimeSpan.op_Equality%2A> operatore.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &gt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">Primo intervallo di tempo da confrontare.</param>
        <param name="t2">Secondo intervallo di tempo da confrontare.</param>
        <summary>Indica se un oggetto <see cref="T:System.TimeSpan" /> specificato è maggiore di un altro oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
        <returns>
          <see langword="true" /> se il valore di <paramref name="t1" /> è maggiore del valore di <paramref name="t2" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[È il metodo equivalente per l'operatore <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 Nell'esempio seguente vengono confrontate alcune <xref:System.TimeSpan> oggetti da un riferimento <xref:System.TimeSpan> usando il <xref:System.TimeSpan.op_GreaterThan%2A> operatore.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &gt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">Primo intervallo di tempo da confrontare.</param>
        <param name="t2">Secondo intervallo di tempo da confrontare.</param>
        <summary>Indica se un oggetto <see cref="T:System.TimeSpan" /> specificato è maggiore o uguale a un altro oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
        <returns>
          <see langword="true" /> se il valore di <paramref name="t1" /> è maggiore o uguale al valore di <paramref name="t2" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[È il metodo equivalente per l'operatore <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 Nell'esempio seguente vengono confrontate alcune <xref:System.TimeSpan> oggetti da un riferimento <xref:System.TimeSpan> usando il <xref:System.TimeSpan.op_GreaterThanOrEqual%2A> operatore.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : TimeSpan * TimeSpan -&gt; bool" Usage="System.TimeSpan.op_Inequality (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">Primo intervallo di tempo da confrontare.</param>
        <param name="t2">Secondo intervallo di tempo da confrontare.</param>
        <summary>Indica se due istanze di <see cref="T:System.TimeSpan" /> non sono uguali.</summary>
        <returns>
          <see langword="true" /> se i valori di <paramref name="t1" /> e <paramref name="t2" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[È il metodo equivalente per l'operatore <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 Nell'esempio seguente vengono confrontate alcune <xref:System.TimeSpan> oggetti da un riferimento <xref:System.TimeSpan> usando il <xref:System.TimeSpan.op_Inequality%2A> operatore.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &lt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">Primo intervallo di tempo da confrontare.</param>
        <param name="t2">Secondo intervallo di tempo da confrontare.</param>
        <summary>Indica se un oggetto <see cref="T:System.TimeSpan" /> specificato è minore di un altro oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
        <returns>
          <see langword="true" /> se il valore di <paramref name="t1" /> è minore del valore di <paramref name="t2" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[È il metodo equivalente per l'operatore <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 Nell'esempio seguente vengono confrontate alcune <xref:System.TimeSpan> oggetti da un riferimento <xref:System.TimeSpan> usando il <xref:System.TimeSpan.op_LessThan%2A> operatore.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &lt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">Primo intervallo di tempo da confrontare.</param>
        <param name="t2">Secondo intervallo di tempo da confrontare.</param>
        <summary>Indica se un oggetto <see cref="T:System.TimeSpan" /> specificato è minore o uguale a un altro oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
        <returns>
          <see langword="true" /> se il valore di <paramref name="t1" /> è minore o uguale al valore di <paramref name="t2" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[È il metodo equivalente per l'operatore <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 Nell'esempio seguente vengono confrontate alcune <xref:System.TimeSpan> oggetti da un riferimento <xref:System.TimeSpan> usando il <xref:System.TimeSpan.op_LessThanOrEqual%2A> operatore.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static TimeSpan operator * (double factor, TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Multiply(float64 factor, valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Multiply(System.Double,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator *(double factor, TimeSpan timeSpan);" />
      <MemberSignature Language="F#" Value="static member ( * ) : double * TimeSpan -&gt; TimeSpan" Usage="factor * timeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Double" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <param name="timeSpan">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static TimeSpan operator * (TimeSpan timeSpan, double factor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Multiply(valuetype System.TimeSpan timeSpan, float64 factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Multiply(System.TimeSpan,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator *(TimeSpan timeSpan, double factor);" />
      <MemberSignature Language="F#" Value="static member ( * ) : TimeSpan * double -&gt; TimeSpan" Usage="timeSpan * factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
        <Parameter Name="factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="timeSpan">To be added.</param>
        <param name="factor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (t1 As TimeSpan, t2 As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : TimeSpan * TimeSpan -&gt; TimeSpan" Usage="t1 - t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">Minuendo.</param>
        <param name="t2">Sottraendo.</param>
        <summary>Sottrae un oggetto <see cref="T:System.TimeSpan" /> specificato da un altro oggetto <see cref="T:System.TimeSpan" /> specificato.</summary>
        <returns>Oggetto il cui valore è il risultato del valore di <paramref name="t1" /> meno il valore di <paramref name="t2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[È il metodo equivalente per l'operatore <xref:System.TimeSpan.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 L'esempio seguente usa il <xref:System.TimeSpan> operatore di sottrazione per calcolare la lunghezza totale della giornata lavorativa settimanale. Usa inoltre il <xref:System.TimeSpan> operatore di addizione per calcolare il tempo totale delle interruzioni di giornaliero prima di utilizzarlo in un'operazione di sottrazione per calcolare il totale effettivo di ogni giorno lavorativo.  
  
 [!code-csharp[System.TimeSpan.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.operators/cs/Subtraction1.cs#2)]
 [!code-vb[System.TimeSpan.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.operators/vb/Subtraction1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">Il valore restituito è minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_UnaryNegation(valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (t As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : TimeSpan -&gt; TimeSpan" Usage="- t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t">Intervallo di tempo da negare.</param>
        <summary>Restituisce un oggetto <see cref="T:System.TimeSpan" /> il cui valore è il valore negato dell'istanza specificata.</summary>
        <returns>Oggetto con lo stesso valore numerico di questa istanza, ma con segno opposto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[È il metodo equivalente per l'operatore <xref:System.TimeSpan.Negate?displayProperty=nameWithType>  
  
## Examples  
 L'esempio seguente applica il <xref:System.TimeSpan.op_UnaryNegation%2A> operatore a diversi <xref:System.TimeSpan> oggetti.  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">Il valore negato di questa istanza non può essere rappresentato da un <see cref="T:System.TimeSpan" />, quindi il valore dell'istanza è <see cref="F:System.TimeSpan.MinValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static TimeSpan operator + (TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_UnaryPlus(valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (t As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator +(TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : TimeSpan -&gt; TimeSpan" Usage="+ t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t">Intervallo di tempo da restituire.</param>
        <summary>Restituisce l'istanza specificata di <see cref="T:System.TimeSpan" />.</summary>
        <returns>Intervallo di tempo specificato da <paramref name="t" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente applica il <xref:System.TimeSpan.op_UnaryPlus%2A> operatore a diversi <xref:System.TimeSpan> oggetti.  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" />.</summary>
        <altmember cref="Overload:System.TimeSpan.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; TimeSpan" Usage="System.TimeSpan.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" />.</summary>
        <returns>Intervallo di tempo che corrisponde a <paramref name="s" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `s` parametro contiene una specifica di intervallo di tempo nel formato:  
  
 [*ws*] [-] { *1!d* &#124; [*1!d*.] *hh*:*mm*[:*ss*[.* FF*]]} [*ws*]  
  
 Gli elementi tra parentesi quadre ([e]) sono facoltativi. Una selezione dall'elenco delle alternative racchiuso tra parentesi graffe ({e}) e separati da barre verticali (&#124;) è obbligatorio. La tabella seguente descrive i singoli elementi.  
  
|Elemento|Descrizione|  
|-------------|-----------------|  
|*ws*|Spazio vuoto facoltativo.|  
|-|Un segno meno (-) facoltativo, che indica un valore negativo <xref:System.TimeSpan>.|  
|*d*|Giorni, compreso tra 0 e 10675199.|  
|.|Un simbolo di distinzione delle impostazioni cultura che separa i giorni dalle ore. Formato della lingua inglese viene utilizzato un punto (".") caratteri.|  
|*hh*|Ore, compreso tra 0 e 23.|  
|:|Il simbolo di separatore di ora distinzione delle impostazioni cultura. Formato invariant Usa i due punti (":") caratteri.|  
|*mm*|Minuti, compreso tra 0 e 59.|  
|*ss*|Facoltativi secondi, compreso tra 0 e 59.|  
|*.*|Un simbolo di distinzione delle impostazioni cultura che separa i secondi dalle frazioni di secondo. Formato della lingua inglese viene utilizzato un punto (".") caratteri.|  
|*ff*|Frazioni di secondo facoltativi, costituita da uno a sette cifre decimali.|  

Se il `s` l'argomento non è un valore del giorno, deve includere un ore e un componente relativo ai minuti; gli altri componenti sono facoltativi. Se sono presenti, i valori di ogni componente di ora devono essere compreso in un intervallo specificato. Ad esempio, il valore della *hh*, il componente ore, deve essere compreso tra 0 e 23. A causa di questo operazione, il passaggio "23: 00:00" per il <xref:System.TimeSpan.Parse%2A> metodo restituisce un intervallo di tempo di 23 ore. D'altra parte, il passaggio di "24: 00:00" restituisce un intervallo di tempo di 24 giorni. Poiché "24" è compreso nell'intervallo del componente ore, viene interpretato come il componente giorni.

 I componenti di `s` collettivamente deve specificare un intervallo di tempo che è maggiore o uguale a <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> e minore o uguale a <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.  
  
 Il <xref:System.TimeSpan.Parse%28System.String%29> metodo tenta di analizzare `s` usando ognuno dei formati di specifiche delle impostazioni cultura per le impostazioni cultura correnti.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.TimeSpan.Parse%2A> metodo per convertire ogni elemento nella matrice di stringhe per un <xref:System.TimeSpan> valore. Vengono modificate le impostazioni cultura correnti del sistema in croato - Croazia ("hr-HR") e inglese degli Stati Uniti ("en-US") per illustrare come le impostazioni cultura correnti del sistema influisce sull'operazione di analisi.  
  
 [!code-csharp[System.TimeSpan.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parse1.cs#1)]
 [!code-vb[System.TimeSpan.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="s" /> ha un formato non valido.</exception>
        <exception cref="T:System.OverflowException">L'oggetto <paramref name="s" /> rappresenta un numero minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
Il valore di almeno uno o più componenti relativi a giorni, ore, minuti o secondi non è compreso nell'intervallo valido.</exception>
        <block subset="none" type="usage">
          <para>Quando un componente dell'intervallo di tempo nella stringa da analizzare contiene più di sette cifre, operazioni di analisi nel [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e versioni precedenti potrebbero comportarsi in modo diverso da operazioni di analisi nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. In alcuni casi, l'analisi di operazioni che abbia esito positivo nel [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e versioni precedenti potrebbero avere esito negativo e generare un' <see cref="T:System.OverflowException" /> nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. In altri casi, l'analisi di operazioni che generano un <see cref="T:System.FormatException" /> nella [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e versioni precedenti potrebbero avere esito negativo e generare un <see cref="T:System.OverflowException" /> nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. L'esempio seguente illustra entrambi gli scenari.  
  
[! codice-csharp[System.TimeSpan.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parsefailure1.cs#3)] [! codice vb[System.TimeSpan.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parsefailure1.vb#3)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char), Optional formatProvider As IFormatProvider = null) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.Parse (input, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (string input, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(string input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan Parse(System::String ^ input, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.Parse (input, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <summary>Converte una rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando le informazioni sul formato specifiche delle impostazioni cultura indicate.</summary>
        <returns>Intervallo di tempo che corrisponde a <paramref name="input" />, come specificato da <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `input` parametro contiene una specifica di intervallo di tempo nel formato:  
  
 [*ws*] [-] { *1!d* &#124; [*1!d*.] *hh*:*mm*[:*ss*[.* FF*]]} [*ws*]  
  
 Elementi nelle parentesi quadre ([e]) sono facoltativo. una selezione dall'elenco delle alternative racchiuso tra parentesi graffe ({e}) e separati da barre verticali (&#124;) è obbligatorio. La tabella seguente descrive i singoli elementi.  
  
|Elemento|Descrizione|  
|-------------|-----------------|  
|*ws*|Spazio vuoto facoltativo.|  
|-|Un segno meno (-) facoltativo, che indica un valore negativo <xref:System.TimeSpan>.|  
|*d*|Giorni, compreso tra 0 e 10675199.|  
|.|Un simbolo di distinzione delle impostazioni cultura che separa i giorni dalle ore. Il valore predefinito è un punto (".") caratteri.|  
|*hh*|Ore, compreso tra 0 e 23.|  
|:|Il simbolo di separatore di ora distinzione delle impostazioni cultura.|  
|*mm*|Minuti, compreso tra 0 e 59.|  
|*ss*|Facoltativi secondi, compreso tra 0 e 59.|  
|.|Un simbolo di distinzione delle impostazioni cultura che separa i secondi dalle frazioni di secondo. Il valore predefinito è un punto (".") caratteri.|  
|*ff*|Frazioni di secondo facoltativi, costituita da uno a sette cifre decimali.|  

Se il `input` l'argomento non è un valore del giorno, deve includere un ore e un componente relativo ai minuti; gli altri componenti sono facoltativi. Se sono presenti, i valori di ogni componente di ora devono essere compreso in un intervallo specificato. Ad esempio, il valore della *hh*, il componente ore, deve essere compreso tra 0 e 23. A causa di questo operazione, il passaggio "23: 00:00" per il <xref:System.TimeSpan.Parse%2A> metodo restituisce un intervallo di tempo di 23 ore. D'altra parte, il passaggio di "24: 00:00" restituisce un intervallo di tempo di 24 giorni. Poiché "24" è compreso nell'intervallo del componente ore, viene interpretato come il componente giorni.

 I componenti di `input` collettivamente deve specificare un intervallo di tempo che è maggiore o uguale a <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> e minore o uguale a <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.  
  
 Il <xref:System.TimeSpan.Parse%28System.String%29> metodo tenta di analizzare `input` usando ognuno dei formati di specifiche delle impostazioni cultura per le impostazioni cultura specificate da `formatProvider`.  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti.  
  
   
  
## Examples  
 L'esempio seguente definisce una matrice di <xref:System.Globalization.CultureInfo> oggetti e viene utilizzato ogni oggetto nelle chiamate al <xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> metodo per analizzare gli elementi in una matrice di stringhe. Nell'esempio viene illustrato come le convenzioni delle impostazioni cultura specifiche influenzano l'operazione di formattazione.  
  
 [!code-csharp[System.TimeSpan.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parse2.cs#2)]
 [!code-vb[System.TimeSpan.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> ha un formato non valido.</exception>
        <exception cref="T:System.OverflowException">L'oggetto <paramref name="input" /> rappresenta un numero minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
Il valore di uno o più componenti relativi a giorni, ore, minuti o secondi in <paramref name="input" /> non rientra nell'intervallo di validità.</exception>
        <block subset="none" type="usage">
          <para>Quando un componente dell'intervallo di tempo nella stringa da analizzare contiene più di sette cifre, operazioni di analisi nel [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e versioni precedenti potrebbero comportarsi in modo diverso da operazioni di analisi nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. In alcuni casi, l'analisi di operazioni che abbia esito positivo nel [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e versioni precedenti potrebbero avere esito negativo e generare un' <see cref="T:System.OverflowException" /> nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. In altri casi, l'analisi di operazioni che generano un <see cref="T:System.FormatException" /> nella [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e versioni precedenti potrebbero avere esito negativo e generare un <see cref="T:System.OverflowException" /> nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. L'esempio seguente illustra entrambi gli scenari.  
  
[! codice-csharp[System.TimeSpan.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parsefailure1.cs#3)] [! codice vb[System.TimeSpan.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parsefailure1.vb#3)]</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" />. Il formato della rappresentazione di stringa deve corrispondere esattamente a un formato specificato.</summary>
        <altmember cref="Overload:System.TimeSpan.TryParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="format">Stringa di formato standard o personalizzato che definisce il formato richiesto di <c>input</c>.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando le informazioni sul formato specifiche delle impostazioni cultura indicate. Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
        <returns>Intervallo di tempo che corrisponde a <paramref name="input" />, come specificato da <paramref name="format" /> e <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> metodo analizza la rappresentazione di stringa di un intervallo di tempo, che deve essere nel formato definito per il `format` parametro, ad eccezione del fatto che gli iniziali e gli spazi vuoti finali vengono ignorati. In quanto `input` deve essere conforme al formato di `format` esattamente, è necessario utilizzare sempre la gestione delle eccezioni durante la conversione di un input di stringa dall'utente in un intervallo di tempo. Se si preferisce non usare la gestione delle eccezioni, è possibile chiamare il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> metodo invece.  
  
 Il `format` parametro è una stringa che contiene un identificatore di formato singolo standard oppure uno o più identificatori di formato personalizzato che definiscono il formato richiesto di `input`. Per altre informazioni sulle stringhe di formato valido, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md).  
  
> [!IMPORTANT]
>  Il <xref:System.TimeSpan.ParseExact%2A> metodo Usa le convenzioni delle impostazioni cultura specificate per il `formatProvider` parametro solo se `format` è uno standard <xref:System.TimeSpan> il cui valore è "g" o "G" stringa di formato. Stringhe di formato standard "T", "c" e "t" usano le convenzioni di formattazione della cultura invariabile. Stringhe di formato personalizzate definiscono il formato della stringa di input preciso e utilizzano i caratteri letterali per separare i componenti di un intervallo di tempo.  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita se `format` è una stringa di formato standard. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> metodo analizzare varie rappresentazioni di stringa di intervalli di tempo utilizzando diverse stringhe di formato e le impostazioni cultura.  
  
 [!code-csharp[System.TimeSpan.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample1.cs#1)]
 [!code-vb[System.TimeSpan.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> ha un formato non valido.</exception>
        <exception cref="T:System.OverflowException">L'oggetto <paramref name="input" /> rappresenta un numero minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
Il valore di uno o più componenti relativi a giorni, ore, minuti o secondi in <paramref name="input" /> non rientra nell'intervallo di validità.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md">Stringhe di formato TimeSpan standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md">Stringhe di formato TimeSpan personalizzate</related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, formats, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="formats">Matrice di stringhe di formato standard o personalizzate che definisce il formato richiesto di <c>input</c>.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando la matrice di stringhe di formato e le informazioni sul formato specifiche delle impostazioni cultura indicate. Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
        <returns>Intervallo di tempo che corrisponde a <paramref name="input" />, come specificato da <paramref name="formats" /> e <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> metodo analizza la rappresentazione di stringa di un intervallo di tempo, che deve essere in uno dei formati definiti dal `formats` parametro, ad eccezione del fatto che gli iniziali e gli spazi vuoti finali vengono ignorati. In quanto `input` deve essere esattamente conforme a uno dei formati specificati `formats`, è necessario utilizzare sempre la gestione delle eccezioni durante la conversione di un input di stringa dall'utente in un intervallo di tempo. Se si preferisce non usare la gestione delle eccezioni, è possibile chiamare il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> metodo invece.  
  
 Il `formats` parametro è una matrice di stringhe cui elementi costituiti da un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il formato richiesto di `input`. Per altre informazioni sulle stringhe di formato valido, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md). `input` deve corrispondere esattamente a un membro di `formats` per l'operazione di analisi abbia esito positivo. L'operazione di analisi tenta di far corrispondere `input` a ogni elemento in `formats` partire il primo elemento nella matrice.  
  
> [!IMPORTANT]
>  Il <xref:System.TimeSpan.ParseExact%2A> metodo Usa le convenzioni delle impostazioni cultura specificate per il `formatProvider` parametro solo se la stringa di formato usata per analizzare `input` è uno standard <xref:System.TimeSpan> il cui valore è "g" o "G" stringa di formato. Stringhe di formato standard "T", "c" e "t" usano le convenzioni di formattazione della cultura invariabile. Stringhe di formato personalizzate definiscono il formato della stringa di input preciso e utilizzano i caratteri letterali per separare i componenti di un intervallo di tempo.  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita se la stringa di formato usata per analizzare `input` è una stringa di formato standard. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29> metodo per convertire ogni elemento della matrice di stringhe per un <xref:System.TimeSpan> valore. L'esempio interpreta le stringhe usando convenzioni di formattazione per il francese - Francia ("fr-FR"). Le stringhe possono rappresentare un intervallo di tempo in formato breve generale o il formato esteso generale.  
  
 Inoltre, nell'esempio viene modificato il modo in cui i metodi di analisi di intervallo di tempo interpretano una sola cifra. In genere, una singola cifra viene interpretata come il numero di giorni in un intervallo di tempo. Al contrario, il `%h` stringa di formato personalizzato usato per interpretare una sola cifra come il numero di ore. Per essere efficace, questa modifica si noti che il `%h` stringa di formato personalizzata deve precedere le altre stringhe di formato nel `formats` matrice.  
  
 [!code-csharp[System.TimeSpan.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample3.cs#3)]
 [!code-vb[System.TimeSpan.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> ha un formato non valido.</exception>
        <exception cref="T:System.OverflowException">L'oggetto <paramref name="input" /> rappresenta un numero minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
Il valore di uno o più componenti relativi a giorni, ore, minuti o secondi in <paramref name="input" /> non rientra nell'intervallo di validità.</exception>
        <altmember cref="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)" />
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md">Stringhe di formato TimeSpan standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md">Stringhe di formato TimeSpan personalizzate</related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles = System.Globalization.TimeSpanStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, Optional styles As TimeSpanStyles = System.Globalization.TimeSpanStyles.None) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles = System.Globalization.TimeSpanStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, Optional styles As TimeSpanStyles = System.Globalization.TimeSpanStyles.None) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="format">Stringa di formato standard o personalizzato che definisce il formato richiesto di <c>input</c>.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che definisce gli elementi di stile che possono essere presenti in <c>input</c>.</param>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando gli stili e le informazioni sul formato specifiche delle impostazioni cultura indicate. Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
        <returns>Intervallo di tempo che corrisponde a <paramref name="input" />, come specificato da <paramref name="format" />, <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.ParseExact%2A> metodo analizza la rappresentazione di stringa di un intervallo di tempo, che deve essere nel formato definito per il `format` parametro, ad eccezione del fatto che gli iniziali e gli spazi vuoti finali vengono ignorati. In quanto `input` deve essere conforme al formato di `format` esattamente, è necessario utilizzare sempre la gestione delle eccezioni durante la conversione di un input di stringa dall'utente in un intervallo di tempo. Se si preferisce non usare la gestione delle eccezioni, è possibile chiamare il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> metodo invece.  
  
 Il `format` parametro è una stringa che contiene un identificatore di formato singolo standard oppure uno o più identificatori di formato personalizzato che definiscono il formato richiesto di `input`. Per altre informazioni sulle stringhe di formato valido, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md).  
  
> [!IMPORTANT]
>  Il <xref:System.TimeSpan.ParseExact%2A> metodo Usa le convenzioni delle impostazioni cultura specificate per il `formatProvider` parametro solo se `format` è uno standard <xref:System.TimeSpan> il cui valore è "g" o "G" stringa di formato. Stringhe di formato standard "T", "c" e "t" usano le convenzioni di formattazione della cultura invariabile. Stringhe di formato personalizzate definiscono il formato della stringa di input preciso e utilizzano i caratteri letterali per separare i componenti di un intervallo di tempo.  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita se `format` è una stringa di formato standard. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti.  
  
 Il `styles` parametro influisce sull'interpretazione di stringhe che vengono analizzate usando stringhe di formato personalizzato. Determina se `input` viene interpretato come un intervallo di tempo negativo solo se è presente un segno negativo (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), o se viene sempre interpretato come un intervallo di tempo negativo (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>). Se <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> non viene usato `format` deve includere un simbolo di segno negativo letterale (ad esempio "\\-") per analizzare correttamente un intervallo di tempo negativo.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> metodo analizzare varie rappresentazioni di stringa di intervalli di tempo utilizzando diverse stringhe di formato e le impostazioni cultura. Usa inoltre il <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> valore interpretare ogni stringa come un intervallo di tempo negativo. L'output dell'esempio illustra che il <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> stile influenza il valore restituito solo quando viene utilizzato con stringhe di formato personalizzato.  
  
 [!code-csharp[System.TimeSpan.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample2.cs#2)]
 [!code-vb[System.TimeSpan.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="styles" /> è un valore <see cref="T:System.Globalization.TimeSpanStyles" /> non valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> ha un formato non valido.</exception>
        <exception cref="T:System.OverflowException">L'oggetto <paramref name="input" /> rappresenta un numero minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
Il valore di uno o più componenti relativi a giorni, ore, minuti o secondi in <paramref name="input" /> non rientra nell'intervallo di validità.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md">Stringhe di formato TimeSpan standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md">Stringhe di formato TimeSpan personalizzate</related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="formats">Matrice di stringhe di formato standard o personalizzate che definisce il formato richiesto di <c>input</c>.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <param name="styles">Combinazione bit per bit di valori di enumerazione che definisce gli elementi di stile che possono essere presenti in input.</param>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando i formati, gli stili e le informazioni sul formato specifiche delle impostazioni cultura indicate. Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
        <returns>Intervallo di tempo che corrisponde a <paramref name="input" />, come specificato da <paramref name="formats" />, <paramref name="formatProvider" /> e <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> metodo analizza la rappresentazione di stringa di un intervallo di tempo, che deve essere in uno dei formati definiti dal `formats` parametro, ad eccezione del fatto che gli iniziali e gli spazi vuoti finali vengono ignorati. In quanto `input` deve essere esattamente conforme a uno dei formati specificati `formats`, è necessario utilizzare sempre la gestione delle eccezioni durante la conversione di un input di stringa dall'utente in un intervallo di tempo. Se si preferisce non usare la gestione delle eccezioni, è possibile chiamare il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> metodo invece.  
  
 Il `formats` parametro è una matrice di stringhe cui elementi costituiti da un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il formato richiesto di `input`. Per altre informazioni sulle stringhe di formato valido, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md). `input` deve corrispondere esattamente a un membro di `formats` per l'operazione di analisi abbia esito positivo. L'operazione di analisi tenta di far corrispondere `input` a ogni elemento in `formats` partire il primo elemento nella matrice.  
  
> [!IMPORTANT]
>  Il <xref:System.TimeSpan.ParseExact%2A> metodo Usa le convenzioni delle impostazioni cultura specificate per il `formatProvider` parametro solo se la stringa di formato usata per analizzare `input` è uno standard <xref:System.TimeSpan> il cui valore è "g" o "G" stringa di formato. Stringhe di formato standard "T", "c" e "t" usano le convenzioni di formattazione della cultura invariabile. Stringhe di formato personalizzate definiscono il formato della stringa di input preciso e utilizzano i caratteri letterali per separare i componenti di un intervallo di tempo.  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita se la stringa di formato usata per analizzare `input` è una stringa di formato standard. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti.  
  
 Il `styles` parametro influisce sull'interpretazione di stringhe che vengono analizzate usando stringhe di formato personalizzato. Determina se `input` viene interpretato come un intervallo di tempo negativo solo se è presente un segno negativo (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), o se viene sempre interpretato come un intervallo di tempo negativo (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>). Se <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> non viene usato `format` deve includere un simbolo di segno negativo letterale (ad esempio "\\-") per analizzare correttamente un intervallo di tempo negativo.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> metodo per convertire ogni elemento della matrice di stringhe per un <xref:System.TimeSpan> valore. Le stringhe possono rappresentare un intervallo di tempo in formato breve generale o il formato esteso generale.  
  
 Inoltre, nell'esempio viene modificato il modo in cui i metodi di analisi di intervallo di tempo interpretano una sola cifra. In genere, una singola cifra viene interpretata come il numero di giorni in un intervallo di tempo. Al contrario, il `%h` stringa di formato personalizzato usato per interpretare una sola cifra come il numero di ore. Per essere efficace, questa modifica si noti che il `%h` stringa di formato personalizzata deve precedere le altre stringhe di formato nel `formats` matrice. Si noti anche dall'output che la <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> flag specificati nella chiamata al metodo viene utilizzato solo quando l'analisi di una stringa con questo identificatore di formato.  
  
 [!code-csharp[System.TimeSpan.ParseExact#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample4.cs#4)]
 [!code-vb[System.TimeSpan.ParseExact#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="styles" /> è un valore <see cref="T:System.Globalization.TimeSpanStyles" /> non valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" /> ha un formato non valido.</exception>
        <exception cref="T:System.OverflowException">L'oggetto <paramref name="input" /> rappresenta un numero minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.  
  
oppure 
Il valore di uno o più componenti relativi a giorni, ore, minuti o secondi in <paramref name="input" /> non rientra nell'intervallo di validità.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md">Stringhe di formato TimeSpan standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md">Stringhe di formato TimeSpan personalizzate</related>
      </Docs>
    </Member>
    <Member MemberName="Seconds">
      <MemberSignature Language="C#" Value="public int Seconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Seconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Seconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Seconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Seconds { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Seconds : int" Usage="System.TimeSpan.Seconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente relativo ai secondi dell'intervallo di tempo rappresentato dalla struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
        <value>Componente relativo ai secondi della struttura <see cref="T:System.TimeSpan" /> corrente. Il valore restituito è compreso tra -59 e 59.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.TimeSpan> valore può essere rappresentato come [*-*]*1!d*.* hh*:*mm*:*ss*.* FF*, in cui il segno meno (-) facoltativo indica un intervallo di tempo negativo, il *1!d* componente giorni, viene *hh* nel formato a 24 ore, le ore *mm* minuti, viene *ss* secondi, e *ff* le frazioni di secondo. Il valore della <xref:System.TimeSpan.Seconds%2A> proprietà è il componente secondi *ss*.  
  
 Il <xref:System.TimeSpan.Seconds%2A> proprietà rappresenta tutti i secondi, mentre il <xref:System.TimeSpan.TotalSeconds%2A> proprietà rappresenta i secondi interi e frazionari.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti e consente di visualizzare il <xref:System.TimeSpan.Seconds%2A> proprietà di ciascuno.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (ts As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(TimeSpan ts);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; TimeSpan" Usage="timeSpan.Subtract ts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts">Intervallo di tempo da sottrarre.</param>
        <summary>Restituisce un nuovo oggetto <see cref="T:System.TimeSpan" /> il cui valore è la differenza tra l'oggetto <see cref="T:System.TimeSpan" /> specificato e questa istanza.</summary>
        <returns>Nuovo intervallo di tempo il cui valore è il risultato del valore di questa istanza meno il valore di <paramref name="ts" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito deve essere compreso tra <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> e <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>; in caso contrario, viene generata un'eccezione.  
  
 Il valore restituito è una nuova <xref:System.TimeSpan>; originale <xref:System.TimeSpan> non viene modificato.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.TimeSpan.Subtract%2A> per calcolare la differenza tra un singolo metodo <xref:System.TimeSpan> valore e ciascuno degli intervalli di tempo in una matrice. Si noti che, in quanto <xref:System.TimeSpan> stringhe di formato non includono i segni negativi nella stringa di risultato, l'esempio Usa la logica condizionale per includere un segno negativo con intervalli di tempo negativi.  
  
 [!code-csharp[System.TimeSpan.Subtract#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.subtract/cs/subtract1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">Il valore restituito è minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.TimeSpan.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di tick che rappresentano il valore della struttura <see cref="T:System.TimeSpan" /> corrente.</summary>
        <value>Numero di tick inclusi in questa istanza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La più piccola unità di tempo è il segno di graduazione, che è pari a 100 nanosecondi oppure un decimilionesimo di secondo. Sono presenti 10.000 Tick di un millisecondo. Il valore della <xref:System.TimeSpan.Ticks%2A> proprietà può essere negativo o positivo per rappresentare un intervallo di tempo positivo o negativo.  
  
   
  
## Examples  
 Nell'esempio seguente crea diversi <xref:System.TimeSpan> degli oggetti e consente di visualizzare il <xref:System.TimeSpan.Ticks%2A> proprietà di ciascuno.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerDay">
      <MemberSignature Language="C#" Value="public const long TicksPerDay = 864000000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerDay = (864000000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerDay" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerDay As Long  = 864000000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerDay = 864000000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerDay : int64" Usage="System.TimeSpan.TicksPerDay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>864000000000</MemberValue>
      <Docs>
        <summary>Rappresenta il numero di tick in 1 giorno. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa costante è miliardi 864; vale a dire 864,000,000,000.  
  
   
  
## Examples  
 Nell'esempio seguente fa riferimento e visualizza il valore della <xref:System.TimeSpan.TicksPerDay> campo.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerHour">
      <MemberSignature Language="C#" Value="public const long TicksPerHour = 36000000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerHour = (36000000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerHour" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerHour As Long  = 36000000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerHour = 36000000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerHour : int64" Usage="System.TimeSpan.TicksPerHour" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>36000000000</MemberValue>
      <Docs>
        <summary>Rappresenta il numero di tick in 1 ora. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa costante è 36 miliardi di; vale a dire 36,000,000,000.  
  
   
  
## Examples  
 Nell'esempio seguente fa riferimento e visualizza il valore della <xref:System.TimeSpan.TicksPerHour> campo.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerMillisecond">
      <MemberSignature Language="C#" Value="public const long TicksPerMillisecond = 10000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerMillisecond = (10000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerMillisecond" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerMillisecond As Long  = 10000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerMillisecond = 10000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerMillisecond : int64" Usage="System.TimeSpan.TicksPerMillisecond" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>10000</MemberValue>
      <Docs>
        <summary>Rappresenta il numero di tick in 1 millisecondo. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa costante è 10 mille; vale a dire, 10.000.  
  
   
  
## Examples  
 Nell'esempio seguente fa riferimento e visualizza il valore della <xref:System.TimeSpan.TicksPerMillisecond> campo.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerMinute">
      <MemberSignature Language="C#" Value="public const long TicksPerMinute = 600000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerMinute = (600000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerMinute" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerMinute As Long  = 600000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerMinute = 600000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerMinute : int64" Usage="System.TimeSpan.TicksPerMinute" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>600000000</MemberValue>
      <Docs>
        <summary>Rappresenta il numero di tick in 1 minuto. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa costante è di 600 milioni; vale a dire 600,000,000.  
  
   
  
## Examples  
 Nell'esempio seguente fa riferimento e visualizza il valore della <xref:System.TimeSpan.TicksPerMinute> campo.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerSecond">
      <MemberSignature Language="C#" Value="public const long TicksPerSecond = 10000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerSecond = (10000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerSecond" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerSecond As Long  = 10000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerSecond = 10000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerSecond : int64" Usage="System.TimeSpan.TicksPerSecond" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>10000000</MemberValue>
      <Docs>
        <summary>Rappresenta il numero di tick in 1 secondo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa costante è 10 milioni di; vale a dire, 10.000.000.  
  
   
  
## Examples  
 Nell'esempio seguente fa riferimento e visualizza il valore della <xref:System.TimeSpan.TicksPerSecond> campo.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte il valore dell'oggetto <see cref="T:System.TimeSpan" /> corrente nella rappresentazione di stringa equivalente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timeSpan.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converte il valore dell'oggetto <see cref="T:System.TimeSpan" /> corrente nella rappresentazione di stringa equivalente.</summary>
        <returns>Rappresentazione di stringa del valore <see cref="T:System.TimeSpan" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa restituita è formattata con l'identificatore di formato "c" e ha il formato seguente:  
  
 [-][*d*.]*hh*:*mm*:*ss*[.*fffffff*]  
  
 Gli elementi nelle parentesi quadre ([e]) non possono essere inclusi nella stringa restituita. I due punti e (: and.) sono caratteri letterali. Nella tabella seguente sono elencati gli elementi non letterale. Si noti che la stringa restituita dal <xref:System.TimeSpan.ToString> metodo non è dipendente dalla lingua.  
  
|Elemento|Descrizione|  
|----------|-----------------|  
|"-"|Un segno meno (-), che indica un intervallo di tempo negativo. Non è inclusa per un intervallo di tempo positivo.|  
|"*d*"|Il numero di giorni nell'intervallo di tempo. Questo elemento viene omesso se l'intervallo di tempo è minore di un giorno.|  
|"*hh*"|Il numero di ore nell'intervallo di tempo, compreso tra 0 e 23.|  
|"*mm*"|Il numero di minuti nell'intervallo di tempo, compreso tra 0 e 59.|  
|"*ss*"|Il numero di secondi nell'intervallo di tempo, compreso tra 0 e 59.|  
|"*fffffff*"|Frazioni di secondo nell'intervallo di tempo. Questo elemento viene omesso se l'intervallo di tempo non include secondi frazionari. Se presente, i secondi frazionari sono sempre espresse con sette cifre decimali.|  
  
> [!NOTE]
>  Per altre informazioni sul confronto tra la rappresentazione di stringa del <xref:System.TimeSpan> e i tipi di dati Oracle, vedere l'articolo della Knowledge Base [324577: System. TimeSpan Does Not Match Oracle 9i INTERVAL DAY TO SECOND Data Type](http://go.microsoft.com/fwlink/?LinkId=161146).  
  
   
  
## Examples  
 L'esempio seguente mostra le stringhe restituite chiamando il <xref:System.TimeSpan.ToString%2A> metodo con un numero di <xref:System.TimeSpan> valori. Si noti che, sebbene l'esempio non chiama il <xref:System.TimeSpan.ToString%2A> metodo direttamente, viene chiamato dal <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> metodo quando tenta di convertire un <xref:System.TimeSpan> valore alla relativa rappresentazione di stringa.  
  
 [!code-csharp[System.TimeSpan.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.TimeSpan.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Supporto per la formattazione <see cref="T:System.TimeSpan" /> valori è stata aggiunta nel [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Tuttavia, il <see cref="M:System.TimeSpan.ToString" /> overload del metodo resta indipendente dalle impostazioni cultura. Il comportamento rimane invariato rispetto alle versioni precedenti di .NET Framework. Controllare la formattazione di un <see cref="T:System.TimeSpan" /> valore, chiamare il <see cref="M:System.TimeSpan.ToString(System.String)" /> o <see cref="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" /> rapporto di overload.</para>
        </block>
        <altmember cref="T:System.String" />
        <altmember cref="M:System.TimeSpan.Parse(System.String)" />
        <altmember cref="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="timeSpan.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Stringa di formato <see cref="T:System.TimeSpan" /> standard o personalizzato.</param>
        <summary>Converte il valore dell'oggetto <see cref="T:System.TimeSpan" /> corrente nella rappresentazione di stringa equivalente usando il formato specificato.</summary>
        <returns>Rappresentazione di stringa del valore <see cref="T:System.TimeSpan" /> corrente nel formato specificato dal parametro <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `format` parametro può essere qualsiasi identificatore di formato standard o personalizzato valido per <xref:System.TimeSpan> valori. Se `format` è uguale a <xref:System.String.Empty?displayProperty=nameWithType> oppure viene `null`, il valore restituito dell'oggetto corrente <xref:System.TimeSpan> oggetto viene formattato con l'identificatore di formato comune ("c"). Se `format` è qualsiasi altro valore, il metodo genera un <xref:System.FormatException>.  
  
 Se `format` è una stringa di formato standard, il formato della stringa restituita è definito per le convenzioni di formattazione delle impostazioni cultura correnti.  
  
> [!IMPORTANT]
>  Le stringhe di formato personalizzato per <xref:System.TimeSpan> valori non include un separatore di data o ora. Se si desidera includere questi elementi nella stringa di formato, è necessario considerarli come valori letterali carattere. Vedere l'esempio per un'illustrazione e vedere le [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md) argomento per altre informazioni.  
  
 .NET Framework fornisce supporto di formattazione completo, che è descritti più dettagliatamente nella formattazione negli argomenti seguenti:  
  
-   Per altre informazioni sulle stringhe di formato per <xref:System.TimeSpan> valori, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md).  
  
-   Per altre informazioni sul supporto per la formattazione in .NET Framework, vedere [formattazione di tipi](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 L'esempio seguente usa standard e personalizzate <xref:System.TimeSpan> per visualizzare la rappresentazione di stringa di ogni elemento in una matrice di stringhe di formato <xref:System.TimeSpan> valori  
  
 [!code-csharp[System.TimeSpan.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/tostring3.cs#3)]
 [!code-vb[System.TimeSpan.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Il parametro <paramref name="format" /> non viene riconosciuto o non è supportato.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md">Stringhe di formato TimeSpan standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md">Stringhe di formato TimeSpan personalizzate</related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="timeSpan.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">Stringa di formato <see cref="T:System.TimeSpan" /> standard o personalizzato.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <summary>Converte il valore dell'oggetto <see cref="T:System.TimeSpan" /> corrente nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
        <returns>Rappresentazione di stringa del valore corrente di <see cref="T:System.TimeSpan" />, come specificato da <paramref name="format" /> e <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `format` parametro può essere qualsiasi identificatore di formato standard o personalizzato valido per <xref:System.TimeSpan> valori. Se `format` è uguale a <xref:System.String.Empty?displayProperty=nameWithType> oppure viene `null`, il valore restituito dell'oggetto corrente <xref:System.TimeSpan> oggetto viene formattato con l'identificatore di formato comune ("c"). Se format è qualsiasi altro valore, il metodo genera un <xref:System.FormatException>.  
  
> [!IMPORTANT]
>  Le stringhe di formato personalizzato per <xref:System.TimeSpan> valori non include un separatore di data o ora. Se si desidera includere questi elementi nella stringa di formato, è necessario considerarli come valori letterali carattere. Vedere l'esempio per un'illustrazione e vedere le [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md) argomento per altre informazioni.  
  
 .NET Framework fornisce supporto di formattazione completo, che è descritti più dettagliatamente nella formattazione negli argomenti seguenti:  
  
-   Per altre informazioni sulle stringhe di formato per <xref:System.TimeSpan> valori, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md).  
  
-   Per altre informazioni sul supporto per la formattazione in .NET Framework, vedere [formattazione di tipi](~/docs/standard/base-types/formatting-types.md).  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> restituito dall'oggetto di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti. Se `format` è una stringa di formato personalizzato, il `formatProvider` parametro viene ignorato.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29> metodo per formattare i due intervalli di tempo. Nell'esempio viene chiamato il metodo due volte per ogni stringa di formato, prima di tutto per visualizzarla usando le convenzioni delle impostazioni cultura en-US e quindi per visualizzarlo utilizzando le convenzioni delle impostazioni cultura fr-FR.  
  
 [!code-csharp[System.TimeSpan.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/tostring4.cs#4)]
 [!code-vb[System.TimeSpan.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Il parametro <paramref name="format" /> non viene riconosciuto o non è supportato.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md">Stringhe di formato TimeSpan standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md">Stringhe di formato TimeSpan personalizzate</related>
      </Docs>
    </Member>
    <Member MemberName="TotalDays">
      <MemberSignature Language="C#" Value="public double TotalDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalDays" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalDays" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalDays As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalDays { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalDays : double" Usage="System.TimeSpan.TotalDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore della struttura <see cref="T:System.TimeSpan" /> corrente espresso in giorni interi e frazionari.</summary>
        <value>Ottiene il numero complessivo di giorni rappresentato da questa istanza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà converte il valore di questa istanza da segni di graduazione a giorni. Questo numero potrebbe includere giorni interi e frazionari.  
  
 Il <xref:System.TimeSpan.TotalDays%2A> proprietà rappresenta i giorni interi e frazionari, mentre il <xref:System.TimeSpan.Days%2A> proprietà rappresenta tutti i giorni.  
  
   
  
## Examples  
 Nell'esempio seguente crea una <xref:System.TimeSpan> dell'oggetto e visualizza il valore della relativa <xref:System.TimeSpan.TotalDays%2A> proprietà. Viene anche visualizzato il valore di ogni componente (ore, minuti, secondi e millisecondi) costituisce la parte frazionaria del valore del relativo <xref:System.TimeSpan.TotalDays%2A> proprietà.  
  
 [!code-csharp[System.TimeSpan.TotalDays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totaldays/cs/totaldays.cs#1)]
 [!code-vb[System.TimeSpan.TotalDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totaldays/vb/totaldays.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Days" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
      </Docs>
    </Member>
    <Member MemberName="TotalHours">
      <MemberSignature Language="C#" Value="public double TotalHours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalHours" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalHours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalHours As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalHours { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalHours : double" Usage="System.TimeSpan.TotalHours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore della struttura <see cref="T:System.TimeSpan" /> corrente espresso in ore intere e frazionarie.</summary>
        <value>Numero complessivo delle ore rappresentate da questa istanza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà converte il valore di questa istanza da segni di graduazione in ore. Questo numero potrebbe includere ore intere e frazionarie.  
  
 Il <xref:System.TimeSpan.TotalHours%2A> proprietà rappresenta le ore intere e frazionarie, mentre il <xref:System.TimeSpan.Hours%2A> proprietà rappresenta tutte le ore.  
  
   
  
## Examples  
 Nell'esempio seguente crea una <xref:System.TimeSpan> dell'oggetto e viene visualizzato il valore relativo <xref:System.TimeSpan.TotalHours%2A> proprietà. Viene anche visualizzato il valore di ogni componente (ore, minuti, secondi e millisecondi) costituisce la parte frazionaria del valore del relativo <xref:System.TimeSpan.TotalHours%2A> proprietà.  
  
 [!code-csharp[System.TimeSpan.TotalHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalhours/cs/totalhours.cs#1)]
 [!code-vb[System.TimeSpan.TotalHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalhours/vb/totalhours.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalMilliseconds">
      <MemberSignature Language="C#" Value="public double TotalMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalMilliseconds As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalMilliseconds { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalMilliseconds : double" Usage="System.TimeSpan.TotalMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore della struttura <see cref="T:System.TimeSpan" /> corrente espresso in millisecondi interi e frazionari.</summary>
        <value>Numero complessivo dei millisecondi rappresentati da questa istanza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà converte il valore di questa istanza da segni di graduazione in millisecondi. Questo numero potrebbe includere i millisecondi interi e frazionari.  
  
 Il <xref:System.TimeSpan.TotalMilliseconds%2A> proprietà rappresenta millisecondi interi e frazionari, mentre il <xref:System.TimeSpan.Milliseconds%2A> proprietà rappresenta millisecondi interi.  
  
   
  
## Examples  
 Nell'esempio seguente crea una <xref:System.TimeSpan> dell'oggetto e visualizza il valore della relativa <xref:System.TimeSpan.TotalMilliseconds%2A> proprietà.  
  
 [!code-csharp[System.TimeSpan.TotalMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalmilliseconds/cs/totalmilliseconds.cs#1)]
 [!code-vb[System.TimeSpan.TotalMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalmilliseconds/vb/totalmilliseconds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalMinutes">
      <MemberSignature Language="C#" Value="public double TotalMinutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalMinutes" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalMinutes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalMinutes As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalMinutes { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalMinutes : double" Usage="System.TimeSpan.TotalMinutes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore della struttura <see cref="T:System.TimeSpan" /> corrente espresso in minuti interi e frazionari.</summary>
        <value>Numero complessivo dei minuti rappresentati da questa istanza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà converte il valore di questa istanza da segni di graduazione in pochi minuti. Questo numero può includere minuti interi e frazionari.  
  
 Il <xref:System.TimeSpan.TotalMinutes%2A> proprietà rappresenta minuti interi e frazionari, mentre il <xref:System.TimeSpan.Minutes%2A> proprietà rappresenta minuti interi.  
  
   
  
## Examples  
 Nell'esempio seguente crea una <xref:System.TimeSpan> dell'oggetto e visualizza il valore della relativa <xref:System.TimeSpan.TotalMinutes%2A> proprietà. Viene anche visualizzato il valore di ogni componente (secondi, millisecondi) costituisce la parte frazionaria del valore del relativo <xref:System.TimeSpan.TotalMinutes%2A> proprietà.  
  
 [!code-csharp[System.TimeSpan.TotalMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalminutes/cs/totalminutes.cs#1)]
 [!code-vb[System.TimeSpan.TotalMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalminutes/vb/totalminutes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalSeconds">
      <MemberSignature Language="C#" Value="public double TotalSeconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalSeconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalSeconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalSeconds As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalSeconds { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalSeconds : double" Usage="System.TimeSpan.TotalSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore della struttura <see cref="T:System.TimeSpan" /> corrente espresso in secondi interi e frazionari.</summary>
        <value>Numero complessivo dei secondi rappresentati da questa istanza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà converte il valore di questa istanza da segni di graduazione in secondi. Questo numero potrebbe includere secondi interi e frazionari.  
  
 Il <xref:System.TimeSpan.TotalSeconds%2A> proprietà rappresenta i secondi interi e frazionari, mentre il <xref:System.TimeSpan.Seconds%2A> proprietà rappresenta tutti i secondi.  
  
   
  
## Examples  
 Nell'esempio seguente crea una <xref:System.TimeSpan> dell'oggetto e visualizza il valore della relativa <xref:System.TimeSpan.TotalSeconds%2A> proprietà. Viene anche visualizzato il valore del relativo componente millisecondi, che costituisce la parte frazionaria del valore del relativo <xref:System.TimeSpan.TotalSeconds%2A> proprietà.  
  
 [!code-csharp[System.TimeSpan.TotalSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalseconds/cs/totalseconds.cs#1)]
 [!code-vb[System.TimeSpan.TotalSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalseconds/vb/totalseconds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional formatProvider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="timeSpan.TryFormat (destination, charsWritten, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte la rappresentazione di stringa specificata di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
        <altmember cref="Overload:System.TimeSpan.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.ReadOnlySpan{System.Char},System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.TimeSpan.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.TimeSpan.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="result">Quando termina, questo metodo contiene un oggetto che rappresenta l'intervallo di tempo specificato da <c>s</c> o <see cref="F:System.TimeSpan.Zero" /> se la conversione non riesce. Questo parametro viene passato non inizializzato.</param>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
        <returns>
          <see langword="true" /> se <paramref name="s" /> è stato convertito correttamente; in caso contrario, <see langword="false" />. Questa operazione restituisce <see langword="false" /> se il parametro <paramref name="s" /> è <see langword="null" /> o <see cref="F:System.String.Empty" />, presenta un formato non valido, rappresenta un intervallo di tempo minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" /> o almeno un componente giorni, ore, minuti o secondi non è compreso nel relativo intervallo valido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.TryParse%2A> metodo è simile al <xref:System.TimeSpan.Parse%28System.String%29?displayProperty=nameWithType> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce.  
  
 Il `s` parametro contiene una specifica di intervallo di tempo nel formato:  
  
 [*ws*] [-] { *1!d* &#124; *1!d*.* hh*:*mm*[:*ss*[.* FF*]] &#124; *hh*:*mm*[:*ss*[.* FF*]]} [*ws*]  
  
 Gli elementi tra parentesi quadre ([e]) sono facoltativi. Una selezione dall'elenco delle alternative racchiuso tra parentesi graffe ({e}) e separati da barre verticali (&#124;) è obbligatorio. La tabella seguente descrive i singoli elementi.  
  
|Elemento|Descrizione|  
|-------------|-----------------|  
|*ws*|Spazio vuoto facoltativo.|  
|-|Un segno meno (-) facoltativo, che indica un valore negativo <xref:System.TimeSpan>.|  
|*d*|Giorni, compreso tra 0 e 10675199.|  
|.|Un simbolo di distinzione delle impostazioni cultura che separa i giorni dalle ore. Formato della lingua inglese viene utilizzato un punto (".") caratteri.|  
|*hh*|Ore, compreso tra 0 e 23.|  
|:|Il simbolo di separatore di ora distinzione delle impostazioni cultura. Formato invariant Usa i due punti (":") caratteri.|  
|*mm*|Minuti, compreso tra 0 e 59.|  
|*ss*|Facoltativi secondi, compreso tra 0 e 59.|  
|.|Un simbolo di distinzione delle impostazioni cultura che separa i secondi dalle frazioni di secondo. Formato della lingua inglese viene utilizzato un punto (".") caratteri.|  
|*ff*|Frazioni di secondo facoltativi, costituita da uno a sette cifre decimali.|  
  
 I componenti di `s` collettivamente deve specificare un intervallo di tempo che è maggiore o uguale a <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> e minore o uguale a <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.  
  
 Il <xref:System.TimeSpan.Parse%28System.String%29> metodo tenta di analizzare `s` usando ognuno dei formati di specifiche delle impostazioni cultura per le impostazioni cultura correnti.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.TimeSpan.TryParse%2A> metodo per creare <xref:System.TimeSpan> gli oggetti da valido <xref:System.TimeSpan> stringhe e per indicare quando l'operazione di analisi non è riuscita perché la stringa di intervallo di tempo non è valida.  
  
 [!code-csharp[System.TimeSpan.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.TimeSpan.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/TryParse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>In alcuni casi, quando un componente dell'intervallo di tempo nella stringa da analizzare contiene più di sette cifre, operazioni di analisi che abbia esito positivo nel [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e versioni precedenti potrebbero avere esito negativo e generare un' <see cref="T:System.OverflowException" /> nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], nell'esempio seguente viene illustrato questo scenario.  
  
[! codice-csharp[System.TimeSpan.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparsefailure1.cs#3)] [! codice vb[System.TimeSpan.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparsefailure1.vb#3)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParse (input, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParse (input, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <param name="result">Quando termina, questo metodo contiene un oggetto che rappresenta l'intervallo di tempo specificato da <c>input</c> o <see cref="F:System.TimeSpan.Zero" /> se la conversione non riesce. Questo parametro viene passato non inizializzato.</param>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando le informazioni di formattazione specifiche delle impostazioni cultura indicate e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
        <returns>
          <see langword="true" /> se <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />. Questa operazione restituisce <see langword="false" /> se il parametro <paramref name="input" /> è <see langword="null" /> o <see cref="F:System.String.Empty" />, presenta un formato non valido, rappresenta un intervallo di tempo minore di <see cref="F:System.TimeSpan.MinValue" /> o maggiore di <see cref="F:System.TimeSpan.MaxValue" /> o almeno un componente giorni, ore, minuti o secondi non è compreso nel relativo intervallo valido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> metodo è simile al <xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce.  
  
 Il `input` parametro contiene una specifica di intervallo di tempo nel formato:  
  
 [*ws*] [-] { *1!d* &#124; *1!d*.* hh*:*mm*[:*ss*[.* FF*]] &#124; *hh*:*mm*[:*ss*[.* FF*]]} [*ws*]  
  
 Gli elementi tra parentesi quadre ([e]) sono facoltativi. Una selezione dall'elenco delle alternative racchiuso tra parentesi graffe ({e}) e separati da barre verticali (&#124;) è obbligatorio. La tabella seguente descrive i singoli elementi.  
  
|Elemento|Descrizione|  
|-------------|-----------------|  
|*ws*|Spazio vuoto facoltativo.|  
|-|Un segno meno (-) facoltativo, che indica un valore negativo <xref:System.TimeSpan>.|  
|*d*|Giorni, compreso tra 0 e 10675199.|  
|.|Un simbolo di distinzione delle impostazioni cultura che separa i giorni dalle ore. Formato della lingua inglese viene utilizzato un punto (".") caratteri.|  
|*hh*|Ore, compreso tra 0 e 23.|  
|:|Il simbolo di separatore di ora distinzione delle impostazioni cultura. Formato invariant Usa i due punti (":") caratteri.|  
|*mm*|Minuti, compreso tra 0 e 59.|  
|*ss*|Facoltativi secondi, compreso tra 0 e 59.|  
|.|Un simbolo di distinzione delle impostazioni cultura che separa i secondi dalle frazioni di secondo. Formato della lingua inglese viene utilizzato un punto (".") caratteri.|  
|*ff*|Frazioni di secondo facoltativi, costituita da uno a sette cifre decimali.|  
  
 I componenti di `input` collettivamente deve specificare un intervallo di tempo che è maggiore o uguale a <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> e minore o uguale a <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.  
  
 Il <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> metodo tenta di analizzare `input` usando ognuno dei formati di specifiche delle impostazioni cultura per le impostazioni cultura specificate da `formatProvider`.  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti.  
  
   
  
## Examples  
 L'esempio seguente definisce una matrice di <xref:System.Globalization.CultureInfo> oggetti e viene utilizzato ogni oggetto nelle chiamate al <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> metodo per analizzare gli elementi in una matrice di stringhe. Nell'esempio viene illustrato come le convenzioni delle impostazioni cultura specifiche influenzano l'operazione di formattazione.  
  
 [!code-csharp[System.TimeSpan.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparse2.cs#2)]
 [!code-vb[System.TimeSpan.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>In alcuni casi, quando un componente dell'intervallo di tempo nella stringa da analizzare contiene più di sette cifre, operazioni di analisi che abbia esito positivo e restituiscono <see langword="true" /> nella [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] e versioni precedenti potrebbero non riuscire e restituire <see langword="false" /> nel [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], L'esempio seguente illustra questo scenario.  
  
[! codice-csharp[System.TimeSpan.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparsefailure1.cs#3)] [! codice vb[System.TimeSpan.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparsefailure1.vb#3)]</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> e restituisce un valore che indica se la conversione è stata eseguita correttamente. Il formato della rappresentazione di stringa deve corrispondere esattamente a un formato specificato.</summary>
        <altmember cref="Overload:System.TimeSpan.ParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="format">Stringa di formato standard o personalizzato che definisce il formato richiesto di <c>input</c>.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <param name="result">Quando termina, questo metodo contiene un oggetto che rappresenta l'intervallo di tempo specificato da <c>input</c> o <see cref="F:System.TimeSpan.Zero" /> se la conversione non riesce. Questo parametro viene passato non inizializzato.</param>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando il formato specificato e le informazioni sul formato specifiche delle impostazioni cultura e restituisce un valore che indica se la conversione è stata eseguita correttamente. Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
        <returns>
          <see langword="true" /> se <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> metodo analizza la rappresentazione di stringa di un intervallo di tempo, che deve essere nel formato definito per il `format` parametro, ad eccezione del fatto che gli iniziali e gli spazi vuoti finali vengono ignorati. Questo metodo è simile al <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce.  
  
 Il `format` parametro è una stringa che contiene un identificatore di formato singolo standard oppure uno o più identificatori di formato personalizzato che definiscono il formato richiesto di `input`. Per altre informazioni sulle stringhe di formato valido, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md).  
  
> [!IMPORTANT]
>  Il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> metodo Usa le convenzioni delle impostazioni cultura specificate per il `formatProvider` parametro solo se `format` è uno standard <xref:System.TimeSpan> il cui valore è "g" o "G" stringa di formato. Stringhe di formato standard "T", "c" e "t" usano le convenzioni di formattazione della cultura invariabile. Stringhe di formato personalizzate definiscono il formato della stringa di input preciso e utilizzano i caratteri letterali per separare i componenti di un intervallo di tempo.  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita se `format` è una stringa di formato standard. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> metodo analizzare varie rappresentazioni di stringa di intervalli di tempo utilizzando diverse stringhe di formato e le impostazioni cultura.  
  
 [!code-csharp[System.TimeSpan.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample1.cs#1)]
 [!code-vb[System.TimeSpan.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md">Stringhe di formato TimeSpan standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md">Stringhe di formato TimeSpan personalizzate</related>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="formats">Matrice di stringhe di formato standard o personalizzate che definisce i formati accettabili di <c>input</c>.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <param name="result">Quando termina, questo metodo contiene un oggetto che rappresenta l'intervallo di tempo specificato da <c>input</c> o <see cref="F:System.TimeSpan.Zero" /> se la conversione non riesce. Questo parametro viene passato non inizializzato.</param>
        <summary>Converte la rappresentazione di stringa specificata di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando i formati specificati e le informazioni sul formato specifiche delle impostazioni cultura e restituisce un valore che indica se la conversione è stata eseguita correttamente. Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
        <returns>
          <see langword="true" /> se <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> metodo analizza la rappresentazione di stringa di un intervallo di tempo, che deve essere nel formato definito da una delle stringhe di formato specificate da di `formats` parametro, ad eccezione del fatto che gli iniziali e gli spazi vuoti finali vengono ignorati. Questo metodo è simile al <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce.  
  
 Il `formats` parametro è una matrice di stringhe cui elementi costituiti da un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il formato richiesto di `input`. Per altre informazioni sulle stringhe di formato valido, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md). `input` deve corrispondere esattamente a un membro di `formats` per l'operazione di analisi abbia esito positivo. L'operazione di analisi tenta di far corrispondere `input` a ogni elemento in `formats` partire il primo elemento nella matrice.  
  
> [!IMPORTANT]
>  Il <xref:System.TimeSpan.TryParseExact%2A> metodo Usa le convenzioni delle impostazioni cultura specificate per il `formatProvider` parametro solo se la stringa di formato usata per analizzare `input` è uno standard <xref:System.TimeSpan> il cui valore è "g" o "G" stringa di formato. Stringhe di formato standard "T", "c" e "t" usano le convenzioni di formattazione della cultura invariabile. Stringhe di formato personalizzate definiscono il formato della stringa di input preciso e utilizzano i caratteri letterali per separare i componenti di un intervallo di tempo.  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita se la stringa di formato usata per analizzare `input` è una stringa di formato standard. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> metodo per convertire ogni elemento della matrice di stringhe per un <xref:System.TimeSpan> valore. L'esempio interpreta le stringhe usando convenzioni di formattazione per il francese - Francia ("fr-FR"). Le stringhe possono rappresentare un intervallo di tempo in formato breve generale o il formato esteso generale.  
  
 Inoltre, nell'esempio viene modificato il modo in cui i metodi di analisi di intervallo di tempo interpretano una sola cifra. In genere, una singola cifra viene interpretata come il numero di giorni in un intervallo di tempo. Al contrario, il `%h` stringa di formato personalizzato usato per interpretare una sola cifra come il numero di ore. Per essere efficace, questa modifica si noti che il `%h` stringa di formato personalizzata deve precedere le altre stringhe di formato nel `formats` matrice.  
  
 [!code-csharp[System.TimeSpan.TryParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample3.cs#3)]
 [!code-vb[System.TimeSpan.TryParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample3.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md">Stringhe di formato TimeSpan standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md">Stringhe di formato TimeSpan personalizzate</related>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.TimeSpanStyles *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.TimeSpanStyles *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.TimeSpanStyles *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="format">Stringa di formato standard o personalizzato che definisce il formato richiesto di <c>input</c>.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <param name="styles">Uno o più valori di enumerazione che indicano lo stile di <c>input</c>.</param>
        <param name="result">Quando termina, questo metodo contiene un oggetto che rappresenta l'intervallo di tempo specificato da <c>input</c> o <see cref="F:System.TimeSpan.Zero" /> se la conversione non riesce. Questo parametro viene passato non inizializzato.</param>
        <summary>Converte la rappresentazione di stringa di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando il formato, le informazioni sul formato specifiche delle impostazioni cultura e gli stili specificati e restituisce un valore che indica se la conversione è stata eseguita correttamente. Il formato della rappresentazione di stringa deve corrispondere esattamente al formato specificato.</summary>
        <returns>
          <see langword="true" /> se <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> metodo analizza la rappresentazione di stringa di un intervallo di tempo, che deve essere nel formato definito per il `format` parametro, ad eccezione del fatto che gli iniziali e gli spazi vuoti finali vengono ignorati. Questo metodo è simile al <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce.  
  
 Il `format` parametro è una stringa che contiene un identificatore di formato singolo standard oppure uno o più identificatori di formato personalizzato che definiscono il formato richiesto di `input`. Per altre informazioni sulle stringhe di formato valido, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md).  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita se `format` è una stringa di formato standard. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti.  
  
 Il `styles` parametro influisce sull'interpretazione di stringhe analizzate usando stringhe di formato personalizzato. Determina se `input` viene interpretato come un intervallo di tempo negativo solo se è presente un segno negativo (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), o se viene sempre interpretato come un intervallo di tempo negativo (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>). Se <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> non viene usato `format` deve includere un simbolo di segno negativo letterale (ad esempio "\\-") per analizzare correttamente un intervallo di tempo negativo.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> metodo analizzare varie rappresentazioni di stringa di intervalli di tempo utilizzando diverse stringhe di formato e le impostazioni cultura. Usa inoltre il <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> valore interpretare ogni stringa come un intervallo di tempo negativo. L'output dell'esempio illustra che il <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> stile influenza il valore restituito solo quando viene utilizzato con stringhe di formato personalizzato.  
  
 [!code-csharp[System.TimeSpan.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample2.cs#2)]
 [!code-vb[System.TimeSpan.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md">Stringhe di formato TimeSpan standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md">Stringhe di formato TimeSpan personalizzate</related>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.TimeSpanStyles *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Stringa che specifica l'intervallo di tempo da convertire.</param>
        <param name="formats">Matrice di stringhe di formato standard o personalizzate che definisce i formati accettabili di <c>input</c>.</param>
        <param name="formatProvider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <param name="styles">Uno o più valori di enumerazione che indicano lo stile di <c>input</c>.</param>
        <param name="result">Quando termina, questo metodo contiene un oggetto che rappresenta l'intervallo di tempo specificato da <c>input</c> o <see cref="F:System.TimeSpan.Zero" /> se la conversione non riesce. Questo parametro viene passato non inizializzato.</param>
        <summary>Converte la rappresentazione di stringa specificata di un intervallo di tempo nell'equivalente <see cref="T:System.TimeSpan" /> usando i formati, le informazioni sul formato specifiche delle impostazioni cultura e gli stili specificati e restituisce un valore che indica se la conversione è stata eseguita correttamente. Il formato della rappresentazione di stringa deve corrispondere esattamente a uno dei formati specificati.</summary>
        <returns>
          <see langword="true" /> se <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> metodo analizza la rappresentazione di stringa di un intervallo di tempo, che deve essere nel formato definito da una delle stringhe di formato specificate da di `formats` parametro, ad eccezione del fatto che gli iniziali e gli spazi vuoti finali vengono ignorati. Questo metodo è simile al <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce.  
  
 Il `formats` parametro è una matrice di stringhe cui elementi costituiti da un identificatore di formato singolo standard o uno o più identificatori di formato personalizzato che definiscono il formato richiesto di `input`. Per altre informazioni sulle stringhe di formato valido, vedere [stringhe di formato TimeSpan Standard](~/docs/standard/base-types/standard-timespan-format-strings.md) e [stringhe di formato TimeSpan personalizzate](~/docs/standard/base-types/custom-timespan-format-strings.md). `input` deve corrispondere esattamente a un membro di `formats` per l'operazione di analisi abbia esito positivo. L'operazione di analisi tenta di far corrispondere `input` a ogni elemento in `formats` partire il primo elemento nella matrice.  
  
> [!IMPORTANT]
>  Il <xref:System.TimeSpan.ParseExact%2A> metodo Usa le convenzioni delle impostazioni cultura specificate per il `formatProvider` parametro solo se la stringa di formato usata per analizzare `input` è uno standard <xref:System.TimeSpan> il cui valore è "g" o "G" stringa di formato. Stringhe di formato standard "T", "c" e "t" usano le convenzioni di formattazione della cultura invariabile. Stringhe di formato personalizzate definiscono il formato della stringa di input preciso e utilizzano i caratteri letterali per separare i componenti di un intervallo di tempo.  
  
 Il `formatProvider` parametro è un <xref:System.IFormatProvider> implementazione che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita se la stringa di formato usata per analizzare `input` è una stringa di formato standard. Il `formatProvider` parametro può essere uno dei seguenti:  
  
-   Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura le cui convenzioni di formattazione riflesse nella stringa restituita. Il <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà definisce la formattazione della stringa restituita.  
  
-   Oggetto <xref:System.Globalization.DateTimeFormatInfo> oggetto che definisce la formattazione della stringa restituita.  
  
-   Un oggetto personalizzato che implementa il <xref:System.IFormatProvider> interfaccia. Relativi <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.DateTimeFormatInfo> oggetto che fornisce informazioni di formattazione.  
  
 Se `formatProvider` viene `null`, il <xref:System.Globalization.DateTimeFormatInfo> viene usato l'oggetto associato a impostazioni cultura correnti.  
  
 Il `styles` parametro influisce sull'interpretazione di stringhe che vengono analizzate usando stringhe di formato personalizzato. Determina se `input` viene interpretato come un intervallo di tempo negativo solo se è presente un segno negativo (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), o se viene sempre interpretato come un intervallo di tempo negativo (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>). Se <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> non viene usato `format` deve includere un simbolo di segno negativo letterale (ad esempio "\\-") per analizzare correttamente un intervallo di tempo negativo.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> metodo per convertire ogni elemento della matrice di stringhe per un <xref:System.TimeSpan> valore. Le stringhe possono rappresentare un intervallo di tempo in formato breve generale o il formato esteso generale.  
  
 Inoltre, nell'esempio viene modificato il modo in cui i metodi di analisi di intervallo di tempo interpretano una sola cifra. In genere, una singola cifra viene interpretata come il numero di giorni in un intervallo di tempo. Al contrario, il `%h` stringa di formato personalizzato usato per interpretare una sola cifra come il numero di ore. Per essere efficace, questa modifica si noti che il `%h` stringa di formato personalizzata deve precedere le altre stringhe di formato nel `formats` matrice. Si noti anche dall'output che la <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> flag specificati nella chiamata al metodo viene utilizzato solo quando l'analisi di una stringa con questo identificatore di formato.  
  
 [!code-csharp[System.TimeSpan.TryParseExact#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample4.cs#4)]
 [!code-vb[System.TimeSpan.TryParseExact#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md">Stringhe di formato TimeSpan standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md">Stringhe di formato TimeSpan personalizzate</related>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan Zero" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan Zero;" />
      <MemberSignature Language="F#" Value=" staticval mutable Zero : TimeSpan" Usage="System.TimeSpan.Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il valore zero di <see cref="T:System.TimeSpan" />. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché il valore della <xref:System.TimeSpan.Zero> campo è un <xref:System.TimeSpan> oggetto che rappresenta un valore zero, è possibile confrontarlo con altri <xref:System.TimeSpan> oggetti per determinare se quest'ultimo rappresenta gli intervalli di tempo positivo diverso da zero o negativo. È anche possibile usare questo campo per inizializzare un <xref:System.TimeSpan> oggetto da un valore zero.  
  
   
  
## Examples  
 Nell'esempio seguente fa riferimento e visualizza il valore della <xref:System.TimeSpan.Zero> campo.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>