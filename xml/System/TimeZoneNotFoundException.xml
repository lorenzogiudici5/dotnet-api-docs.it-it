<Type Name="TimeZoneNotFoundException" FullName="System.TimeZoneNotFoundException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6126f335b4fde4db5e1ee1a563fb53ff031703b6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TimeZoneNotFoundException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TimeZoneNotFoundException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneNotFoundException" />
  <TypeSignature Language="VB.NET" Value="Public Class TimeZoneNotFoundException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZoneNotFoundException : Exception" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Eccezione generata quando non è possibile trovare un fuso orario.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa eccezione viene generata per il <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> e <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> metodi durante un identificatore del fuso orario Impossibile trovare nel sistema locale o quando è associato un identificatore di fuso orario specifico alcun dato.  
  
 Poiché il Registro di sistema viene utilizzato come repository di informazioni sul fuso orario in Windows XP e Windows Vista, questa eccezione indica che il Registro di sistema non contiene informazioni su un particolare fuso orario. Informazioni sul fuso orario viene archiviati nelle sottochiavi di HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time zone.  
  
 Se un'applicazione richiede la presenza di un particolare fuso orario e il tentativo di recuperare, genera un <xref:System.TimeZoneNotFoundException>, l'applicazione può gestire l'eccezione in due modi:  
  
-   Chiamando il <xref:System.TimeZoneInfo.FromSerializedString%2A> metodo per deserializzare un salvato <xref:System.TimeZoneInfo> oggetto.  
  
-   Chiamando uno degli overload di <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> metodo per creare un fuso orario.  
  
 Per vedere gli esempi di <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=nameWithType> e <xref:System.TimeZoneInfo.FromSerializedString%2A> metodi.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.TimeZoneNotFoundException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeZoneNotFoundException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneNotFoundException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeZoneNotFoundException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.TimeZoneNotFoundException" /> con un messaggio fornito dal sistema.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo è il costruttore predefinito di <xref:System.TimeZoneNotFoundException> classe. Questo costruttore inizializza la <xref:System.Exception.Message%2A> proprietà della nuova istanza di un messaggio fornito dal sistema che descrive l'errore, ad esempio "il fuso orario '*timeZoneName*' non è stato trovato nel computer locale." Questo messaggio localizzato per la lingua corrente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeZoneNotFoundException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneNotFoundException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeZoneNotFoundException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Stringa che descrive l'eccezione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.TimeZoneNotFoundException" /> con la stringa del messaggio specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `message` stringa è assegnata la <xref:System.Exception.Message%2A> proprietà. La stringa deve essere localizzata per le impostazioni cultura correnti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeZoneNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TimeZoneNotFoundException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto che contiene i dati serializzati.</param>
        <param name="context">Flusso che contiene i dati serializzati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.TimeZoneNotFoundException" /> dai dati serializzati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore non viene chiamato direttamente dal codice per creare un'istanza di <xref:System.TimeZoneNotFoundException> oggetto. Al contrario, viene chiamato dal <xref:System.Runtime.Serialization.IFormatter> dell'oggetto <xref:System.Runtime.Serialization.IFormatter.Deserialize%2A> metodo quando si deserializza il <xref:System.TimeZoneNotFoundException> oggetto da un flusso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="info" /> è <see langword="null" />.  
  
 oppure  
  
 Il valore del parametro <paramref name="context" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeZoneNotFoundException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneNotFoundException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeZoneNotFoundException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Stringa che descrive l'eccezione.</param>
        <param name="innerException">Eccezione che ha determinato l'eccezione corrente.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.TimeZoneNotFoundException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, si utilizza questo <xref:System.TimeZoneNotFoundException> overload per gestire un'eccezione in un `try`...`catch` blocco. Il `innerException` parametro deve essere un riferimento all'oggetto eccezione gestita nel `catch` blocco oppure può essere `null`. Questo valore viene quindi assegnato al <xref:System.TimeZoneNotFoundException> dell'oggetto <xref:System.Exception.InnerException%2A> proprietà.  
  
 Il `message` stringa è assegnata la <xref:System.Exception.Message%2A> proprietà. La stringa deve essere localizzata per le impostazioni cultura correnti.  
  
   
  
## Examples  
 Nell'esempio seguente tenta di recuperare un fuso orario inesistente, genera un <xref:System.TimeZoneNotFoundException>. Il gestore di eccezioni esegue il wrapping dell'eccezione in un nuovo <xref:System.TimeZoneNotFoundException> oggetto, che restituisce il gestore dell'eccezione al chiamante. Il gestore di eccezioni del chiamante Visualizza quindi informazioni sull'eccezione esterno e interno.  
  
 [!code-csharp[System.TimeZoneNotFoundException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZoneNotFoundException.Class/cs/TimeZoneNotFoundException.cs#1)]
 [!code-vb[System.TimeZoneNotFoundException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZoneNotFoundException.Class/vb/TimeZoneNotFoundException.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>