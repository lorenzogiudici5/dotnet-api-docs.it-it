<Type Name="MarshalByRefObject" FullName="System.MarshalByRefObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="581d775aac81241d975e88cf7c586e38dbe64827" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430080" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit MarshalByRefObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.MarshalByRefObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarshalByRefObject abstract" />
  <TypeSignature Language="F#" Value="type MarshalByRefObject = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente l'accesso a oggetti attraverso limiti di dominio nelle applicazioni che supportano servizi remoti.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un dominio applicazione è una partizione in un processo del sistema operativo in cui risiedono una o più applicazioni. Gli oggetti nello stesso dominio dell'applicazione possono comunicare direttamente. Gli oggetti in diversi domini applicazione di comunicare tramite il trasporto di copie degli oggetti tra i limiti del dominio applicazione o tramite un proxy per lo scambio di messaggi.  
  
 <xref:System.MarshalByRefObject> è la classe basa per gli oggetti che comunicano attraverso i limiti del dominio applicazione lo scambio di messaggi tramite un proxy. Gli oggetti che non ereditano da <xref:System.MarshalByRefObject> sono implicitamente marshalling per valore. Quando un'applicazione remota fa riferimento a un marshalling dall'oggetto di valore, una copia dell'oggetto viene passata attraverso i limiti del dominio applicazione.  
  
 <xref:System.MarshalByRefObject> gli oggetti sono accessibili direttamente all'interno del dominio dell'applicazione locale. La prima volta che un'applicazione in remoto un dominio applicazione accede a un <xref:System.MarshalByRefObject>, viene passato un proxy all'applicazione remota. Vengono effettuato il marshalling di chiamate successive nel proxy all'oggetto che si trovano nel dominio dell'applicazione locale.  
  
 I tipi devono ereditare da <xref:System.MarshalByRefObject> quando viene utilizzato il tipo attraverso i confini dei domini applicazione e lo stato dell'oggetto non deve essere copiato perché i membri dell'oggetto non sono utilizzabili all'esterno del dominio applicazione in cui sono stati creati.  
  
 Quando si deriva un oggetto da <xref:System.MarshalByRefObject> per l'utilizzo di limiti del dominio applicazione, è consigliabile non eseguire l'override uno qualsiasi dei relativi membri, né deve chiamarne i metodi direttamente. Il runtime rileva che le classi derivate da <xref:System.MarshalByRefObject> deve essere sottoposto a marshalling attraverso i limiti del dominio applicazione.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Il primo esempio di codice viene illustrato come creare un'istanza di una classe in un altro dominio applicazione. Il secondo esempio di codice viene illustrata una classe semplice che può essere usata per la comunicazione remota.  
  
 **Esempio 1**  
  
 Esempio di codice seguente viene illustrato il modo più semplice per eseguire codice in un altro dominio applicazione. Nell'esempio viene definita una classe denominata `Worker` che eredita <xref:System.MarshalByRefObject>, con un metodo che visualizza il nome del dominio dell'applicazione in cui è in esecuzione. L'esempio crea istanze di `Worker` nel dominio applicazione predefinito in un nuovo dominio applicazione.  
  
> [!NOTE]
>  L'assembly che contiene `Worker` devono essere caricati in entrambi i domini applicazione, ma è stato possibile caricare altri assembly che esistono solo nel nuovo dominio applicazione.  
  
 [!code-cpp[CreateInstanceAndUnwrap2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cpp/source.cpp#1)]
 [!code-csharp[CreateInstanceAndUnwrap2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cs/source.cs#1)]
 [!code-vb[CreateInstanceAndUnwrap2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CreateInstanceAndUnwrap2/VB/source.vb#1)]  
  
 **Esempio 2**  
  
 Nell'esempio seguente viene illustrata una classe derivata da <xref:System.MarshalByRefObject> vale a dire utilizzato più avanti in remoto.  
  
 [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CPP/source.cpp#1)]
 [!code-csharp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CS/source.cs#1)]
 [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.MarshalByRefObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjRef">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjRef CreateObjRef(class System.Type requestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjRef (requestedType As Type) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjRef ^ CreateObjRef(Type ^ requestedType);" />
      <MemberSignature Language="F#" Value="abstract member CreateObjRef : Type -&gt; System.Runtime.Remoting.ObjRef&#xA;override this.CreateObjRef : Type -&gt; System.Runtime.Remoting.ObjRef" Usage="marshalByRefObject.CreateObjRef requestedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="requestedType">Il <see cref="T:System.Type" /> dell'oggetto a cui il nuovo oggetto <see cref="T:System.Runtime.Remoting.ObjRef" /> farà riferimento.</param>
        <summary>Consente di creare un oggetto che contiene tutte le informazioni rilevanti necessarie per la generazione del proxy utilizzato per effettuare la comunicazione con un oggetto remoto.</summary>
        <returns>Informazioni obbligatorie per generare un proxy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.MarshalByRefObject.CreateObjRef%2A> metodo viene chiamato da metodi di creazione oggetto remoto, ad esempio <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> e <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>. Nella maggior parte dei casi, non è necessario eseguire l'override di questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">L'istanza non è un oggetto remoto valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante immediato non dispone dell'autorizzazione di infrastruttura.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede attendibilità totale per il chiamante immediato. L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetLifetimeService">
      <MemberSignature Language="C#" Value="public object GetLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.GetLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member GetLifetimeService : unit -&gt; obj&#xA;override this.GetLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.GetLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente di recuperare l'oggetto servizio di durata corrente per controllare i criteri di durata per l'istanza.</summary>
        <returns>Oggetto di tipo <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> utilizzato per il controllo dei criteri di durata per l'istanza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sui servizi di durata, vedere il <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il chiamante immediato non dispone dell'autorizzazione di infrastruttura.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede attendibilità totale per il chiamante immediato. L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</permission>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public virtual object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member InitializeLifetimeService : unit -&gt; obj&#xA;override this.InitializeLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un oggetto servizio di durata per controllare i criteri di durata per questa istanza.</summary>
        <returns>Oggetto di tipo <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> utilizzato per il controllo dei criteri di durata per l'istanza. Si tratta dell'oggetto servizio di durata corrente per l'istanza, se esistente; in caso contrario, ne viene inizializzato uno nuovo sul valore della proprietà <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sui servizi di durata, vedere il <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata la creazione di un lease.  
  
 [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CS/source.cs#1)]
 [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il chiamante immediato non dispone dell'autorizzazione di infrastruttura.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede attendibilità totale per il chiamante immediato. L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberwiseClone">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una copia superficiale dell'oggetto corrente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberwiseClone">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.MarshalByRefObject MemberwiseClone(bool cloneIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function MemberwiseClone (cloneIdentity As Boolean) As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject ^ MemberwiseClone(bool cloneIdentity);" />
      <MemberSignature Language="F#" Value="override this.MemberwiseClone : bool -&gt; MarshalByRefObject" Usage="marshalByRefObject.MemberwiseClone cloneIdentity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneIdentity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloneIdentity">
          <see langword="false" /> per eliminare l'identità dell'oggetto <see cref="T:System.MarshalByRefObject" /> corrente, che provoca l'assegnazione di una nuova identità all'oggetto se sottoposto a marshaling oltre un limite remoto. Il valore <see langword="false" /> in genere è appropriato. <see langword="true" /> per eseguire la copia dell'identità dell'oggetto <see cref="T:System.MarshalByRefObject" /> nel rispettivo duplicato, che provoca l'indirizzamento al server dell'oggetto remoto delle chiamate provenienti dal client remoto.</param>
        <summary>Crea una copia dei riferimenti dell'oggetto <see cref="T:System.MarshalByRefObject" /> corrente.</summary>
        <returns>Copia dei riferimenti dell'oggetto <see cref="T:System.MarshalByRefObject" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> metodo crea una copia superficiale creando un nuovo <xref:System.MarshalByRefObject> dell'oggetto e quindi copiando i campi non statici della classe corrente <xref:System.MarshalByRefObject> oggetto al nuovo oggetto. Se un campo è un tipo di valore, viene eseguita una copia bit per bit del campo. Se un campo è un tipo riferimento, il riferimento viene copiato ma l'oggetto cui viene fatto riferimento non; Pertanto, l'oggetto originale e il suo clone fare riferimento allo stesso oggetto.  
  
 Si consideri, ad esempio, un <xref:System.MarshalByRefObject> oggetto chiamato X che fa riferimento a oggetti A e B, a sua volta, fa riferimento all'oggetto C. Una copia superficiale di X Crea nuovo oggetto X2 che fa riferimento a oggetti A e B. Al contrario, una copia completa di X crea un nuovo oggetto X2 che fa riferimento a nuovi oggetti A2 e B2, che sono copie delle A e B. B2, a sua volta, fa riferimento al nuovo oggetto C2, che è una copia C. utilizzare una classe che implementa il <xref:System.ICloneable> interfaccia per eseguire un c completo o superficiale copia di un oggetto.  
  
 L'identità di un <xref:System.MarshalByRefObject> oggetto viene definito come oggetto del server remoto che è la destinazione di una chiamata del client remoto. Per impostazione predefinita, il clone di un <xref:System.MarshalByRefObject> oggetto ha la stessa identità dell'oggetto originale, che non è in genere il comportamento corretto per i cloni degli oggetti sul lato server che vengono effettuato il marshalling in un confine di comunicazione remota per il lato client. Specificare `false`, che è in genere appropriato, per eliminare l'identità del clone e causare una nuova identità per poter essere assegnati quando il clone viene sottoposto a marshalling attraverso un limite, la comunicazione remota o `true` a causare il clone mantenere l'identità dell'originale <xref:System.MarshalByRefObject> oggetti. Il <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> metodo è destinato a essere usate dagli sviluppatori implementano oggetti del server remoto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>