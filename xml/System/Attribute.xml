<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Attribute.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5438da30acd4c8aab15e23998267de1a8ca100d97.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">438da30acd4c8aab15e23998267de1a8ca100d97</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Represents the base class for custom attributes.</source>
          <target state="translated">Rappresenta la classe base per gli attributi personalizzati.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>The <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class associates predefined system information or user-defined custom information with a target element.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> classe associa informazioni di sistema predefiniti o definiti dall'utente informazioni personalizzate a un elemento di destinazione.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>A target element can be an assembly, class, constructor, delegate, enum, event, field, interface, method, portable executable file module, parameter, property, return value, struct, or another attribute.</source>
          <target state="translated">Un elemento di destinazione può essere un assembly, classe, costruttore, delegato, enum, evento, campo, interfaccia, metodo, modulo file eseguibile portabile, parametro, proprietà, il valore restituito, struct o un altro attributo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Information provided by an attribute is also known as metadata.</source>
          <target state="translated">Le informazioni fornite da un attributo sono noto anche come metadati.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Metadata can be examined at run time by your application to control how your program processes data, or before run time by external tools to control how your application itself is processed or maintained.</source>
          <target state="translated">I metadati possono essere esaminati in fase di esecuzione dell'applicazione per controllare la modalità di elaborazione dati del programma, o prima fase di esecuzione da strumenti esterni per controllare la modalità dell'applicazione stessa viene elaborato o mantenuto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>For example, the .NET Framework predefines and uses attribute types to control run-time behavior, and some programming languages use attribute types to represent language features not directly supported by the .NET Framework common type system.</source>
          <target state="translated">Ad esempio, .NET Framework fornisce predefiniti e utilizza i tipi di attributo per controllare il comportamento in fase di esecuzione, e alcuni linguaggi di programmazione utilizzano tipi di attributo per rappresentare le funzionalità del linguaggio non supportate direttamente dal sistema di tipi .NET Framework comuni.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>All attribute types derive directly or indirectly from the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class.</source>
          <target state="translated">Tutti i tipi di attributo derivano direttamente o indirettamente il <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Attributes can be applied to any target element; multiple attributes can be applied to the same target element; and attributes can be inherited by an element derived from a target element.</source>
          <target state="translated">Gli attributi possono essere applicati a qualsiasi elemento di destinazione. più attributi possono essere applicati allo stesso elemento di destinazione; e gli attributi possono essere ereditati da un elemento derivato da un elemento di destinazione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Use the <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> class to specify the target element to which the attribute is applied.</source>
          <target state="translated">Utilizzare la <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> classe per specificare l'elemento di destinazione a cui è applicato l'attributo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>The <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class provides convenient methods to retrieve and test custom attributes.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> classe fornisce metodi pratici per recuperare e verificare gli attributi personalizzati.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Applying Attributes<ept id="p1">](~/docs/standard/attributes/applying-attributes.md)</ept> and <bpt id="p2">[</bpt>Attributes<ept id="p2">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sull'utilizzo degli attributi, vedere <bpt id="p1">[</bpt>applicazione di attributi<ept id="p1">](~/docs/standard/attributes/applying-attributes.md)</ept> e <bpt id="p2">[</bpt>attributi<ept id="p2">](~/docs/standard/attributes/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>The following code example demonstrates the usage of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente illustra l'uso di <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>This type is thread safe.</source>
          <target state="translated">Questo tipo è thread-safe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Attribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.#ctor">
          <source>This constructor is only called by classes that derive from <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">Questo costruttore viene chiamato solo da classi che derivano da <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.#ctor">
          <source>The following code example shows the definition of a custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class with its constructor.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la definizione di un parametro personalizzato <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> classe con il relativo costruttore.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Attribute.Equals(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with this instance or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da confrontare con questa istanza o <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Attribute.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Attribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> and this instance are of the same type and have identical field values; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> e questa istanza sono dello stesso tipo e dispongono di valori di campo identici; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method uses reflection to retrieve field information for the current instance and the <ph id="ph2">`obj`</ph> argument.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> metodo utilizza la reflection per recuperare informazioni sui campi per l'istanza corrente e <ph id="ph2">`obj`</ph> argomento.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>It then compares field values.</source>
          <target state="translated">Quindi confronta i valori dei campi.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>When implementing your own class derived from <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, you can override the <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Quando l'implementazione di una classe personalizzata derivata da <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, è possibile eseguire l'override di <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>Because it uses reflection, we recommend that you do so.</source>
          <target state="translated">Poiché utilizza la reflection, è consigliabile che questa operazione.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>However, your override should perform a standard test for reference equality (the two arguments represent the same object instance) or value equality (the two arguments are of the same type and have identical field values).</source>
          <target state="translated">Tuttavia, la sostituzione deve eseguire un test standard per l'uguaglianza dei riferimenti (due argomenti rappresentano la stessa istanza dell'oggetto) o di uguaglianza (due argomenti sono dello stesso tipo e con valori di campo identici).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>If you want to perform a custom comparison to determine whether two attributes objects are equal, you can override the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method.</source>
          <target state="translated">Se si desidera eseguire un confronto personalizzato per determinare se gli attributi di due oggetti sono uguali, è possibile eseguire l'override di <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>The following example defines two custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> classes, then creates several objects of each class and uses the <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method to compare them.</source>
          <target state="translated">L'esempio seguente definisce due parametri personalizzati <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> classi, quindi vengono creati diversi oggetti di ogni classe e utilizza il <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> metodo per eseguire un confronto.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Retrieves a custom attribute of a specified type applied to an assembly, module, type member, or method parameter.</source>
          <target state="translated">Recupera un attributo personalizzato di un tipo specificato applicato a un assembly, un modulo, un membro del tipo o un parametro del metodo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> che descrive una raccolta riutilizzabile di moduli.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Retrieves a custom attribute applied to a specified assembly.</source>
          <target state="translated">Recupera un attributo personalizzato applicato a un assembly specificato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Parameters specify the assembly and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare l'assembly e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Riferimento al singolo attributo personalizzato di tipo <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> applicato a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> o <ph id="ph3">&lt;see langword="null" /&gt;</ph> se tale attributo non è presente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph> method if you expect more than one value to be returned, or <ph id="ph2">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph> will be thrown.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph> metodo se si prevede più di un valore da restituire o <ph id="ph2">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph> verrà generata.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> acquisire metodo un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">È stato trovato più di un attributo richiesto.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> che descrive un costruttore, un evento, un campo, un metodo o un membro di proprietà di una classe.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Retrieves a custom attribute applied to a member of a type.</source>
          <target state="translated">Recupera un attributo personalizzato applicato al membro di un tipo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Parameters specify the member, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare il membro e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Riferimento al singolo attributo personalizzato di tipo <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> applicato a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> o <ph id="ph3">&lt;see langword="null" /&gt;</ph> se tale attributo non è presente.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>A match is determined in the same way described in the Return Value section of <ph id="ph1">&lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La corrispondenza viene determinata nello stesso modo descritto nella sezione valore restituito di <ph id="ph1">&lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza su tipi, metodi e costruttori se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> acquisire metodo un <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> non è un costruttore, un metodo, una proprietà, un evento, un tipo o un campo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">È stato trovato più di un attributo richiesto.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> che descrive un file eseguibile portabile.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>Retrieves a custom attribute applied to a module.</source>
          <target state="translated">Recupera un attributo personalizzato applicato a un modulo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>Parameters specify the module, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare il modulo e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Riferimento al singolo attributo personalizzato di tipo <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> applicato a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> o <ph id="ph3">&lt;see langword="null" /&gt;</ph> se tale attributo non è presente.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> acquisire metodo un <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">È stato trovato più di un attributo richiesto.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> che descrive un parametro di un membro di una classe.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>Retrieves a custom attribute applied to a method parameter.</source>
          <target state="translated">Recupera un attributo personalizzato applicato a un parametro del metodo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>Parameters specify the method parameter, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare il parametro del metodo e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Riferimento al singolo attributo personalizzato di tipo <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> applicato a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> o <ph id="ph3">&lt;see langword="null" /&gt;</ph> se tale attributo non è presente.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Se <ph id="ph1">`element`</ph> rappresenta un parametro in un metodo di un tipo derivato, il valore restituito include gli attributi personalizzati ereditabili applicati allo stesso parametro nei metodi di base sottoposto a override.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The following code example defines a custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class and applies the custom attribute to a method in a derived class and the base of the derived class.</source>
          <target state="translated">Esempio di codice seguente definisce un parametro personalizzato <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> classe e si applica l'attributo personalizzato a un metodo in una classe derivata e la base della classe derivata.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The example shows the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method to return the attributes.</source>
          <target state="translated">Nell'esempio viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> per restituire gli attributi.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">È stato trovato più di un attributo richiesto.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> che descrive una raccolta riutilizzabile di moduli.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Questo parametro viene ignorato e non influisce sul funzionamento di questo metodo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to an assembly.</source>
          <target state="translated">Recupera un attributo personalizzato applicato a un assembly.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">I parametri consentono di specificare l'assembly, il tipo dell'attributo personalizzato di cui eseguire la ricerca e un'opzione di ricerca ignorata.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Riferimento al singolo attributo personalizzato di tipo <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> applicato a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> o <ph id="ph3">&lt;see langword="null" /&gt;</ph> se tale attributo non è presente.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> acquisire metodo un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">È stato trovato più di un attributo richiesto.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> che descrive un costruttore, un evento, un campo, un metodo o un membro di proprietà di una classe.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifica di cercare gli attributi personalizzati anche nei predecessori di <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to a member of a type.</source>
          <target state="translated">Recupera un attributo personalizzato applicato al membro di un tipo.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">I parametri consentono di specificare il membro, il tipo dell'attributo personalizzato di cui eseguire la ricerca e la ricerca di eventuali predecessori del membro.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Riferimento al singolo attributo personalizzato di tipo <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> applicato a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> o <ph id="ph3">&lt;see langword="null" /&gt;</ph> se tale attributo non è presente.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza su tipi, metodi e costruttori se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> acquisire metodo un <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> non è un costruttore, un metodo, una proprietà, un evento, un tipo o un campo.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">È stato trovato più di un attributo richiesto.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> che descrive un file eseguibile portabile.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Questo parametro viene ignorato e non influisce sul funzionamento di questo metodo.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to a module.</source>
          <target state="translated">Recupera un attributo personalizzato applicato a un modulo.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">I parametri consentono di specificare il modulo, il tipo dell'attributo personalizzato di cui eseguire la ricerca e un'opzione di ricerca ignorata.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Riferimento al singolo attributo personalizzato di tipo <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> applicato a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> o <ph id="ph3">&lt;see langword="null" /&gt;</ph> se tale attributo non è presente.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> acquisire metodo un <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">È stato trovato più di un attributo richiesto.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> che descrive un parametro di un membro di una classe.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifica di cercare gli attributi personalizzati anche nei predecessori di <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to a method parameter.</source>
          <target state="translated">Recupera un attributo personalizzato applicato a un parametro del metodo.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</source>
          <target state="translated">I parametri consentono di specificare il parametro del metodo, il tipo dell'attributo personalizzato di cui eseguire la ricerca e la ricerca di eventuali predecessori del parametro del metodo.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Riferimento al singolo attributo personalizzato di tipo <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> applicato a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> o <ph id="ph3">&lt;see langword="null" /&gt;</ph> se tale attributo non è presente.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Se <ph id="ph1">`element`</ph> rappresenta un parametro in un metodo di un tipo derivato, il valore restituito include gli attributi personalizzati ereditabili applicati allo stesso parametro nei metodi di base sottoposto a override.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The following code example defines a custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class and applies the custom attribute to a method in a derived class and the base of the derived class.</source>
          <target state="translated">Esempio di codice seguente definisce un parametro personalizzato <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> classe e si applica l'attributo personalizzato a un metodo in una classe derivata e la base della classe derivata.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The example shows the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method to return the attributes.</source>
          <target state="translated">Nell'esempio viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> per restituire gli attributi.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">È stato trovato più di un attributo richiesto.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Retrieves an array of the custom attributes applied to an assembly, module, type member, or method parameter.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata a un assembly, un modulo, un membro del tipo o un parametro del metodo.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> che descrive una raccolta riutilizzabile di moduli.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Recupera una matrice di attributi personalizzati applicati a un assembly.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>A parameter specifies the assembly.</source>
          <target state="translated">Parametro che specifica l'assembly.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati applicati a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The following example retrieves the custom attributes found in the current assembly.</source>
          <target state="translated">L'esempio seguente recupera gli attributi personalizzati dell'assembly corrente.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> che descrive un costruttore, un evento, un campo, un metodo o un membro di proprietà di una classe.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata al membro di un tipo.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>A parameter specifies the member.</source>
          <target state="translated">Un parametro specifica il membro.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati applicati a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph>.</source>
          <target state="translated">Il valore restituito contiene gli attributi personalizzati per i predecessori di <ph id="ph1">`element`</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza su tipi, metodi e costruttori se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> non è un costruttore, un metodo, una proprietà, un evento, un tipo o un campo.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> che descrive un file eseguibile portabile.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata a un modulo.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>A parameter specifies the module.</source>
          <target state="translated">Un parametro specifica il modulo.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati applicati a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> che descrive un parametro di un membro di una classe.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata al parametro di un metodo.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>A parameter specifies the method parameter.</source>
          <target state="translated">Un parametro specifica il parametro del metodo.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati applicati a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Se <ph id="ph1">`element`</ph> rappresenta un parametro in un metodo di un tipo derivato, il valore restituito include gli attributi personalizzati ereditabili applicati allo stesso parametro nei metodi di base sottoposto a override.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> che descrive una raccolta riutilizzabile di moduli.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Questo parametro viene ignorato e non influisce sul funzionamento di questo metodo.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Recupera una matrice di attributi personalizzati applicati a un assembly.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Parameters specify the assembly, and an ignored search option.</source>
          <target state="translated">I parametri specificano l'assembly e un'opzione di ricerca ignorata.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati applicati a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> che descrive una raccolta riutilizzabile di moduli.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Recupera una matrice di attributi personalizzati applicati a un assembly.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Parameters specify the assembly, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare l'assembly e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applicati a <ph id="ph3">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> che descrive un costruttore, un evento, un campo, un metodo o un membro di proprietà di una classe.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifica di cercare gli attributi personalizzati anche nei predecessori di <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata al membro di un tipo.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">I parametri consentono di specificare il membro, il tipo dell'attributo personalizzato di cui eseguire la ricerca e la ricerca di eventuali predecessori del membro.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati applicati a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Il valore restituito contiene gli attributi personalizzati per i predecessori di <ph id="ph1">`element`</ph> se <ph id="ph2">`inherit`</ph> è <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza su tipi, metodi e costruttori se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> non è un costruttore, un metodo, una proprietà, un evento, un tipo o un campo.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> che descrive un costruttore, un evento, un campo, un metodo o un membro di proprietà di una classe.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata al membro di un tipo.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Parameters specify the member, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare il membro e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="type" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati di tipo <ph id="ph2">&lt;paramref name="type" /&gt;</ph> applicati a <ph id="ph3">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph>.</source>
          <target state="translated">Il valore restituito contiene gli attributi personalizzati per i predecessori di <ph id="ph1">`element`</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza su tipi, metodi e costruttori se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="type" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> non è un costruttore, un metodo, una proprietà, un evento, un tipo o un campo.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> che descrive un file eseguibile portabile.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Questo parametro viene ignorato e non influisce sul funzionamento di questo metodo.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata a un modulo.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>Parameters specify the module, and an ignored search option.</source>
          <target state="translated">I parametri specificano il modulo e un'opzione di ricerca ignorata.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati applicati a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Il valore restituito contiene gli attributi personalizzati per i predecessori di <ph id="ph1">`element`</ph> se <ph id="ph2">`inherit`</ph> è <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> che descrive un file eseguibile portabile.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata a un modulo.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>Parameters specify the module, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare il modulo e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applicati a <ph id="ph3">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> che descrive un parametro di un membro di una classe.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifica di cercare gli attributi personalizzati anche nei predecessori di <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata al parametro di un metodo.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Parameters specify the method parameter, and whether to search ancestors of the method parameter.</source>
          <target state="translated">I parametri specificano il parametro del metodo e la ricerca di eventuali predecessori del parametro del metodo.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati applicati a <ph id="ph2">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Se <ph id="ph1">`element`</ph> rappresenta un parametro in un metodo di un tipo derivato, il valore restituito include gli attributi personalizzati ereditabili applicati allo stesso parametro nei metodi di base sottoposto a override.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Reflection.ParameterInfo.Member" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="element" /&gt;</ph> is <ph id="ph3">&lt;see langword="null." /&gt;</ph><ph id="ph4">&lt;see langword="" /&gt;</ph></source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Reflection.ParameterInfo.Member" /&gt;</ph> di <ph id="ph2">&lt;paramref name="element" /&gt;</ph> è <ph id="ph3">&lt;see langword="null." /&gt;</ph><ph id="ph4">&lt;see langword="" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> che descrive un parametro di un membro di una classe.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata al parametro di un metodo.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>Parameters specify the method parameter, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare il parametro del metodo e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applicati a <ph id="ph3">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Se <ph id="ph1">`element`</ph> rappresenta un parametro in un metodo di un tipo derivato, il valore restituito include gli attributi personalizzati ereditabili applicati allo stesso parametro nei metodi di base sottoposto a override.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> che descrive una raccolta riutilizzabile di moduli.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Questo parametro viene ignorato e non influisce sul funzionamento di questo metodo.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Recupera una matrice di attributi personalizzati applicati a un assembly.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">I parametri consentono di specificare l'assembly, il tipo dell'attributo personalizzato di cui eseguire la ricerca e un'opzione di ricerca ignorata.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applicati a <ph id="ph3">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> che descrive un costruttore, un evento, un campo, un metodo o un membro di proprietà di una classe.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifica di cercare gli attributi personalizzati anche nei predecessori di <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata al membro di un tipo.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">I parametri consentono di specificare il membro, il tipo dell'attributo personalizzato di cui eseguire la ricerca e la ricerca di eventuali predecessori del membro.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="type" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati di tipo <ph id="ph2">&lt;paramref name="type" /&gt;</ph> applicati a <ph id="ph3">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Il valore restituito contiene gli attributi personalizzati per i predecessori di <ph id="ph1">`element`</ph> se <ph id="ph2">`inherit`</ph> è <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce gli attributi di sicurezza su tipi, metodi e costruttori se gli attributi vengono archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="type" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> non è un costruttore, un metodo, una proprietà, un evento, un tipo o un campo.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> che descrive un file eseguibile portabile.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Questo parametro viene ignorato e non influisce sul funzionamento di questo metodo.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata a un modulo.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">I parametri consentono di specificare il modulo, il tipo dell'attributo personalizzato di cui eseguire la ricerca e un'opzione di ricerca ignorata.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applicati a <ph id="ph3">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Il valore restituito contiene gli attributi personalizzati per i predecessori di <ph id="ph1">`element`</ph> se <ph id="ph2">`inherit`</ph> è <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> che descrive un parametro di un membro di una classe.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifica di cercare gli attributi personalizzati anche nei predecessori di <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Recupera una matrice degli attributi personalizzati applicata al parametro di un metodo.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</source>
          <target state="translated">I parametri consentono di specificare il parametro del metodo, il tipo dell'attributo personalizzato di cui eseguire la ricerca e la ricerca di eventuali predecessori del parametro del metodo.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi personalizzati di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applicati a <ph id="ph3">&lt;paramref name="element" /&gt;</ph> oppure matrice vuota se non sono presenti tali attributi.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Se <ph id="ph1">`element`</ph> rappresenta un parametro in un metodo di un tipo derivato, il valore restituito include gli attributi personalizzati ereditabili applicati allo stesso parametro nei metodi di base sottoposto a override.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Non è possibile caricare un tipo di attributo personalizzato.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Restituisce il codice hash per l'istanza.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Codice hash di un intero con segno a 32 bit.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetHashCode">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetHashCode%2A&gt;</ph> in the context of <ph id="ph2">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.GetHashCode%2A&gt;</ph> nel contesto di <ph id="ph2">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefaultAttribute">
          <source>When overridden in a derived class, indicates whether the value of this instance is the default value for the derived class.</source>
          <target state="translated">In caso di override in una classe derivata, indica se il valore di questa istanza è il valore predefinito per la classe derivata.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefaultAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance is the default attribute for the class; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se questa istanza è l'attributo predefinito per la classe. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The default implementation of this class returns <ph id="ph1">`false`</ph>, and must be implemented in the derived class to be useful to that class.</source>
          <target state="translated">L'implementazione predefinita di questa classe restituisce <ph id="ph1">`false`</ph>e devono essere implementati nella classe derivata per essere utile a tale classe.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The implementation of this method in a derived class compares the value of this instance to a standard default value, then returns a Boolean value that indicates whether the value of this instance is equal to the standard value.</source>
          <target state="translated">L'implementazione del metodo in una classe derivata, confronta il valore di questa istanza con un valore predefinito standard, quindi restituisce un valore booleano che indica se il valore di questa istanza è uguale al valore standard.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The standard value is typically coded as a constant in the implementation, or stored programmatically in a field used by the implementation.</source>
          <target state="translated">Il valore standard è in genere codificato come costante nell'implementazione o archiviato a livello di codice in un campo utilizzato dall'implementazione.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefaultAttribute%2A&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.IsDefaultAttribute%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Determines whether any custom attributes of a specified type are applied to an assembly, module, type member, or method parameter.</source>
          <target state="translated">Stabilisce se vengono applicati attributi personalizzati di un tipo specificato a un assembly, un modulo, un membro del tipo o un parametro del metodo.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> che descrive una raccolta riutilizzabile di moduli.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Determines whether any custom attributes are applied to an assembly.</source>
          <target state="translated">Stabilisce se vengono applicati attributi personalizzati a un assembly.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Parameters specify the assembly, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare l'assembly e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un attributo personalizzato di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è applicato a <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if the assembly has security attributes stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce <ph id="ph1">`true`</ph> se l'assembly contiene attributi di sicurezza archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, type, or property member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> che descrive un costruttore, un evento, un campo, un metodo, un tipo o un membro di proprietà di una classe.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Determines whether any custom attributes are applied to a member of a type.</source>
          <target state="translated">Stabilisce se vengono applicati attributi personalizzati al membro di un tipo.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Parameters specify the member, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare il membro e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un attributo personalizzato di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è applicato a <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The ancestors of <ph id="ph1">`element`</ph> are searched for custom attributes.</source>
          <target state="translated">I relativi predecessori <ph id="ph1">`element`</ph> vengono cercati gli attributi personalizzati.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if a type, method, or constructor has security attributes stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce <ph id="ph1">`true`</ph> se un tipo, un metodo o costruttore ha gli attributi di sicurezza archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> non è un costruttore, un metodo, una proprietà, un evento, un tipo o un campo.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> che descrive un file eseguibile portabile.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>Determines whether any custom attributes of a specified type are applied to a module.</source>
          <target state="translated">Determina se vengono applicati attributi personalizzati del tipo specificato a un modulo.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>Parameters specify the module, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare il modulo e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un attributo personalizzato di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è applicato a <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>The ancestors of <ph id="ph1">`element`</ph> are not searched for custom attributes.</source>
          <target state="translated">I relativi predecessori <ph id="ph1">`element`</ph> non vengono cercati gli attributi personalizzati.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> che descrive un parametro di un membro di una classe.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>Determines whether any custom attributes are applied to a method parameter.</source>
          <target state="translated">Stabilisce se vengono applicati attributi personalizzati al parametro di un metodo.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>Parameters specify the method parameter, and the type of the custom attribute to search for.</source>
          <target state="translated">I parametri consentono di specificare il parametro del metodo e il tipo dell'attributo personalizzato di cui eseguire la ricerca.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un attributo personalizzato di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è applicato a <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The ancestors of <ph id="ph1">`element`</ph> are searched for custom attributes.</source>
          <target state="translated">I relativi predecessori <ph id="ph1">`element`</ph> vengono cercati gli attributi personalizzati.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> che descrive una raccolta riutilizzabile di moduli.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Questo parametro viene ignorato e non influisce sul funzionamento di questo metodo.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to an assembly.</source>
          <target state="translated">Stabilisce se vengono applicati attributi personalizzati a un assembly.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">I parametri consentono di specificare l'assembly, il tipo dell'attributo personalizzato di cui eseguire la ricerca e un'opzione di ricerca ignorata.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un attributo personalizzato di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è applicato a <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if the assembly has security attributes stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce <ph id="ph1">`true`</ph> se l'assembly contiene attributi di sicurezza archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, type, or property member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> che descrive un costruttore, un evento, un campo, un metodo, un tipo o un membro di proprietà di una classe.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifica di cercare gli attributi personalizzati anche nei predecessori di <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to a member of a type.</source>
          <target state="translated">Stabilisce se vengono applicati attributi personalizzati al membro di un tipo.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">I parametri consentono di specificare il membro, il tipo dell'attributo personalizzato di cui eseguire la ricerca e la ricerca di eventuali predecessori del membro.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un attributo personalizzato di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è applicato a <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if a type, method, or constructor has security attributes stored in the new metadata format.</source>
          <target state="translated">A partire da .NET Framework versione 2.0, questo metodo restituisce <ph id="ph1">`true`</ph> se un tipo, un metodo o costruttore ha gli attributi di sicurezza archiviati nel nuovo formato dei metadati.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Gli assembly compilati con la versione 2.0 o versioni successive utilizzano il nuovo formato.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Gli assembly dinamici e gli assembly compilati con le versioni precedenti di .NET Framework utilizzano il formato XML precedente.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>creazione di attributi di sicurezza dichiarativa<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> non è un costruttore, un metodo, una proprietà, un evento, un tipo o un campo.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> che descrive un file eseguibile portabile.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Questo parametro viene ignorato e non influisce sul funzionamento di questo metodo.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to a module.</source>
          <target state="translated">Stabilisce se vengono applicati attributi personalizzati a un modulo.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">I parametri consentono di specificare il modulo, il tipo dell'attributo personalizzato di cui eseguire la ricerca e un'opzione di ricerca ignorata.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un attributo personalizzato di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è applicato a <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This method ignores the <ph id="ph1">`inherit`</ph> parameter and does not search the ancestors of <ph id="ph2">`element`</ph> for custom attributes.</source>
          <target state="translated">Questo metodo ignora la <ph id="ph1">`inherit`</ph> parametro e non esegue la ricerca i relativi predecessori <ph id="ph2">`element`</ph> per gli attributi personalizzati.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Un oggetto derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> che descrive un parametro di un membro di una classe.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Tipo o tipo base dell'attributo personalizzato da cercare.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifica di cercare gli attributi personalizzati anche nei predecessori di <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to a method parameter.</source>
          <target state="translated">Stabilisce se vengono applicati attributi personalizzati al parametro di un metodo.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</source>
          <target state="translated">I parametri consentono di specificare il parametro del metodo, il tipo dell'attributo personalizzato di cui eseguire la ricerca e la ricerca di eventuali predecessori del parametro del metodo.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un attributo personalizzato di tipo <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è applicato a <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, considerando un <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> come parametro.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> o <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a method, constructor, or type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> non è un metodo, un costruttore o un tipo.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Attribute.Match(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with this instance of <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da confrontare con questa istanza di <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Attribute.Match(System.Object)">
          <source>When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.</source>
          <target state="translated">Quando è sottoposto a override in una classe derivata, restituisce un valore che indica se questa istanza equivale a un oggetto specificato.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Attribute.Match(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance equals <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se questa istanza equivale a <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>This method determines if one <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> equals another.</source>
          <target state="translated">Questo metodo determina se un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> uguale a un altro.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Its default implementation is the same as <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph>, which determines whether two attributes are of the same type and have the same field values.</source>
          <target state="translated">L'implementazione predefinita è lo stesso come <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph>, che determina se due attributi sono dello stesso tipo e che hanno gli stessi valori di campo.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>In general, the <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method is intended to perform a standard test for reference or value equality.</source>
          <target state="translated">In generale, il <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> metodo deve eseguire un test standard per l'uguaglianza di riferimento o valore.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>You can override the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method when you want to perform a custom comparison for equality that is based on some criteria other than that two attribute instances are of the same type and have identifical values.</source>
          <target state="translated">È possibile eseguire l'override di <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> metodo quando si desidera eseguire un confronto personalizzato per verificarne l'uguaglianza in base ad alcuni criteri diverso che due istanze di attributo sono dello stesso tipo e avere valori identifical.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>For example, you can override the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method to compare attributes in the following scenarios:</source>
          <target state="translated">Ad esempio, è possibile eseguire l'override di <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> metodo per confrontare gli attributi negli scenari seguenti:</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>An attribute includes a bit field, and you consider two attribute instances equal if a particular bit is set.</source>
          <target state="translated">Un attributo include un campo di bit ed è considerare due istanze di attributo uguali se è impostato un bit specifico.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>For example, a <ph id="ph1">`NumericDisplay`</ph> attribute might include a bit field that indicates what numeric formats (such as binary, octal, decimal, and hexadecimal) a client supports.</source>
          <target state="translated">Ad esempio, un <ph id="ph1">`NumericDisplay`</ph> attributo potrebbe includere un campo di bit che indica che un client supporta i formati numerici (ad esempio binaria, ottale, decimali, esadecimali e).</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>The overridden <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method might consider two instances equal if they support the same numeric format.</source>
          <target state="translated">Sottoposto a override <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> metodo potrebbe prendere in considerazione due istanze di uguale che supportano lo stesso formato numerico.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>An attribute includes multiple fields that contain the same kind of information, or it contains an array in which values can be in any order.</source>
          <target state="translated">Un attributo include più campi che contengono lo stesso tipo di informazioni o contiene una matrice in cui i valori possono essere in qualsiasi ordine.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>For example, an <ph id="ph1">`Author`</ph> attribute might include multiple fields for author names.</source>
          <target state="translated">Ad esempio, un <ph id="ph1">`Author`</ph> attributo potrebbe includere più campi per i nomi degli autori.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>The overridden <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method might consider two instances equal if they have the same authors regardless of whether each field is equal to the corresponding field.</source>
          <target state="translated">Sottoposto a override <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> metodo potrebbe prendere in considerazione due istanze uguali se hanno gli stessi autori indipendentemente dal fatto che ogni campo è uguale al campo corrispondente.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>The following example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> to create a custom comparison method for attribute values.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> per creare un metodo di confronto personalizzato per i valori di attributo.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>If defines an <ph id="ph1">`AuthorsAttribute`</ph> that internally contains a <ph id="ph2">`List&lt;String&gt;`</ph> that stores authors' names.</source>
          <target state="translated">Se definisce un <ph id="ph1">`AuthorsAttribute`</ph> internamente, che contiene un <ph id="ph2">`List&lt;String&gt;`</ph> che archivia i nomi degli autori.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Because the names can occur in any order in the list, it overrides the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method to compare author names regardless of their position in the list.</source>
          <target state="translated">Poiché i nomi possono verificarsi in qualsiasi ordine nell'elenco, viene eseguito l'override di <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> metodo per confrontare i nomi degli autori indipendentemente dalla loro posizione nell'elenco.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Note the <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method, which performs a test for value equality, returns different results from the <ph id="ph2">&lt;xref:System.Attribute.Match%2A&gt;</ph> method.</source>
          <target state="translated">Si noti il <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> metodo, che esegue un test di uguaglianza, vengono restituiti risultati diversi dal <ph id="ph2">&lt;xref:System.Attribute.Match%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Riservato per utilizzi futuri.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Deve essere IID_NULL.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Passed-in array of names to be mapped.</source>
          <target state="translated">Matrice di nomi passata di cui eseguire il mapping.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Count of the names to be mapped.</source>
          <target state="translated">Conteggio dei nomi di cui eseguire il mapping.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">Contesto delle impostazioni locali in cui interpretare i nomi.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Caller-allocated array that receives the IDs corresponding to the names.</source>
          <target state="translated">Matrice allocata dal chiamante che riceve gli ID corrispondenti ai nomi.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, vedere MSDN Library.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">L'accesso ad associazione tardiva usando l'interfaccia COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> non è supportato.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The type information to return.</source>
          <target state="translated">Informazioni sul tipo da restituire.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale identifier for the type information.</source>
          <target state="translated">Identificatore delle impostazioni locali per le informazioni sul tipo.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Receives a pointer to the requested type information object.</source>
          <target state="translated">Riceve un puntatore all'oggetto relativo alle informazioni sul tipo richiesto.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Retrieves the type information for an object, which can be used to get the type information for an interface.</source>
          <target state="translated">Recupera le informazioni sul tipo relative a un oggetto, che possono essere usate per ottenere informazioni sul tipo relative a un'interfaccia.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, vedere MSDN Library.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">L'accesso ad associazione tardiva usando l'interfaccia COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> non è supportato.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>Points to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">Punta a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall'oggetto.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">Recupera il numero delle interfacce di informazioni sul tipo fornite da un oggetto (0 o 1).</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, vedere MSDN Library.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">L'accesso ad associazione tardiva usando l'interfaccia COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> non è supportato.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Identifies the member.</source>
          <target state="translated">Identifica il membro.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Riservato per utilizzi futuri.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Deve essere IID_NULL.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">Contesto di impostazioni locali all'interno del quale devono essere interpretati gli argomenti.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Flags describing the context of the call.</source>
          <target state="translated">Flag che descrivono il contesto della chiamata.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to the location where the result is to be stored.</source>
          <target state="translated">Puntatore alla posizione in cui deve essere archiviato il risultato.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to a structure that contains exception information.</source>
          <target state="translated">Puntatore a una struttura contenente informazioni sull'eccezione.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">Indice del primo argomento che contiene un errore.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">Fornisce l'accesso a proprietà e metodi esposti da un oggetto.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">`IDispatch::Invoke`</ph>, vedere MSDN Library.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">L'accesso ad associazione tardiva usando l'interfaccia COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> non è supportato.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="P:System.Attribute.TypeId">
          <source>When implemented in a derived class, gets a unique identifier for this <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Quando è implementata in una classe derivata, ottiene un identificatore univoco della classe <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is a unique identifier for the attribute.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che rappresenta l'identificatore univoco dell'attributo.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>As implemented, this identifier is merely the <ph id="ph1">&lt;xref:System.Type&gt;</ph> of the attribute.</source>
          <target state="translated">Quando viene implementato, questo identificatore è semplicemente il <ph id="ph1">&lt;xref:System.Type&gt;</ph> dell'attributo.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>However, it is intended that the unique identifier be used to identify two attributes of the same type.</source>
          <target state="translated">Tuttavia, lo scopo è l'identificatore univoco utilizzato per identificare due attributi dello stesso tipo.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> property in a custom parameter <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> class and shows its use.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> proprietà in un parametro personalizzato <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> classe e viene illustrato l'utilizzo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>