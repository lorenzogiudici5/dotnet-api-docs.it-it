<Type Name="WeakReference" FullName="System.WeakReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5c9691a2898175b8b7be672b31b923b71e66d451" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37479181" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WeakReference : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WeakReference extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.WeakReference" />
  <TypeSignature Language="VB.NET" Value="Public Class WeakReference&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WeakReference : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WeakReference = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9621c-101">Rappresenta un riferimento debole, ovvero un riferimento a un oggetto che può ancora essere recuperato dalla procedura di Garbage Collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9621c-101">Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9621c-102">Un riferimento debole consente al garbage collector di raccogliere un oggetto senza tuttavia impedire all'applicazione accedere all'oggetto.</span><span class="sxs-lookup"><span data-stu-id="9621c-102">A weak reference allows the garbage collector to collect an object while still allowing an application to access the object.</span></span> <span data-ttu-id="9621c-103">Se è necessario l'oggetto, è possibile comunque ottenere un riferimento forte ad esso e impedire che venga raccolto.</span><span class="sxs-lookup"><span data-stu-id="9621c-103">If you need the object, you can still obtain a strong reference to it and prevent it from being collected.</span></span> <span data-ttu-id="9621c-104">Per altre informazioni su come usare brevi e i riferimenti deboli lunghi, vedere [riferimenti deboli](~/docs/standard/garbage-collection/weak-references.md).</span><span class="sxs-lookup"><span data-stu-id="9621c-104">For more information about how to use short and long weak references, see [Weak References](~/docs/standard/garbage-collection/weak-references.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9621c-105">Nell'esempio seguente viene illustrato come è possibile usare riferimenti deboli per mantenere una cache di oggetti come una risorsa per un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9621c-105">The following example demonstrates how you can use weak references to maintain a cache of objects as a resource for an application.</span></span> <span data-ttu-id="9621c-106">La cache viene costruita usando un <xref:System.Collections.Generic.IDictionary%602> di <xref:System.WeakReference> oggetti codificati da un valore di indice.</span><span class="sxs-lookup"><span data-stu-id="9621c-106">The cache is constructed using an <xref:System.Collections.Generic.IDictionary%602> of <xref:System.WeakReference> objects keyed by an index value.</span></span> <span data-ttu-id="9621c-107">Il <xref:System.WeakReference.Target%2A> proprietà per il <xref:System.WeakReference> oggetti è un oggetto in una matrice di byte che rappresenta i dati.</span><span class="sxs-lookup"><span data-stu-id="9621c-107">The <xref:System.WeakReference.Target%2A> property for the <xref:System.WeakReference> objects is an object in a byte array that represents data.</span></span>  
  
 <span data-ttu-id="9621c-108">Nell'esempio si accede in modo casuale gli oggetti nella cache.</span><span class="sxs-lookup"><span data-stu-id="9621c-108">The example randomly accesses objects in the cache.</span></span> <span data-ttu-id="9621c-109">Se un oggetto viene recuperato per la garbage collection, un nuovo oggetto dati viene rigenerato. in caso contrario, l'oggetto è disponibile per l'accesso a causa il riferimento debole.</span><span class="sxs-lookup"><span data-stu-id="9621c-109">If an object is reclaimed for garbage collection, a new data object is regenerated; otherwise, the object is available to access because of the weak reference.</span></span>  
  
 [!code-csharp[WeakReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#1)]
 [!code-vb[WeakReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="9621c-110">la possibilità di chiamare codice non gestito.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9621c-110">for the ability to call unmanaged code.</span>
      </span>
      <span data-ttu-id="9621c-111">Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Valore dell'autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="9621c-111">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <altmember cref="T:System.GC" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9621c-112">Inizializza una nuova istanza della classe <see cref="T:System.WeakReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-112">Initializes a new instance of the <see cref="T:System.WeakReference" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="new WeakReference : obj -&gt; WeakReference" Usage="new System.WeakReference target" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="9621c-113">Oggetto da controllare o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-113">The object to track or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9621c-114">Inizializza una nuova istanza della classe <see cref="T:System.WeakReference" /> che fa riferimento all'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-114">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9621c-115">Questo costruttore crea un riferimento debole breve a `target`.</span><span class="sxs-lookup"><span data-stu-id="9621c-115">This constructor creates a short weak reference to `target`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target, bool trackResurrection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target, bool trackResurrection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object, trackResurrection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target, bool trackResurrection);" />
      <MemberSignature Language="F#" Value="new WeakReference : obj * bool -&gt; WeakReference" Usage="new System.WeakReference (target, trackResurrection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="trackResurrection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="9621c-116">Oggetto da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-116">An object to track.</span>
          </span>
        </param>
        <param name="trackResurrection">
          <span data-ttu-id="9621c-117">Indica il momento in cui interrompere il controllo dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-117">Indicates when to stop tracking the object.</span>
          </span>
          <span data-ttu-id="9621c-118">Se <see langword="true" />, l'oggetto viene controllato dopo la finalizzazione; se <see langword="false" />, l'oggetto viene controllato soltanto fino alla finalizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-118">If <see langword="true" />, the object is tracked after finalization; if <see langword="false" />, the object is only tracked until finalization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9621c-119">Inizializza una nuova istanza della classe <see cref="T:System.WeakReference" />, che fa riferimento all'oggetto specificato e usa l'opzione di rilevamento specificata per il ripristino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-119">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object and using the specified resurrection tracking.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9621c-120">Se `trackResurrection` è `false`, viene creato un riferimento debole breve.</span><span class="sxs-lookup"><span data-stu-id="9621c-120">If `trackResurrection` is `false`, a short weak reference is created.</span></span> <span data-ttu-id="9621c-121">Se `trackResurrection` è `true`, viene creato un riferimento debole lungo.</span><span class="sxs-lookup"><span data-stu-id="9621c-121">If `trackResurrection` is `true`, a long weak reference is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9621c-122">L'esempio seguente crea una cache di oggetti dati con riferimenti deboli brevi.</span><span class="sxs-lookup"><span data-stu-id="9621c-122">The following example creates a cache of data objects with short weak references.</span></span> <span data-ttu-id="9621c-123">In questo esempio fa parte di un esempio più esaustivo disponibile per il <xref:System.WeakReference> classe.</span><span class="sxs-lookup"><span data-stu-id="9621c-123">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#2](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#2)]
 [!code-vb[WeakReference#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new WeakReference : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; WeakReference" Usage="new System.WeakReference (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="9621c-124">Oggetto contenente tutti dati necessari per serializzare o deserializzare l'oggetto <see cref="T:System.WeakReference" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-124">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="9621c-125">(Riservato) Descrizione dell'origine e della destinazione del flusso serializzato specificato da <c>info</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-125">(Reserved) Describes the source and destination of the serialized stream specified by <c>info</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9621c-126">Inizializza una nuova istanza della classe <see cref="T:System.WeakReference" />, usando dati deserializzati dalla serializzazione e dagli oggetti del flusso specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-126">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, using deserialized data from the specified serialization and stream objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9621c-127">Il `context` parametro è riservato e non partecipa attualmente questa operazione.</span><span class="sxs-lookup"><span data-stu-id="9621c-127">The `context` parameter is reserved, and does not currently participate in this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9621c-128">
            <paramref name="info" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-128">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WeakReference ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="weakReference.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9621c-129">Elimina il riferimento alla destinazione rappresentata dall'oggetto <see cref="T:System.WeakReference" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-129">Discards the reference to the target represented by the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="weakReference.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="9621c-130">Oggetto contenente tutti dati necessari per serializzare o deserializzare l'oggetto <see cref="T:System.WeakReference" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-130">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="9621c-131">(Riservato) Posizione nella quale vengono memorizzati e dalla quale sono recuperati i dati serializzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-131">(Reserved) The location where serialized data is stored and retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9621c-132">Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con tutti i dati necessari per serializzare l'oggetto <see cref="T:System.WeakReference" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-132">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with all the data needed to serialize the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9621c-133">Questo metodo archivia tutte le informazioni contenute in `info` necessari per serializzare l'oggetto corrente <xref:System.WeakReference> oggetto.</span><span class="sxs-lookup"><span data-stu-id="9621c-133">This method stores all the information in `info` necessary to serialize the current <xref:System.WeakReference> object.</span></span>  
  
 <span data-ttu-id="9621c-134">Il `context` parametro è riservato e non è attualmente usato nell'esecuzione di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="9621c-134">The `context` parameter is reserved and is not currently used in the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9621c-135">
            <paramref name="info" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-135">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9621c-136">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-136">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9621c-137">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-137">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsAlive">
      <MemberSignature Language="C#" Value="public virtual bool IsAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlive" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.IsAlive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAlive : bool" Usage="System.WeakReference.IsAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9621c-138">Ottiene un valore che indica se l'oggetto cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> corrente è stato sottoposto alla procedura di Garbage Collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-138">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9621c-139">
            <see langword="true" /> se l'oggetto cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> corrente non è stato sottoposto alla procedura di Garbage Collection ed è ancora accessibile. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-139">
              <see langword="true" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has not been garbage collected and is still accessible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9621c-140">Poiché un oggetto potrebbe potenzialmente essere recuperato per la garbage collection immediatamente dopo il <xref:System.WeakReference.IsAlive%2A> proprietà restituisce `true`, usando questa proprietà non è consigliata a meno che non si verifica solo una `false` valore restituito.</span><span class="sxs-lookup"><span data-stu-id="9621c-140">Because an object could potentially be reclaimed for garbage collection immediately after the <xref:System.WeakReference.IsAlive%2A> property returns `true`, using this property is not recommended unless you are testing only for a `false` return value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public virtual object Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Target" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Target As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Target { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : obj with get, set" Usage="System.WeakReference.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9621c-141">Ottiene o imposta l'oggetto o la destinazione a cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-141">Gets or sets the object (the target) referenced by the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9621c-142">
            <see langword="null" /> se l'oggetto cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> è stato sottoposto alla procedura di Garbage Collection. In caso contrario un riferimento all'oggetto cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-142">
              <see langword="null" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected; otherwise, a reference to the object referenced by the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9621c-143">Dopo aver impostato questa proprietà per l'oggetto di destinazione, assicurarsi che non sono presenti altri riferimenti sicuri all'oggetto. in caso contrario non verrà raccolti.</span><span class="sxs-lookup"><span data-stu-id="9621c-143">After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9621c-144">Nell'esempio seguente prova a ottenere un oggetto da una cache di oggetti con riferimenti deboli.</span><span class="sxs-lookup"><span data-stu-id="9621c-144">The following example tries to obtain an object from a cache of objects with weak references.</span></span> <span data-ttu-id="9621c-145">Se l'oggetto è stato recuperato per la garbage collection, viene generato un nuovo oggetto.</span><span class="sxs-lookup"><span data-stu-id="9621c-145">If the object was reclaimed for garbage collection, a new object is generated.</span></span> <span data-ttu-id="9621c-146">In questo esempio fa parte di un esempio più esaustivo disponibile per il <xref:System.WeakReference> classe.</span><span class="sxs-lookup"><span data-stu-id="9621c-146">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#3](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#3)]
 [!code-vb[WeakReference#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9621c-147">Il riferimento all'oggetto di destinazione non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-147">The reference to the target object is invalid.</span>
          </span>
          <span data-ttu-id="9621c-148">Questa eccezione può essere generata durante l'impostazione della proprietà se il valore è un riferimento null o se l'oggetto è stato finalizzato durante l'operazione set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-148">This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
    <Member MemberName="TrackResurrection">
      <MemberSignature Language="C#" Value="public virtual bool TrackResurrection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackResurrection" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.TrackResurrection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TrackResurrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TrackResurrection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrackResurrection : bool" Usage="System.WeakReference.TrackResurrection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9621c-149">Ottiene un valore che indica se l'oggetto cui fa riferimento l'oggetto <see cref="T:System.WeakReference" /> corrente viene controllato dopo essere stato finalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-149">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object is tracked after it is finalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9621c-150">
            <see langword="true" /> se l'oggetto cui si riferisce l'oggetto <see cref="T:System.WeakReference" /> corrente viene controllato dopo la finalizzazione. <see langword="false" /> se l'oggetto viene controllato soltanto fino alla finalizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9621c-150">
              <see langword="true" /> if the object the current <see cref="T:System.WeakReference" /> object refers to is tracked after finalization; or <see langword="false" /> if the object is only tracked until finalization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9621c-151">Se `true`, il riferimento debole è un riferimento debole lungo e `true` è stato specificato per il `trackResurrection` parametri in di <xref:System.WeakReference> costruttore.</span><span class="sxs-lookup"><span data-stu-id="9621c-151">If `true`, the weak reference is a long weak reference and `true` was specified for the `trackResurrection` parameter in the <xref:System.WeakReference> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
  </Members>
</Type>