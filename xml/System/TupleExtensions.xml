<Type Name="TupleExtensions" FullName="System.TupleExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="deb32a21bf3435f88f0ce9bf220e64f122be8edc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30731615" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class TupleExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TupleExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.TupleExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TupleExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class TupleExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ValueTuple</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i metodi di estensione per le tuple per interagire con il supporto dei linguaggi per le tuple in C#.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anche se tali metodi possono essere chiamati direttamente, principalmente destinati per l'utilizzo dal compilatore c# per la creazione e Decostruzione dei Tuple.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Deconstruct&lt;T1&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Decostruisce i componenti di una tupla in variabili separate.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deconstruct&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1&gt; (this Tuple&lt;T1&gt; value, out T1 item1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1&gt;(class System.Tuple`1&lt;!!T1&gt; value, [out] !!T1&amp; item1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1) (value As Tuple(Of T1), ByRef item1 As T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del singolo elemento.</typeparam>
        <param name="value">Tupla con 1 elementi da decostruire in una variabile separata.</param>
        <param name="item1">Valore del singolo elemento.</param>
        <summary>Decostruisce una tupla con 1 elemento in una variabile separata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2&gt; (this Tuple&lt;T1,T2&gt; value, out T1 item1, out T2 item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2&gt;(class System.Tuple`2&lt;!!T1, !!T2&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2) (value As Tuple(Of T1, T2), ByRef item1 As T1, ByRef item2 As T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <param name="value">Tupla con 2 elementi da decostruire in 2 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <summary>Decostruisce una tupla con 2 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3&gt; (this Tuple&lt;T1,T2,T3&gt; value, out T1 item1, out T2 item2, out T3 item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3&gt;(class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3) (value As Tuple(Of T1, T2, T3), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <param name="value">Tupla con 3 elementi da decostruire in 3 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <summary>Decostruisce una tupla con 3 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4&gt; (this Tuple&lt;T1,T2,T3,T4&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4&gt;(class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4) (value As Tuple(Of T1, T2, T3, T4), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <param name="value">Tupla con 4 elementi da decostruire in 4 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <summary>Decostruisce una tupla con 4 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5&gt; (this Tuple&lt;T1,T2,T3,T4,T5&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5&gt;(class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5) (value As Tuple(Of T1, T2, T3, T4, T5), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <param name="value">Tupla con 5 elementi da decostruire in 5 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <summary>Decostruisce una tupla con 5 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6) (value As Tuple(Of T1, T2, T3, T4, T5, T6), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <param name="value">Tupla con 6 elementi da decostruire in 6 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <summary>Decostruisce una tupla con 6 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <param name="value">Tupla con 7 elementi da decostruire in 7 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <summary>Decostruisce una tupla con 7 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <param name="value">Tupla con 8 elementi da decostruire in 8 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <summary>Decostruisce una tupla con 8 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` è un elemento in una tupla annidato.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`2&lt;!!T8, !!T9&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <param name="value">Tupla con 9 elementi da decostruire in 9 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <summary>Decostruisce una tupla con 9 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` e `item9` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <param name="value">Tupla con 10 elementi da decostruire in 10 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <summary>Decostruisce una tupla con 10 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` tramite `item10` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <param name="value">Tupla con 11 elementi da decostruire in 11 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <summary>Decostruisce una tupla con 11 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` tramite `item11` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <typeparam name="T12">Tipo del dodicesimo elemento.</typeparam>
        <param name="value">Tupla con 12 elementi da decostruire in 12 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Valore del dodicesimo elemento o <c>value</c><see langword=".Rest.Item5" />.</param>
        <summary>Decostruisce una tupla con 12 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` tramite `item12` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <typeparam name="T12">Tipo del dodicesimo elemento.</typeparam>
        <typeparam name="T13">Tipo del tredicesimo elemento.</typeparam>
        <param name="value">Tupla con 13 elementi da decostruire in 13 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Valore del dodicesimo elemento o <c>value</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Valore del tredicesimo elemento o <c> value</c><see langword=".Rest.Item6" />.</param>
        <summary>Decostruisce una tupla con 13 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` tramite `item13` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <typeparam name="T12">Tipo del dodicesimo elemento.</typeparam>
        <typeparam name="T13">Tipo del tredicesimo elemento.</typeparam>
        <typeparam name="T14">Tipo del quattordicesimo elemento.</typeparam>
        <param name="value">Tupla con 14 elementi da decostruire in 14 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Valore del dodicesimo elemento o <c>value</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Valore del tredicesimo elemento o <c> value</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Valore del quattordicesimo elemento o <c>value</c><see langword=".Rest.Item7" />.</param>
        <summary>Decostruisce una tupla con 14 elementi in variabili separate.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`1&lt;!!T15&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <typeparam name="T12">Tipo del dodicesimo elemento.</typeparam>
        <typeparam name="T13">Tipo del tredicesimo elemento.</typeparam>
        <typeparam name="T14">Tipo del quattordicesimo elemento.</typeparam>
        <typeparam name="T15">Tipo del quindicesimo elemento.</typeparam>
        <param name="value">Tupla con 15 elementi da decostruire in 15 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Valore del dodicesimo elemento o <c>value</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Valore del tredicesimo elemento o <c> value</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Valore del quattordicesimo elemento o <c>value</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Valore del quindicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item1" />.</param>
        <summary>Decostruisce una tupla con 15 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` tramite `item15` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`2&lt;!!T15, !!T16&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <typeparam name="T12">Tipo del dodicesimo elemento.</typeparam>
        <typeparam name="T13">Tipo del tredicesimo elemento.</typeparam>
        <typeparam name="T14">Tipo del quattordicesimo elemento.</typeparam>
        <typeparam name="T15">Tipo del quindicesimo elemento.</typeparam>
        <typeparam name="T16">Tipo del sedicesimo elemento.</typeparam>
        <param name="value">Tupla con 16 elementi da decostruire in 16 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Valore del dodicesimo elemento o <c>value</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Valore del tredicesimo elemento o <c> value</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Valore del quattordicesimo elemento o <c>value</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Valore del quindicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Valore del sedicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item2" />.</param>
        <summary>Decostruisce una tupla con 16 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` tramite `item16` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16, ByRef item17 As T17)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16, [Runtime::InteropServices::Out] T17 % item17);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
        <Parameter Name="item17" Type="T17&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <typeparam name="T12">Tipo del dodicesimo elemento.</typeparam>
        <typeparam name="T13">Tipo del tredicesimo elemento.</typeparam>
        <typeparam name="T14">Tipo del quattordicesimo elemento.</typeparam>
        <typeparam name="T15">Tipo del quindicesimo elemento.</typeparam>
        <typeparam name="T16">Tipo del sedicesimo elemento.</typeparam>
        <typeparam name="T17">Tipo del diciassettesimo elemento.</typeparam>
        <param name="value">Tupla con 17 elementi da decostruire in 17 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Valore del dodicesimo elemento o <c>value</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Valore del tredicesimo elemento o <c> value</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Valore del quattordicesimo elemento o <c>value</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Valore del quindicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Valore del sedicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item2" />.</param>
        <param name="item17">Valore del diciassettesimo elemento o <c>value</c><see langword=".Rest.Rest.Item3" />.</param>
        <summary>Decostruisce una tupla con 17 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` tramite `item17` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16, ByRef item17 As T17, ByRef item18 As T18)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16, [Runtime::InteropServices::Out] T17 % item17, [Runtime::InteropServices::Out] T18 % item18);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
        <Parameter Name="item17" Type="T17&amp;" RefType="out" />
        <Parameter Name="item18" Type="T18&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <typeparam name="T12">Tipo del dodicesimo elemento.</typeparam>
        <typeparam name="T13">Tipo del tredicesimo elemento.</typeparam>
        <typeparam name="T14">Tipo del quattordicesimo elemento.</typeparam>
        <typeparam name="T15">Tipo del quindicesimo elemento.</typeparam>
        <typeparam name="T16">Tipo del sedicesimo elemento.</typeparam>
        <typeparam name="T17">Tipo del diciassettesimo elemento.</typeparam>
        <typeparam name="T18">Tipo del diciottesimo elemento.</typeparam>
        <param name="value">Tupla con 18 elementi da decostruire in 18 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Valore del dodicesimo elemento o <c>value</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Valore del tredicesimo elemento o <c> value</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Valore del quattordicesimo elemento o <c>value</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Valore del quindicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Valore del sedicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item2" />.</param>
        <param name="item17">Valore del diciassettesimo elemento o <c>value</c><see langword=".Rest.Rest.Item3" />.</param>
        <param name="item18">Valore del diciottesimo elemento o <c>value</c><see langword=".Rest.Rest.Item4" />.</param>
        <summary>Decostruisce una tupla con 18 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` tramite `item18` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18, out T19 item19);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18, [out] !!T19&amp; item19) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16, ByRef item17 As T17, ByRef item18 As T18, ByRef item19 As T19)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16, [Runtime::InteropServices::Out] T17 % item17, [Runtime::InteropServices::Out] T18 % item18, [Runtime::InteropServices::Out] T19 % item19);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
        <Parameter Name="item17" Type="T17&amp;" RefType="out" />
        <Parameter Name="item18" Type="T18&amp;" RefType="out" />
        <Parameter Name="item19" Type="T19&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <typeparam name="T12">Tipo del dodicesimo elemento.</typeparam>
        <typeparam name="T13">Tipo del tredicesimo elemento.</typeparam>
        <typeparam name="T14">Tipo del quattordicesimo elemento.</typeparam>
        <typeparam name="T15">Tipo del quindicesimo elemento.</typeparam>
        <typeparam name="T16">Tipo del sedicesimo elemento.</typeparam>
        <typeparam name="T17">Tipo del diciassettesimo elemento.</typeparam>
        <typeparam name="T18">Tipo del diciottesimo elemento.</typeparam>
        <typeparam name="T19">Tipo del diciannovesimo elemento.</typeparam>
        <param name="value">Tupla con 19 elementi da decostruire in 19 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Valore del dodicesimo elemento o <c>value</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Valore del tredicesimo elemento o <c> value</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Valore del quattordicesimo elemento o <c>value</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Valore del quindicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Valore del sedicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item2" />.</param>
        <param name="item17">Valore del diciassettesimo elemento o <c>value</c><see langword=".Rest.Rest.Item3" />.</param>
        <param name="item18">Valore del diciottesimo elemento o <c>value</c><see langword=".Rest.Rest.Item4" />.</param>
        <param name="item19">Valore del diciannovesimo elemento o <c>value</c><see langword=".Rest.Rest.Item5" />.</param>
        <summary>Decostruisce una tupla con 19 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` tramite `item19` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18, out T19 item19, out T20 item20);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18, [out] !!T19&amp; item19, [out] !!T20&amp; item20) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16, ByRef item17 As T17, ByRef item18 As T18, ByRef item19 As T19, ByRef item20 As T20)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16, [Runtime::InteropServices::Out] T17 % item17, [Runtime::InteropServices::Out] T18 % item18, [Runtime::InteropServices::Out] T19 % item19, [Runtime::InteropServices::Out] T20 % item20);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
        <Parameter Name="item17" Type="T17&amp;" RefType="out" />
        <Parameter Name="item18" Type="T18&amp;" RefType="out" />
        <Parameter Name="item19" Type="T19&amp;" RefType="out" />
        <Parameter Name="item20" Type="T20&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <typeparam name="T12">Tipo del dodicesimo elemento.</typeparam>
        <typeparam name="T13">Tipo del tredicesimo elemento.</typeparam>
        <typeparam name="T14">Tipo del quattordicesimo elemento.</typeparam>
        <typeparam name="T15">Tipo del quindicesimo elemento.</typeparam>
        <typeparam name="T16">Tipo del sedicesimo elemento.</typeparam>
        <typeparam name="T17">Tipo del diciassettesimo elemento.</typeparam>
        <typeparam name="T18">Tipo del diciottesimo elemento.</typeparam>
        <typeparam name="T19">Tipo del diciannovesimo elemento.</typeparam>
        <typeparam name="T20">Tipo del ventesimo elemento.</typeparam>
        <param name="value">Tupla con 20 elementi da decostruire in 20 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Valore del dodicesimo elemento o <c>value</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Valore del tredicesimo elemento o <c> value</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Valore del quattordicesimo elemento o <c>value</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Valore del quindicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Valore del sedicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item2" />.</param>
        <param name="item17">Valore del diciassettesimo elemento o <c>value</c><see langword=".Rest.Rest.Item3" />.</param>
        <param name="item18">Valore del diciottesimo elemento o <c>value</c><see langword=".Rest.Rest.Item4" />.</param>
        <param name="item19">Valore del diciannovesimo elemento o <c>value</c><see langword=".Rest.Rest.Item5" />.</param>
        <param name="item20">Valore del ventesimo elemento o <c>value</c><see langword=".Rest.Rest.Item6" />.</param>
        <summary>Decostruisce una tupla con 20 elementi in variabili separate.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18, out T19 item19, out T20 item20, out T21 item21);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18, [out] !!T19&amp; item19, [out] !!T20&amp; item20, [out] !!T21&amp; item21) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20, T21))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16, ByRef item17 As T17, ByRef item18 As T18, ByRef item19 As T19, ByRef item20 As T20, ByRef item21 As T21)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20, typename T21&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16, [Runtime::InteropServices::Out] T17 % item17, [Runtime::InteropServices::Out] T18 % item18, [Runtime::InteropServices::Out] T19 % item19, [Runtime::InteropServices::Out] T20 % item20, [Runtime::InteropServices::Out] T21 % item21);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
        <TypeParameter Name="T21" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
        <Parameter Name="item17" Type="T17&amp;" RefType="out" />
        <Parameter Name="item18" Type="T18&amp;" RefType="out" />
        <Parameter Name="item19" Type="T19&amp;" RefType="out" />
        <Parameter Name="item20" Type="T20&amp;" RefType="out" />
        <Parameter Name="item21" Type="T21&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Tipo dell'ottavo elemento.</typeparam>
        <typeparam name="T9">Tipo del nono elemento.</typeparam>
        <typeparam name="T10">Tipo del decimo elemento.</typeparam>
        <typeparam name="T11">Tipo dell'undicesimo elemento.</typeparam>
        <typeparam name="T12">Tipo del dodicesimo elemento.</typeparam>
        <typeparam name="T13">Tipo del tredicesimo elemento.</typeparam>
        <typeparam name="T14">Tipo del quattordicesimo elemento.</typeparam>
        <typeparam name="T15">Tipo del quindicesimo elemento.</typeparam>
        <typeparam name="T16">Tipo del sedicesimo elemento.</typeparam>
        <typeparam name="T17">Tipo del diciassettesimo elemento.</typeparam>
        <typeparam name="T18">Tipo del diciottesimo elemento.</typeparam>
        <typeparam name="T19">Tipo del diciannovesimo elemento.</typeparam>
        <typeparam name="T20">Tipo del ventesimo elemento.</typeparam>
        <typeparam name="T21">Tipo del ventunesimo elemento.</typeparam>
        <param name="value">Tupla con 21 elementi da decostruire in 21 variabili separate.</param>
        <param name="item1">Valore del primo elemento.</param>
        <param name="item2">Valore del secondo elemento.</param>
        <param name="item3">Valore del terzo elemento.</param>
        <param name="item4">Valore del quarto elemento.</param>
        <param name="item5">Valore del quinto elemento.</param>
        <param name="item6">Valore del sesto elemento.</param>
        <param name="item7">Valore del settimo elemento.</param>
        <param name="item8">Valore dell'ottavo elemento o <c>value</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Valore del nono elemento o <c>value</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Valore del decimo elemento o <c>value</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Valore dell'undicesimo elemento o <c>value</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Valore del dodicesimo elemento o <c>value</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Valore del tredicesimo elemento o <c> value</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Valore del quattordicesimo elemento o <c>value</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Valore del quindicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Valore del sedicesimo elemento o <c>value</c><see langword=".Rest.Rest.Item2" />.</param>
        <param name="item17">Valore del diciassettesimo elemento o <c>value</c><see langword=".Rest.Rest.Item3" />.</param>
        <param name="item18">Valore del diciottesimo elemento o <c>value</c><see langword=".Rest.Rest.Item4" />.</param>
        <param name="item19">Valore del diciannovesimo elemento o <c>value</c><see langword=".Rest.Rest.Item5" />.</param>
        <param name="item20">Valore del ventesimo elemento o <c>value</c><see langword=".Rest.Rest.Item6" />.</param>
        <param name="item21">Valore del ventunesimo elemento o <c>value</c><see langword=".Rest.Rest.Item7" />.</param>
        <summary>Decostruisce una tupla con 21 elementi in variabili separate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è implementato principalmente per supportare le funzionalità del linguaggio tupla in c#.  
  
 Poiché i tipi di tupla di .NET Framework implementano tuple con più di 7 elementi annidando una tupla in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` tramite `item21` sono elementi di tuple annidati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToTuple&lt;T1&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte una tupla di valori in una tupla.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToTuple&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1&gt; ToTuple&lt;T1&gt; (this ValueTuple&lt;T1&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`1&lt;!!T1&gt; ToTuple&lt;T1&gt;(valuetype System.ValueTuple`1&lt;!!T1&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1) (value As ValueTuple(Of T1)) As Tuple(Of T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1&gt; ^ ToTuple(ValueTuple&lt;T1&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2&gt; ToTuple&lt;T1,T2&gt; (this ValueTuple&lt;T1,T2&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`2&lt;!!T1, !!T2&gt; ToTuple&lt;T1, T2&gt;(valuetype System.ValueTuple`2&lt;!!T1, !!T2&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2) (value As ValueTuple(Of T1, T2)) As Tuple(Of T1, T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2&gt; ^ ToTuple(ValueTuple&lt;T1, T2&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3&gt; ToTuple&lt;T1,T2,T3&gt; (this ValueTuple&lt;T1,T2,T3&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; ToTuple&lt;T1, T2, T3&gt;(valuetype System.ValueTuple`3&lt;!!T1, !!T2, !!T3&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3) (value As ValueTuple(Of T1, T2, T3)) As Tuple(Of T1, T2, T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4&gt; ToTuple&lt;T1,T2,T3,T4&gt; (this ValueTuple&lt;T1,T2,T3,T4&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; ToTuple&lt;T1, T2, T3, T4&gt;(valuetype System.ValueTuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4) (value As ValueTuple(Of T1, T2, T3, T4)) As Tuple(Of T1, T2, T3, T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5&gt; ToTuple&lt;T1,T2,T3,T4,T5&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; ToTuple&lt;T1, T2, T3, T4, T5&gt;(valuetype System.ValueTuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5) (value As ValueTuple(Of T1, T2, T3, T4, T5)) As Tuple(Of T1, T2, T3, T4, T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6&gt;(valuetype System.ValueTuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6)) As Tuple(Of T1, T2, T3, T4, T5, T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;(valuetype System.ValueTuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7)) As Tuple(Of T1, T2, T3, T4, T5, T6, T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`1&lt;!!T8&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`2&lt;!!T8, !!T9&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`2&lt;!!T8, !!T9&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`1&lt;!!T15&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`1&lt;!!T15&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15&gt;&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`2&lt;!!T15, !!T16&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`2&lt;!!T15, !!T16&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16&gt;&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17&gt;&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Il tipo del diciassettesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18&gt;&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Il tipo del diciassettesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Il tipo del diciottesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19&gt;&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Il tipo del diciassettesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Il tipo del diciottesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Il tipo del diciannovesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19, T20)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19, T20&gt;&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Il tipo del diciassettesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Il tipo del diciottesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Il tipo del diciannovesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <typeparam name="T20">Il tipo del ventesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item6" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19, T20, T21)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20, T21)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20, typename T21&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19, T20, T21&gt;&gt;&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
        <TypeParameter Name="T21" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Il tipo del diciassettesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Il tipo del diciottesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Il tipo del diciannovesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <typeparam name="T20">Il tipo del ventesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item6" />.</typeparam>
        <typeparam name="T21">Il tipo del ventunesimo-elemento., o <c>valore</c><see langword=".Rest.Rest.Item7" />.</typeparam>
        <param name="value">Istanza della tupla di valori da convertire in una tupla.</param>
        <summary>Converte un'istanza della struttura <see langword="ValueTuple" /> in un'istanza della classe <see langword="Tuple" />.</summary>
        <returns>Tupla convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToValueTuple&lt;T1&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte una tupla in una tupla di valori.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToValueTuple&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1&gt; ToValueTuple&lt;T1&gt; (this Tuple&lt;T1&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`1&lt;!!T1&gt; ToValueTuple&lt;T1&gt;(class System.Tuple`1&lt;!!T1&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1) (value As Tuple(Of T1)) As ValueTuple(Of T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1&gt; ToValueTuple(Tuple&lt;T1&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2&gt; ToValueTuple&lt;T1,T2&gt; (this Tuple&lt;T1,T2&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;!!T1, !!T2&gt; ToValueTuple&lt;T1, T2&gt;(class System.Tuple`2&lt;!!T1, !!T2&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2) (value As Tuple(Of T1, T2)) As ValueTuple(Of T1, T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2&gt; ToValueTuple(Tuple&lt;T1, T2&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3&gt; ToValueTuple&lt;T1,T2,T3&gt; (this Tuple&lt;T1,T2,T3&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;!!T1, !!T2, !!T3&gt; ToValueTuple&lt;T1, T2, T3&gt;(class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3) (value As Tuple(Of T1, T2, T3)) As ValueTuple(Of T1, T2, T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3&gt; ToValueTuple(Tuple&lt;T1, T2, T3&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4&gt; ToValueTuple&lt;T1,T2,T3,T4&gt; (this Tuple&lt;T1,T2,T3,T4&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; ToValueTuple&lt;T1, T2, T3, T4&gt;(class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4) (value As Tuple(Of T1, T2, T3, T4)) As ValueTuple(Of T1, T2, T3, T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5&gt; ToValueTuple&lt;T1,T2,T3,T4,T5&gt; (this Tuple&lt;T1,T2,T3,T4,T5&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; ToValueTuple&lt;T1, T2, T3, T4, T5&gt;(class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5) (value As Tuple(Of T1, T2, T3, T4, T5)) As ValueTuple(Of T1, T2, T3, T4, T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6) (value As Tuple(Of T1, T2, T3, T4, T5, T6)) As ValueTuple(Of T1, T2, T3, T4, T5, T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7)) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`1&lt;!!T8&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`2&lt;!!T8, !!T9&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`2&lt;!!T8, !!T9&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`1&lt;!!T15&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`1&lt;!!T15&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15&gt; ^&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`2&lt;!!T15, !!T16&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`2&lt;!!T15, !!T16&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16&gt; ^&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17&gt; ^&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Il tipo del diciassettesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18&gt; ^&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Il tipo del diciassettesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Il tipo del diciottesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19&gt; ^&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Il tipo del diciassettesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Il tipo del diciottesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Il tipo del diciannovesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19, T20)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19, T20&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20&gt; ^&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Il tipo del diciassettesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Il tipo del diciottesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Il tipo del diciannovesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <typeparam name="T20">Il tipo del ventesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item6" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20, T21)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19, T20, T21)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20, typename T21&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19, T20, T21&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21&gt; ^&gt; ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
        <TypeParameter Name="T21" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Tipo del primo elemento.</typeparam>
        <typeparam name="T2">Tipo del secondo elemento.</typeparam>
        <typeparam name="T3">Tipo del terzo elemento.</typeparam>
        <typeparam name="T4">Tipo del quarto elemento.</typeparam>
        <typeparam name="T5">Tipo del quinto elemento.</typeparam>
        <typeparam name="T6">Tipo del sesto elemento.</typeparam>
        <typeparam name="T7">Tipo del settimo elemento.</typeparam>
        <typeparam name="T8">Il tipo dell'ottavo elemento, o <c>valore</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Il tipo di elemento nono, o <c>valore</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Il tipo di elemento decimo, o <c>valore</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Il tipo dell'undicesimo elemento, o <c>valore</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Il tipo di elemento dodicesimo, o <c>valore</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Il tipo di elemento tredicesimo, o <c>valore</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Il tipo di elemento quattordicesimo, o <c>valore</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Il tipo del quindicesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Il tipo di elemento sedicesimo,., o <c>valore</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Il tipo del diciassettesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Il tipo del diciottesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Il tipo del diciannovesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <typeparam name="T20">Il tipo del ventesimo elemento., o <c>valore</c><see langword=".Rest.Rest.Item6" />.</typeparam>
        <typeparam name="T21">Il tipo del ventunesimo-elemento., o <c>valore</c><see langword=".Rest.Rest.Item7" />.</typeparam>
        <param name="value">Oggetto tupla da convertire in una tupla di valori</param>
        <summary>Converte un'istanza della classe <see langword="Tuple" /> in un'istanza della struttura <see langword="ValueTuple" />.</summary>
        <returns>Istanza della tupla di valori convertita.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      </Docs>
    </Member>
  </Members>
</Type>