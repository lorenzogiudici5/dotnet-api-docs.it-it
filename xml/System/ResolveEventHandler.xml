<Type Name="ResolveEventHandler" FullName="System.ResolveEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="544c1cce139b6e89b655271d0ef106b43778c4f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36428586" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate System.Reflection.Assembly ResolveEventHandler(object sender, ResolveEventArgs args);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ResolveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ResolveEventHandler(sender As Object, args As ResolveEventArgs) As Assembly " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Assembly ^ ResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ args);" />
  <TypeSignature Language="F#" Value="type ResolveEventHandler = delegate of obj * ResolveEventArgs -&gt; Assembly" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="args" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Assembly</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Origine dell'evento.</param>
    <param name="args">Dati dell'evento.</param>
    <summary>Rappresenta il metodo che gestisce l'evento <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" /> o <see cref="E:System.AppDomain.AssemblyResolve" /> di un oggetto <see cref="T:System.AppDomain" />.</summary>
    <returns>Assembly che risolve il tipo, l'assembly o la risorsa; oppure <see langword="null" /> se l'assembly non può essere risolto.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il caricatore di classe di runtime non è possibile risolvere un riferimento a un assembly, tipo o la risorsa, vengono generati gli eventi corrispondenti per consentire il callback per indicare al runtime l'assembly l'assembly di riferimento, tipo o la risorsa. È responsabilità del <xref:System.ResolveEventHandler> per restituire l'assembly che risolve risorsa, tipo o assembly o per restituire null se l'assembly non è riconosciuto. Per altre informazioni, vedere [Risoluzione caricamenti Assembly](~/docs/framework/app-domains/resolve-assembly-loads.md) e il <xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType>, <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>, e <xref:System.AppDomain.ReflectionOnlyAssemblyResolve?displayProperty=nameWithType> eventi.  
  
> [!IMPORTANT]
>  Iniziano con la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], il <xref:System.ResolveEventHandler?displayProperty=nameWithType> evento viene generato per tutti gli assembly, inclusi gli assembly di risorse. Nelle versioni precedenti, l'evento non è stato generato per gli assembly di risorse. Se il sistema operativo localizzato, il gestore può essere chiamato più volte: una volta per ogni impostazione cultura nella catena di fallback.  
  
 Ogni classe derivata di <xref:System.Delegate> e <xref:System.MulticastDelegate> ha un costruttore e un `Invoke` metodo. Vedere l'esempio di codice C++ nella descrizione per il <xref:System.Delegate> classe.  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.ResourceResolve" />
    <altmember cref="E:System.AppDomain.AssemblyResolve" />
    <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
  </Docs>
</Type>