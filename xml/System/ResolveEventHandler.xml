<Type Name="ResolveEventHandler" FullName="System.ResolveEventHandler">
  <TypeSignature Language="C#" Value="public delegate System.Reflection.Assembly ResolveEventHandler(object sender, ResolveEventArgs args);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ResolveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ResolveEventHandler(sender As Object, args As ResolveEventArgs) As Assembly " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Assembly ^ ResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ args);" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="args" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Assembly</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="e2963-101">Origine dell'evento.</span><span class="sxs-lookup"><span data-stu-id="e2963-101">The source of the event.</span></span></param>
    <param name="args"><span data-ttu-id="e2963-102">Dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="e2963-102">The event data.</span></span></param>
    <summary><span data-ttu-id="e2963-103">Rappresenta il metodo che gestisce l'evento <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" /> o <see cref="E:System.AppDomain.AssemblyResolve" /> di un oggetto <see cref="T:System.AppDomain" />.</span><span class="sxs-lookup"><span data-stu-id="e2963-103">Represents a method that handles the <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" />, or <see cref="E:System.AppDomain.AssemblyResolve" /> event of an <see cref="T:System.AppDomain" />.</span></span></summary>
    <returns><span data-ttu-id="e2963-104">Assembly che risolve il tipo, l'assembly o la risorsa; oppure <see langword="null" /> se l'assembly non può essere risolto.</span><span class="sxs-lookup"><span data-stu-id="e2963-104">The assembly that resolves the type, assembly, or resource; or <see langword="null" /> if the assembly cannot be resolved.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2963-105">Se il caricatore di classe di runtime non è possibile risolvere un riferimento a un assembly, tipo o la risorsa, vengono generati gli eventi corrispondenti per consentire il callback per indicare al runtime l'assembly a cui l'assembly di riferimento, un tipo o la risorsa.</span><span class="sxs-lookup"><span data-stu-id="e2963-105">If the runtime class loader cannot resolve a reference to an assembly, type, or resource, the corresponding events are raised to give the callback a chance to tell the runtime which assembly the referenced assembly, type, or resource is in.</span></span> <span data-ttu-id="e2963-106">È responsabilità del <xref:System.ResolveEventHandler> per restituire l'assembly che risolve il tipo, un assembly o una risorsa o per restituire null se l'assembly non viene riconosciuto.</span><span class="sxs-lookup"><span data-stu-id="e2963-106">It is the responsibility of the <xref:System.ResolveEventHandler> to return the assembly that resolves the type, assembly, or resource, or to return null if the assembly is not recognized.</span></span> <span data-ttu-id="e2963-107">Per ulteriori informazioni, vedere [Risoluzione caricamenti Assembly](~/docs/framework/app-domains/resolve-assembly-loads.md) e <xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType>, <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>, e <xref:System.AppDomain.ReflectionOnlyAssemblyResolve?displayProperty=nameWithType> eventi.</span><span class="sxs-lookup"><span data-stu-id="e2963-107">For more information, see [Resolving Assembly Loads](~/docs/framework/app-domains/resolve-assembly-loads.md) and the <xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType>, <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>, and <xref:System.AppDomain.ReflectionOnlyAssemblyResolve?displayProperty=nameWithType> events.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e2963-108">A partire dal [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ResolveEventHandler?displayProperty=nameWithType> evento viene generato per tutti gli assembly, inclusi gli assembly di risorse.</span><span class="sxs-lookup"><span data-stu-id="e2963-108">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventHandler?displayProperty=nameWithType> event is raised for all assemblies, including resource assemblies.</span></span> <span data-ttu-id="e2963-109">Nelle versioni precedenti, l'evento non è stato generato per gli assembly di risorse.</span><span class="sxs-lookup"><span data-stu-id="e2963-109">In earlier versions, the event was not raised for resource assemblies.</span></span> <span data-ttu-id="e2963-110">Se il sistema operativo localizzato, il gestore può essere chiamato più volte: una volta per ogni impostazione cultura nella catena di fallback.</span><span class="sxs-lookup"><span data-stu-id="e2963-110">If the operating system is localized, the handler might be called multiple times: once for each culture in the fallback chain.</span></span>  
  
 <span data-ttu-id="e2963-111">Ogni classe derivata di <xref:System.Delegate> e <xref:System.MulticastDelegate> ha un costruttore e un `Invoke` metodo.</span><span class="sxs-lookup"><span data-stu-id="e2963-111">Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and an `Invoke` method.</span></span> <span data-ttu-id="e2963-112">Vedere l'esempio di codice C++ nella descrizione per il <xref:System.Delegate> classe.</span><span class="sxs-lookup"><span data-stu-id="e2963-112">See the C++ code example in the description for the <xref:System.Delegate> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.ResourceResolve" />
    <altmember cref="E:System.AppDomain.AssemblyResolve" />
    <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
  </Docs>
</Type>