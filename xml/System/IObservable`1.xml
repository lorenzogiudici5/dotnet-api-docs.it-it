<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2589d1e6912470385b77aa8afee4b096c72c259" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObservable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObservable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Oggetto che fornisce informazioni di notifica.</typeparam>
    <summary>Definisce un provider per la notifica basata su push.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IObserver%601> e <xref:System.IObservable%601> interfacce forniscono un meccanismo generalizzato per le notifiche basate su push, noto anche come modello di progettazione osservatore. Il <xref:System.IObservable%601> interfaccia rappresenta la classe che invia le notifiche (provider); il <xref:System.IObserver%601> interfaccia rappresenta la classe che li riceve (l'osservatore). `T` rappresenta la classe che fornisce le informazioni di notifica. In alcune notifiche basate su push, il <xref:System.IObserver%601> implementazione e `T` possono rappresentare lo stesso tipo.  
  
 Il provider deve implementare un singolo metodo, <xref:System.IObservable%601.Subscribe%2A>, che indica che un osservatore desidera ricevere notifiche basate su push. I chiamanti del metodo passano un'istanza dell'osservatore. Il metodo restituisce un <xref:System.IDisposable> implementazione che consente agli osservatori di annullare le notifiche in qualsiasi momento prima che il provider è stato arrestato vengono inviati.  
  
 In qualsiasi momento, un provider specifico può disporre di zero, uno o più osservatori. Il provider è responsabile per l'archiviazione di riferimenti agli osservatori e garantendo che siano validi prima di inviare le notifiche. Il <xref:System.IObservable%601> interfaccia supposizioni sul numero di osservatori o l'ordine in cui vengono inviate le notifiche.  
  
 Il provider invia i seguenti tre tipi di notifiche all'osservatore chiamando <xref:System.IObserver%601> metodi:  
  
-   I dati correnti. Il provider può chiamare il <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> metodo per passare all'osservatore una `T` oggetto contenente dati correnti, i dati modificati o i dati aggiornati.  
  
-   Una condizione di errore. Il provider può chiamare il <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> metodo per notificare all'osservatore che si è verificato un errore.  
  
-   Non esistono altri dati. Il provider può chiamare il <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> metodo per notificare all'osservatore che ha terminato l'invio di notifiche.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il modello di progettazione osservatore. Definisce un `Location` classe che contiene informazioni di latitudine e longitudine.  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 Il `LocationTracker` classe fornisce il <xref:System.IObservable%601> implementazione. Il relativo `TrackLocation` viene passato un valore nullable `Location` oggetto che contiene i dati di latitudine e longitudine. Se il `Location` valore non è `null`, `TrackLocation` chiamate al metodo di <xref:System.IObserver%601.OnNext%2A> metodo di ogni osservatore.  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 Se il `Location` valore `null`, `TrackLocation` metodo crea un'istanza un `LocationUnknownException` oggetto, come illustrato nell'esempio seguente. Chiama quindi ogni osservatore <xref:System.IObserver%601.OnError%2A> metodo e passa il `LocationUnknownException` oggetto. Si noti che `LocationUnknownException` deriva da <xref:System.Exception>, ma non può aggiungere nuovi membri.  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 Registrare gli Observer per ricevere notifiche da un `TrackLocation` oggetto chiamando il relativo <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> metodo, che assegna un riferimento all'oggetto dell'osservatore a un oggetto generico privato <xref:System.Collections.Generic.List%601> oggetto. Il metodo restituisce un `Unsubscriber` oggetto, ovvero un <xref:System.IDisposable> implementazione che consente agli osservatori di interrompere la ricezione di notifiche. Il `LocationTracker` include anche un `EndTransmission` metodo. Se non esistono altri dati di posizione sono disponibili, il metodo viene chiamato ogni osservatore <xref:System.IObserver%601.OnCompleted%2A> (metodo) e quindi Cancella l'elenco interno di osservatori.  
  
 In questo esempio, il `LocationReporter` classe fornisce il <xref:System.IObserver%601> implementazione. Vengono visualizzate informazioni relative alla posizione corrente nella console. Il costruttore include un `name` parametro, che consente di `LocationReporter` istanza per identificarsi nella stringa restituita. Include inoltre un `Subscribe` metodo, che esegue il wrapping di una chiamata al provider <xref:System.IObservable%601.Subscribe%2A> metodo. In questo modo il metodo a cui assegnare l'oggetto restituito <xref:System.IDisposable> riferimento a una variabile privata. Il `LocationReporter` include anche un `Unsubscribe` metodo che chiama il <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> metodo dell'oggetto restituito dal <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> metodo. Il codice seguente definisce la `LocationReporter` classe.  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 Il codice seguente crea quindi il provider e l'osservatore.  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of Out T)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Subscribe(IObserver&lt;T&gt; ^ observer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer">Oggetto che sta per ricevere le notifiche.</param>
        <summary>Notifica al provider che un osservatore sta per ricevere le notifiche.</summary>
        <returns>Riferimento a un'interfaccia che consente agli osservatori di smettere di ricevere notifiche prima che il provider abbia terminato di inviarle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IObservable%601.Subscribe%2A> metodo deve essere chiamato per registrare un osservatore per le notifiche basate su push. Un'implementazione tipica del <xref:System.IObservable%601.Subscribe%2A> metodo effettua le seguenti operazioni:  
  
-   Archivia un riferimento all'osservatore in un oggetto di raccolta, ad esempio un <xref:System.Collections.Generic.List%601> oggetto.  
  
-   Restituisce un riferimento a un <xref:System.IDisposable> interfaccia. Ciò consente agli osservatori di annullare la sottoscrizione (ovvero, per interrompere la ricezione di notifiche) prima che il provider ha completato l'invio e chiamata del sottoscrittore <xref:System.IObserver%601.OnCompleted%2A> (metodo).  
  
 In qualsiasi momento, una particolare istanza di un <xref:System.IObservable%601> implementazione è responsabile per la gestione di tutte le sottoscrizioni e la notifica di tutti i sottoscrittori. A meno che la documentazione relativa a un particolare <xref:System.IObservable%601> implementazione indica in caso contrario, gli osservatori non devono formulare ipotesi sul <xref:System.IObservable%601> implementazione, ad esempio l'ordine delle notifiche che riceveranno più gli osservatori.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il <xref:System.IObservable%601.Subscribe%2A> metodo per un'applicazione che segnala l'informazione di latitudine e longitudine. Definisce un <xref:System.Collections.Generic.IList%601> oggetto collection che sono archiviati i riferimenti a tutti gli osservatori. Restituisce inoltre una classe privata denominata `Unsubscriber` che implementa il <xref:System.IDisposable> l'interfaccia e consente ai sottoscrittori di non ricevere le notifiche degli eventi.  Vedere la sezione esempio del <xref:System.IObservable%601> argomento per un esempio completo.  
  
 [!code-csharp[System.IObserver.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>