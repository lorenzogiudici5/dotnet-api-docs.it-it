<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IComparable`1.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f05af9c9d7d36fd459412e2e929b56746ab080d5a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05af9c9d7d36fd459412e2e929b56746ab080d5a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The type of object to compare.</source>
          <target state="translated">Tipo di oggetto da confrontare.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IComparable`1">
          <source>Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</source>
          <target state="translated">Definisce un metodo di confronto generalizzato che viene implementato da un tipo di valore o da una classe per creare un metodo di confronto specifico del tipo per l'ordinamento delle istanze.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</source>
          <target state="translated">Questa interfaccia viene implementata da tipi i cui valori possono essere ordinati e fornisce un metodo di confronto fortemente tipizzato per ordinare i membri di un oggetto di raccolta generica.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</source>
          <target state="translated">Ad esempio, un numero può essere maggiore di un secondo numero e una stringa può essere visualizzata in ordine alfabetico prima di un'altra.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>It requires that implementing types define a single method, <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</source>
          <target state="translated">Richiede che i tipi di implementazione definiscono un singolo metodo, <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph>, che indica se la posizione dell'istanza corrente nella sequenza di ordinamento è precedente, successiva o uguale a quella un secondo oggetto dello stesso tipo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Typically, the method is not called directly from developer code.</source>
          <target state="translated">In genere, il metodo non viene chiamato direttamente dal codice dello sviluppatore.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Instead, it is called automatically by methods such as <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>.</source>
          <target state="translated">Invece chiamato automaticamente dai metodi, ad esempio <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Typically, types that provide an <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> implementation also implement the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> interface.</source>
          <target state="translated">In genere, i tipi che forniscono un <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> implementazione anche l'implementazione di <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface defines the <ph id="ph2">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> method, which determines the equality of instances of the implementing type.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interfaccia definisce il <ph id="ph2">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> metodo, che determina l'uguaglianza delle istanze del tipo di implementazione.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph> method must return an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> that has one of three values, as shown in the following table.</source>
          <target state="translated">L'implementazione del <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph> metodo deve restituire un <ph id="ph2">&lt;xref:System.Int32&gt;</ph> che presenta uno dei tre valori, come illustrato nella tabella seguente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Meaning</source>
          <target state="translated">Significato</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Less than zero</source>
          <target state="translated">Minore di zero</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This object precedes the object specified by the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> method in the sort order.</source>
          <target state="translated">Questo oggetto precede l'oggetto specificato da di <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> metodo nell'ordinamento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Zero</source>
          <target state="translated">Zero</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This current instance occurs in the same position in the sort order as the object specified by the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> method argument.</source>
          <target state="translated">L'istanza corrente è nella stessa posizione dell'ordinamento dell'oggetto specificato per il <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> argomento del metodo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Greater than zero</source>
          <target state="translated">Maggiore di zero</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This current instance follows the object specified by the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> method argument in the sort order.</source>
          <target state="translated">L'istanza corrente segue l'oggetto specificato da di <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> argomento del metodo nell'ordinamento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>All numeric types (such as <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and <ph id="ph2">&lt;xref:System.Double&gt;</ph>) implement <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph>, as do <ph id="ph4">&lt;xref:System.String&gt;</ph>, <ph id="ph5">&lt;xref:System.Char&gt;</ph>, and <ph id="ph6">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Tutti i tipi numerici (ad esempio <ph id="ph1">&lt;xref:System.Int32&gt;</ph> e <ph id="ph2">&lt;xref:System.Double&gt;</ph>) implementare <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph>, come <ph id="ph4">&lt;xref:System.String&gt;</ph>, <ph id="ph5">&lt;xref:System.Char&gt;</ph>, e <ph id="ph6">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Custom types should also provide their own implementation of <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> to enable object instances to be ordered or sorted.</source>
          <target state="translated">Tipi personalizzati devono anche fornire la propria implementazione di <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> per abilitare le istanze di oggetto per l'ordinamento.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The following code example illustrates the implementation of  <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> for a simple <ph id="ph2">`Temperature`</ph> object.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene illustrata l'implementazione di <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> per un semplice oggetto <ph id="ph2">`Temperature`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection of strings with <ph id="ph2">`Temperature`</ph> object keys, and adds several pairs of temperatures and strings to the list out of sequence.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> raccolta di stringhe con <ph id="ph2">`Temperature`</ph> chiavi dell'oggetto e vengono aggiunte diverse coppie di temperature e stringhe all'elenco fuori sequenza.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>In the call to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection uses the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> implementation to sort the list entries, which are then displayed in order of increasing temperature.</source>
          <target state="translated">Nella chiamata al <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> (metodo), il <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> raccolta utilizza la <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> implementazione per ordinare le voci dell'elenco, che vengono quindi visualizzate in ordine crescente di temperatura.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Replace the type parameter of the <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph> interface with the type that is implementing this interface.</source>
          <target state="translated">Sostituire il parametro di tipo di <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph> interfaccia con il tipo che implementa questa interfaccia.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>If you implement <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph>, you should overload the <ph id="ph2">&lt;see langword="op_GreaterThan" /&gt;</ph>, <ph id="ph3">&lt;see langword="op_GreaterThanOrEqual" /&gt;</ph>, <ph id="ph4">&lt;see langword="op_LessThan" /&gt;</ph>, and <ph id="ph5">&lt;see langword="op_LessThanOrEqual" /&gt;</ph> operators to return values that are consistent with <ph id="ph6">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph>.</source>
          <target state="translated">Se si implementa <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph>, è necessario eseguire l'overload degli operatori <ph id="ph2">&lt;see langword="op_GreaterThan" /&gt;</ph>, <ph id="ph3">&lt;see langword="op_GreaterThanOrEqual" /&gt;</ph>, <ph id="ph4">&lt;see langword="op_LessThan" /&gt;</ph> e <ph id="ph5">&lt;see langword="op_LessThanOrEqual" /&gt;</ph> per restituire valori coerenti con <ph id="ph6">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>In addition, you should also implement <ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph>.</source>
          <target state="translated">È inoltre necessario implementare <ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>See the <ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph> article for complete information.</source>
          <target state="translated">Per informazioni complete, vedere l'articolo <ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>An object to compare with this instance.</source>
          <target state="translated">Oggetto da confrontare con l'istanza.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</source>
          <target state="translated">Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>A value that indicates the relative order of the objects being compared.</source>
          <target state="translated">Valore che indica l'ordine relativo degli oggetti confrontati.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The return value has these meanings:</source>
          <target state="translated">Il valore restituito ha i seguenti significati:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valore</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significato</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Minore di zero</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Questa istanza precede <ph id="ph3">&lt;paramref name="other" /&gt;</ph> nell'ordinamento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance occurs in the same position in the sort order as <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Questa istanza si presenta nella stessa posizione di <ph id="ph3">&lt;paramref name="other" /&gt;</ph> all'interno dell'ordinamento.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Maggiore di zero</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Questa istanza segue <ph id="ph3">&lt;paramref name="other" /&gt;</ph> nei criteri di ordinamento.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> provides a strongly typed comparison method for ordering members of a generic collection object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> fornisce un metodo di confronto fortemente tipizzato per ordinare i membri di un oggetto di raccolta generica.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Because of this, it is usually not called directly from developer code.</source>
          <target state="translated">Per questo motivo, non è in genere chiamato direttamente dal codice dello sviluppatore.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Instead, it is called automatically by methods such as <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>.</source>
          <target state="translated">Invece chiamato automaticamente dai metodi, ad esempio <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>This method is only a definition and must be implemented by a specific class or value type to have effect.</source>
          <target state="translated">Questo metodo è solo una definizione e deve essere implementato da un tipo di classe o un valore specifico ha effetto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</source>
          <target state="translated">Il significato dei confronti specificati nella sezione ("precede", "a cui si trova nella stessa posizione" e "segue) dipende dall'implementazione specifica i valori restituiti.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>By definition, any object compares greater than <ph id="ph1">`null`</ph>, and two null references compare equal to each other.</source>
          <target state="translated">Per definizione, risulta maggiore di qualsiasi oggetto <ph id="ph1">`null`</ph>, e due riferimenti null risultano uguali tra loro.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The following code example illustrates the implementation of <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> for a simple <ph id="ph2">`Temperature`</ph> object.</source>
          <target state="translated">Esempio di codice seguente viene illustrata l'implementazione di <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> per una semplice <ph id="ph2">`Temperature`</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection of strings with <ph id="ph2">`Temperature`</ph> object keys, and adds several pairs of temperatures and strings to the list out of sequence.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> raccolta di stringhe con <ph id="ph2">`Temperature`</ph> chiavi dell'oggetto e vengono aggiunte diverse coppie di temperature e stringhe all'elenco fuori sequenza.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>In the call to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection uses the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> implementation to sort the list entries, which are then displayed in order of increasing temperature.</source>
          <target state="translated">Nella chiamata al <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> (metodo), il <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> raccolta utilizza la <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> implementazione per ordinare le voci dell'elenco, che vengono quindi visualizzate in ordine crescente di temperatura.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>For objects A, B, and C, the following must be true:</source>
          <target state="translated">Per gli oggetti A, B e C, deve essere true le operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(A)<ept id="p1">&lt;/c&gt;</ept> is required to return zero.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(A)<ept id="p1">&lt;/c&gt;</ept> dovrà restituire zero.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns zero, then <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> is required to return zero.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> restituisce zero, quindi <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> dovrà restituire zero.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns zero and <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> returns zero, then <bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> is required to return zero.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> restituisce zero e <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> restituisce zero, quindi <bpt id="p3">&lt;c&gt;</bpt>CompareTo (c)<ept id="p3">&lt;/c&gt;</ept> dovrà restituire zero.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns a value other than zero, then <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> is required to return a value of the opposite sign.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> restituisce un valore diverso da zero, quindi <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> deve restituire un valore di segno opposto.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns a value <ph id="ph1">&lt;paramref name="x" /&gt;</ph> that is not equal to zero, and <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> returns a value <ph id="ph2">&lt;paramref name="y" /&gt;</ph> of the same sign as <ph id="ph3">&lt;paramref name="x" /&gt;</ph>, then <bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> is required to return a value of the same sign as <ph id="ph4">&lt;paramref name="x" /&gt;</ph> and <ph id="ph5">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> restituisce un valore <ph id="ph1">&lt;paramref name="x" /&gt;</ph> che non è uguale a zero e <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> restituisce un valore <ph id="ph2">&lt;paramref name="y" /&gt;</ph> dello stesso segno <ph id="ph3">&lt;paramref name="x" /&gt;</ph>, quindi <bpt id="p3">&lt;c&gt;</bpt>A. CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> deve restituire un valore dello stesso segno <ph id="ph4">&lt;paramref name="x" /&gt;</ph> e <ph id="ph5">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph> method to determine the ordering of instances of a class.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph> metodo per determinare l'ordine delle istanze di una classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>