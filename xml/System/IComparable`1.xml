<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1985af8fb6915d65d96b4b1840552ee3b27cb90" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430806" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Tipo di oggetto da confrontare.</typeparam>
    <summary>Definisce un metodo di confronto generalizzato che viene implementato da un tipo di valore o da una classe per creare un metodo di confronto specifico del tipo per l'ordinamento delle istanze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa interfaccia viene implementata da tipi i cui valori possono essere ordinati e fornisce un metodo di confronto fortemente tipizzato per ordinare i membri di un oggetto di raccolta generica. Ad esempio, un numero può essere maggiore di un secondo numero e una stringa può essere visualizzata in ordine alfabetico prima di un'altra. Richiede che i tipi di implementazione definiscano un solo metodo, <xref:System.IComparable%601.CompareTo%28%600%29>, che indica se la posizione dell'istanza corrente nella sequenza di ordinamento è precedente, dopo o uguale a quella un secondo oggetto dello stesso tipo. In genere, il metodo non viene chiamato direttamente dal codice dello sviluppatore. Invece viene chiamato automaticamente dai metodi, ad esempio <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> e <xref:System.Collections.Generic.SortedList%602.Add%2A>.  
  
 In genere, i tipi che forniscono un <xref:System.IComparable%601> implementazione anche l'implementazione di <xref:System.IEquatable%601> interfaccia. Il <xref:System.IEquatable%601> interfaccia definisce il <xref:System.IEquatable%601.Equals%2A> metodo, che determina l'uguaglianza delle istanze del tipo di implementazione.  
  
 L'implementazione del <xref:System.IComparable%601.CompareTo%28%600%29> metodo deve restituire un <xref:System.Int32> che presenta uno dei tre valori, come illustrato nella tabella seguente.  
  
|Valore|Significato|  
|-----------|-------------|  
|Minore di zero|Questo oggetto precede l'oggetto specificato dal <xref:System.IComparable%601.CompareTo%2A> metodo nell'ordinamento.|  
|Zero|Questa istanza corrente si trova nella stessa posizione dell'ordinamento dell'oggetto specificato dal <xref:System.IComparable%601.CompareTo%2A> argomento del metodo.|  
|Maggiore di zero|L'istanza corrente segue l'oggetto specificato dal <xref:System.IComparable%601.CompareTo%2A> argomento del metodo nell'ordinamento.|  
  
 Tutti i tipi numerici (ad esempio <xref:System.Int32> e <xref:System.Double>) implementare <xref:System.IComparable%601>, come gli <xref:System.String>, <xref:System.Char>, e <xref:System.DateTime>. Tipi personalizzati devono anche fornire la propria implementazione di <xref:System.IComparable%601> per abilitare le istanze di oggetto deve essere ordinato o ordinato.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrata l'implementazione di <xref:System.IComparable%601> per un semplice oggetto `Temperature`. Nell'esempio viene creata una <xref:System.Collections.Generic.SortedList%602> raccolta di stringhe con `Temperature` le chiavi dell'oggetto e vengono aggiunte diverse coppie di temperature e stringhe all'elenco fuori sequenza. Nella chiamata ai <xref:System.Collections.Generic.SortedList%602.Add%2A> metodo, il <xref:System.Collections.Generic.SortedList%602> viene utilizzato insieme il <xref:System.IComparable%601> implementazione per ordinare le voci dell'elenco, che vengono quindi visualizzate in ordine crescente temperatura.  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Sostituire il parametro di tipo di <see cref="T:System.IComparable`1" /> interfaccia con il tipo che implementa questa interfaccia.  Se si implementa <see cref="T:System.IComparable`1" />, è necessario eseguire l'overload degli operatori <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" /> e <see langword="op_LessThanOrEqual" /> per restituire valori coerenti con <see cref="M:System.IComparable`1.CompareTo(`0)" />. È inoltre necessario implementare <see cref="T:System.IEquatable`1" />. Vedere il <see cref="T:System.IEquatable`1" /> articolo per informazioni complete.</para>
    </block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : 'T -&gt; int" Usage="iComparable.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'istanza.</param>
        <summary>Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</summary>
        <returns>Valore che indica l'ordine relativo degli oggetti confrontati. Il valore restituito ha i significati seguenti:  <list type="table"><listheader><term> Valore  </term><description> Significato  </description></listheader><item><term> Minore di zero  </term><description> Questa istanza precede <paramref name="other" />  all'interno dell'ordinamento.  </description></item><item><term> Zero  </term><description> Questa istanza si presenta nella stessa posizione di <paramref name="other" /> all'interno dell'ordinamento.  </description></item><item><term> Maggiore di zero  </term><description>Questa istanza segue <paramref name="other" /> nei criteri di ordinamento.  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IComparable%601.CompareTo%2A> fornisce un metodo di confronto fortemente tipizzato per ordinare i membri di un oggetto di raccolta generica. Per questo motivo, in genere non viene chiamato direttamente dal codice dello sviluppatore. Invece viene chiamato automaticamente dai metodi, ad esempio <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> e <xref:System.Collections.Generic.SortedList%602.Add%2A>.  
  
 Questo metodo è solo una definizione e deve essere implementato da un tipo di classe o valore specifico ha effetto. Il significato dei confronti specificati nella sezione ("precede", "si trova nella stessa posizione" e "segue) dipende dall'implementazione specifica i valori restituiti.  
  
 Per definizione, confronta maggiore di qualsiasi oggetto `null`, e due riferimenti null risultano uguali tra loro.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'implementazione di <xref:System.IComparable%601> per una semplice `Temperature` oggetto. Nell'esempio viene creata una <xref:System.Collections.Generic.SortedList%602> raccolta di stringhe con `Temperature` le chiavi dell'oggetto e vengono aggiunte diverse coppie di temperature e stringhe all'elenco fuori sequenza. Nella chiamata ai <xref:System.Collections.Generic.SortedList%602.Add%2A> metodo, il <xref:System.Collections.Generic.SortedList%602> viene utilizzato insieme il <xref:System.IComparable%601> implementazione per ordinare le voci dell'elenco, che vengono quindi visualizzate in ordine crescente temperatura.  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Per gli oggetti A, B e C, le condizioni seguenti devono essere true: <c>A.CompareTo(A)</c> è necessario restituire zero.  Se <c>CompareTo (b)</c> restituisce zero, quindi <c>B.CompareTo(A)</c> è necessario restituire zero.  Se <c>CompareTo (b)</c> restituisce zero e <c>B.CompareTo(C)</c> restituisce zero, quindi <c>CompareTo (c)</c> è necessario restituire zero.  Se <c>CompareTo (b)</c> restituisce un valore diverso da zero, quindi <c>B.CompareTo(A)</c> è necessario restituire un valore di segno opposto.  Se <c>CompareTo (b)</c> restituisce un valore <paramref name="x" /> che non è uguale a zero, e <c>B.CompareTo(C)</c> restituisce un valore <paramref name="y" /> dello stesso segno <paramref name="x" />, quindi <c>A. CompareTo(C)</c> è necessario restituire un valore dello stesso segno <paramref name="x" /> e <paramref name="y" />.</para>
        </block>
        <block subset="none" type="usage">
          <para>Utilizzare il <see cref="M:System.IComparable`1.CompareTo(`0)" /> metodo per determinare l'ordinamento delle istanze di una classe.</para>
        </block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>