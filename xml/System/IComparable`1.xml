<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1985af8fb6915d65d96b4b1840552ee3b27cb90" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430806" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="24c77-101">Tipo di oggetto da confrontare.</span>
      <span class="sxs-lookup">
        <span data-stu-id="24c77-101">The type of object to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="24c77-102">Definisce un metodo di confronto generalizzato che viene implementato da un tipo di valore o da una classe per creare un metodo di confronto specifico del tipo per l'ordinamento delle istanze.</span>
      <span class="sxs-lookup">
        <span data-stu-id="24c77-102">Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c77-103">Questa interfaccia viene implementata da tipi i cui valori possono essere ordinati e fornisce un metodo di confronto fortemente tipizzato per ordinare i membri di un oggetto di raccolta generica.</span><span class="sxs-lookup"><span data-stu-id="24c77-103">This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="24c77-104">Ad esempio, un numero può essere maggiore di un secondo numero e una stringa può essere visualizzata in ordine alfabetico prima di un'altra.</span><span class="sxs-lookup"><span data-stu-id="24c77-104">For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</span></span> <span data-ttu-id="24c77-105">Richiede che i tipi di implementazione definiscano un solo metodo, <xref:System.IComparable%601.CompareTo%28%600%29>, che indica se la posizione dell'istanza corrente nella sequenza di ordinamento è precedente, dopo o uguale a quella un secondo oggetto dello stesso tipo.</span><span class="sxs-lookup"><span data-stu-id="24c77-105">It requires that implementing types define a single method, <xref:System.IComparable%601.CompareTo%28%600%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="24c77-106">In genere, il metodo non viene chiamato direttamente dal codice dello sviluppatore.</span><span class="sxs-lookup"><span data-stu-id="24c77-106">Typically, the method is not called directly from developer code.</span></span> <span data-ttu-id="24c77-107">Invece viene chiamato automaticamente dai metodi, ad esempio <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> e <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="24c77-107">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="24c77-108">In genere, i tipi che forniscono un <xref:System.IComparable%601> implementazione anche l'implementazione di <xref:System.IEquatable%601> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="24c77-108">Typically, types that provide an <xref:System.IComparable%601> implementation also implement the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="24c77-109">Il <xref:System.IEquatable%601> interfaccia definisce il <xref:System.IEquatable%601.Equals%2A> metodo, che determina l'uguaglianza delle istanze del tipo di implementazione.</span><span class="sxs-lookup"><span data-stu-id="24c77-109">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="24c77-110">L'implementazione del <xref:System.IComparable%601.CompareTo%28%600%29> metodo deve restituire un <xref:System.Int32> che presenta uno dei tre valori, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="24c77-110">The implementation of the <xref:System.IComparable%601.CompareTo%28%600%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="24c77-111">Valore</span><span class="sxs-lookup"><span data-stu-id="24c77-111">Value</span></span>|<span data-ttu-id="24c77-112">Significato</span><span class="sxs-lookup"><span data-stu-id="24c77-112">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="24c77-113">Minore di zero</span><span class="sxs-lookup"><span data-stu-id="24c77-113">Less than zero</span></span>|<span data-ttu-id="24c77-114">Questo oggetto precede l'oggetto specificato dal <xref:System.IComparable%601.CompareTo%2A> metodo nell'ordinamento.</span><span class="sxs-lookup"><span data-stu-id="24c77-114">This object precedes the object specified by the <xref:System.IComparable%601.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="24c77-115">Zero</span><span class="sxs-lookup"><span data-stu-id="24c77-115">Zero</span></span>|<span data-ttu-id="24c77-116">Questa istanza corrente si trova nella stessa posizione dell'ordinamento dell'oggetto specificato dal <xref:System.IComparable%601.CompareTo%2A> argomento del metodo.</span><span class="sxs-lookup"><span data-stu-id="24c77-116">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument.</span></span>|  
|<span data-ttu-id="24c77-117">Maggiore di zero</span><span class="sxs-lookup"><span data-stu-id="24c77-117">Greater than zero</span></span>|<span data-ttu-id="24c77-118">L'istanza corrente segue l'oggetto specificato dal <xref:System.IComparable%601.CompareTo%2A> argomento del metodo nell'ordinamento.</span><span class="sxs-lookup"><span data-stu-id="24c77-118">This current instance follows the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument in the sort order.</span></span>|  
  
 <span data-ttu-id="24c77-119">Tutti i tipi numerici (ad esempio <xref:System.Int32> e <xref:System.Double>) implementare <xref:System.IComparable%601>, come gli <xref:System.String>, <xref:System.Char>, e <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="24c77-119">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable%601>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="24c77-120">Tipi personalizzati devono anche fornire la propria implementazione di <xref:System.IComparable%601> per abilitare le istanze di oggetto deve essere ordinato o ordinato.</span><span class="sxs-lookup"><span data-stu-id="24c77-120">Custom types should also provide their own implementation of <xref:System.IComparable%601> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c77-121">Nell'esempio di codice riportato di seguito viene illustrata l'implementazione di <xref:System.IComparable%601> per un semplice oggetto `Temperature`.</span><span class="sxs-lookup"><span data-stu-id="24c77-121">The following code example illustrates the implementation of  <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="24c77-122">Nell'esempio viene creata una <xref:System.Collections.Generic.SortedList%602> raccolta di stringhe con `Temperature` le chiavi dell'oggetto e vengono aggiunte diverse coppie di temperature e stringhe all'elenco fuori sequenza.</span><span class="sxs-lookup"><span data-stu-id="24c77-122">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="24c77-123">Nella chiamata ai <xref:System.Collections.Generic.SortedList%602.Add%2A> metodo, il <xref:System.Collections.Generic.SortedList%602> viene utilizzato insieme il <xref:System.IComparable%601> implementazione per ordinare le voci dell'elenco, che vengono quindi visualizzate in ordine crescente temperatura.</span><span class="sxs-lookup"><span data-stu-id="24c77-123">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="24c77-124">
        <para>Sostituire il parametro di tipo di <see cref="T:System.IComparable`1" /> interfaccia con il tipo che implementa questa interfaccia.  Se si implementa <see cref="T:System.IComparable`1" />, è necessario eseguire l'overload degli operatori <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" /> e <see langword="op_LessThanOrEqual" /> per restituire valori coerenti con <see cref="M:System.IComparable`1.CompareTo(`0)" />. È inoltre necessario implementare <see cref="T:System.IEquatable`1" />. Vedere il <see cref="T:System.IEquatable`1" /> articolo per informazioni complete.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="24c77-124">
          <para>Replace the type parameter of the <see cref="T:System.IComparable`1" /> interface with the type that is implementing this interface.  If you implement <see cref="T:System.IComparable`1" />, you should overload the <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, and <see langword="op_LessThanOrEqual" /> operators to return values that are consistent with <see cref="M:System.IComparable`1.CompareTo(`0)" />. In addition, you should also implement <see cref="T:System.IEquatable`1" />. See the <see cref="T:System.IEquatable`1" /> article for complete information.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : 'T -&gt; int" Usage="iComparable.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="24c77-125">Oggetto da confrontare con l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c77-125">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24c77-126">Confronta l'istanza corrente con un altro oggetto dello stesso tipo e restituisce un intero che indica se l'istanza corrente precede, segue o si trova nella stessa posizione dell'altro oggetto all'interno dell'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c77-126">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24c77-127">Valore che indica l'ordine relativo degli oggetti confrontati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c77-127">A value that indicates the relative order of the objects being compared.</span>
          </span>
          <span data-ttu-id="24c77-128">Il valore restituito ha i significati seguenti:  <list type="table"><listheader><term> Valore  </term><description> Significato  </description></listheader><item><term> Minore di zero  </term><description> Questa istanza precede <paramref name="other" />  all'interno dell'ordinamento.  </description></item><item><term> Zero  </term><description> Questa istanza si presenta nella stessa posizione di <paramref name="other" /> all'interno dell'ordinamento.  </description></item><item><term> Maggiore di zero  </term><description>Questa istanza segue <paramref name="other" /> nei criteri di ordinamento.  </description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="24c77-128">The return value has these meanings:  <list type="table"><listheader><term> Value  </term><description> Meaning  </description></listheader><item><term> Less than zero  </term><description> This instance precedes <paramref name="other" /> in the sort order.  </description></item><item><term> Zero  </term><description> This instance occurs in the same position in the sort order as <paramref name="other" />.  </description></item><item><term> Greater than zero  </term><description> This instance follows <paramref name="other" /> in the sort order.  </description></item></list></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c77-129"><xref:System.IComparable%601.CompareTo%2A> fornisce un metodo di confronto fortemente tipizzato per ordinare i membri di un oggetto di raccolta generica.</span><span class="sxs-lookup"><span data-stu-id="24c77-129"><xref:System.IComparable%601.CompareTo%2A> provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="24c77-130">Per questo motivo, in genere non viene chiamato direttamente dal codice dello sviluppatore.</span><span class="sxs-lookup"><span data-stu-id="24c77-130">Because of this, it is usually not called directly from developer code.</span></span> <span data-ttu-id="24c77-131">Invece viene chiamato automaticamente dai metodi, ad esempio <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> e <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="24c77-131">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="24c77-132">Questo metodo è solo una definizione e deve essere implementato da un tipo di classe o valore specifico ha effetto.</span><span class="sxs-lookup"><span data-stu-id="24c77-132">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="24c77-133">Il significato dei confronti specificati nella sezione ("precede", "si trova nella stessa posizione" e "segue) dipende dall'implementazione specifica i valori restituiti.</span><span class="sxs-lookup"><span data-stu-id="24c77-133">The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="24c77-134">Per definizione, confronta maggiore di qualsiasi oggetto `null`, e due riferimenti null risultano uguali tra loro.</span><span class="sxs-lookup"><span data-stu-id="24c77-134">By definition, any object compares greater than `null`, and two null references compare equal to each other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c77-135">Esempio di codice seguente viene illustrata l'implementazione di <xref:System.IComparable%601> per una semplice `Temperature` oggetto.</span><span class="sxs-lookup"><span data-stu-id="24c77-135">The following code example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="24c77-136">Nell'esempio viene creata una <xref:System.Collections.Generic.SortedList%602> raccolta di stringhe con `Temperature` le chiavi dell'oggetto e vengono aggiunte diverse coppie di temperature e stringhe all'elenco fuori sequenza.</span><span class="sxs-lookup"><span data-stu-id="24c77-136">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="24c77-137">Nella chiamata ai <xref:System.Collections.Generic.SortedList%602.Add%2A> metodo, il <xref:System.Collections.Generic.SortedList%602> viene utilizzato insieme il <xref:System.IComparable%601> implementazione per ordinare le voci dell'elenco, che vengono quindi visualizzate in ordine crescente temperatura.</span><span class="sxs-lookup"><span data-stu-id="24c77-137">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="24c77-138">
            <para>Per gli oggetti A, B e C, le condizioni seguenti devono essere true: <c>A.CompareTo(A)</c> è necessario restituire zero.  Se <c>CompareTo (b)</c> restituisce zero, quindi <c>B.CompareTo(A)</c> è necessario restituire zero.  Se <c>CompareTo (b)</c> restituisce zero e <c>B.CompareTo(C)</c> restituisce zero, quindi <c>CompareTo (c)</c> è necessario restituire zero.  Se <c>CompareTo (b)</c> restituisce un valore diverso da zero, quindi <c>B.CompareTo(A)</c> è necessario restituire un valore di segno opposto.  Se <c>CompareTo (b)</c> restituisce un valore <paramref name="x" /> che non è uguale a zero, e <c>B.CompareTo(C)</c> restituisce un valore <paramref name="y" /> dello stesso segno <paramref name="x" />, quindi <c>A. CompareTo(C)</c> è necessario restituire un valore dello stesso segno <paramref name="x" /> e <paramref name="y" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="24c77-138">
              <para>For objects A, B, and C, the following must be true:  <c>A.CompareTo(A)</c> is required to return zero.  If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> is required to return zero.  If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> is required to return zero.  If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> is required to return a value of the opposite sign.  If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> that is not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> is required to return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="24c77-139">
            <para>Utilizzare il <see cref="M:System.IComparable`1.CompareTo(`0)" /> metodo per determinare l'ordinamento delle istanze di una classe.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="24c77-139">
              <para>Use the <see cref="M:System.IComparable`1.CompareTo(`0)" /> method to determine the ordering of instances of a class.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>