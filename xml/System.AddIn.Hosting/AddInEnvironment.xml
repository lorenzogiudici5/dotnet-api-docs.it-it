<Type Name="AddInEnvironment" FullName="System.AddIn.Hosting.AddInEnvironment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df4ed506a6ce753217cc2d2b596dc8d749e3f1a0" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46658333" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AddInEnvironment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInEnvironment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInEnvironment" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInEnvironment sealed" />
  <TypeSignature Language="F#" Value="type AddInEnvironment = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Consente di accedere al dominio applicazione e al processo di un componente aggiuntivo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa classe per caricare componenti aggiuntivi in un ambiente desiderato, che può essere uno dei seguenti:  
  
-   Un dominio dell'applicazione esistente per cui si dispone di <xref:System.AppDomain> oggetto.  
  
-   Un dominio dell'applicazione che è stato generato automaticamente per attivare un componente aggiuntivo.  
  
-   Un processo esterno esistente.  
  
 Per ottenere il <xref:System.AddIn.Hosting.AddInEnvironment> dell'oggetto per un componente aggiuntivo, viene passato dominio dell'applicazione del componente aggiuntivo per il <xref:System.AddIn.Hosting.AddInEnvironment> costruttore della classe. In alternativa, è possibile usare la <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> proprietà del <xref:System.AddIn.Hosting.AddInController> classe per ottenere il componente aggiuntivo <xref:System.AddIn.Hosting.AddInEnvironment> oggetto.  
  
 Dopo aver ottenuto il <xref:System.AddIn.Hosting.AddInEnvironment> dell'oggetto, è possibile eseguire le operazioni seguenti:  
  
-   Passare tale <xref:System.AddIn.Hosting.AddInEnvironment> oggetto appropriato <xref:System.AddIn.Hosting.AddInToken.Activate%2A> overload del metodo. Il componente aggiuntivo verrà attivato nel dominio dell'applicazione e nel processo rappresentato dal <xref:System.AddIn.Hosting.AddInEnvironment> oggetto.  
  
-   Usare la <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> proprietà per ottenere un <xref:System.AddIn.Hosting.AddInProcess> oggetto. Quindi passare tale oggetto appropriato <xref:System.AddIn.Hosting.AddInToken.Activate%2A> overload del metodo. Il componente aggiuntivo verrà attivato il processo rappresentato dal <xref:System.AddIn.Hosting.AddInProcess> oggetto, ma in un nuovo dominio applicazione.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">Componenti aggiuntivi ed estendibilità</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInEnvironment (AppDomain appDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AppDomain appDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddInEnvironment(AppDomain ^ appDomain);" />
      <MemberSignature Language="F#" Value="new System.AddIn.Hosting.AddInEnvironment : AppDomain -&gt; System.AddIn.Hosting.AddInEnvironment" Usage="new System.AddIn.Hosting.AddInEnvironment appDomain" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appDomain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="appDomain">Dominio applicazione contenente il componente aggiuntivo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.AddIn.Hosting.AddInEnvironment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si ha accesso al dominio dell'applicazione che contiene il componente aggiuntivo è necessario, è possibile utilizzare questo costruttore per ottenere il componente aggiuntivo <xref:System.AddIn.Hosting.AddInEnvironment> oggetto. In caso contrario, è possibile usare la <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> proprietà del <xref:System.AddIn.Hosting.AddInController> classe per ottenere il <xref:System.AddIn.Hosting.AddInEnvironment> oggetto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="appDomain" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">È richiesta un'autorizzazione Full Trust. Uno dei chiamanti nella sequenza delle chiamate non dispone di autorizzazioni sufficienti.</exception>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInProcess Process { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInProcess Process" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInEnvironment.Process" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Process As AddInProcess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInProcess ^ Process { System::AddIn::Hosting::AddInProcess ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Process : System.AddIn.Hosting.AddInProcess" Usage="System.AddIn.Hosting.AddInEnvironment.Process" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInProcess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.AddIn.Hosting.AddInProcess" /> che rappresenta il processo nel quale viene eseguito il componente aggiuntivo.</summary>
        <value>Processo nel quale viene eseguito il componente aggiuntivo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questa proprietà per attivare più componenti aggiuntivi nello stesso processo, ma in domini diversi.  
  
 Passare il <xref:System.AddIn.Hosting.AddInProcess> oggetto ottenuti con questa proprietà appropriata <xref:System.AddIn.Hosting.AddInToken.Activate%2A> overload del metodo.  
  
 Se si desidera attivare questi programmi nello stesso dominio in un processo esterno è necessario passare il <xref:System.AddIn.Hosting.AddInEnvironment> direttamente all'oggetto di <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=nameWithType> overload del metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>