<Type Name="AddInProcess" FullName="System.AddIn.Hosting.AddInProcess">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9dfe1d8a57d25a7e47494e94e8ea6da84ee1af7d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30360715" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AddInProcess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInProcess extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInProcess" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInProcess" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInProcess sealed" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un processo esterno per l'esecuzione di componenti aggiuntivi out-of-process dall'applicazione host.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per attivare un componente aggiuntivo in un processo esterno, passare un <xref:System.AddIn.Hosting.AddInProcess> oggetto appropriati <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> overload del metodo.  
  
 Il file eseguibile che esegue il componente aggiuntivo viene ottenuto da uno dei due file installati con .NET Framework nella directory Windows. Per impostazione predefinita, viene utilizzato il file eseguibile che soddisfi il bit per parola dell'applicazione host. Se l'host è un processo a 64 bit, viene eseguito AddInProcess.exe; in caso contrario, viene eseguito AddInProcess32.exe. Per specificare il modo in cui è stato selezionato il file eseguibile, usare il <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> costruttore per creare il <xref:System.AddIn.Hosting.AddInProcess> oggetto.  
  
   
  
## Examples  
 Nell'esempio seguente viene attivato un componente aggiuntivo in un processo esterno.  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.AddIn.Hosting.AddInProcess" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInProcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddInProcess();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.AddIn.Hosting.AddInProcess" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore ha lo stesso effetto dell'utilizzo di <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> costruttore con la <xref:System.AddIn.Hosting.Platform.Host?displayProperty=nameWithType> flag per specificare che il processo che esegue il componente aggiuntivo avrà la stessa bit per parola del processo host.  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInProcess (System.AddIn.Hosting.Platform platform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AddIn.Hosting.Platform platform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddInProcess(System::AddIn::Hosting::Platform platform);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="platform" Type="System.AddIn.Hosting.Platform" />
      </Parameters>
      <Docs>
        <param name="platform">Valore che specifica i bit per parola del processo che esegue il componente aggiuntivo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.AddIn.Hosting.AddInProcess" />, specificando i bit per parola del processo in cui viene eseguito il componente aggiuntivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente mostra come `platform` interessa i bit per parola del processo in diversi sistemi operativi:  
  
||sistema operativo a 32 bit|Sistema operativo a 64 bit|  
|-|------------------------------|------------------------------|  
|Host|32 bit|Il processo host|  
|AnyCPU|32 bit|64 bit|  
|X86|32 bit|32 bit|  
|X64|Viene generata un'eccezione|64 bit|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La voce del Registro di sistema per il percorso al file eseguibile (AddInProcess.exe o AddInProcess32.exe) manca.  
  
 oppure  
  
 Manca il file eseguibile.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentProcess">
      <MemberSignature Language="C#" Value="public bool IsCurrentProcess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentProcess" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.IsCurrentProcess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentProcess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentProcess { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.AddIn.Hosting.AddInProcess" /> corrente rappresenta il processo dell'applicazione host.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.AddIn.Hosting.AddInProcess" /> corrisponde al processo corrente; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il valore di questa proprietà è `true`, il componente aggiuntivo viene eseguito in-process con l'applicazione host. In tal caso, tramite il <xref:System.AddIn.Hosting.AddInProcess.Start%2A> o <xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> metodo genera un <xref:System.InvalidOperationException>.  
  
> [!NOTE]
>  Il <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=nameWithType> proprietà restituisce un <xref:System.AddIn.Hosting.AddInProcess> oggetto che rappresenta il processo dell'applicazione host, se il componente aggiuntivo viene eseguito in-process.  
  
   
  
## Examples  
 Nell'esempio seguente viene attivato un componente aggiuntivo in un processo esterno e viene utilizzata la <xref:System.AddIn.Hosting.AddInProcess.IsCurrentProcess%2A> proprietà per determinare se il componente aggiuntivo è nello stesso processo del processo dell'applicazione host.  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se mantenere attivo il processo esterno.</summary>
        <value>
          <see langword="true" /> se il processo esterno deve essere mantenuto attivo. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare questa proprietà su `false` per imporre la chiusura del processo esterno dopo l'ultimo componente aggiuntivo all'interno del processo è stato arrestato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.Platform Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AddIn.Hosting.Platform Platform" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As Platform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::Platform Platform { System::AddIn::Hosting::Platform get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.Platform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i bit per parola del processo in cui viene eseguito il componente aggiuntivo out-of-process.</summary>
        <value>Bit per parola del processo che esegue il componente aggiuntivo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bit per parola viene impostata quando il <xref:System.AddIn.Hosting.AddInProcess> oggetto viene inizializzato e non può essere modificato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ID del processo esterno.</summary>
        <value>ID processo oppure -1 se il processo esterno non è stato avviato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per il debug.  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public bool Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Function Shutdown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Impone la chiusura del processo esterno.</summary>
        <returns>
          <see langword="true" /> se il processo esterno è stato eseguito e chiuso correttamente; <see langword="false" /> se non è presente alcun processo attivo associato a <see cref="T:System.AddIn.Hosting.AddInProcess" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Il componente aggiuntivo viene eseguito in-process con l'applicazione host. L'avvio e l'interruzione del processo sono consentiti solo per i processi esterni, non per il processo host.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShuttingDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.CancelEventArgs&gt; ShuttingDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.CancelEventArgs&gt; ShuttingDown" />
      <MemberSignature Language="DocId" Value="E:System.AddIn.Hosting.AddInProcess.ShuttingDown" />
      <MemberSignature Language="VB.NET" Value="Public Event ShuttingDown As EventHandler(Of CancelEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::CancelEventArgs ^&gt; ^ ShuttingDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.CancelEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il processo rappresentato dall'oggetto <see cref="T:System.AddIn.Hosting.AddInProcess" /> sta per essere chiuso.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public bool Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.Start" />
      <MemberSignature Language="VB.NET" Value="Public Function Start () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia il processo esterno.</summary>
        <returns>
          <see langword="true" /> se il processo è stato avviato correttamente. <see langword="false" /> se il processo è già in esecuzione.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Il componente aggiuntivo viene eseguito in-process con l'applicazione host. L'avvio e l'interruzione del processo sono consentiti solo per i processi esterni, non per il processo host.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartupTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan StartupTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan StartupTimeout" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.StartupTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property StartupTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan StartupTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di secondi consentito prima dell'avvio del processo.</summary>
        <value>Numero di secondi consentito prima dell'avvio del processo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito è 10 secondi. Questa proprietà viene in genere utilizzata durante il debug, per aumentare il tempo di avvio per il processo che esegue il componente aggiuntivo out-of-process.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Processo già in esecuzione.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore assegnato è minore di 0 (zero).</exception>
      </Docs>
    </Member>
  </Members>
</Type>