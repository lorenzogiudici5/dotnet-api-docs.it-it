<Type Name="IContract" FullName="System.AddIn.Contract.IContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="820a8b149e6e30eb1cdae441450a57bcb619b87c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37705517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContract" />
  <TypeSignature Language="F#" Value="type IContract = interface" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="84cbf-101">Rappresenta l'interfaccia di base per tutti i contratti utilizzati per la comunicazione tra componenti aggiornati in modo indipendente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84cbf-101">Represents the base interface for all contracts that are used for communication between components that are updated independently.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84cbf-102">Il <xref:System.AddIn.Contract.IContract> interfaccia definisce un contratto che aggiornato in modo indipendente i componenti, ad esempio un'applicazione e un componente aggiuntivo, è possibile usare per comunicare.</span><span class="sxs-lookup"><span data-stu-id="84cbf-102">The <xref:System.AddIn.Contract.IContract> interface defines a contract that independently updated components, such as an application and an add-in, can use to communicate.</span></span> <span data-ttu-id="84cbf-103">I componenti possono utilizzare <xref:System.AddIn.Contract.IContract> per la comunicazione fra i processi o i limiti del dominio dell'applicazione, o per comunicare con altri componenti nello stesso processo o dominio dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="84cbf-103">Components can use <xref:System.AddIn.Contract.IContract> to communicate across process or application domain boundaries, or to communicate with other components in the same process or application domain.</span></span> <span data-ttu-id="84cbf-104"><xref:System.AddIn.Contract.IContract> ha uno scopo simile per i componenti creati utilizzando .NET Framework come la `IUnknown` interfaccia viene usata per i componenti creati tramite COM.</span><span class="sxs-lookup"><span data-stu-id="84cbf-104"><xref:System.AddIn.Contract.IContract> serves a similar purpose for components created using the .NET Framework as the `IUnknown` interface serves for components created using COM.</span></span> <span data-ttu-id="84cbf-105">Per determinare se un oggetto implementa un particolare contratto, usare il <xref:System.AddIn.Contract.IContract.QueryContract%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="84cbf-105">To determine whether an object implements a particular contract, use the <xref:System.AddIn.Contract.IContract.QueryContract%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcquireLifetimeToken">
      <MemberSignature Language="C#" Value="public int AcquireLifetimeToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AcquireLifetimeToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireLifetimeToken () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AcquireLifetimeToken();" />
      <MemberSignature Language="F#" Value="abstract member AcquireLifetimeToken : unit -&gt; int" Usage="iContract.AcquireLifetimeToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84cbf-106">Specifica che il contratto è accessibile a un client finché tale client non lo revoca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-106">Specifies that the contract is accessible to a client until the client revokes the contract.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84cbf-107">Valore, anche noto come token durata, che identifica il client che ha acquisito il contratto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-107">A value, also known as a lifetime token, that identifies the client that has acquired the contract.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84cbf-108">I client di un oggetto che implementa <xref:System.AddIn.Contract.IContract> chiamare il <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> metodo per notificare l'oggetto che il client richiede l'accesso al contratto.</span><span class="sxs-lookup"><span data-stu-id="84cbf-108">Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method to notify the object that the client requires access to the contract.</span></span> <span data-ttu-id="84cbf-109">Un <xref:System.AddIn.Contract.IContract> è garantita per essere utilizzabile, purché almeno un token di durata che passato a un client non sia stato revocato.</span><span class="sxs-lookup"><span data-stu-id="84cbf-109">An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.</span></span>  
  
 <span data-ttu-id="84cbf-110">Per revocare un contratto, i client chiamano il <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="84cbf-110">To revoke a contract, clients call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteHashCode">
      <MemberSignature Language="C#" Value="public int GetRemoteHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemoteHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRemoteHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteHashCode : unit -&gt; int" Usage="iContract.GetRemoteHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84cbf-111">Restituisce un codice hash per l'oggetto <see cref="T:System.AddIn.Contract.IContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-111">Returns a hash code for the <see cref="T:System.AddIn.Contract.IContract" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84cbf-112">Codice hash per la classe <see cref="T:System.AddIn.Contract.IContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-112">A hash code for the <see cref="T:System.AddIn.Contract.IContract" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract QueryContract (string contractIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IContract QueryContract(string contractIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function QueryContract (contractIdentifier As String) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IContract ^ QueryContract(System::String ^ contractIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member QueryContract : string -&gt; System.AddIn.Contract.IContract" Usage="iContract.QueryContract contractIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractIdentifier">
          <span data-ttu-id="84cbf-113">Stringa che identifica il contratto richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-113">A string that identifies the contract that is being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84cbf-114">Restituisce un contratto implementato da questo contratto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-114">Returns a contract that is implemented by this contract.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84cbf-115">Oggetto <see cref="T:System.AddIn.Contract.IContract" /> che rappresenta un contratto richiesto da un client al contratto corrente, <see langword="null" /> se il contratto corrente non supporta il contratto richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-115">An <see cref="T:System.AddIn.Contract.IContract" /> that represents a contract that a client is requesting from the current contract; <see langword="null" /> if the current contract does not support the contract that is requested.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84cbf-116">Il <xref:System.AddIn.Contract.IContract.QueryContract%2A> metodo abilita <xref:System.AddIn.Contract.IContract> oggetti da esporre altri contratti.</span><span class="sxs-lookup"><span data-stu-id="84cbf-116">The <xref:System.AddIn.Contract.IContract.QueryContract%2A> method enables <xref:System.AddIn.Contract.IContract> objects to expose other contracts.</span></span> <span data-ttu-id="84cbf-117"><xref:System.AddIn.Contract.IContract.QueryContract%2A> svolge una funzione simile a quella del `IUnknown.QueryInterface` metodo COM.</span><span class="sxs-lookup"><span data-stu-id="84cbf-117"><xref:System.AddIn.Contract.IContract.QueryContract%2A> serves a purpose similar to that of the `IUnknown.QueryInterface` method in COM.</span></span>  
  
 <span data-ttu-id="84cbf-118">Il formato delle stringhe utilizzate per identificare i contratti è definito dal <xref:System.AddIn.Contract.IContract> implementazione.</span><span class="sxs-lookup"><span data-stu-id="84cbf-118">The format of the strings used to identify contracts is defined by the <xref:System.AddIn.Contract.IContract> implementation.</span></span> <span data-ttu-id="84cbf-119">È consigliabile usare il <xref:System.Type.AssemblyQualifiedName%2A> del contratto che viene eseguita la query.</span><span class="sxs-lookup"><span data-stu-id="84cbf-119">It is recommended that you use the <xref:System.Type.AssemblyQualifiedName%2A> of the contract that is being queried.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteEquals">
      <MemberSignature Language="C#" Value="public bool RemoteEquals (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoteEquals(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteEquals (contract As IContract) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoteEquals(System::AddIn::Contract::IContract ^ contract);" />
      <MemberSignature Language="F#" Value="abstract member RemoteEquals : System.AddIn.Contract.IContract -&gt; bool" Usage="iContract.RemoteEquals contract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="84cbf-120">Contratto da confrontare con questo oggetto <see cref="T:System.AddIn.Contract.IContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-120">The contract to compare with this <see cref="T:System.AddIn.Contract.IContract" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84cbf-121">Indica se il contratto specificato è uguale a questo oggetto <see cref="T:System.AddIn.Contract.IContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-121">Indicates whether the specified contract is equal to this <see cref="T:System.AddIn.Contract.IContract" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84cbf-122">
            <see langword="true" /> se <paramref name="contract" /> è uguale a questo oggetto <see cref="T:System.AddIn.Contract.IContract" />, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-122">
              <see langword="true" /> if <paramref name="contract" /> is equal to this <see cref="T:System.AddIn.Contract.IContract" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteToString">
      <MemberSignature Language="C#" Value="public string RemoteToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RemoteToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.RemoteToString" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ RemoteToString();" />
      <MemberSignature Language="F#" Value="abstract member RemoteToString : unit -&gt; string" Usage="iContract.RemoteToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84cbf-123">Restituisce una rappresentazione di stringa dell'oggetto <see cref="T:System.AddIn.Contract.IContract" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-123">Returns a string representation of the current <see cref="T:System.AddIn.Contract.IContract" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84cbf-124">Rappresentazione di stringa dell'oggetto <see cref="T:System.AddIn.Contract.IContract" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-124">A string representation of the current <see cref="T:System.AddIn.Contract.IContract" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeLifetimeToken">
      <MemberSignature Language="C#" Value="public void RevokeLifetimeToken (int token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeLifetimeToken(int32 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeLifetimeToken (token As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevokeLifetimeToken(int token);" />
      <MemberSignature Language="F#" Value="abstract member RevokeLifetimeToken : int -&gt; unit" Usage="iContract.RevokeLifetimeToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="84cbf-125">Valore, anche noto come token durata, che identifica il client che ha revocato il contratto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-125">A value, also known as a lifetime token, that identifies the client that is revoking the contract.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84cbf-126">Specifica che il contratto non è più accessibile a un client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84cbf-126">Specifies that the contract is no longer accessible to a client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84cbf-127">I client di un oggetto che implementa <xref:System.AddIn.Contract.IContract> chiamare il <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> metodo per notificare all'oggetto che il client non richiede più il contratto.</span><span class="sxs-lookup"><span data-stu-id="84cbf-127">Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method to notify the object that the client no longer needs the contract.</span></span> <span data-ttu-id="84cbf-128">Un <xref:System.AddIn.Contract.IContract> è garantita per essere utilizzabile, purché almeno un token di durata che passato a un client non sia stato revocato.</span><span class="sxs-lookup"><span data-stu-id="84cbf-128">An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.</span></span>  
  
 <span data-ttu-id="84cbf-129">Per acquisire un contratto, i client chiamano il <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="84cbf-129">To acquire a contract, clients call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>