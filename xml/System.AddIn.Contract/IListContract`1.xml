<Type Name="IListContract&lt;T&gt;" FullName="System.AddIn.Contract.IListContract&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8637b453c524cf1038d39e039a16c3d86925bab5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30360065" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListContract&lt;T&gt; : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;T&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of T)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IListContract : System::AddIn::Contract::IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="20d2c-101">Tipo di contratto degli oggetti nell'elenco.</span>
      <span class="sxs-lookup">
        <span data-stu-id="20d2c-101">The contract type of the objects in the list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="20d2c-102">Rappresenta un elenco generico di tipi che vengono definiti da un contratto e che vengono utilizzati per passare insiemi di tale tipo di contratto tra un host e un componente aggiuntivo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="20d2c-102">Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d2c-103">Il <xref:System.AddIn.Pipeline.CollectionAdapters> classe Usa un <xref:System.AddIn.Contract.IListContract%601> interfaccia passare raccolte, in entrambe le direzioni, tra l'host e il componente aggiuntivo.</span><span class="sxs-lookup"><span data-stu-id="20d2c-103">The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in.</span></span> <span data-ttu-id="20d2c-104">È consigliabile utilizzare la <xref:System.AddIn.Pipeline.CollectionAdapters> classe anziché utilizzare questa classe direttamente nel codice.</span><span class="sxs-lookup"><span data-stu-id="20d2c-104">It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code.</span></span> <span data-ttu-id="20d2c-105">Per un esempio, vedere [procedura dettagliata: passaggio di raccolte tra host e Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span><span class="sxs-lookup"><span data-stu-id="20d2c-105">For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span></span>  
  
 <span data-ttu-id="20d2c-106">Questa classe può essere utilizzata per passare oggetti mediante riferimenti tra i domini applicazione, poiché gli oggetti non vengono serializzati.</span><span class="sxs-lookup"><span data-stu-id="20d2c-106">This class can be used to pass objects by reference between application domains because the objects are not serialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="20d2c-107">Oggetto da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-107">The object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d2c-108">Aggiunge un oggetto a un insieme <see cref="T:System.AddIn.Contract.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-108">Adds an object to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d2c-109">Il `item` parametro deve essere di un tipo definito dal contratto.</span><span class="sxs-lookup"><span data-stu-id="20d2c-109">The `item` parameter must be of a type that is defined by the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20d2c-110">Rimuove tutti gli oggetti da un insieme <see cref="T:System.AddIn.Contract.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-110">Removes all objects from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="20d2c-111">Oggetto da cercare nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-111">The object to look for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d2c-112">Determina se un elemento specifico è contenuto in un insieme <see cref="T:System.AddIn.Contract.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-112">Determines whether a specific item is in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d2c-113">È <see langword="true" /> se <paramref name="item" /> si trova nella raccolta. In caso contrario è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-113">
              <see langword="true" /> if <paramref name="item" /> is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20d2c-114">Ottiene il numero di elementi contenuti in un insieme <see cref="T:System.AddIn.Contract.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-114">Gets the number of items in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d2c-115">Numero di elementi nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-115">The number of items in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IEnumeratorContract&lt;T&gt; GetEnumeratorContract ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IEnumeratorContract`1&lt;!T&gt; GetEnumeratorContract() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumeratorContract () As IEnumeratorContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IEnumeratorContract&lt;T&gt; ^ GetEnumeratorContract();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IEnumeratorContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20d2c-116">Viene restituito un enumeratore che scorre un insieme <see cref="T:System.AddIn.Contract.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-116">Returns an enumerator that iterates through an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d2c-117">Enumeratore <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> che scorre l'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-117">An <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> enumerator to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20d2c-118">Determina se un insieme <see cref="T:System.AddIn.Contract.IListContract`1" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-118">Determines whether an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d2c-119">
            <see langword="true" /> se la raccolta è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-119">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public T GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="20d2c-120">Indice in base zero dell'elemento da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-120">The zero-based index of the item to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d2c-121">Restituisce l'elemento di un insieme <see cref="T:System.AddIn.Contract.IListContract`1" />in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-121">Returns the item at the specified index of an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d2c-122">Elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-122">The item at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d2c-123">Il <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> metodo non rimuove l'elemento in corrispondenza dell'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="20d2c-123">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="20d2c-124">Per rimuovere un elemento dal <xref:System.AddIn.Contract.IListContract%601> insieme, utilizzare il <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="20d2c-124">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="20d2c-125">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-125">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20d2c-126">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-126">-or-</span>
          </span>
          <span data-ttu-id="20d2c-127">
            <paramref name="index" /> è maggiore o uguale al valore restituito di <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-127">
              <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="20d2c-128">Elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-128">An item in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d2c-129">Restituisce l'indice di un elemento specifico di un insieme <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-129">Returns the index of a specific item in an <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d2c-130">Indice dell'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-130">The index of the specified item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d2c-131">Se sono presenti più oggetti dello stesso tipo della raccolta, questo metodo identifica l'indice dell'elemento che è la prima occorrenza del tipo specificato nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="20d2c-131">If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</span></span>  
  
 <span data-ttu-id="20d2c-132">Il <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> metodo non rimuove l'elemento in corrispondenza dell'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="20d2c-132">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="20d2c-133">Per rimuovere un elemento dal <xref:System.AddIn.Contract.IListContract%601> insieme, utilizzare il <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="20d2c-133">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="20d2c-134">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-134">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20d2c-135">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-135">-or-</span>
          </span>
          <span data-ttu-id="20d2c-136">
            <paramref name="index" /> è maggiore o uguale al valore restituito dal metodo <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-136">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="20d2c-137">Indice in base zero in corrispondenza del quale inserire l'oggetto <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-137">The zero-based index at which to insert <c>item</c>.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="20d2c-138">Oggetto <see cref="T:System.AddIn.Contract.IContract" /> da inserire nell'insieme <see cref="T:System.AddIn.Contract.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-138">The <see cref="T:System.AddIn.Contract.IContract" /> object to insert in the <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d2c-139">Inserisce un elemento nell'insieme <see cref="T:System.AddIn.Contract.IListContract`1" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-139">Inserts an item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d2c-140">Dopo aver chiamato il <xref:System.AddIn.Contract.IListContract%601.Insert%2A> (metodo), gli elementi successivi al punto di inserimento spostati per inserire il nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="20d2c-140">After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item.</span></span> <span data-ttu-id="20d2c-141">Vengono aggiornati anche gli indici degli elementi spostati.</span><span class="sxs-lookup"><span data-stu-id="20d2c-141">The indexes of the items that are moved are also updated.</span></span> <span data-ttu-id="20d2c-142">Per sostituire un elemento in corrispondenza dell'indice specificato, utilizzare il <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="20d2c-142">To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="20d2c-143">Per determinare se un <xref:System.AddIn.Contract.IListContract%601> raccolta è di sola lettura, chiamare il <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="20d2c-143">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="20d2c-144">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-144">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20d2c-145">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-145">-or-</span>
          </span>
          <span data-ttu-id="20d2c-146">
            <paramref name="index" /> è maggiore o uguale al valore restituito di <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-146">
              <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="20d2c-147">L'insieme <see cref="T:System.AddIn.Contract.IListContract`1" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-147">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="20d2c-148">Elemento da rimuovere dall'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-148">The item to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d2c-149">Rimuove da un insieme <see cref="T:System.AddIn.Contract.IListContract`1" /> un elemento di tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-149">Removes an item from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d2c-150">
            <see langword="true" /> se viene rimosso un elemento. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-150">
              <see langword="true" /> if an item is removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d2c-151">È necessario ripetere questo metodo per ogni oggetto di un tipo specifico nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="20d2c-151">You must repeat this method for each object of a particular type in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="20d2c-152">Indice dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-152">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d2c-153">Rimuove da un insieme <see cref="T:System.AddIn.Contract.IListContract`1" /> l'elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-153">Removes the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d2c-154">Dopo aver chiamato <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, spostano gli elementi che seguono l'elemento rimosso occupare la posizione rimasta vuota.</span><span class="sxs-lookup"><span data-stu-id="20d2c-154">After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot.</span></span> <span data-ttu-id="20d2c-155">Vengono aggiornati anche gli indici degli elementi spostati.</span><span class="sxs-lookup"><span data-stu-id="20d2c-155">The indexes of the items that are moved are also updated.</span></span>  
  
 <span data-ttu-id="20d2c-156">Per determinare se un <xref:System.AddIn.Contract.IListContract%601> raccolta è di sola lettura, chiamare il <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="20d2c-156">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="20d2c-157">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-157">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20d2c-158">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-158">-or-</span>
          </span>
          <span data-ttu-id="20d2c-159">
            <paramref name="index" /> è maggiore o uguale al valore restituito dal metodo <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-159">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="20d2c-160">L'insieme <see cref="T:System.AddIn.Contract.IListContract`1" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-160">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="20d2c-161">Indice in base zero in corrispondenza del quale impostare l'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-161">The zero-based index at which to set the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="20d2c-162">Elemento da impostare in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-162">The item to set at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d2c-163">Imposta l'elemento di un insieme <see cref="T:System.AddIn.Contract.IListContract`1" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-163">Sets the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d2c-164">Il <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> metodo imposta l'elemento in corrispondenza dell'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="20d2c-164">The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index.</span></span> <span data-ttu-id="20d2c-165">Per aggiungere un elemento per il <xref:System.AddIn.Contract.IListContract%601> insieme, utilizzare il <xref:System.AddIn.Contract.IListContract%601.Insert%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="20d2c-165">To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="20d2c-166">Per determinare se un <xref:System.AddIn.Contract.IListContract%601> raccolta è di sola lettura, chiamare il <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="20d2c-166">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="20d2c-167">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-167">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20d2c-168">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-168">-or-</span>
          </span>
          <span data-ttu-id="20d2c-169">
            <paramref name="index" /> è maggiore o uguale al valore restituito dal metodo <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-169">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="20d2c-170">L'insieme <see cref="T:System.AddIn.Contract.IListContract`1" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d2c-170">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>