<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IListContract`1.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58637b453c524cf1038d39e039a16c3d86925bab5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8637b453c524cf1038d39e039a16c3d86925bab5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IListContract`1">
          <source>The contract type of the objects in the list.</source>
          <target state="translated">Tipo di contratto degli oggetti nell'elenco.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.IListContract`1">
          <source>Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</source>
          <target state="translated">Rappresenta un elenco generico di tipi che vengono definiti da un contratto e che vengono utilizzati per passare insiemi di tale tipo di contratto tra un host e un componente aggiuntivo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IListContract`1">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Pipeline.CollectionAdapters&gt;</ph> class uses an <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> interface to pass collections, in both directions, between the host and the add-in.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.AddIn.Pipeline.CollectionAdapters&gt;</ph> classe Usa un <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> interfaccia passare raccolte, in entrambe le direzioni, tra l'host e il componente aggiuntivo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IListContract`1">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.CollectionAdapters&gt;</ph> class instead of using this class directly in your code.</source>
          <target state="translated">È consigliabile utilizzare la <ph id="ph1">&lt;xref:System.AddIn.Pipeline.CollectionAdapters&gt;</ph> classe anziché utilizzare questa classe direttamente nel codice.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IListContract`1">
          <source>For an example, see <bpt id="p1">[</bpt>Walkthrough: Passing Collections Between Hosts and Add-Ins<ept id="p1">](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)</ept>.</source>
          <target state="translated">Per un esempio, vedere <bpt id="p1">[</bpt>procedura dettagliata: passaggio di raccolte tra host e Add-Ins<ept id="p1">](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IListContract`1">
          <source>This class can be used to pass objects by reference between application domains because the objects are not serialized.</source>
          <target state="translated">Questa classe può essere utilizzata per passare oggetti mediante riferimenti tra i domini applicazione, poiché gli oggetti non vengono serializzati.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Add(`0)">
          <source>The object to add.</source>
          <target state="translated">Oggetto da aggiungere.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Add(`0)">
          <source>Adds an object to an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Aggiunge un oggetto a un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Add(`0)">
          <source>The <ph id="ph1">`item`</ph> parameter must be of a type that is defined by the contract.</source>
          <target state="translated">Il <ph id="ph1">`item`</ph> parametro deve essere di un tipo definito dal contratto.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Clear">
          <source>Removes all objects from an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Rimuove tutti gli oggetti da un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Contains(`0)">
          <source>The object to look for in the collection.</source>
          <target state="translated">Oggetto da cercare nell'insieme.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Contains(`0)">
          <source>Determines whether a specific item is in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Determina se un elemento specifico è contenuto in un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is in the collection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">È <ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="item" /&gt;</ph> si trova nella raccolta. In caso contrario è <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetCount">
          <source>Gets the number of items in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Ottiene il numero di elementi contenuti in un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetCount">
          <source>The number of items in the collection.</source>
          <target state="translated">Numero di elementi nella raccolta.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract">
          <source>Returns an enumerator that iterates through an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Viene restituito un enumeratore che scorre un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /&gt;</ph> enumerator to iterate through the collection.</source>
          <target state="translated">Enumeratore <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /&gt;</ph> che scorre l'insieme.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly">
          <source>Determines whether an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection is read-only.</source>
          <target state="translated">Determina se un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> è in sola lettura.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la raccolta è di sola lettura; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>The zero-based index of the item to get.</source>
          <target state="translated">Indice in base zero dell'elemento da ottenere.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>Returns the item at the specified index of an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Restituisce l'elemento di un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>The item at the specified index.</source>
          <target state="translated">Elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.GetItem%2A&gt;</ph> method does not remove the item at the specified index.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.GetItem%2A&gt;</ph> metodo non rimuove l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>To remove an item from the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection, use the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">Per rimuovere un elemento dal <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> insieme, utilizzare il <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the return value of <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è maggiore o uguale al valore restituito di <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>An item in the collection.</source>
          <target state="translated">Elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>Returns the index of a specific item in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Restituisce l'indice di un elemento specifico di un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>The index of the specified item.</source>
          <target state="translated">Indice dell'elemento specificato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</source>
          <target state="translated">Se sono presenti più oggetti dello stesso tipo della raccolta, questo metodo identifica l'indice dell'elemento che è la prima occorrenza del tipo specificato nella raccolta.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.GetItem%2A&gt;</ph> method does not remove the item at the specified index.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.GetItem%2A&gt;</ph> metodo non rimuove l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>To remove an item from the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection, use the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">Per rimuovere un elemento dal <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> insieme, utilizzare il <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the return value of the <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è maggiore o uguale al valore restituito dal metodo <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>The zero-based index at which to insert <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale inserire l'oggetto <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> object to insert in the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> da inserire nell'insieme <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>Inserts an item at the specified index in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Inserisce un elemento nell'insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>After you call the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.Insert%2A&gt;</ph> method, the items that follow the insertion point move to accommodate the new item.</source>
          <target state="translated">Dopo aver chiamato il <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.Insert%2A&gt;</ph> (metodo), gli elementi successivi al punto di inserimento spostati per inserire il nuovo elemento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>The indexes of the items that are moved are also updated.</source>
          <target state="translated">Vengono aggiornati anche gli indici degli elementi spostati.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>To replace an item at a specified index, use the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.SetItem%2A&gt;</ph> method.</source>
          <target state="translated">Per sostituire un elemento in corrispondenza dell'indice specificato, utilizzare il <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.SetItem%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>To determine whether an <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection is read-only, call the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Per determinare se un <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> raccolta è di sola lettura, chiamare il <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the return value of <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è maggiore o uguale al valore restituito di <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection is read-only.</source>
          <target state="translated">L'insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> è in sola lettura.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Remove(`0)">
          <source>The item to remove from the collection.</source>
          <target state="translated">Elemento da rimuovere dall'insieme.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Remove(`0)">
          <source>Removes an item from an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection of a specified type.</source>
          <target state="translated">Rimuove da un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> un elemento di tipo specificato.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item is removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene rimosso un elemento. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Remove(`0)">
          <source>You must repeat this method for each object of a particular type in the collection.</source>
          <target state="translated">È necessario ripetere questo metodo per ogni oggetto di un tipo specifico nella raccolta.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>The index of the item to remove.</source>
          <target state="translated">Indice dell'elemento da rimuovere.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>Removes the item at the specified index in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Rimuove da un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>After you call <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph>, the items that follow the removed item move to occupy the vacated spot.</source>
          <target state="translated">Dopo aver chiamato <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph>, spostano gli elementi che seguono l'elemento rimosso occupare la posizione rimasta vuota.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>The indexes of the items that are moved are also updated.</source>
          <target state="translated">Vengono aggiornati anche gli indici degli elementi spostati.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>To determine whether an <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection is read-only, call the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Per determinare se un <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> raccolta è di sola lettura, chiamare il <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the return value of the <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è maggiore o uguale al valore restituito dal metodo <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection is read-only.</source>
          <target state="translated">L'insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> è in sola lettura.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>The zero-based index at which to set the item.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale impostare l'elemento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>The item to set at the specified index.</source>
          <target state="translated">Elemento da impostare in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>Sets the item at the specified index in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Imposta l'elemento di un insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.SetItem%2A&gt;</ph> method sets the item at the specified index.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.SetItem%2A&gt;</ph> metodo imposta l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>To add an item to the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection, use the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.Insert%2A&gt;</ph> method.</source>
          <target state="translated">Per aggiungere un elemento per il <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> insieme, utilizzare il <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.Insert%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>To determine whether an <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection is read-only, call the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Per determinare se un <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> raccolta è di sola lettura, chiamare il <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the return value of the <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è maggiore o uguale al valore restituito dal metodo <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection is read-only.</source>
          <target state="translated">L'insieme <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> è in sola lettura.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>