<Type Name="IListContract&lt;T&gt;" FullName="System.AddIn.Contract.IListContract&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42074f6c821bba4afe477b1ae63362f1d0855934" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37705559" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListContract&lt;T&gt; : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;T&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of T)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IListContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'T&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="ed366-101">Il tipo di contratto degli oggetti nell'elenco.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed366-101">The contract type of the objects in the list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ed366-102">Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed366-102">Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed366-103">Il <xref:System.AddIn.Pipeline.CollectionAdapters> classe Usa un <xref:System.AddIn.Contract.IListContract%601> interfaccia passare raccolte, in entrambe le direzioni, tra l'host e il componente aggiuntivo.</span><span class="sxs-lookup"><span data-stu-id="ed366-103">The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in.</span></span> <span data-ttu-id="ed366-104">È consigliabile usare il <xref:System.AddIn.Pipeline.CollectionAdapters> classe invece di usare questa classe direttamente nel codice.</span><span class="sxs-lookup"><span data-stu-id="ed366-104">It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code.</span></span> <span data-ttu-id="ed366-105">Per un esempio, vedere [procedura dettagliata: passaggio di raccolte tra host e Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span><span class="sxs-lookup"><span data-stu-id="ed366-105">For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span></span>  
  
 <span data-ttu-id="ed366-106">Questa classe è utilizzabile per passare oggetti mediante riferimenti tra i domini applicazione perché non vengono serializzati gli oggetti.</span><span class="sxs-lookup"><span data-stu-id="ed366-106">This class can be used to pass objects by reference between application domains because the objects are not serialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit" Usage="iListContract.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="ed366-107">The object to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-107">The object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed366-108">Adds an object to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-108">Adds an object to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed366-109">Il `item` parametro deve essere di un tipo definito dal contratto.</span><span class="sxs-lookup"><span data-stu-id="ed366-109">The `item` parameter must be of a type that is defined by the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iListContract.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed366-110">Removes all objects from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-110">Removes all objects from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool" Usage="iListContract.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="ed366-111">The object to look for in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-111">The object to look for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed366-112">Determines whether a specific item is in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-112">Determines whether a specific item is in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed366-113">
            <see langword="true" /> if <paramref name="item" /> is in the collection; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-113">
              <see langword="true" /> if <paramref name="item" /> is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberSignature Language="F#" Value="abstract member GetCount : unit -&gt; int" Usage="iListContract.GetCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed366-114">Gets the number of items in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-114">Gets the number of items in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed366-115">The number of items in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-115">The number of items in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IEnumeratorContract&lt;T&gt; GetEnumeratorContract ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IEnumeratorContract`1&lt;!T&gt; GetEnumeratorContract() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumeratorContract () As IEnumeratorContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IEnumeratorContract&lt;T&gt; ^ GetEnumeratorContract();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorContract : unit -&gt; System.AddIn.Contract.IEnumeratorContract&lt;'T&gt;" Usage="iListContract.GetEnumeratorContract " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IEnumeratorContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed366-116">Returns an enumerator that iterates through an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-116">Returns an enumerator that iterates through an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed366-117">An <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> enumerator to iterate through the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-117">An <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> enumerator to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member GetIsReadOnly : unit -&gt; bool" Usage="iListContract.GetIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed366-118">Determines whether an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-118">Determines whether an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed366-119">
            <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-119">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public T GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'T" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ed366-120">The zero-based index of the item to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-120">The zero-based index of the item to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed366-121">Returns the item at the specified index of an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-121">Returns the item at the specified index of an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed366-122">The item at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-122">The item at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed366-123">Il <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> metodo non rimuove l'elemento in corrispondenza dell'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="ed366-123">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="ed366-124">Per rimuovere un elemento dal <xref:System.AddIn.Contract.IListContract%601> raccolta, uso il <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed366-124">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ed366-125">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-125">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed366-126">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-126">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="ed366-127">An item in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-127">An item in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed366-128">Returns the index of a specific item in an <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-128">Returns the index of a specific item in an <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed366-129">The index of the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-129">The index of the specified item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed366-130">Se sono presenti più oggetti dello stesso tipo nella raccolta, questo metodo identifica l'indice dell'elemento che è la prima occorrenza del tipo specificato nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="ed366-130">If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</span></span>  
  
 <span data-ttu-id="ed366-131">Il <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> metodo non rimuove l'elemento in corrispondenza dell'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="ed366-131">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="ed366-132">Per rimuovere un elemento dal <xref:System.AddIn.Contract.IListContract%601> raccolta, uso il <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed366-132">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ed366-133">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-133">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed366-134">-or-  <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-134">-or-  <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ed366-135">The zero-based index at which to insert <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-135">The zero-based index at which to insert <c>item</c>.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ed366-136">The <see cref="T:System.AddIn.Contract.IContract" /> object to insert in the <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-136">The <see cref="T:System.AddIn.Contract.IContract" /> object to insert in the <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed366-137">Inserts an item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-137">Inserts an item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed366-138">Dopo aver chiamato il <xref:System.AddIn.Contract.IListContract%601.Insert%2A> metodo, spostare gli elementi che seguono il punto di inserimento contenere il nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="ed366-138">After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item.</span></span> <span data-ttu-id="ed366-139">Gli indici degli elementi che vengono spostati vengono aggiornati.</span><span class="sxs-lookup"><span data-stu-id="ed366-139">The indexes of the items that are moved are also updated.</span></span> <span data-ttu-id="ed366-140">Per sostituire un elemento in corrispondenza dell'indice specificato, usare il <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed366-140">To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="ed366-141">Per determinare se un' <xref:System.AddIn.Contract.IListContract%601> raccolta è di sola lettura, chiamare il <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed366-141">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ed366-142">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-142">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed366-143">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-143">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ed366-144">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-144">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool" Usage="iListContract.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="ed366-145">The item to remove from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-145">The item to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed366-146">Removes an item from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection of a specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-146">Removes an item from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed366-147">
            <see langword="true" /> if an item is removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-147">
              <see langword="true" /> if an item is removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed366-148">È necessario ripetere questo metodo per ogni oggetto di un tipo specifico nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="ed366-148">You must repeat this method for each object of a particular type in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ed366-149">The index of the item to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-149">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed366-150">Removes the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-150">Removes the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed366-151">Dopo aver chiamato <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, spostano gli elementi che seguono l'elemento rimosso occupare la posizione rimasta vuota.</span><span class="sxs-lookup"><span data-stu-id="ed366-151">After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot.</span></span> <span data-ttu-id="ed366-152">Gli indici degli elementi che vengono spostati vengono aggiornati.</span><span class="sxs-lookup"><span data-stu-id="ed366-152">The indexes of the items that are moved are also updated.</span></span>  
  
 <span data-ttu-id="ed366-153">Per determinare se un' <xref:System.AddIn.Contract.IListContract%601> raccolta è di sola lettura, chiamare il <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed366-153">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ed366-154">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-154">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed366-155">-or-  <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-155">-or-  <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ed366-156">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-156">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit" Usage="iListContract.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ed366-157">The zero-based index at which to set the item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-157">The zero-based index at which to set the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ed366-158">The item to set at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-158">The item to set at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed366-159">Sets the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-159">Sets the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed366-160">Il <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> metodo imposta l'elemento in corrispondenza dell'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="ed366-160">The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index.</span></span> <span data-ttu-id="ed366-161">Per aggiungere un elemento per il <xref:System.AddIn.Contract.IListContract%601> raccolta, uso il <xref:System.AddIn.Contract.IListContract%601.Insert%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed366-161">To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="ed366-162">Per determinare se un' <xref:System.AddIn.Contract.IListContract%601> raccolta è di sola lettura, chiamare il <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed366-162">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ed366-163">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-163">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed366-164">-or-  <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-164">-or-  <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ed366-165">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed366-165">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>