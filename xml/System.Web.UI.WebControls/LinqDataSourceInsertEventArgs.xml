<Type Name="LinqDataSourceInsertEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6f2efb0b7eba3038b0a98c131dcaaa5317fae6c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39812936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceInsertEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceInsertEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceInsertEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceInsertEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="72ed2-101">Fornisce dati per l'evento <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="72ed2-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72ed2-102">Il <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> oggetto viene passato a un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="72ed2-102">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="72ed2-103">Il <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> proprietà contiene i dati che verranno inseriti.</span><span class="sxs-lookup"><span data-stu-id="72ed2-103">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.</span></span>  
  
 <span data-ttu-id="72ed2-104">È possibile usare il <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> oggetto per esaminare i dati prima che venga eseguita l'operazione di inserimento nell'origine dati.</span><span class="sxs-lookup"><span data-stu-id="72ed2-104">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source.</span></span> <span data-ttu-id="72ed2-105">È quindi possibile convalidare i dati, esaminare gli errori di convalida della classe di dati o modificare un valore prima dell'aggiornamento.</span><span class="sxs-lookup"><span data-stu-id="72ed2-105">You can then validate the data, examine validation errors from the data class, or change a value before the update.</span></span> <span data-ttu-id="72ed2-106">È anche possibile annullare l'operazione di inserimento.</span><span class="sxs-lookup"><span data-stu-id="72ed2-106">You can also cancel the insert operation.</span></span>  
  
 <span data-ttu-id="72ed2-107">Se l'oggetto che rappresenta l'origine dati genera un'eccezione di convalida prima di inserire i dati, il <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> proprietà contiene un'istanza di <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> classe.</span><span class="sxs-lookup"><span data-stu-id="72ed2-107">If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="72ed2-108">È possibile recuperare tutte le eccezioni di convalida tramite il <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="72ed2-108">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="72ed2-109">Se viene generata alcuna eccezione di convalida, il <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> contiene proprietà `null`.</span><span class="sxs-lookup"><span data-stu-id="72ed2-109">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="72ed2-110">Se si gestiscono le eccezioni di convalida e si desidera che l'eccezione venga generata nuovamente, impostare il <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="72ed2-110">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72ed2-111">Nell'esempio seguente viene illustrato un gestore per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="72ed2-111">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="72ed2-112">L'oggetto dal <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> proprietà viene eseguito il cast a un tipo denominato `Product`.</span><span class="sxs-lookup"><span data-stu-id="72ed2-112">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="72ed2-113">Il `DateModified` proprietà del `Product` oggetto è impostato per la data e ora correnti.</span><span class="sxs-lookup"><span data-stu-id="72ed2-113">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="72ed2-114">Nell'esempio seguente viene illustrato un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="72ed2-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="72ed2-115">Vengono visualizzati gli eventuali messaggi di eccezione di convalida utilizzando un <xref:System.Web.UI.WebControls.Label> controllo.</span><span class="sxs-lookup"><span data-stu-id="72ed2-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72ed2-116">Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Object ^ newObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs newObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newObject">
          <span data-ttu-id="72ed2-117">Oggetto contenente i dati da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-117">An object that contains the data to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72ed2-118">Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="72ed2-119">L'eccezione che si è verificata durante la convalida dei dati da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-119">The exception that occurred when the data to insert was being validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72ed2-120">Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> e specifica l'eccezione fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-120">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class and specifies the provided exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72ed2-121">Ottiene l'eccezione generata durante la convalida dei dati prima dell'operazione di inserimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-121">Gets the exception that was thrown while the data was being validated before the insert operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72ed2-122">L’eccezione, se si verifica un errore; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-122">The exception, if an error occurred; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72ed2-123">Se viene generata un'eccezione di convalida prima di eseguita l'operazione di inserimento, l'eccezione viene archiviato nel <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="72ed2-123">If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="72ed2-124">In un gestore per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento, è possibile recuperare l'eccezione tramite la <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="72ed2-124">In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72ed2-125">Nell'esempio seguente viene illustrato un gestore per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="72ed2-125">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="72ed2-126">Vengono visualizzati gli eventuali messaggi di eccezione di convalida utilizzando un <xref:System.Web.UI.WebControls.Label> controllo.</span><span class="sxs-lookup"><span data-stu-id="72ed2-126">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72ed2-127">Ottiene o imposta un valore che indica se l'eccezione è stata gestita e non deve essere nuovamente generata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-127">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72ed2-128">
            <see langword="true" /> se l'eccezione è stata gestita; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-128">
              <see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72ed2-129">È possibile creare gestori eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventi per esaminare le eccezioni di convalida che si è verificato prima dell'operazione di inserimento.</span><span class="sxs-lookup"><span data-stu-id="72ed2-129">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation.</span></span> <span data-ttu-id="72ed2-130">Se si gestisce l'eccezione e si desidera che venga generata nuovamente, impostare il <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="72ed2-130">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="72ed2-131">Se non si impostano i <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> proprietà `true`, l'eccezione verrà propagata al gestore eventi successivo nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="72ed2-131">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72ed2-132">Nell'esempio seguente viene illustrato un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="72ed2-132">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="72ed2-133">Vengono visualizzati gli eventuali messaggi di eccezione di convalida utilizzando un <xref:System.Web.UI.WebControls.Label> controllo.</span><span class="sxs-lookup"><span data-stu-id="72ed2-133">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72ed2-134">Ottiene l'oggetto contenente i dati da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-134">Gets the object that contains the data to insert.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72ed2-135">Oggetto contenente i dati da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72ed2-135">An object that contains the data to insert.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72ed2-136">Il <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> proprietà contiene i dati che verranno inseriti nell'origine dati.</span><span class="sxs-lookup"><span data-stu-id="72ed2-136">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source.</span></span> <span data-ttu-id="72ed2-137">Creare un gestore per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventi e come recuperare il <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> proprietà per poter convalidare i dati, modificare i dati o annullare l'operazione di inserimento prima che venga eseguita l'operazione di dati.</span><span class="sxs-lookup"><span data-stu-id="72ed2-137">Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.</span></span>  
  
 <span data-ttu-id="72ed2-138">Il <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> proprietà restituisce un oggetto di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="72ed2-138">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>.</span></span> <span data-ttu-id="72ed2-139">È possibile eseguire il cast di questo oggetto per il tipo della classe che rappresenta i dati.</span><span class="sxs-lookup"><span data-stu-id="72ed2-139">You can cast this object to the type of the class that represents the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72ed2-140">Nell'esempio seguente viene illustrato un gestore per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="72ed2-140">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="72ed2-141">L'oggetto dal <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> proprietà viene eseguito il cast a un tipo denominato `Product`.</span><span class="sxs-lookup"><span data-stu-id="72ed2-141">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="72ed2-142">Il `DateModified` proprietà del `Product` oggetto è impostato per la data e ora correnti.</span><span class="sxs-lookup"><span data-stu-id="72ed2-142">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>