<Type Name="TableCell" FullName="System.Web.UI.WebControls.TableCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef718b89ff2803c5167a6ce0fd6bb705eccdb8b1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36379186" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TableCell : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableCell extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TableCell" />
  <TypeSignature Language="VB.NET" Value="Public Class TableCell&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableCell : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type TableCell = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.TableCellControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una cella in un controllo <see cref="T:System.Web.UI.WebControls.Table" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo argomento  
  
-   [Introduzione](#introduction)  
  
-   [Sintassi dichiarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduzione  
 Il <xref:System.Web.UI.WebControls.TableCell> classe rappresenta una cella in un <xref:System.Web.UI.WebControls.Table> controllo. È possibile utilizzare il <xref:System.Web.UI.WebControls.TableCell.Text%2A> proprietà per specificare o per determinare il contenuto della cella.  
  
 Il <xref:System.Web.UI.WebControls.TableCell> classe consente di controllare come viene visualizzato il contenuto della cella. L'allineamento del contenuto nella cella viene specificato impostando il <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A> e <xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A> proprietà. È possibile utilizzare il <xref:System.Web.UI.WebControls.TableCell.Wrap%2A> proprietà per specificare se il contenuto della cella andare a capo nella cella.  
  
 È inoltre possibile specificare il numero di righe o colonne nella tabella, rappresentata da un <xref:System.Web.UI.WebControls.Table> di controllo, sono occupate da una singola cella. Il <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> e <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> proprietà controllano il numero di righe e le colonne vengono utilizzate, rispettivamente.  
  
> [!CAUTION]
>  Questo controllo è utilizzabile per visualizzare l'input utente, che può includere uno script client dannoso. Verificare tutte le informazioni che viene inviate da un client per uno script eseguibile, istruzioni SQL o altro codice prima di visualizzarlo nell'applicazione. ASP.NET fornisce una funzionalità di convalida richiesta di input per bloccare script e il codice HTML nell'input dell'utente. Controlli server di convalida vengono inoltre forniti per valutare l'input dell'utente. Per altre informazioni, vedere [proteggere i controlli Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [procedura: proteggere dagli attacchi tramite Script in un'applicazione Web da applicare la codifica HTML alle stringhe](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [convalida dell'Input utente in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintassi dichiarativa  
  
```  
<asp:TableCell  
    AccessKey="string"  
    AssociatedHeaderCellID="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    ColumnSpan="integer"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RowSpan="integer"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    VerticalAlign="NotSet|Top|Middle|Bottom"  
    Visible="True|False"  
    Width="size"  
    Wrap="True|False"  
/></asp:TableCell>  
```  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una tabella, aggiungere gli elementi della tabella a livello di codice e visualizzare la tabella della pagina Web. Si noti come <xref:System.Web.UI.WebControls.TableCell> controlli vengono create istanze e i relativi valori di proprietà vengono impostati.  
  
> [!NOTE]
>  L'esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. Questo esempio di codice deve essere copiato in un file di testo vuota con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice delle pagine di ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[TableCell#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#1)]
 [!code-aspx-vb[TableCell#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Table" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.Wrap" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.RowSpan" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TableCell" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TableCell> viene creato utilizzando il <xref:System.Web.UI.HtmlTextWriterTag.Td> tag.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare a livello di una nuova istanza di un <xref:System.Web.UI.WebControls.TableCell> controllo.  
  
 [!code-csharp[TableCell#5](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#5)]
 [!code-vb[TableCell#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Td" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="tableCell.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Flusso di output che esegue il rendering del contenuto HTML nel client.</param>
        <summary>Aggiunge proprietà specifiche del controllo <see cref="T:System.Web.UI.WebControls.TableCell" /> all'elenco di attributi di cui eseguire il rendering.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A> metodo esegue l'override della classe di base <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> primo e metodo chiama il metodo di base e quindi aggiunge la <xref:System.Web.UI.WebControls.TableCell> attributi corrispondente il <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> proprietà, il <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> proprietà e il <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> proprietà. Se il <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> proprietà fa riferimento a un <xref:System.Web.UI.WebControls.TableHeaderCell> che non può essere trovato, un' <xref:System.Web.HttpException> viene generata un'eccezione.  
  
 Il <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A> metodo viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.WebControls.TableCell> controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A> metodo in un server personalizzato controllare in modo che viene eseguito il rendering di un attributo title personalizzato per ogni cella.  
  
 [!code-aspx-csharp[CustomTableCellAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/CS/custom_tablecell_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomTableCellAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/VB/custom_tablecell_addattributestorendervb.aspx#1)]  
  
 [!code-csharp[CustomTableCellAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/CS/custom_tablecell_addattributestorender.cs#2)]
 [!code-vb[CustomTableCellAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/VB/custom_tablecell_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Non è stata trovata una cella elencata come cella di intestazione associata.</exception>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> metodo in una classe derivata, assicurarsi di chiamare il <see cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> metodo della classe di base in modo che il <see cref="T:System.Web.UI.WebControls.TableCell" /> venga eseguito correttamente il rendering attributi del controllo.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="tableCell.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto <see cref="T:System.Object" /> che rappresenta l'elemento sottoposto ad analisi.</param>
        <summary>Aggiunge un controllo figlio analizzato al controllo <see cref="T:System.Web.UI.WebControls.TableCell" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.UI.WebControls.TableCell> controllo contiene controlli figlio, la classe base <xref:System.Web.UI.WebControls.TableCell.AddParsedSubObject%2A> metodo viene chiamato; in caso contrario, il <xref:System.Web.UI.WebControls.TableCell> del controllo <xref:System.Web.UI.WebControls.TableCell.Text%2A> valore della proprietà viene aggiunto come un <xref:System.Web.UI.LiteralControl> dell'oggetto per il <xref:System.Web.UI.WebControls.TableCell> controllo <xref:System.Web.UI.ControlCollection>.  
  
 Il <xref:System.Web.UI.WebControls.TableCell.AddParsedSubObject%2A> metodo viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.WebControls.TableCell> controllo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" /> metodo in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" /> metodo in modo che gli oggetti vengono aggiunti correttamente al <see cref="T:System.Web.UI.WebControls.TableCell" /> controllo <see cref="T:System.Web.UI.ControlCollection" />.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.Text" />
        <altmember cref="T:System.Web.UI.LiteralControl" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedHeaderCellID">
      <MemberSignature Language="C#" Value="public virtual string[] AssociatedHeaderCellID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AssociatedHeaderCellID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AssociatedHeaderCellID As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AssociatedHeaderCellID { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedHeaderCellID : string[] with get, set" Usage="System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un elenco separato da spazi di celle di intestazione della tabella associate al controllo <see cref="T:System.Web.UI.WebControls.TableCell" />.</summary>
        <value>Matrice di stringhe contenente gli identificatori delle celle di intestazione della tabella associate.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> proprietà contiene un elenco di intestazione cella identificatori a livello di codice che fornisce informazioni di intestazione del <xref:System.Web.UI.WebControls.TableCell> controllo. L'elenco degli identificatori di cella di intestazione viene eseguito il rendering come elenco delimitato da virgole in HTML `<td>` dell'elemento `header` attributo.  
  
 Quando si imposta la <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> proprietà utilizzare un elenco delimitato da virgole di stringhe. Se un elemento dell'elenco non è riconosciuto come una cella di intestazione di tabella valido un' <xref:System.Web.HttpException> viene generata quando il <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A> viene richiamato.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come specificare in modo dichiarativo il <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> proprietà di un <xref:System.Web.UI.WebControls.TableCell> controllo. In particolare, si noti come la cella nell'ultima riga è associata a tre celle dell'intestazione. Per un esempio di codice completo e funzionante, vedere il <xref:System.Web.UI.WebControls.TableHeaderCell> Cenni preliminari sulla classe.  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
        <altmember cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.StringArrayConverter" />
      </Docs>
    </Member>
    <Member MemberName="ColumnSpan">
      <MemberSignature Language="C#" Value="public virtual int ColumnSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ColumnSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnSpan : int with get, set" Usage="System.Web.UI.WebControls.TableCell.ColumnSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di colonne nel controllo <see cref="T:System.Web.UI.WebControls.Table" /> su cui si estende la cella.</summary>
        <value>Numero di colonne della tabella sottoposta a rendering su cui si estende la cella. Il valore predefinito è <see langword="0" />, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> proprietà per specificare o per determinare il numero di colonne della tabella viene eseguito il rendering che si estende la cella. Ad esempio, se si imposta questa proprietà su `2`, la cella occupa due colonne di <xref:System.Web.UI.WebControls.Table> controllo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come specificare in modo dichiarativo il <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> di un <xref:System.Web.UI.WebControls.TableCell> controllo. In particolare, si noti come singola cella dell'ultima riga si estende su tre colonne. Per un esempio di codice completo e funzionante, vedere il <xref:System.Web.UI.WebControls.TableHeaderCell> Cenni preliminari sulla classe.  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore selezionato è minore di <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.RowSpan" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="tableCell.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una classe <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> per il controllo <see cref="T:System.Web.UI.WebControls.TableCell" />.</summary>
        <returns>Classe <see cref="T:System.Web.UI.WebControls.Style" /> che rappresenta la classe <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> per il controllo <see cref="T:System.Web.UI.WebControls.TableCell" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TableItemStyle> creazioni il <xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A> metodo viene utilizzato con il <xref:System.Web.UI.WebControls.TableCell.Wrap%2A>, <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>, e <xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A> metodo viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.WebControls.TableCell> controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A> metodo in un server personalizzato controllare in modo che restituisca sempre una nuova istanza del <xref:System.Web.UI.WebControls.TableStyle> classe per il <xref:System.Web.UI.WebControls.TableCell>.  
  
 [!code-aspx-csharp[CustomTableCellCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/CS/custom_tablecell_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomTableCellCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/VB/custom_tablecell_createcontrolstylevb.aspx#1)]  
  
 [!code-csharp[CustomTableCellCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/CS/custom_tablecell_createcontrolstyle.cs#2)]
 [!code-vb[CustomTableCellCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/VB/custom_tablecell_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.Wrap" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.TableCell.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l’allineamento orizzontale del contenuto nella cella.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />. Il valore predefinito è <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A> proprietà per specificare l'allineamento orizzontale del contenuto della cella. Vengono specificati i valori possibili per l'utilizzo nel <xref:System.Web.UI.WebControls.HorizontalAlign> enumerazione.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come specificare in modo dichiarativo il <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A> proprietà di un <xref:System.Web.UI.WebControls.TableCell> controllo. In particolare, si noti come la cella nell'ultima riga è giustificata a sinistra. Per un esempio di codice completo e funzionante, vedere il <xref:System.Web.UI.WebControls.TableHeaderCell> Cenni preliminari sulla classe.  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header,Column2Header,Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header,Column2Header,Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
        <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="tableCell.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Flusso di output che esegue il rendering del contenuto HTML nel client.</param>
        <summary>Esegue il rendering del contenuto di <see cref="T:System.Web.UI.WebControls.TableCell" /> nell'oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.UI.WebControls.TableCell> controllo dispone di controlli figlio o è sottoposto a override in una classe derivata della classe di base <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> metodo viene chiamato; in caso contrario, il valore della <xref:System.Web.UI.WebControls.TableCell.Text%2A> proprietà viene scritta nel <xref:System.Web.UI.HtmlTextWriter> oggetto.  
  
 Il <xref:System.Web.UI.WebControls.TableCell.RenderContents%2A> metodo viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.WebControls.TableCell> controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.WebControls.TableCell.RenderContents%2A> metodo in un oggetto personalizzato <xref:System.Web.UI.WebControls.TableCell> controllare pertanto che il testo personalizzato viene inserito nel contenuto della cella.  
  
 [!code-aspx-csharp[CustomTableCellRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellRenderContents/CS/custom_tablecell_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomTableCellRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellRenderContents/VB/custom_tablecell_rendercontentsvb.aspx#1)]  
  
 [!code-csharp[CustomTableCellRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellRenderContents/CS/custom_tablecell_rendercontents.cs#2)]
 [!code-vb[CustomTableCellRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellRenderContents/VB/custom_tablecell_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public virtual int RowSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.RowSpan" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RowSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RowSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowSpan : int with get, set" Usage="System.Web.UI.WebControls.TableCell.RowSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di righe nel controllo <see cref="T:System.Web.UI.WebControls.Table" /> su cui si estende la cella.</summary>
        <value>Numero di righe della tabella sottoposta a rendering su cui si estende la cella. Il valore predefinito è <see langword="0" />, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> proprietà per specificare o per determinare il numero di righe nella tabella viene eseguito il rendering che si estende la cella. Ad esempio, se si imposta questa proprietà su `2`, la cella occupa due righe di <xref:System.Web.UI.WebControls.Table> controllo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore selezionato è minore di <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il controllo deve impostare l'attributo <see langword="disabled" /> dell'elemento HTML di cui è stato eseguito il rendering su "disabilitato" quando la proprietà <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> del controllo è <see langword="false" />.</summary>
        <value>
          <see langword="true" /> Se il <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> proprietà indica una versione ASP.NET precedente alla <c>4.0</c>; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà indica la modalità ASP.NET deve eseguire il rendering HTML per un controllo quando il controllo è disabilitato. Se questa proprietà è `true`, il rendering viene eseguito un `disabled` attributo quando un controllo è disabilitato. Se questa proprietà è `false`, il rendering viene eseguito un `class` attributo quando un controllo è disabilitato. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TableCell.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto di testo della cella.</summary>
        <value>Contenuto di testo della cella. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TableCell.Text%2A> proprietà per specificare o per determinare il contenuto di testo della cella. Questa proprietà viene comunemente utilizzata a livello di codice aggiornare il contenuto di una cella.  
  
> [!NOTE]
>  Impostazione di <xref:System.Web.UI.WebControls.TableCell.Text%2A> proprietà eliminerà tutti i controlli contenuti nel <xref:System.Web.UI.WebControls.TableCell>.  
  
> [!CAUTION]
>  Il <xref:System.Web.UI.WebControls.TableCell.Text%2A> controllo può essere utilizzato per visualizzare l'input dell'utente che potrebbero includere script client dannoso. Verificare tutte le informazioni che viene inviate da un client per uno script eseguibile, istruzioni SQL o altro codice prima di visualizzarlo nell'applicazione. ASP.NET fornisce una funzionalità di convalida richiesta di input per bloccare script e il codice HTML nell'input dell'utente. Controlli server di convalida vengono inoltre forniti per valutare l'input dell'utente. Per altre informazioni, vedere [proteggere i controlli Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [procedura: proteggere dagli attacchi tramite Script in un'applicazione Web da applicare la codifica HTML alle stringhe](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [convalida dell'Input utente in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una nuova istanza di un <xref:System.Web.UI.WebControls.TableCell> controllare a livello di codice. In particolare, si noti il modo in cui <xref:System.Web.UI.WebControls.TableCell.Text%2A> proprietà viene utilizzata per impostare il contenuto del <xref:System.Web.UI.WebControls.TableCell> controllo.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.WebControls.TableCell> classe.  
  
 [!code-csharp[TableCell#5](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#5)]
 [!code-vb[TableCell#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.Text" />
      </Docs>
    </Member>
    <Member MemberName="VerticalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.VerticalAlign VerticalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.VerticalAlign VerticalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VerticalAlign As VerticalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::VerticalAlign VerticalAlign { System::Web::UI::WebControls::VerticalAlign get(); void set(System::Web::UI::WebControls::VerticalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalAlign : System.Web.UI.WebControls.VerticalAlign with get, set" Usage="System.Web.UI.WebControls.TableCell.VerticalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.VerticalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l’allineamento verticale del contenuto nella cella.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Web.UI.WebControls.VerticalAlign" />. Il valore predefinito è <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A> proprietà per specificare l'allineamento verticale del contenuto della cella. Vengono specificati i valori possibili per l'utilizzo nel <xref:System.Web.UI.WebControls.VerticalAlign> enumerazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.VerticalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public virtual bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.Wrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Wrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Wrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Wrap : bool with get, set" Usage="System.Web.UI.WebControls.TableCell.Wrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il contenuto della cella va a capo.</summary>
        <value>
          <see langword="true" /> se il contenuto va a capo all'interno della cella; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TableCell.Wrap%2A> proprietà per specificare o per determinare se il contenuto della cella va a capo nella cella.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TableItemStyle.Wrap" />
      </Docs>
    </Member>
  </Members>
</Type>