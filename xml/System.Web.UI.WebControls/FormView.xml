<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="909196388e105527ef9088197b65801b314e2363" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36384066" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <TypeSignature Language="F#" Value="type FormView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Visualizza i valori di un singolo record da un'origine dati usando modelli definiti dall'utente. Il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> permette di modificare, eliminare e inserire record.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo argomento  
  
-   [Introduzione](#introduction)  
  
-   [Modelli](#templates)  
  
-   [Associazione a dati](#binding_to_data)  
  
-   [Operazioni sui dati](#data_operations)  
  
-   [Personalizzazione dell'interfaccia utente](#customizing_the_user_interface)  
  
-   [Eventi](#events)  
  
-   [Accessibilità](#accessibility)  
  
-   [Applicazione degli stili CSS](#applying_styles)  
  
-   [Sintassi dichiarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduzione  
 Il <xref:System.Web.UI.WebControls.FormView> controllo consente di visualizzare un singolo record da un'origine dati. È simile al <xref:System.Web.UI.WebControls.DetailsView> controllare, ad eccezione del fatto che consente di visualizzare modelli definiti dall'utente anziché i campi riga. Creazione di modelli personalizzati consente una maggiore flessibilità nel controllo della modalità di visualizzazione dei dati. Il <xref:System.Web.UI.WebControls.FormView> controllo supporta le caratteristiche seguenti:  
  
-   Associazione a controlli origine dati, ad esempio <xref:System.Web.UI.WebControls.SqlDataSource> e <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
-   Funzionalità di inserimento incorporate.  
  
-   Aggiornamento ed eliminazione incorporate le funzionalità.  
  
-   Funzionalità di paging incorporate.  
  
-   L'accesso programmatico al <xref:System.Web.UI.WebControls.FormView> modello a oggetti per impostare le proprietà, gestire gli eventi e così via.  
  
-   Personalizzabile aspetto tramite modelli definiti dall'utente, temi e stili.  
  
<a name="templates"></a>   
## <a name="templates"></a>Modelli  
 Per il <xref:System.Web.UI.WebControls.FormView> di controllo per visualizzare il contenuto, è necessario creare modelli per le diverse parti del controllo. La maggior parte dei modelli sono facoltativi. Tuttavia, è necessario creare un modello per la modalità in cui è configurato il controllo. Ad esempio, un <xref:System.Web.UI.WebControls.FormView> controllo che supporta l'inserimento di record deve avere un modello di elemento di inserimento definito. La tabella seguente elenca i diversi modelli che è possibile creare.  
  
|Tipo di modello|Descrizione|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|Definisce il contenuto per i dati di riga quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica. Questo modello contiene in genere i controlli di input e pulsanti di comando con cui l'utente può modificare un record esistente.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|Definisce il contenuto della riga di dati vuoto visualizzato quando il <xref:System.Web.UI.WebControls.FormView> controllo è associato a un'origine dati che non contiene alcun record. Questo modello contiene in genere contenuto per avvisare l'utente che l'origine dati non contiene alcun record.|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|Definisce il contenuto per la riga di piè di pagina. Questo modello contiene in genere qualsiasi contenuto aggiuntivo che si desidera visualizzare nella riga di piè di pagina. **Nota:** in alternativa, è possibile specificare semplicemente il testo da visualizzare nella riga di piè di pagina impostando la <xref:System.Web.UI.WebControls.FormView.FooterText%2A> proprietà.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|Definisce il contenuto per la riga di intestazione. Questo modello contiene in genere qualsiasi contenuto aggiuntivo che si desidera visualizzare nella riga di intestazione. **Nota:** in alternativa, è possibile specificare semplicemente il testo da visualizzare nella riga di intestazione impostando il <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> proprietà.|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|Definisce il contenuto per i dati di riga quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di sola lettura. Questo modello contiene in genere contenuto per visualizzare i valori di un record esistente.|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|Definisce il contenuto per i dati di riga quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento. Questo modello contiene in genere i controlli di input e pulsanti di comando con cui l'utente può aggiungere un nuovo record.|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|Definisce il contenuto per la riga del pager visualizzato quando viene abilitata la funzionalità di paging (quando il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> è impostata su `true`). Questo modello contiene in genere i controlli con cui l'utente possa passare a un altro record. **Nota:** il <xref:System.Web.UI.WebControls.FormView> controllo dispone di un'interfaccia utente di riga incorporate (UI). È necessario creare un modello di spostamento solo se si desidera creare la propria riga del pager personalizzato.|  
  
 Per visualizzare il valore di un campo in un modello di elemento, usare un'espressione di associazione dati. Per ulteriori informazioni sulle espressioni di associazione dati, vedere [sintassi delle espressioni di Data Binding](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
 I controlli di input del modello di elemento di modifica e il modello di elemento di inserimento possono essere associati ai campi di un'origine dati tramite un'espressione di associazione bidirezionale. In questo modo il <xref:System.Web.UI.WebControls.FormView> controllo automaticamente estrarre i valori del controllo di input per un aggiornamento o l'operazione di inserimento. Espressioni di associazione bidirezionale consentono inoltre a controlli di input in un modello di elemento di modifica per visualizzare automaticamente i valori dei campi originale. Per ulteriori informazioni sulle espressioni di associazione bidirezionale, vedere [associazione ai database](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Associazione a dati  
 Il <xref:System.Web.UI.WebControls.FormView> controllo può essere associato a un controllo origine dati (ad esempio <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, o <xref:System.Web.UI.WebControls.AccessDataSource>) o a qualsiasi raccolta di origine dati che implementa il <xref:System.Collections.IEnumerable?displayProperty=nameWithType> interfaccia, ad esempio <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, o altri tipi di raccolta. Utilizzare uno dei metodi seguenti per associare il <xref:System.Web.UI.WebControls.FormView> controllo per il tipo di origine dati appropriata:  
  
-   Per associare a un controllo origine dati, impostare il <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> proprietà del <xref:System.Web.UI.WebControls.FormView> il controllo al <xref:System.Web.UI.Control.ID%2A> valore del controllo origine dati. Il <xref:System.Web.UI.WebControls.FormView> controllo associato automaticamente al controllo dell'origine dati specificata e possono sfruttare le funzionalità del controllo per eseguire l'inserimento, aggiornamento, eliminazione e la funzionalità di paging. Questo è il metodo preferito per l'associazione ai dati.  
  
-   Per associare a un'origine dati che implementa il <xref:System.Collections.IEnumerable?displayProperty=nameWithType> interfaccia, a livello di codice impostare il <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> proprietà del <xref:System.Web.UI.WebControls.FormView> controllo all'origine dati e quindi chiamare il <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> (metodo). Quando si utilizza questo metodo, il <xref:System.Web.UI.WebControls.FormView> controllo non fornisce incorporate di inserimento, aggiornamento, eliminazione e la funzionalità di paging. È necessario fornire questa funzionalità utilizzando l'evento appropriato.  
  
 Per ulteriori informazioni sul data binding, vedere [mappa del contenuto ASP.NET dati accesso](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
> [!NOTE]
>  Questo controllo è utilizzabile per visualizzare l'input utente, che può includere uno script client dannoso. Verificare tutte le informazioni che viene inviate da un client per uno script eseguibile, istruzioni SQL o altro codice prima di visualizzarlo nell'applicazione. Ogni volta che è possibile, è consigliabile che i valori siano codificati in HTML prima che vengano visualizzati in questo controllo. ASP.NET fornisce una funzionalità di convalida richiesta di input per bloccare script e il codice HTML nell'input dell'utente. Controlli server di convalida vengono inoltre forniti per valutare l'input dell'utente. Per altre informazioni, vedere [Introduzione ai controlli di convalida](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Operazioni sui dati  
 Il <xref:System.Web.UI.WebControls.FormView> controllo fornisce molte funzionalità incorporate che consentono all'utente di aggiornare, eliminare, inserire e spostarsi tra gli elementi nel controllo. Quando il <xref:System.Web.UI.WebControls.FormView> controllo è associato a un controllo origine dati, il <xref:System.Web.UI.WebControls.FormView> può sfruttare la funzionalità del controllo e fornire l'aggiornamento automatico, l'eliminazione, inserimento e la funzionalità di paging.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView> controllo può fornire supporto per update, delete, insert e le operazioni di paging con altri tipi di origini dati; tuttavia, è necessario fornire un gestore eventi appropriato con l'implementazione di queste operazioni.  
  
 Poiché il <xref:System.Web.UI.WebControls.FormView> controllo utilizza i modelli, non fornisce un modo per generare automaticamente i pulsanti di comando per eseguire l'aggiornamento, eliminazione o operazioni di inserimento. È necessario includere manualmente questi pulsanti di comando nel modello appropriato. Il <xref:System.Web.UI.WebControls.FormView> controllo riconosce alcuni pulsanti con i relativi `CommandName` impostate su valori specifici. La tabella seguente elenca i pulsanti di comando di <xref:System.Web.UI.WebControls.FormView> riconosciuto dal controllo.  
  
|Button|Valore CommandName|Descrizione|  
|------------|-----------------------|-----------------|  
|Annulla|"Annulla"|Usato in aggiornamento o inserimento di operazioni per annullare l'operazione e ignorare i valori immessi dall'utente. Il <xref:System.Web.UI.WebControls.FormView> il controllo ritorna quindi per la modalità specificata per il <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> proprietà.|  
|Eliminare|"Delete"|Utilizzato nelle operazioni di eliminazione per eliminare il record visualizzato dall'origine dati. Genera il <xref:System.Web.UI.WebControls.FormView.ItemDeleting> e <xref:System.Web.UI.WebControls.FormView.ItemDeleted> eventi.|  
|Edit|"Edit"|Usato nelle operazioni di aggiornamento per inserire il <xref:System.Web.UI.WebControls.FormView> controllo in modalità di modifica. Il contenuto specificato nella <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> proprietà viene visualizzata per la riga di dati.|  
|INS|"Insert"|Utilizzato nelle operazioni di inserimento per tentare di inserire un nuovo record nell'origine dati usando i valori forniti dall'utente. Genera il <xref:System.Web.UI.WebControls.FormView.ItemInserting> e <xref:System.Web.UI.WebControls.FormView.ItemInserted> eventi.|  
|Nuovo|"Nuovo"|Usato nelle operazioni di inserimento per inserire il <xref:System.Web.UI.WebControls.FormView> controllo in modalità di inserimento. Il contenuto specificato nella <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> proprietà viene visualizzata per la riga di dati.|  
|Pagina|"Pagina"|Usato in operazioni di paging per rappresentare un pulsante nella riga del pager che esegue il paging. Per specificare l'operazione di paging, impostare il `CommandArgument` proprietà del pulsante su "Avanti", "Precedente", "First", "Ultimo" o l'indice della pagina a cui spostarsi. Genera il <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> e <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> eventi. **Nota:** questo tipo di pulsante in genere viene utilizzato solo nel modello di spostamento.|  
|Aggiorna|"Aggiornamento"|Utilizzato nelle operazioni di aggiornamento per tentare di aggiornare il record visualizzato nell'origine dati con i valori specificati dall'utente. Genera il <xref:System.Web.UI.WebControls.FormView.ItemUpdating> e <xref:System.Web.UI.WebControls.FormView.ItemUpdated> eventi.|  
  
 A differenza di pulsante Elimina (che elimina il record visualizzato immediatamente), quando si fa clic sul pulsante Modifica o nuovo, il <xref:System.Web.UI.WebControls.FormView> controllo passa a modificare o inserire modalità, rispettivamente. In modalità di modifica, il contenuto di <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> proprietà viene visualizzata per l'elemento di dati corrente. In genere, il modello di elemento di modifica è definito in modo che il pulsante Modifica viene sostituito con un aggiornamento e un pulsante Annulla. Controlli appropriati per il tipo di dati di input (ad esempio un <xref:System.Web.UI.WebControls.TextBox> o un <xref:System.Web.UI.WebControls.CheckBox> controllo) normalmente vengono anche visualizzati con un valore di campo per l'utente da modificare. Fare clic sul pulsante aggiornamento aggiorna il record nell'origine dati, mentre facendo clic sul pulsante Annulla Annulla tutte le modifiche.  
  
 Analogamente, il contenuto di <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> proprietà viene visualizzata per l'elemento di dati quando il controllo è in modalità di inserimento. Il modello di elemento di inserimento è in genere definito in modo che il pulsante nuovo viene sostituito con un'operazione di inserimento e un pulsante di annullamento e controlli di input vuoti vengono visualizzati all'utente di immettere i valori per il nuovo record. Fare clic sul pulsante Insert inserisce il record nell'origine dati, mentre facendo clic sul pulsante Annulla Annulla tutte le modifiche.  
  
 Il <xref:System.Web.UI.WebControls.FormView> controllo fornisce una funzionalità di paging, che consente all'utente di spostarsi tra gli altri record nell'origine dati. Quando abilitata, viene visualizzata una riga del pager nel <xref:System.Web.UI.WebControls.FormView> controllo che contiene i controlli di navigazione della pagina. Per abilitare il paging, impostare il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> proprietà `true`. È possibile personalizzare la riga del pager impostando le proprietà degli oggetti contenuti nel <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> e il <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> proprietà. Anziché utilizzare la riga del pager predefinite dell'interfaccia utente, è possibile creare la propria interfaccia utente utilizzando il <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> proprietà.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizzazione dell'interfaccia utente  
 È possibile personalizzare l'aspetto del <xref:System.Web.UI.WebControls.FormView> controllo impostando le proprietà di stile per le diverse parti del controllo. Nella tabella seguente sono elencate le proprietà di stile diverso.  
  
|Proprietà di stile|Descrizione|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|Le impostazioni di stile per i dati di riga quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|Le impostazioni di stile per la riga di dati vuoti nella <xref:System.Web.UI.WebControls.FormView> quando l'origine dati non contiene alcun record di controllo.|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|Le impostazioni di stile per la riga di piè di pagina del <xref:System.Web.UI.WebControls.FormView> controllo.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|Le impostazioni di stile per la riga di intestazione del <xref:System.Web.UI.WebControls.FormView> controllo.|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|Le impostazioni di stile per i dati di riga quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento.|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|Le impostazioni di stile per la riga del pager visualizzati nel <xref:System.Web.UI.WebControls.FormView> controllare quando è abilitata la funzionalità di spostamento.|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|Le impostazioni di stile per i dati di riga quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di sola lettura.|  
  
<a name="events"></a>   
## <a name="events"></a>Eventi  
 Il <xref:System.Web.UI.WebControls.FormView> controllo fornisce diversi eventi che è possibile programmare. In questo modo è possibile eseguire una routine personalizzata ogni volta che si verifica un evento. La tabella seguente elenca gli eventi supportati dal <xref:System.Web.UI.WebControls.FormView> controllo.  
  
|event|Descrizione|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|Si verifica quando viene fatto clic su un pulsante incluso in un controllo <xref:System.Web.UI.WebControls.FormView>. Questo evento viene spesso utilizzato per eseguire un'attività quando viene premuto un pulsante nel controllo.|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|Si verifica dopo che tutti i <xref:System.Web.UI.WebControls.FormViewRow> vengono creati gli oggetti di <xref:System.Web.UI.WebControls.FormView> controllo. Questo evento viene spesso utilizzato per modificare i valori di un record prima che venga visualizzato.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|Si verifica quando un pulsante Elimina (un pulsante con il relativo `CommandName` impostata su "Elimina") fa, ma dopo che il <xref:System.Web.UI.WebControls.FormView> controllo Elimina il record dall'origine dati. Questo evento viene spesso utilizzato per controllare i risultati dell'operazione di eliminazione.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|Si verifica quando viene fatto clic su un pulsante Elimina, ma prima che il <xref:System.Web.UI.WebControls.FormView> controllo Elimina il record dall'origine dati. Questo evento viene spesso utilizzato per annullare l'operazione di eliminazione.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Si verifica quando un pulsante Inserisci (un pulsante con il relativo `CommandName` impostata su "Insert") fa, ma dopo che il <xref:System.Web.UI.WebControls.FormView> ha inserito il record. Questo evento viene spesso utilizzato per controllare i risultati dell'operazione di inserimento.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|Si verifica quando viene fatto clic su un pulsante Inserisci insieme, ma prima che il <xref:System.Web.UI.WebControls.FormView> ha inserito il record. Questo evento viene spesso utilizzato per annullare l'operazione di inserimento.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Si verifica quando un pulsante di aggiornamento (un pulsante con il relativo `CommandName` impostata su "Update") fa, ma dopo che il <xref:System.Web.UI.WebControls.FormView> ha aggiornato la riga. Questo evento viene spesso utilizzato per controllare i risultati dell'operazione di aggiornamento.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|Si verifica quando un pulsante di aggiornamento, ma prima che il <xref:System.Web.UI.WebControls.FormView> ha aggiornato il record. Questo evento viene spesso utilizzato per annullare l'operazione di aggiornamento.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Si verifica dopo il <xref:System.Web.UI.WebControls.FormView> controllo cambia modalità (alla modifica, inserimento o modalità di sola lettura). Questo evento viene spesso utilizzato per eseguire un'attività quando il <xref:System.Web.UI.WebControls.FormView> controllo cambia modalità.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Si verifica prima che il <xref:System.Web.UI.WebControls.FormView> controllo cambia modalità (alla modifica, inserimento o modalità di sola lettura). Questo evento viene spesso utilizzato per annullare una modifica di modalità.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Si verifica quando viene fatto clic su uno dei pulsanti di spostamento, ma dopo che il controllo <xref:System.Web.UI.WebControls.FormView> ha gestito l'operazione di spostamento. Questo evento viene comunemente utilizzato quando è necessario eseguire un'attività dopo che l'utente passa a un altro record nel controllo.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Si verifica quando viene fatto clic su uno dei pulsanti di spostamento, ma prima che il controllo <xref:System.Web.UI.WebControls.FormView> gestisca l'operazione di spostamento. Questo evento viene spesso utilizzato per annullare l'operazione di spostamento.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Accessibilità  
 Per informazioni su come configurare il controllo in modo che generi codice conforme agli standard di accessibilità, vedere [accessibilità in Visual Studio e ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) e [controlli ASP.NET e l'accessibilità](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Applicazione degli stili CSS  
 Il <xref:System.Web.UI.WebControls.FormView> controllo consente di specificare le regole di stile CSS nel markup. Se si utilizzano modelli per personalizzare l'aspetto del <xref:System.Web.UI.WebControls.FormView> (controllo), è possibile specificare gli stili CSS nel markup nei modelli. In tal caso, non è necessaria nessuna tabella esterna aggiuntiva. È possibile impedire che la tabella viene eseguito il rendering impostando il <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> proprietà `false`.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintassi dichiarativa  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.FormView> controllo per visualizzare i valori da un <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.FormView> controllo per modificare i record esistenti.  
  
> [!IMPORTANT]
>  Il controllo in questo esempio include una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.FormView> controllo per inserire nuovi record.  
  
> [!IMPORTANT]
>  Il controllo in questo esempio include una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.FormView> classe. Aggiungere in modo dinamico un <xref:System.Web.UI.WebControls.FormView> il controllo a una pagina, creare un nuovo <xref:System.Web.UI.WebControls.FormView> dell'oggetto, impostarne le proprietà e quindi aggiungerlo al <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> verificare la raccolta di un contenitore, ad esempio <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come aggiungere in modo dinamico un <xref:System.Web.UI.WebControls.FormView> controllo a una pagina.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la funzionalità di spostamento è abilitata.</summary>
        <value>
          <see langword="true" /> per abilitare la funzionalità di spostamento; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo dispone di funzionalità di spostamento incorporate che consentono a un utente passare a un altro record nell'origine dati. La funzionalità di spostamento è utilizzabile con qualsiasi oggetto di origine dati che supporta il <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaccia o un'origine dati che supporta funzionalità di spostamento.  
  
 Per abilitare la funzionalità di paging, impostare il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> proprietà `true`. È possibile determinare il numero totale di elementi nell'origine dati sottostante utilizzando il <xref:System.Web.UI.WebControls.FormView.PageCount%2A> proprietà. Per determinare l'indice dell'elemento correntemente visualizzato, utilizzare il <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> proprietà.  
  
 Quando è abilitato il paging, una riga aggiuntiva denominata la riga del pager viene visualizzata automaticamente nel <xref:System.Web.UI.WebControls.FormView> controllo. La riga del pager contiene i controlli di navigazione della pagina e può essere visualizzata nella parte superiore, inferiore, o superiore e inferiore del controllo. La riga del pager ha incorporate quattro modalità di visualizzazione. Nella tabella seguente vengono descritte le quattro modalità.  
  
|Modalità|Descrizione|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|Un set di controlli di paginazione composta da pulsanti Indietro e Avanti.|  
|`PagerButton.NextPreviousFirstLast`|Set di controlli di paginazione comprendente precedenti, successivamente, primo e ultimi pulsanti.|  
|`PagerButton.Numeric`|Insieme di controlli di paginazione comprendente pulsanti di collegamento numerati per l'accesso diretto alle pagine con il numero corrispondente. Si tratta della modalità predefinita.|  
|`PagerButton.NumericFirstLast`|Un set di controlli di paginazione pulsanti di collegamento numerato e primo e l'ultimo accesso.|  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView> controllo nasconde automaticamente la riga del pager quando l'origine dati contiene meno di due record.  
  
 È possibile controllare le impostazioni della riga di spostamento (ad esempio, la modalità di visualizzazione, il numero di collegamenti della pagina per visualizzare in una fase ed etichetta di testo del controllo pager) utilizzando il <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> proprietà. Per controllare l'aspetto della riga di spostamento (incluso il relativo colore dello sfondo e del tipo di carattere), usare il <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> proprietà. Il <xref:System.Web.UI.WebControls.FormView> controllo consente inoltre di definire un modello personalizzato per la riga del pager. Per ulteriori informazioni sulla creazione di un modello di riga del pager personalizzato, vedere <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.  
  
 Il <xref:System.Web.UI.WebControls.FormView> controllo fornisce diversi eventi che è possibile utilizzare per eseguire un'azione personalizzata quando si verifica il paging. La tabella seguente elenca gli eventi disponibili.  
  
|event|Descrizione|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Si verifica quando viene fatto clic su uno dei pulsanti di spostamento, ma dopo che il controllo <xref:System.Web.UI.WebControls.FormView> ha gestito l'operazione di spostamento. Questo evento viene comunemente utilizzato quando è necessario eseguire un'attività dopo che l'utente passa a un altro record nel controllo.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Si verifica quando viene fatto clic su uno dei pulsanti di spostamento, ma prima che il controllo <xref:System.Web.UI.WebControls.FormView> gestisca l'operazione di spostamento. Questo evento viene spesso utilizzato per annullare l'operazione di spostamento.|  
  
> [!NOTE]
>  Questi eventi non vengono generati quando si modifica il <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> proprietà a livello di codice.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> proprietà per abilitare la funzionalità di paging in un <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'URL di un'immagine da visualizzare sullo sfondo di un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>L'URL di un'immagine da visualizzare sullo sfondo del controllo <see cref="T:System.Web.UI.WebControls.FormView" />. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> proprietà per specificare l'URL di un'immagine da visualizzare sullo sfondo di un <xref:System.Web.UI.WebControls.FormView> controllo.  
  
> [!NOTE]
>  Se l'immagine specificata è minore di <xref:System.Web.UI.WebControls.FormView> (controllo), l'immagine viene affiancata per riempire lo sfondo. Se l'immagine è più grande del controllo, viene ritagliata l'immagine.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> proprietà per visualizzare un'immagine personalizzata in background di un <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> che rappresenta la riga di spostamento visualizzata nella parte inferiore del controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> che rappresenta la riga di spostamento inferiore di un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il paging è abilitato (quando il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> è impostata su `true`), viene automaticamente visualizzata una riga aggiuntiva denominata la riga del pager nel <xref:System.Web.UI.WebControls.FormView> controllo. La riga del pager contiene i controlli che consentono all'utente di spostarsi tra gli altri record e possono essere visualizzati nella parte superiore, inferiore, o superiore e inferiore del controllo. Usare la <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> proprietà per l'accesso a livello di codice il <xref:System.Web.UI.WebControls.FormViewRow> oggetto che rappresenta la riga del pager inferiore nel <xref:System.Web.UI.WebControls.FormView> controllo.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> proprietà è disponibile solo dopo il <xref:System.Web.UI.WebControls.FormView> controllo crea la riga del pager inferiore nel <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 Questa proprietà viene in genere utilizzata quando è necessario modificare a livello di codice la riga di spostamento inferiore, ad esempio quando si aggiunge contenuto personalizzato. Tutte le modifiche per il <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> proprietà deve essere eseguita dopo il <xref:System.Web.UI.WebControls.FormViewRow> oggetto che rappresenta la riga di spostamento inferiore è stato creato; in caso contrario, il <xref:System.Web.UI.WebControls.FormView> controllo sovrascrive tutte le modifiche.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> proprietà a cui accedere la riga del pager visualizzata nella parte inferiore di un <xref:System.Web.UI.WebControls.FormView> controllo. La riga del pager viene quindi aggiornata con contenuto aggiuntivo.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.FormView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo di cui eseguire il rendering in un elemento didascalia HTML in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />. Questa proprietà viene fornita per rendere il controllo più accessibile agli utenti di dispositivi che assistono i disabili.</summary>
        <value>Una stringa che rappresenta il testo di cui eseguire il rendering in un elemento didascalia HTML in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.Caption%2A> proprietà per specificare il testo per il rendering in un elemento didascalia HTML in un <xref:System.Web.UI.WebControls.FormView> controllo. Il testo specificato fornisce dispositivi di assistive technology con una descrizione della tabella che può essere utilizzata per rendere più facilmente accessibile del controllo.  
  
 Supporto di accessibilità aggiuntivi per il <xref:System.Web.UI.WebControls.FormView> il controllo viene fornito per il <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> proprietà. Usare la <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> proprietà per specificare l'allineamento dell'elemento etichetta HTML in un <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.Caption%2A> proprietà per specificare il testo dell'elemento didascalia HTML di cui è stato eseguito il rendering un <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la posizione orizzontale o verticale dell'elemento didascalia HTML in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />. Questa proprietà viene fornita per rendere il controllo più accessibile agli utenti di dispositivi che assistono i disabili.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />. Il valore predefinito è <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> proprietà per specificare la posizione orizzontale o verticale dell'elemento etichetta HTML in un <xref:System.Web.UI.WebControls.FormView> controllo. Questa proprietà viene fornita per rendere il controllo più accessibile agli utenti di dispositivi che assistono i disabili.  
  
 Questa proprietà viene impostata utilizzando uno del <xref:System.Web.UI.WebControls.TableCaptionAlign> valori di enumerazione. Nella tabella seguente sono elencati i valori possibili.  
  
|Valore|Descrizione|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|L'elemento didascalia è allineato alla parte inferiore della tabella.|  
|`TableCaptionAlign.Left`|L'elemento didascalia è allineato alla parte sinistra della tabella.|  
|`TableCaptionAlign.NotSet`|Allineamento dell'elemento didascalia non è impostata.|  
|`TableCaptionAlign.Right`|L'elemento didascalia è allineato alla parte destra della tabella.|  
|`TableCaptionAlign.Top`|L'elemento didascalia è allineato alla parte superiore della tabella.|  
  
> [!NOTE]
>  Quando questa proprietà è impostata su `TableCaptionAlign.NotSet`, viene utilizzato il valore predefinito del browser.  
  
 Supporto di accessibilità aggiuntivi per il <xref:System.Web.UI.WebControls.FormView> il controllo viene fornito per il <xref:System.Web.UI.WebControls.FormView.Caption%2A> proprietà. Usare la <xref:System.Web.UI.WebControls.FormView.Caption%2A> proprietà per specificare il testo per il rendering in un elemento didascalia HTML in un <xref:System.Web.UI.WebControls.FormView> controllo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> proprietà per specificare che il codice HTML dell'elemento nella didascalia un <xref:System.Web.UI.WebControls.FormView> controllo deve essere eseguito il rendering sul lato sinistro del controllo.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato non corrisponde a uno dei valori dell'enumerazione <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la quantità di spazio tra il contenuto e il bordo di una cella.</summary>
        <value>Quantità di spazio, in pixel, tra il contenuto di una cella e il bordo della cella. Per indicare che la proprietà non è impostata, il valore predefinito è -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> proprietà per controllare la spaziatura tra il contenuto di una cella e il bordo della cella. La quantità di spaziatura interna specificata viene aggiunto a tutti e quattro i lati della cella.  
  
 Tutte le celle nella stessa colonna di un <xref:System.Web.UI.WebControls.FormView> controllo hanno la stessa larghezza. Viene applicata la quantità di spaziatura interna della cella più larga e tutte le altre celle nella colonna vengono modificate per la larghezza della cella. Analogamente, tutte le celle nella stessa riga hanno la stessa altezza. La quantità di spaziatura interna viene applicata alla cella più alta nella riga e tutte le altre celle nella riga vengono adattate all'altezza di tale cella. Non è possibile specificare le dimensioni delle singole celle.  
  
 Per regolare la spaziatura tra celle, usare il <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> proprietà.  
  
> [!NOTE]
>  Quando questa proprietà non è impostata, viene utilizzato il valore predefinito del browser.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> proprietà per specificare la quantità di spaziatura tra il contenuto di una cella e il bordo della cella.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la distanza tra le celle.</summary>
        <value>Quantità di spazio, espressa in pixel, tra le celle. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> proprietà per controllare la spaziatura tra celle adiacenti nel <xref:System.Web.UI.WebControls.FormView> controllo. La spaziatura viene applicata sia verticalmente che orizzontalmente. La spaziatura tra celle è uniforme per l'intero controllo. Non è possibile specificare la spaziatura tra colonne o righe singole cella.  
  
> [!NOTE]
>  Se si imposta questa proprietà su un valore maggiore di 0 e quindi impostare il <xref:System.Web.UI.WebControls.FormView.GridLines%2A> proprietà su un valore che vengono visualizzati i bordi della cella, viene visualizzato uno spazio tra i bordi delle celle adiacenti. In questo caso, il <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> proprietà controlla le dimensioni del gap.  
  
 Per regolare la spaziatura tra il contenuto di una cella e il bordo della cella, usare il <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> proprietà per specificare la quantità di spaziatura tra celle adiacenti.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.FormViewMode -&gt; unit" Usage="formView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Uno dei valori dell'enumerazione <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</param>
        <summary>Pone il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> nella modalità di immissione dati specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> per passare a livello di codice il <xref:System.Web.UI.WebControls.FormView> controllo tra le modalità di sola lettura, inserimento e modifica. Questo metodo consente inoltre di aggiornare il <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> proprietà con la modalità specificata. Nella tabella seguente sono elencati i valori di modalità diverse.  
  
|Modalità|Descrizione|  
|----------|-----------------|  
|`FormViewMode.Edit`|Il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica, che consente all'utente di aggiornare i valori di un record.|  
|`FormViewMode.Insert`|Il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento, che consente all'utente di aggiungere un nuovo record per l'origine dati.|  
|`FormView.ReadOnly`|Il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di sola lettura, vale a dire la modalità di visualizzazione normale.|  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView.ModeChanged> e <xref:System.Web.UI.WebControls.FormView.ModeChanging> eventi non vengono generati quando viene chiamato questo metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> per restituire il <xref:System.Web.UI.WebControls.FormView> controllo alla modalità di sola lettura quando l'utente passa a un altro record.  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="formView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">Oggetto <see cref="T:System.Collections.IEnumerable" /> che rappresenta l'origine dati utilizzata per creare la gerarchia dei controlli.</param>
        <param name="dataBinding">
          <see langword="true" /> per indicare che la gerarchia dei controlli viene creata direttamente dall'origine dati; <see langword="false" /> per indicare che la gerarchia dei controlli viene creata dallo stato di visualizzazione.</param>
        <summary>Crea la gerarchia dei controlli utilizzata per il rendering del controllo <see cref="T:System.Web.UI.WebControls.FormView" /> con l'origine dati specificata.</summary>
        <returns>Il numero di elementi creati a partire dall'origine dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per creare la gerarchia di controllo per il <xref:System.Web.UI.WebControls.FormView> controllo. Quando il `dataBinding` parametro `true`, associazione dati viene eseguita prima che venga creata la gerarchia dei controlli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">La classe <see cref="T:System.Web.UI.DataSourceView" /> dell'interfaccia <see cref="T:System.Web.UI.IDataSource" /> a cui è associato il controllo<see cref="T:System.Web.UI.WebControls.FormView" /> è <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), è possibile eseguire l'override questo metodo per creare la propria gerarchia del controllo.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="formView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un oggetto stile di tabella predefinito per il controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.WebControls.Style" /> contenente lo stile di tabella predefinito per il controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per creare un oggetto stile tabella. Oltre a impostare lo stile predefinito di un <xref:System.Web.UI.WebControls.TableStyle> dell'oggetto, questo metodo imposta inoltre il <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> proprietà su 0.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), è possibile eseguire l'override questo metodo per creare un proprio stile predefinito.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="formView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea l'oggetto <see cref="T:System.Web.UI.DataSourceSelectArguments" /> contenente gli argomenti che vengono passati all'origine dati per l'elaborazione.</summary>
        <returns>Un oggetto <see cref="T:System.Web.UI.DataSourceSelectArguments" /> contenente gli argomenti che vengono passati all'origine dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per creare il <xref:System.Web.UI.DataSourceSelectArguments> oggetto che contiene gli argomenti passati all'origine dati. In questa implementazione, il <xref:System.Web.UI.DataSourceSelectArguments> oggetto contiene gli argomenti per le operazioni di paging.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), è possibile eseguire l'override del metodo per specificare valori personalizzati che vengono passati all'origine dati.</para>
        </block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow" Usage="formView.CreateRow (itemIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Indice in base zero dell'elemento di dati da visualizzare.</param>
        <param name="rowType">Uno dei valori dell'enumerazione <see cref="T:System.Web.UI.WebControls.DataControlRowType" />.</param>
        <param name="rowState">Combinazione bit per bit dei valori di enumerazione di <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <summary>Crea un oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> con l'indice di elemento, il tipo di riga e lo stato di riga specificati.</summary>
        <returns>Un oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> con l'indice di elemento, il tipo di riga e lo stato di riga specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.CreateRow%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per creare un <xref:System.Web.UI.WebControls.FormViewRow> oggetto utilizzato per rappresentare una riga all'interno del controllo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende la <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), è possibile eseguire l'override questo metodo per restituire un <see cref="T:System.Web.UI.WebControls.FormViewRow" /> oggetto con le impostazioni personalizzate.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="formView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea la tabella contenitore per il controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>Un oggetto <see cref="T:System.Web.UI.WebControls.Table" /> che rappresenta la tabella contenitore per il controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.CreateTable%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per creare una tabella che funge da contenitore per il controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.FormViewMode" Usage="System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la modalità di immissione dati corrente del controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> proprietà per determinare se il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica, inserimento o sola lettura. Nella tabella seguente sono elencati i valori di modalità diverse.  
  
|Modalità|Descrizione|  
|----------|-----------------|  
|`FormViewMode.Edit`|Il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica, che consente all'utente di aggiornare i valori di un record.|  
|`FormViewMode.Insert`|Il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento, che consente all'utente di aggiungere un nuovo record per l'origine dati.|  
|`FormView.ReadOnly`|Il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di sola lettura, vale a dire la modalità di visualizzazione normale.|  
  
 Questo valore viene in genere impostato automaticamente dal <xref:System.Web.UI.WebControls.FormView> controllare quando fa clic sul pulsante di comando nuovo, Update, Insert, Delete o Annulla. Quando il <xref:System.Web.UI.WebControls.FormView> controllo cambia modalità in risposta a un'azione, vengono generati gli eventi nella tabella seguente. In questo modo è possibile creare un gestore dell'evento personalizzato che esegue la routine appropriata quando si verifica l'evento.  
  
|event|Descrizione|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Si verifica quando il <xref:System.Web.UI.WebControls.FormView> controllo cambia modalità, ma dopo la modifica della modalità. Questo evento viene comunemente utilizzato per eseguire un'attività ogni volta che il <xref:System.Web.UI.WebControls.FormView> controllo cambia modalità.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Si verifica quando il <xref:System.Web.UI.WebControls.FormView> controllo cambia modalità, ma prima di tale cambiamento. Questo evento viene comunemente utilizzato per annullare la modifica di modalità.|  
  
 **Nota** questi eventi non vengono generati quando si modifica la modalità a livello di programmazione utilizzando il <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> proprietà per determinare se il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica, inserimento o sola lettura. Se l'utente tenta di passare a un altro record quando il <xref:System.Web.UI.WebControls.FormView> controllo è in modalità di modifica, l'operazione di spostamento viene annullata.  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="formView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Associa l'origine dati al controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.DataBind> metodo per associare i dati da un'origine dati per il <xref:System.Web.UI.WebControls.FormView> controllo. Questo metodo risolve tutte le espressioni di associazione del modello attivo del controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.FormView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'elemento di dati associato al controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Un oggetto <see cref="T:System.Object" /> che rappresenta l'elemento di dati associato al controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.DataItem%2A> proprietà per accedere all'elemento di dati associata al <xref:System.Web.UI.WebControls.FormView> controllo. L'elemento di dati viene spesso utilizzato per accedere direttamente ai valori di campo del record corrente. Il tipo di <xref:System.Object> restituita da questa proprietà varia a seconda dell'origine dati. Ad esempio, quando un <xref:System.Web.UI.WebControls.SqlDataSource> associato al <xref:System.Web.UI.WebControls.FormView> (controllo), un <xref:System.Data.DataRowView> oggetto viene restituito.  
  
> [!NOTE]
>  Questa proprietà è disponibile solo dopo che si è verificato l'associazione dati. Prima dell'associazione dati, questa proprietà restituisce `null`. Questa proprietà anche non è applicabile quando il <xref:System.Web.UI.WebControls.FormView> controllo è in modalità di inserimento e restituisce `null`.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.DataItem%2A> proprietà per determinare il valore di un campo nell'elemento di dati.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di elementi di dati presenti nell'origine dati.</summary>
        <value>Il numero di elementi di dati presenti nell'origine dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> proprietà per determinare il numero di elementi di dati contenuti nell'origine dati. Questa proprietà contiene lo stesso valore di <xref:System.Web.UI.WebControls.FormView.PageCount%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indice dell'elemento di dati associato al controllo <see cref="T:System.Web.UI.WebControls.FormView" /> dall'origine dati.</summary>
        <value>L'indice dell'elemento di dati associato al controllo <see cref="T:System.Web.UI.WebControls.FormView" /> dall'origine dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> proprietà per determinare l'indice dell'elemento di dati associata al <xref:System.Web.UI.WebControls.FormView> controllo dall'origine dati. Questa proprietà contiene lo stesso valore di <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> proprietà.  
  
> [!NOTE]
>  Questa proprietà non è applicabile quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento. Quando il controllo è in modalità di inserimento, la <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> proprietà restituisce -1.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.FormView.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Web.UI.WebControls.DataKey" /> che rappresenta la chiave primaria del record visualizzato.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.WebControls.DataKey" /> che rappresenta la chiave primaria del record visualizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> è impostata, il <xref:System.Web.UI.WebControls.FormView> controllo crea automaticamente un <xref:System.Web.UI.WebControls.DataKey> oggetto che contiene le coppie chiave/valore del campo o campi elencati nella <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> proprietà per il record corrente. Usare la <xref:System.Web.UI.WebControls.FormView.DataKey%2A> proprietà per questo tipo <xref:System.Web.UI.WebControls.DataKey> oggetto. Questa proprietà è comunemente utilizzata per ottenere le chiavi e i relativi valori per i campi specificati nella <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> proprietà.  
  
> [!NOTE]
>  In alternativa, è inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> proprietà per determinare il valore del primo campo chiave racchiusi il <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.DataKey%2A> proprietà per determinare il valore del campo chiave.  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una matrice contenente i nomi dei campi chiave dell'origine dati.</summary>
        <value>Una matrice contenente i nomi dei campi chiave dell'origine dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> proprietà per specificare un elenco delimitato da virgole di nomi di campi che rappresentano la chiave primaria dell'origine dati. Quando il <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> è impostata, il <xref:System.Web.UI.WebControls.FormView> controllo crea automaticamente un <xref:System.Web.UI.WebControls.DataKey> oggetto che contiene le coppie chiave/valore del campo o campi elencati nella <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> proprietà per il record corrente. Il <xref:System.Web.UI.WebControls.DataKey> oggetto viene quindi archiviato nel <xref:System.Web.UI.WebControls.FormView.DataKey%2A> proprietà.  
  
> [!NOTE]
>  È necessario impostare il <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> proprietà per l'aggiornamento incorporata, l'eliminazione e inserimento di funzionalità del <xref:System.Web.UI.WebControls.FormView> controllo di funzionare.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> proprietà per specificare il campo chiave per l'origine dati associata al <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.FormViewMode with get, set" Usage="System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la modalità di immissione dati a cui torna il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> dopo un'operazione di aggiornamento, inserimento o annullamento.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.FormViewMode" />. Il valore predefinito è <see langword="FormViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> proprietà per specificare se il <xref:System.Web.UI.WebControls.FormView> controllo torna alla modalità di modifica, inserimento o sola lettura dopo un aggiornamento, viene eseguita l'operazione di inserimento o annullamento. Per impostazione predefinita, il <xref:System.Web.UI.WebControls.FormView> controllo torna alla modalità di sola lettura; tuttavia, è possibile mantenere il <xref:System.Web.UI.WebControls.FormView> controllare in modalità di modifica o modalità di inserimento impostando questa proprietà sul valore appropriato. Nella tabella seguente sono elencati i valori di modalità diverse.  
  
|Modalità|Descrizione|  
|----------|-----------------|  
|`FormViewMode.Edit`|Il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica, che consente all'utente di aggiornare i valori di un record.|  
|`FormViewMode.Insert`|Il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento, che consente all'utente di aggiungere un nuovo record per l'origine dati.|  
|`FormViewMode.ReadOnly`|Il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di sola lettura, vale a dire la modalità di visualizzazione normale.|  
  
 Questa proprietà è comunemente utilizzato quando il <xref:System.Web.UI.WebControls.FormView> controllo ha un unico scopo, ad esempio solo per inserire o modificare i record.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> proprietà per mantenere un <xref:System.Web.UI.WebControls.FormView> controllo in modalità di modifica dopo un'operazione di aggiornamento.  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato non corrisponde a uno dei valori dell'enumerazione <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="formView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina dall'origine dati il record corrente nel controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> metodo a livello di programmazione eliminare il record corrente nella <xref:System.Web.UI.WebControls.FormView> controllo dall'origine dati. Questo metodo viene comunemente utilizzato quando è necessario eliminare il record corrente all'esterno del <xref:System.Web.UI.WebControls.FormView> controllare, ad esempio relativi a un controllo diverso nella pagina. La chiamata a questo metodo genera anche il <xref:System.Web.UI.WebControls.FormView.ItemDeleted> e <xref:System.Web.UI.WebControls.FormView.ItemDeleting> eventi.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> metodo a livello di programmazione eliminare il record corrente in un <xref:System.Web.UI.WebControls.FormView> controllo dall'origine dati.  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del metodo sulla pagina che viene chiamata quando il controllo esegue un'operazione di eliminazione.</summary>
        <value>Nome del metodo sulla pagina che viene chiamata quando il controllo esegue un'operazione di eliminazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per una serie di esercitazioni sull'uso di associazione di modelli con Web Form, vedere [associazione di modelli e Web Form](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto personalizzato per un elemento in modalità di modifica.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.ITemplate" /> con il contenuto personalizzato per la riga di dati quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> è in modalità di modifica. Il valore predefinito è Null, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo esegue il rendering di un modello diverso per la riga di dati in base alla modalità corrente del controllo (specificato dal <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> proprietà). Nella tabella seguente viene illustrato il modello viene utilizzato per ciascuna modalità.  
  
|Modalità|Modello sottoposto a rendering|  
|----------|-----------------------|  
|Edit|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|INS|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Sola lettura|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Usare la <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> proprietà per definire la propria interfaccia utente (UI) per i dati di riga quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica. Il modello di elemento di modifica contiene in genere i controlli di input per l'utente di aggiornare i valori di un record esistente, nonché i pulsanti di comando per aggiornare il record e annullare l'operazione di aggiornamento.  
  
 Per specificare il modello personalizzato, inserire innanzitutto `<EditItemTemplate>` tra i tag di apertura e chiusura dei tag di <xref:System.Web.UI.WebControls.FormView> controllo. È quindi possibile elencare il contenuto del modello tra l'apertura e chiusura `<EditItemTemplate>` tag. Tramite un'espressione di associazione bidirezionale, è possibile associare un campo con un controllo di input. In questo modo il <xref:System.Web.UI.WebControls.FormView> controllo da visualizzare automaticamente il valore originale nel controllo di input associato in modalità di modifica. Quando viene aggiornato un record, il <xref:System.Web.UI.WebControls.FormView> controllo estrae automaticamente il valore del campo aggiornato dal controllo di input associato. Per ulteriori informazioni sulle espressioni di associazione bidirezionale, vedere [associazione ai database](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Per creare pulsanti di comando che eseguono l'annullamento incorporato e le operazioni di aggiornamento, aggiungere un controllo pulsante di comando per il modello con il relativo `CommandName` proprietà è impostata su uno dei valori elencati nella tabella seguente.  
  
|Tipo di pulsante di comando|Valore CommandName|  
|-------------------------|-----------------------|  
|Annulla|"Annulla"|  
|Aggiorna|"Aggiornamento"|  
  
 È possibile controllare l'aspetto del modello di elemento utilizzando il <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come definire un modello personalizzato per una riga di dati in modalità di modifica.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che consente di impostare l'aspetto della riga di dati quando un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> è in modalità di modifica.</summary>
        <value>Un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che rappresenta lo stile della riga di dati quando un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> è in modalità di modifica.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> proprietà per controllare l'aspetto dei dati di riga quando un <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica. Quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica, la riga di dati consente di visualizzare il contenuto definito dall'utente specificato per il <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> proprietà. Questa proprietà è di sola lettura. Tuttavia, è possibile impostare le proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> dell'oggetto viene restituito. Le proprietà possono essere impostate in modo dichiarativo utilizzando uno dei metodi seguenti:  
  
-   Inserire un attributo nel tag di apertura del <xref:System.Web.UI.WebControls.FormView> controllo nel modulo `Property-Subproperty`, dove `Subproperty` è una proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> oggetto (ad esempio, `EditRowStyle-ForeColor`).  
  
-   Annidare un' `<EditRowStyle>` elemento tra i tag di apertura e chiusura del <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 Le proprietà possono essere impostate anche a livello di codice nel formato `Property.Subproperty` (ad esempio, `EditRowStyle.ForeColor`). Impostazioni comuni includono in genere un colore di sfondo personalizzato, colore di primo piano e le proprietà del carattere.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> proprietà per specificare uno stile personalizzato per i dati di un riga quando un <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che consente di impostare l'aspetto della riga di dati vuota visualizzata quando l'origine dati associata a un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> non contiene record.</summary>
        <value>Riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che consente di impostare l'aspetto della riga di dati vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> proprietà per controllare l'aspetto della riga di dati vuoto in un <xref:System.Web.UI.WebControls.FormView> controllo. La riga di dati vuoto viene visualizzata quando l'origine dati associata al controllo non contiene alcun record. Questa proprietà è di sola lettura. Tuttavia, è possibile impostare le proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> dell'oggetto viene restituito. Le proprietà possono essere impostate in modo dichiarativo utilizzando uno dei metodi seguenti:  
  
-   Inserire un attributo nel tag di apertura del <xref:System.Web.UI.WebControls.FormView> controllo nel modulo `Property-Subproperty`, dove `Subproperty` è una proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> oggetto (ad esempio, `EmptyDataRowStyle-ForeColor`).  
  
-   Annidare un' `<EmptyDataRowStyle>` elemento tra i tag di apertura e chiusura del <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 Le proprietà possono essere impostate anche a livello di codice nel formato `Property.Subproperty` (ad esempio, `EmptyDataRowStyle.ForeColor`). Impostazioni comuni includono in genere un colore di sfondo personalizzato, colore di primo piano e le proprietà del carattere.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> proprietà per specificare uno stile personalizzato per la riga di dati vuoto visualizzato quando un <xref:System.Web.UI.WebControls.FormView> controllo è associato a un'origine dati che non contiene alcun record.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto definito dall'utente per la riga di dati vuota di cui viene eseguito il rendering quando un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> è associato a un'origine dati che non contiene record.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.ITemplate" /> con il contenuto personalizzato per la riga di dati vuota. Il valore predefinito è <see langword="null" />, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La riga di dati vuoto viene visualizzata un <xref:System.Web.UI.WebControls.FormView> quando l'origine dati associata al controllo non contiene alcun record di controllo. È possibile definire la propria interfaccia utente personalizzata (UI) per la riga di dati vuoto utilizzando il <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> proprietà. Per specificare un modello personalizzato per la riga di dati vuoto, posizionare innanzitutto `<EmptyDataTemplate>` tra i tag di apertura e chiusura dei tag di <xref:System.Web.UI.WebControls.FormView> controllo. È quindi possibile elencare il contenuto del modello tra l'apertura e chiusura `<EmptyDataTemplate>` tag. Per definire lo stile della riga di dati vuoto, utilizzare il <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> proprietà. In alternativa, è possibile utilizzare l'interfaccia utente predefinita per la riga di dati vuoti impostando il <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> proprietà anziché questa proprietà.  
  
> [!NOTE]
>  Se entrambi i <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> e <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> sono impostate, il <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> proprietà ha la precedenza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come definire un modello personalizzato per la riga di dati vuoto visualizzato quando un <xref:System.Web.UI.WebControls.FormView> controllo è associato a un'origine dati che non contiene alcun record.  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo da visualizzare nella riga di dati vuota di cui viene eseguito il rendering quando un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> è associato a un'origine dati che non contiene record.</summary>
        <value>Il testo da visualizzare nella riga di dati vuota. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La riga di dati vuoto viene visualizzata un <xref:System.Web.UI.WebControls.FormView> quando l'origine dati associata al controllo non contiene alcun record di controllo. Utilizzare il <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> proprietà per specificare il testo da visualizzare nella riga di dati vuoto. Per definire lo stile della riga di dati vuoto, utilizzare il <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> proprietà. In alternativa, è possibile definire la propria interfaccia utente personalizzata (UI) per la riga di dati vuoti impostando il <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> proprietà anziché questa proprietà.  
  
> [!NOTE]
>  Se entrambi i <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> e <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> sono impostate, il <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> proprietà ha la precedenza.  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> proprietà per specificare il testo da visualizzare nella riga di dati vuoto.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se un controllo validator gestirà le eccezioni che si verificano durante le operazioni di inserimento o aggiornamento.</summary>
        <value>
          <see langword="true" /> se un controllo validator gestirà le eccezioni che si verificano durante le operazioni di inserimento o aggiornamento; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="formView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verifica che il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> sia associato ai dati quando necessario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> è un metodo helper utilizzato il <xref:System.Web.UI.WebControls.FormView> classe per verificare che il <xref:System.Web.UI.WebControls.FormView> controllo è associato a dati nei casi appropriati. Il <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> viene chiamato in genere durante la <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> metodo per associare il controllo all'origine dati quando il controllo associato a dati non è ancora associato, ma richiede l'associazione dati. Questa versione del metodo è stata sostituita per impedire l'associazione dati che si verificano quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit" Usage="formView.ExtractRowValues (fieldValues, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">Oggetto <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> utilizzato per archiviare i valori dei campi dell'elemento di dati corrente.</param>
        <param name="includeKeys">
          <see langword="true" /> per includere i campi chiave, altrimenti <see langword="false" />.</param>
        <summary>Recupera i valori di tutti i campi dichiarati all'interno della riga di dati e li archivia nell'oggetto <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo da recuperare i valori di ogni campo dichiarato all'interno della riga di dati. Poiché la riga di dati consente di visualizzare un modello diverso in base alla modalità corrente, questo metodo recupera solo i valori dei campi dichiarati nel modello che corrisponde alla modalità corrente. La tabella seguente illustra le modalità disponibili e i modelli corrispondenti.  
  
|Modalità|Modello|  
|----------|--------------|  
|INS|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Edit|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Sola lettura|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 È possibile specificare se i valori estratti includono i campi chiave utilizzando il `includeKeys` parametro.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), è possibile eseguire l'override questo metodo per creare una propria routine per recuperare i valori dei campi.</para>
        </block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> che rappresenta la riga del piè di pagina in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> che rappresenta la riga del piè di pagina in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La riga di piè di pagina viene visualizzata nella parte inferiore della <xref:System.Web.UI.WebControls.FormView> controllare quando le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> è impostata. Usare la <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> proprietà per l'accesso a livello di codice il <xref:System.Web.UI.WebControls.FormViewRow> oggetto che rappresenta la riga di piè di pagina.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> proprietà è disponibile solo dopo il <xref:System.Web.UI.WebControls.FormView> ha creato la riga di piè di pagina nel <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 Questa proprietà viene in genere utilizzata quando è necessario modificare a livello di codice la riga di piè di pagina, ad esempio quando si aggiunge contenuto personalizzato. Tutte le modifiche per il <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> proprietà deve essere eseguita dopo il <xref:System.Web.UI.WebControls.FormView> controllo è stato sottoposto a rendering; in caso contrario, il <xref:System.Web.UI.WebControls.FormView> controllo sovrascrive tutte le modifiche.  
  
 Per definire lo stile della riga di piè di pagina, utilizzare il <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> proprietà a livello di codice modificare le proprietà della riga di piè di pagina durante il <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che consente di impostare l'aspetto della riga del piè di pagina in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che rappresenta lo stile della riga del piè di pagina in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La riga di piè di pagina viene visualizzata nella parte inferiore della <xref:System.Web.UI.WebControls.FormView> controllare quando le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> è impostata. Usare la <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> proprietà per controllare l'aspetto della riga di piè di pagina in un <xref:System.Web.UI.WebControls.FormView> controllo. Questa proprietà è di sola lettura. Tuttavia, è possibile impostare le proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> dell'oggetto viene restituito. Le proprietà possono essere impostate in modo dichiarativo utilizzando uno dei metodi seguenti:  
  
-   Inserire un attributo nel tag di apertura del <xref:System.Web.UI.WebControls.FormView> controllo nel modulo `Property-Subproperty`, dove `Subproperty` è una proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> oggetto (ad esempio, `FooterStyle-ForeColor`).  
  
-   Nidificare una `<FooterStyle>` elemento tra i tag di apertura e chiusura del <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 Le proprietà possono essere impostate anche a livello di codice nel formato `Property.Subproperty` (ad esempio, `FooterStyle.ForeColor`). Impostazioni comuni includono in genere un colore di sfondo personalizzato, colore di primo piano e le proprietà del carattere.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> proprietà per specificare uno stile personalizzato per la riga di piè di pagina.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto definito dall'utente per la riga del piè di pagina in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.ITemplate" /> con il contenuto personalizzato per la riga del piè di pagina. Il valore predefinito è <see langword="null" />, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La riga di piè di pagina viene visualizzata nella parte inferiore della <xref:System.Web.UI.WebControls.FormView> controllare quando le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> è impostata. È possibile definire la propria interfaccia utente personalizzata (UI) per la riga di piè di pagina utilizzando la <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> proprietà. Per specificare un modello personalizzato per la riga di piè di pagina, posizionare innanzitutto `<FooterTemplate>` tra i tag di apertura e chiusura dei tag di <xref:System.Web.UI.WebControls.FormView> controllo. È quindi possibile elencare il contenuto del modello tra l'apertura e chiusura `<FooterTemplate>` tag. Per definire lo stile della riga di piè di pagina, utilizzare il <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> proprietà. In alternativa, è possibile semplicemente visualizzare il testo della riga di piè di pagina impostando la <xref:System.Web.UI.WebControls.FormView.FooterText%2A> proprietà anziché questa proprietà.  
  
> [!NOTE]
>  Se entrambi i <xref:System.Web.UI.WebControls.FormView.FooterText%2A> e <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> sono impostate, il <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> proprietà ha la precedenza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> proprietà per definire un modello personalizzato per eseguire il rendering per la riga di piè di pagina.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.FormView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo da visualizzare nella riga del piè di pagina di un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Testo da visualizzare nella riga del piè di pagina. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La riga di piè di pagina viene visualizzata nella parte inferiore della <xref:System.Web.UI.WebControls.FormView> controllare quando le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> è impostata. Utilizzare il <xref:System.Web.UI.WebControls.FormView.FooterText%2A> proprietà per specificare il testo da visualizzare nella riga di piè di pagina. Per definire lo stile della riga di piè di pagina, utilizzare il <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> proprietà. In alternativa, è possibile definire la propria interfaccia utente personalizzata (UI) per la riga di piè di pagina impostando la <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> proprietà anziché questa proprietà.  
  
> [!NOTE]
>  Se entrambi i <xref:System.Web.UI.WebControls.FormView.FooterText%2A> e <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> sono impostate, il <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> proprietà ha la precedenza.  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.FooterText%2A> proprietà per specificare il testo da visualizzare nella riga di piè di pagina.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.FormView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo stile delle linee della griglia di un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.GridLines" />. Il valore predefinito è <see langword="GridLines.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.GridLines%2A> proprietà per specificare lo stile delle linee della griglia per un <xref:System.Web.UI.WebControls.FormView> controllo. Nella tabella seguente sono elencati gli stili disponibili.  
  
|Stile|Descrizione|  
|-----------|-----------------|  
|`GridLines.None`|Nessun griglie vengono visualizzate.|  
|`GridLines.Horizontal`|Visualizza linee griglia orizzontali.|  
|`GridLines.Vertical`|Consente di visualizzare la griglia verticale.|  
|`GridLines.Both`|Consente di visualizzare le linee orizzontali e verticali.|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.GridLines%2A> proprietà per visualizzare la griglia orizzontale e verticale.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> che rappresenta la riga dell'intestazione in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> che rappresenta la riga dell'intestazione in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La riga di intestazione viene visualizzata nella parte superiore del <xref:System.Web.UI.WebControls.FormView> controllare quando le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> è impostata. Usare la <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> proprietà per l'accesso a livello di codice il <xref:System.Web.UI.WebControls.FormViewRow> oggetto che rappresenta la riga di intestazione.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> proprietà è disponibile solo dopo il <xref:System.Web.UI.WebControls.FormView> ha creato la riga di intestazione nel <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 Questa proprietà viene in genere utilizzata quando è necessario modificare a livello di codice la riga di intestazione, ad esempio, quando si aggiunge contenuto personalizzato. Tutte le modifiche per il <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> proprietà deve essere eseguita dopo il <xref:System.Web.UI.WebControls.FormView> controllo è stato sottoposto a rendering; in caso contrario, il <xref:System.Web.UI.WebControls.FormView> controllo sovrascrive tutte le modifiche.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> proprietà a livello di codice modificare le proprietà della riga di intestazione durante il <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che consente di impostare l'aspetto della riga dell'intestazione in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che rappresenta lo stile della riga dell'intestazione in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La riga di intestazione viene visualizzata nella parte superiore del <xref:System.Web.UI.WebControls.FormView> controllare quando le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> è impostata. Usare la <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> proprietà per controllare l'aspetto della riga di intestazione in un <xref:System.Web.UI.WebControls.FormView> controllo. Questa proprietà è di sola lettura. Tuttavia, è possibile impostare le proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> dell'oggetto viene restituito. Le proprietà possono essere impostate in modo dichiarativo utilizzando uno dei metodi seguenti:  
  
-   Inserire un attributo nel tag di apertura del <xref:System.Web.UI.WebControls.FormView> controllo nel modulo `Property-Subproperty`, dove `Subproperty` è una proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> oggetto (ad esempio, `HeaderStyle-ForeColor`).  
  
-   Nidificare una `<HeaderStyle>` elemento tra i tag di apertura e chiusura del <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 Le proprietà possono essere impostate anche a livello di codice nel formato `Property.Subproperty` (ad esempio, `HeaderStyle.ForeColor`). Impostazioni comuni includono in genere un colore di sfondo personalizzato, colore di primo piano e le proprietà del carattere.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> proprietà per specificare uno stile personalizzato per la riga di intestazione.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto definito dall'utente per la riga dell'intestazione in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.ITemplate" /> con il contenuto personalizzato per la riga dell'intestazione. Il valore predefinito è <see langword="null" />, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La riga di intestazione viene visualizzata nella parte superiore del <xref:System.Web.UI.WebControls.FormView> controllare quando le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> è impostata. È possibile definire la propria interfaccia utente personalizzata (UI) per la riga di intestazione utilizzando il <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> proprietà. Per specificare un modello personalizzato per la riga di intestazione, inserire innanzitutto `<HeaderTemplate>` tra i tag di apertura e chiusura dei tag di <xref:System.Web.UI.WebControls.FormView> controllo. È quindi possibile elencare il contenuto del modello tra l'apertura e chiusura `<HeaderTemplate>` tag. Per controllare lo stile della riga di intestazione, usare il <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> proprietà. In alternativa, è possibile semplicemente visualizzare il testo nella riga di intestazione impostando il <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> proprietà anziché questa proprietà.  
  
> [!NOTE]
>  Se entrambi i <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> e <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> sono impostate, il <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> proprietà ha la precedenza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> proprietà per definire un modello personalizzato per eseguire il rendering per la riga di intestazione.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo da visualizzare nella riga dell'intestazione di un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Testo da visualizzare nella riga dell'intestazione. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La riga di intestazione viene visualizzata nella parte superiore del <xref:System.Web.UI.WebControls.FormView> controllare quando le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> è impostata. Utilizzare il <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> proprietà per specificare il testo da visualizzare nella riga di intestazione. Per controllare lo stile della riga di intestazione, usare il <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> proprietà. In alternativa, è possibile definire la propria interfaccia utente personalizzata (UI) per la riga di intestazione impostando il <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> proprietà anziché questa proprietà.  
  
> [!NOTE]
>  Se entrambi i <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> e <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> sono impostate, il <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> proprietà ha la precedenza.  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> proprietà per specificare il testo da visualizzare nella riga di intestazione.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'allineamento orizzontale di un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> sulla pagina.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />. Il valore predefinito è <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> proprietà per specificare l'allineamento orizzontale di un <xref:System.Web.UI.WebControls.FormView> controllo all'interno della pagina. Nella tabella seguente sono elencati gli stili di allineamento orizzontale diverso.  
  
|Valore HorizontalAlign|Descrizione|  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|L'allineamento orizzontale del <xref:System.Web.UI.WebControls.FormView> controllo non è stato impostato.|  
|`HorizontalAlign.Left`|Il <xref:System.Web.UI.WebControls.FormView> controllo è allineato a sinistra nella pagina.|  
|`HorizontalAlign.Center`|Il <xref:System.Web.UI.WebControls.FormView> controllo è incentrato sulla pagina.|  
|`HorizontalAlign.Right`|Il <xref:System.Web.UI.WebControls.FormView> controllo è allineato a destra nella pagina.|  
|`HorizontalAlign.Justify`|Il <xref:System.Web.UI.WebControls.FormView> controllo è allineato con i margini sinistro e destro della pagina.|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> proprietà per specificare che un <xref:System.Web.UI.WebControls.FormView> controllo deve essere centrato nella pagina.  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="formView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> contenente la riga di spostamento.</param>
        <param name="pagedDataSource">Oggetto <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> contenente i dati per la pagina corrente.</param>
        <summary>Crea la riga di spostamento per il controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per creare la riga del pager. Crea un <xref:System.Web.UI.WebControls.TableCell> oggetto che contiene i controlli di navigazione utilizzando le proprietà del <xref:System.Web.UI.WebControls.PagedDataSource> oggetti contenuti nel `pagedDataSource` parametro. La cella viene quindi aggiunto alla riga specificata per il `row` parametro.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), è possibile eseguire l'override questo metodo per creare la propria riga del pager.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit" Usage="formView.InitializeRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> da inizializzare.</param>
        <summary>Inizializza l'oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per inizializzare l'oggetto specificato <xref:System.Web.UI.WebControls.FormViewRow> oggetto. Il <xref:System.Web.UI.WebControls.FormViewRow> oggetto viene inizializzato in base al tipo di riga e lo stato di riga specificato dal relativo <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> e <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> proprietà, rispettivamente. Il contenuto appropriato viene quindi aggiunto al <xref:System.Web.UI.WebControls.FormViewRow> oggetto. La tabella seguente descrive come viene inizializzata ogni tipo di riga.  
  
|Tipo di riga|Descrizione|  
|--------------|-----------------|  
|Riga di dati|Il contenuto del <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, o <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> proprietà vengono aggiunti per il <xref:System.Web.UI.WebControls.FormViewRow> oggetto, a seconda del valore del <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> proprietà.|  
|Riga di dati vuoto|Il valore della <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> proprietà o il contenuto del <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> proprietà viene aggiunta al <xref:System.Web.UI.WebControls.FormViewRow> oggetto, a seconda di quale è impostata. Se entrambe le proprietà sono impostate, il <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> proprietà ha la precedenza.|  
|Riga di piè di pagina|Il valore della <xref:System.Web.UI.WebControls.FormView.FooterText%2A> proprietà o il contenuto del <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> proprietà viene aggiunta al <xref:System.Web.UI.WebControls.FormViewRow> oggetto, a seconda di quale è impostata. Se entrambe le proprietà sono impostate, il <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> proprietà ha la precedenza.|  
|Riga di intestazione|Il valore della <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> proprietà o il contenuto del <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> proprietà viene aggiunta al <xref:System.Web.UI.WebControls.FormViewRow> oggetto, a seconda di quale è impostata. Se entrambe le proprietà sono impostate, il <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> proprietà ha la precedenza.|  
  
> [!NOTE]
>  Questo metodo non inizializza la riga del pager. Per creare la riga del pager, utilizzare il <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> metodo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), è possibile eseguire l'override questo metodo per creare la propria riga personalizzato.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="formView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> per eseguire la convalida della pagina quando viene chiamato il metodo; in caso contrario, <see langword="false" />.</param>
        <summary>Inserisce il record corrente nell'origine dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova in modalità di inserimento, utilizzare il <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> metodo a livello di programmazione inserire il record corrente nell'origine dati. Questo metodo viene comunemente utilizzato quando è necessario inserire il record corrente all'esterno del <xref:System.Web.UI.WebControls.FormView> controllare, ad esempio relativi a un controllo diverso nella pagina.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView> controllo deve essere in modalità di inserimento quando questo metodo viene chiamato; in caso contrario, un <xref:System.Web.HttpException> viene generata un'eccezione.  
  
 Per specificare se la convalida della pagina viene eseguita prima dell'operazione di inserimento, usare il `causesValidation` parametro. La chiamata a questo metodo genera anche il <xref:System.Web.UI.WebControls.FormView.ItemInserted> e <xref:System.Web.UI.WebControls.FormView.ItemInserting> eventi.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> metodo a livello di programmazione inserire il record corrente in un <xref:System.Web.UI.WebControls.FormView> controllo nell'origine dati.  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Questo metodo viene chiamato quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> non è in modalità di inserimento.  - oppure - L'oggetto <see cref="T:System.Web.UI.DataSourceView" /> associato al controllo <see cref="T:System.Web.UI.WebControls.FormView" /> è Null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto personalizzato per un elemento in modalità di inserimento.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.ITemplate" /> con il contenuto personalizzato per la riga di dati quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> è in modalità di inserimento. Il valore predefinito è Null, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo esegue il rendering di un modello diverso per la riga di dati in base alla modalità corrente del controllo (specificato dal <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> proprietà). Nella tabella seguente viene illustrato il modello viene utilizzato per ciascuna modalità.  
  
|Modalità|Modello sottoposto a rendering|  
|----------|-----------------------|  
|Edit|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|INS|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Sola lettura|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Usare la <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> proprietà per definire la propria interfaccia utente (UI) per i dati di riga quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento. Il modello di elemento di inserimento contiene in genere i controlli di input all'utente di immettere i valori per il nuovo record, nonché per inserire il record e annullare l'operazione di inserimento di pulsanti di comando.  
  
 Per specificare il modello personalizzato, inserire innanzitutto `<InsertItemTemplate>` tra i tag di apertura e chiusura dei tag di <xref:System.Web.UI.WebControls.FormView> controllo. È quindi possibile elencare il contenuto del modello tra l'apertura e chiusura `<InsertItemTemplate>` tag. Tramite un'espressione di associazione bidirezionale, è possibile associare un campo con un controllo di input. Quando viene inserito un record, il <xref:System.Web.UI.WebControls.FormView> controllo estrae automaticamente il valore del campo dal controllo di input associato. Per ulteriori informazioni sulle espressioni di associazione bidirezionale, vedere [associazione ai database](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Per creare pulsanti di comando che eseguono l'annullamento incorporato e le operazioni di inserimento, aggiungere un controllo pulsante di comando per il modello con il relativo `CommandName` proprietà è impostata su uno dei valori elencati nella tabella seguente.  
  
|Tipo di pulsante di comando|Valore CommandName|  
|-------------------------|-----------------------|  
|Annulla|"Annulla"|  
|INS|"Insert"|  
  
 È possibile controllare l'aspetto del modello di elemento utilizzando il <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come definire un modello personalizzato per una riga di dati in modalità di inserimento.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del metodo sulla pagina che viene chiamata quando il controllo esegue un'operazione di inserimento.</summary>
        <value>Nome del metodo sulla pagina che viene chiamata quando il controllo esegue un'operazione di inserimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per una serie di esercitazioni sull'uso di associazione di modelli con Web Form, vedere [associazione di modelli e Web Form](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che consente di impostare l'aspetto della riga di dati in un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> in modalità di inserimento.</summary>
        <value>Un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che rappresenta lo stile della riga di dati in un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> in modalità di inserimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> proprietà per controllare l'aspetto dei dati di riga quando un <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento. Quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento, la riga di dati consente di visualizzare il contenuto definito dall'utente specificato per il <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> proprietà. Questa proprietà è di sola lettura. Tuttavia, è possibile impostare le proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> dell'oggetto viene restituito.  
  
 Le proprietà possono essere impostate in modo dichiarativo utilizzando uno dei metodi seguenti:  
  
-   Inserire un attributo nel tag di apertura del <xref:System.Web.UI.WebControls.FormView> controllo nel modulo `Property-Subproperty`, dove `Subproperty` è una proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> oggetto (ad esempio, `InsertRowStyle-ForeColor`).  
  
-   Annidare un' `<InsertRowStyle>` elemento tra i tag di apertura e chiusura del <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 Le proprietà possono essere impostate anche a livello di codice nel formato `Property.Subproperty` (ad esempio, `InsertRowStyle.ForeColor`). Impostazioni comuni includono in genere un colore di sfondo personalizzato, colore di primo piano e le proprietà del carattere.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> proprietà per specificare uno stile personalizzato per i dati di un riga quando un <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di inserimento.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="formView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati da verificare.</param>
        <summary>Determina se il tipo di dati specificato può essere associato a un campo nel controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>
          <see langword="true" /> se il tipo di dati specificato può essere associato a un campo nel controllo <see cref="T:System.Web.UI.WebControls.FormView" />, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per determinare se il tipo di dati specificato può essere associato a un campo nel controllo. Il <xref:System.Web.UI.WebControls.FormView> controllo supporta i tipi di dati seguenti:  
  
-   Tipi di tutti i dati primitivi, ad esempio <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>e così via.  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende la <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), è possibile eseguire l'override questo metodo per aggiungere o limitare i tipi di dati che possono essere usati in un <see cref="T:System.Web.UI.WebControls.FormView" /> controllo.</para>
        </block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene fatto clic su un pulsante incluso in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.ItemCommand> evento viene generato quando un pulsante all'interno di <xref:System.Web.UI.WebControls.FormView> fa clic sul controllo. In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata ogni volta che si verifica questo evento.  
  
 I pulsanti all'interno di un <xref:System.Web.UI.WebControls.FormView> controllo può anche richiamare alcune delle funzionalità predefinite del controllo. Per eseguire una di queste operazioni, impostare il `CommandName` proprietà di un pulsante su uno dei valori nella tabella seguente.  
  
|Valore CommandName|Descrizione|  
|-----------------------|-----------------|  
|"Annulla"|Annulla un'operazione di modifica o inserimento e restituisce il <xref:System.Web.UI.WebControls.FormView> controllo alla modalità specificata per il <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> proprietà. Genera il <xref:System.Web.UI.WebControls.FormView.ModeChanged> e <xref:System.Web.UI.WebControls.FormView.ModeChanging> eventi.|  
|"Delete"|Elimina il record corrente. Genera il <xref:System.Web.UI.WebControls.FormView.ItemDeleted> e <xref:System.Web.UI.WebControls.FormView.ItemDeleting> eventi.|  
|"Edit"|Inserisce il <xref:System.Web.UI.WebControls.FormView> controllo in modalità di modifica. Genera il <xref:System.Web.UI.WebControls.FormView.ModeChanged> e <xref:System.Web.UI.WebControls.FormView.ModeChanging> eventi.|  
|"Insert"|Inserisce il record corrente nell'origine dati. Genera il <xref:System.Web.UI.WebControls.FormView.ItemInserted> e <xref:System.Web.UI.WebControls.FormView.ItemInserting> eventi.|  
|"Nuovo"|Inserisce il <xref:System.Web.UI.WebControls.FormView> controllo in modalità di inserimento. Genera il <xref:System.Web.UI.WebControls.FormView.ModeChanged> e <xref:System.Web.UI.WebControls.FormView.ModeChanging> eventi.|  
|"Pagina"|Esegue un'operazione di paging. Impostare il `CommandArgument` proprietà del pulsante su "First", "Last", "Avanti", "Precedente" o un numero di pagina per specificare il tipo di operazione di spostamento per eseguire. Genera il <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> e <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> eventi.|  
|"Aggiornamento"|Aggiorna il record corrente nell'origine dati. Genera il <xref:System.Web.UI.WebControls.FormView.ItemUpdated> e <xref:System.Web.UI.WebControls.FormView.ItemUpdating> eventi.|  
  
 Sebbene il <xref:System.Web.UI.WebControls.FormView.ItemCommand> evento viene generato quando viene premuto un pulsante elencato nella tabella precedente, si consiglia di utilizzare gli eventi elencati nella tabella per l'operazione.  
  
 Oggetto <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> oggetto viene passato per il metodo di gestione degli eventi, che consente di determinare il nome e l'argomento del comando del pulsante scelto. Per determinare il nome e l'argomento del comando, usare il <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> e <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> proprietà, rispettivamente. È anche possibile accedere al controllo che ha generato l'evento tramite il <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> proprietà.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.ItemCommand> eventi per gestire un pulsante in un <xref:System.Web.UI.WebControls.FormView> controllo. Quando l'utente fa clic sul pulsante Aggiungi, elemento correntemente visualizzato viene aggiunto a un <xref:System.Web.UI.WebControls.ListBox> controllo.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo che in un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> sono state create tutte le righe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento viene generato dopo che tutte le righe vengono create in un <xref:System.Web.UI.WebControls.FormView> controllo. Ciò può verificarsi quando il controllo è sottoposto a rendering, o quando l'utente passa a un altro record. È possibile utilizzare questo evento per fornire un metodo di gestione degli eventi che esegue una routine personalizzata, ad esempio aggiungere o modificare il contenuto di una riga, ogni volta che si verifica questo evento.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento si verifica prima il <xref:System.Web.UI.WebControls.FormView> controllo è associato a dati. Per modificare il valore di un campo associato, utilizzare il <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> evento.  
  
 È possibile accedere alle righe di intestazione e piè di pagina cercapersone nel <xref:System.Web.UI.WebControls.FormView> controllo utilizzando il <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, o <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> proprietà, rispettivamente. Per accedere alla riga di dati, utilizzare il <xref:System.Web.UI.WebControls.FormView.Row%2A> proprietà.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento di aggiornamento del testo di un <xref:System.Web.UI.WebControls.Label> controllo contenuto nella riga del pager.  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene fatto clic su un pulsante Elimina in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />, ma dopo l'operazione di eliminazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo genera il <xref:System.Web.UI.WebControls.FormView.ItemDeleted> evento quando un pulsante Elimina (un pulsante con il relativo `CommandName` impostata su "Elimina") all'interno del controllo è selezionata, ma dopo che il <xref:System.Web.UI.WebControls.FormView> controllo Elimina il record. In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata, ad esempio controllare i risultati di un'operazione di eliminazione, ogni volta che si verifica questo evento.  
  
 Oggetto <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> oggetto viene passato al metodo gestione degli eventi, che consente di determinare il numero di record interessati e le eccezioni che potrebbero essersi verificati. Per determinare il numero di record interessati dall'operazione di eliminazione, utilizzare il <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> proprietà. Utilizzare il <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> proprietà per determinare se è stata generata un'eccezione. È anche possibile indicare se l'eccezione è stato gestito nel metodo di gestione degli eventi impostando il <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> proprietà. Se si desidera accedere le coppie nome/valore dei campi non chiave del record eliminato e i campi chiave, utilizzare il <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> e <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> proprietà, rispettivamente.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.ItemDeleted> evento per determinare se si è verificata un'eccezione durante un'operazione di eliminazione.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene fatto clic su un pulsante Elimina in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />, ma prima dell'operazione di eliminazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo genera il <xref:System.Web.UI.WebControls.FormView.ItemDeleting> evento quando un pulsante Elimina (un pulsante con relativo `CommandName` impostata su "Elimina") all'interno del controllo è selezionata, ma prima che il <xref:System.Web.UI.WebControls.FormView> controllo Elimina il record. In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata, ad esempio la verifica di un record prima di eliminarlo, ogni volta che si verifica questo evento.  
  
 Oggetto <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> oggetto viene passato per il metodo di gestione degli eventi, che consente di determinare l'indice del record da eliminare e per indicare che l'operazione di eliminazione deve essere annullata. Per determinare l'indice di un record, utilizzare il <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> proprietà. Per annullare l'operazione di eliminazione, impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true`. È inoltre possibile accedere ai campi chiave e i campi non chiave utilizzando il <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> e <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> proprietà, rispettivamente.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.ItemDeleting> evento per annullare un'operazione di eliminazione.  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene fatto clic su un pulsante Inserisci in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />, ma dopo l'operazione di inserimento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo genera il <xref:System.Web.UI.WebControls.FormView.ItemInserted> evento quando un pulsante Inserisci (un pulsante con relativo `CommandName` impostata su "Insert") all'interno del controllo è selezionata, ma dopo che il <xref:System.Web.UI.WebControls.FormView> ha inserito il record. In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata, ad esempio controllare i risultati di un'operazione di inserimento, ogni volta che si verifica questo evento.  
  
 Oggetto <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> oggetto viene passato al metodo gestione degli eventi, che consente di determinare il numero di record interessati e le eccezioni che potrebbero essersi verificati. Per determinare il numero di record interessati dall'operazione di inserimento, utilizzare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> proprietà. Utilizzare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> proprietà per determinare se è stata generata un'eccezione. È anche possibile indicare se l'eccezione è stato gestito nel metodo di gestione degli eventi impostando il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> proprietà. Se è necessario accedere ai valori del record inserito, utilizzare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> proprietà.  
  
 Per impostazione predefinita, il <xref:System.Web.UI.WebControls.FormView> controllo torna alla modalità specificata per il <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> proprietà dopo un'operazione di inserimento. Per mantenere la <xref:System.Web.UI.WebControls.FormView> controllare in modalità di inserimento, impostare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> proprietà `true`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.ItemInserted> evento per determinare se si è verificata un'eccezione durante un'operazione di inserimento.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene fatto clic su un pulsante Inserisci in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />, ma prima dell'operazione di inserimento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo genera il <xref:System.Web.UI.WebControls.FormView.ItemInserting> evento quando un pulsante Inserisci (un pulsante con relativo `CommandName` impostata su "Insert") all'interno del controllo è selezionata, ma prima che il <xref:System.Web.UI.WebControls.FormView> ha inserito il record. In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata, ad esempio HTML codifica i valori di un record prima di inserirlo nell'origine dati, ogni volta che si verifica questo evento.  
  
 Un <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> oggetto viene passato al metodo gestione degli eventi, che consente di determinare il valore di un argomento di comando facoltative inviato al <xref:System.Web.UI.WebControls.FormView> controllo e per indicare che l'operazione di inserimento deve essere annullata. Il valore dell'argomento comando corrisponde alla `CommandArgument` proprietà del pulsante Inserisci. Quando il `CommandArgument` del pulsante Inserisci viene impostata, utilizzare il <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> proprietà per determinare il valore dell'argomento del comando. Per annullare l'operazione di inserimento, impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true`. È anche possibile leggere o modificare i valori dei campi per il nuovo record utilizzando la <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> proprietà.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.ItemInserting> evento per annullare un'operazione di inserimento.  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto personalizzato per la riga di dati in un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> in modalità di sola lettura.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.ITemplate" /> con il contenuto personalizzato per la riga di dati quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> è in modalità di sola lettura. Il valore predefinito è Null, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo esegue il rendering di un modello diverso per la riga di dati in base alla modalità corrente del controllo (specificato dal <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> proprietà). Nella tabella seguente viene illustrato il modello viene utilizzato per ciascuna modalità.  
  
|Modalità|Modello sottoposto a rendering|  
|----------|-----------------------|  
|Edit|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|INS|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Sola lettura|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Usare la <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> proprietà per definire la propria interfaccia utente (UI) per i dati di riga quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di sola lettura. Il modello di elemento contiene in genere i controlli per visualizzare i valori dei campi di un record, come pulsanti di comando per modificare, inserire ed eliminare un record.  
  
 Per specificare il modello personalizzato, inserire innanzitutto `<ItemTemplate>` tra i tag di apertura e chiusura dei tag di <xref:System.Web.UI.WebControls.FormView> controllo. È quindi possibile elencare il contenuto del modello tra l'apertura e chiusura `<ItemTemplate>` tag. Per visualizzare i valori dei campi dell'origine dati associata al controllo, utilizzare un'espressione di associazione dati. Per ulteriori informazioni sulle espressioni di data binding, vedere [sintassi delle espressioni di Data Binding](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Per creare pulsanti di comando che eseguono l'incorporato operazioni di eliminazione, modifica e nuovi record, aggiungere un controllo pulsante di comando per il modello con il relativo `CommandName` proprietà è impostata su uno dei valori elencati nella tabella seguente.  
  
|Tipo di pulsante di comando|Valore CommandName|  
|-------------------------|-----------------------|  
|Eliminare|"Delete"|  
|Edit|"Edit"|  
|Nuovo|"Nuovo"|  
  
 È possibile controllare l'aspetto del modello di elemento utilizzando il <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come definire un modello personalizzato per una riga di dati in modalità sola lettura.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene fatto clic su un pulsante Aggiorna in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />, ma dopo l'operazione di aggiornamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo genera il <xref:System.Web.UI.WebControls.FormView.ItemUpdated> evento quando un pulsante di aggiornamento (un pulsante con relativo `CommandName` impostata su "Update") all'interno del controllo è selezionata, ma dopo che il <xref:System.Web.UI.WebControls.FormView> ha aggiornato il record. In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata, ad esempio controllare i risultati di un'operazione di aggiornamento, ogni volta che si verifica questo evento.  
  
 Oggetto <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> oggetto viene passato al metodo gestione degli eventi, che consente di determinare il numero di record interessati e le eccezioni che potrebbero essersi verificati. Per determinare il numero di record interessati dall'operazione di aggiornamento, utilizzare il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> proprietà. Utilizzare il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> proprietà per determinare se è stata generata un'eccezione. È anche possibile indicare se l'eccezione è stato gestito nel metodo di gestione degli eventi impostando il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> proprietà. Se è necessario accedere ai valori di campo chiave per il record aggiornato, utilizzare il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> proprietà. I valori dei campi non chiave originale e aggiornato sono accessibili mediante il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> e <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> proprietà, rispettivamente.  
  
 Per impostazione predefinita, il <xref:System.Web.UI.WebControls.FormView> controllo torna alla modalità specificata per il <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> proprietà dopo un'operazione di aggiornamento. Per mantenere la <xref:System.Web.UI.WebControls.FormView> controllare in modalità di modifica, impostare il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> proprietà `true`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.ItemUpdated> evento per determinare se si è verificata un'eccezione durante un'operazione di aggiornamento.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene fatto clic su un pulsante Aggiorna in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />, ma prima dell'operazione di aggiornamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo genera il <xref:System.Web.UI.WebControls.FormView.ItemUpdating> evento quando un pulsante di aggiornamento (un pulsante con relativo `CommandName` impostata su "Update") all'interno del controllo è selezionata, ma prima che il <xref:System.Web.UI.WebControls.FormView> ha aggiornato il record. In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata, ad esempio HTML codifica i valori di un record prima dell'aggiornamento nell'origine dati, ogni volta che si verifica questo evento.  
  
 Un <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> oggetto viene passato al metodo gestione degli eventi, che consente di determinare il valore di un argomento di comando facoltative inviato al <xref:System.Web.UI.WebControls.FormView> controllo e per indicare che l'operazione di aggiornamento deve essere annullata. Il valore dell'argomento comando corrisponde alla `CommandArgument` proprietà del pulsante Aggiorna. Quando il `CommandArgument` del pulsante Aggiorna è impostata, utilizzare il <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> proprietà per determinare il valore dell'argomento del comando. Per annullare l'operazione di aggiornamento, impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true`. È anche possibile leggere o modificare i nuovi valori immessi dall'utente tramite il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> e <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> proprietà. Il <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> proprietà contiene i campi chiave, mentre il <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> proprietà contiene i campi non chiave. Se è necessario accedere ai valori di campi non chiave originale, usare il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> proprietà.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.ItemUpdating> evento per annullare un'operazione di aggiornamento.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="formView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Oggetto <see cref="T:System.Object" /> che rappresenta lo stato del controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</param>
        <summary>Carica lo stato delle proprietà del controllo <see cref="T:System.Web.UI.WebControls.FormView" /> da mantenere, anche quando la proprietà <see cref="P:System.Web.UI.Control.EnableViewState" /> è impostata su <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A> metodo viene utilizzato per caricare lo stato del <xref:System.Web.UI.WebControls.FormView> proprietà del controllo che devono essere mantenute, anche quando il <xref:System.Web.UI.Control.EnableViewState%2A> è impostata su `false`.  
  
> [!NOTE]
>  Questo metodo viene usato principalmente dagli sviluppatori di controlli quando si estende il <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="formView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Oggetto <see cref="T:System.Object" /> che rappresenta lo stato del controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</param>
        <summary>Carica lo stato di visualizzazione precedentemente salvato del controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usato in operazioni di paging per rappresentare un pulsante nella riga del pager che esegue il paging.  
  
> [!NOTE]
>  Questo metodo viene usato principalmente dagli sviluppatori di controlli quando si estende il <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> si alterna tra le modalità di modifica, inserimento e sola lettura, ma dopo il cambiamento di modalità.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nota:<xref:System.Web.UI.WebControls.FormView> questo tipo di pulsante in genere viene utilizzato solo nel modello di spostamento. Utilizzato nelle operazioni di aggiornamento per tentare di aggiornare il record visualizzato nell'origine dati con i valori specificati dall'utente.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Questa versione del metodo restituisce <xref:System.Web.UI.WebControls.FormView.ModeChanged> quando viene gestito uno di questi pulsanti.  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> cambia modalità passando alla modalità di modifica, di inserimento o di sola lettura, ma prima di tale cambiamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si estende il <xref:System.Web.UI.WebControls.FormView> (classe), è possibile eseguire l'override del metodo per gestire gli eventi personalizzati. Assicurarsi di usare il valore restituito per indicare se l'evento deve essere passato ulteriormente la gerarchia dei controlli.  
  
 Il <xref:System.Web.UI.WebControls.FormViewModeEventArgs> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ModeChanging> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> classe. Questo metodo viene chiamato quando il <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> non è associato a un controllo origine dati, l'utente non ha annullato l'operazione di eliminazione e non viene registrato un gestore eventi per l'evento. Questo metodo viene chiamato quando il <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> non è associato a un controllo origine dati, l'utente non ha annullato l'operazione di inserimento e un gestore eventi non è registrato per l'evento. Questo metodo viene chiamato quando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> non è associato a un controllo origine dati, l'utente non ha annullato l'operazione di aggiornamento e un gestore eventi non è registrato per l'evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.ModeChanging> evento per nascondere il pager riga quando il <xref:System.Web.UI.WebControls.FormView> passaggio alla modalità di modifica del controllo.  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberSignature Language="F#" Value="abstract member ModifiedOuterTableStylePropertyName : unit -&gt; string&#xA;override this.ModifiedOuterTableStylePropertyName : unit -&gt; string" Usage="formView.ModifiedOuterTableStylePropertyName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se le regole di stile CSS specifiche della tabella associate al controllo <see cref="T:System.Web.UI.WebControls.FormView" /> vengono impostate sui valori predefiniti.</summary>
        <returns>Regole di stile CSS predefinite associate al controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le regole di stile CSS specifici della tabella sono impostate sui valori predefinito utilizzando il <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> e <xref:System.Web.UI.WebControls.Style.Font%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="formView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Origine dell'evento.</param>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Gestisce un evento passato ai livelli superiori della gerarchia dei controlli.</summary>
        <returns>
          <see langword="true" /> per indicare che l'evento deve essere passato a livelli ancora superiori nella gerarchia dei controlli, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> metodo viene utilizzato dal controllo anche per gestire gli eventi passati alla gerarchia di controllo per il <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> metodo. Determina se gestire un evento esaminando le proprietà del <xref:System.EventArgs> oggetti contenuti nel `e` parametro. Quando un evento deve essere gestita, il metodo esegue l'azione appropriata. Altri eventi vengono ignorati e passati ai livelli superiori della gerarchia dei controlli. Questo metodo indica se passare l'evento ulteriormente la gerarchia dei controlli mediante il relativo valore restituito.  
  
 Il <xref:System.Web.UI.WebControls.FormView> controllo sostituisce l'implementazione di base di questo metodo per eseguire l'azione appropriata quando si fa clic su uno dei pulsanti riconosciuti dal controllo. La tabella seguente elenca i pulsanti di comando di <xref:System.Web.UI.WebControls.FormView> riconosciuto dal controllo.  
  
|Button|Valore CommandName|Descrizione|  
|------------|-----------------------|-----------------|  
|Annulla|"Annulla"|Usato in aggiornamento o inserimento di operazioni per annullare l'operazione e ignorare i valori immessi dall'utente. Il <xref:System.Web.UI.WebControls.FormView> il controllo ritorna quindi per la modalità specificata per il <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> proprietà.|  
|Eliminare|"Delete"|Utilizzato nelle operazioni di eliminazione per eliminare il record visualizzato dall'origine dati. Genera il <xref:System.Web.UI.WebControls.FormView.ItemDeleting> e <xref:System.Web.UI.WebControls.FormView.ItemDeleted> eventi.|  
|Edit|"Edit"|Usato nelle operazioni di aggiornamento per inserire il <xref:System.Web.UI.WebControls.FormView> controllo in modalità di modifica. Il contenuto specificato nella <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> proprietà viene visualizzata per la riga di dati.|  
|INS|"Insert"|Utilizzato nelle operazioni di inserimento per tentare di inserire un nuovo record nell'origine dati con i valori specificati dall'utente. Genera il <xref:System.Web.UI.WebControls.FormView.ItemInserting> e <xref:System.Web.UI.WebControls.FormView.ItemInserted> eventi.|  
|Nuovo|"Nuovo"|Usato nelle operazioni di inserimento per inserire il <xref:System.Web.UI.WebControls.FormView> controllo in modalità di inserimento. Il contenuto specificato nella <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> proprietà viene visualizzata per la riga di dati.|  
|Pagina|"Pagina"|Usato in operazioni di paging per rappresentare un pulsante nella riga del pager che esegue il paging. Per specificare l'operazione di paging, impostare il `CommandArgument` proprietà del pulsante su "Avanti", "Precedente", "First", "Ultimo" o l'indice della pagina a cui spostarsi. Genera il <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> e <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> eventi. **Nota:** questo tipo di pulsante in genere viene utilizzato solo nel modello di spostamento.|  
|Aggiorna|"Aggiornamento"|Utilizzato nelle operazioni di aggiornamento per tentare di aggiornare il record visualizzato nell'origine dati con i valori specificati dall'utente. Genera il <xref:System.Web.UI.WebControls.FormView.ItemUpdating> e <xref:System.Web.UI.WebControls.FormView.ItemUpdated> eventi.|  
  
 Questa versione del metodo restituisce `true` quando viene gestito uno di questi pulsanti. Per ulteriori informazioni sulla propagazione degli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), è possibile eseguire l'override del metodo per gestire gli eventi personalizzati. Assicurarsi di usare il valore restituito per indicare se l'evento deve essere passato ulteriormente la gerarchia dei controlli.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="formView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnInit%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.Control.Init> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnInit%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit" Usage="formView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ItemCommand> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="formView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit" Usage="formView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ItemDeleted> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit" Usage="formView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ItemDeleting> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Questo metodo viene chiamato quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> non è associato a un controllo origine dati, l'utente non ha annullato l'operazione di eliminazione e per l'evento non è registrato un gestore eventi.</exception>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit" Usage="formView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ItemInserted> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit" Usage="formView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ItemInserting> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Questo metodo viene chiamato quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> non è associato a un controllo origine dati, l'utente non ha annullato l'operazione di inserimento e per l'evento non è registrato un gestore eventi.</exception>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit" Usage="formView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ItemUpdated> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit" Usage="formView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ItemUpdating> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Questo metodo viene chiamato quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> non è associato a un controllo origine dati, l'utente non ha annullato l'operazione di aggiornamento e per l'evento non è registrato un gestore eventi.</exception>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="formView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ModeChanged> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit" Usage="formView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.ModeChanging> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Questo metodo viene chiamato quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> non è associato a un controllo origine dati, il cambiamento di modalità non è stato annullato e per l'evento non è registrato un gestore eventi.</exception>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="formView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit" Usage="formView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per generare il <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> evento. Viene generalmente usato dagli sviluppatori di controlli quando si estende la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Questo metodo viene chiamato quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> non è associato a un controllo origine dati, l'operazione di spostamento non è stata annullata e per l'evento non è registrato un gestore eventi.</exception>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.FormView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero totale di pagine necessario per visualizzare tutti i record presenti nell'origine dati.</summary>
        <value>Numero di elementi presenti nell'origine dati sottostante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando è abilitata la funzionalità di paging (quando il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> è impostata su `true`), utilizzare il <xref:System.Web.UI.WebControls.FormView.PageCount%2A> proprietà per determinare il numero totale di record nell'origine dati sottostante.  
  
> [!NOTE]
>  Poiché il <xref:System.Web.UI.WebControls.FormView> controllo Visualizza un solo record alla volta, questo valore corrisponde al numero totale di pagine necessario per visualizzare tutti i record nell'origine dati. Questo valore non è preciso fino a dopo che si verifica l'associazione dati.  
  
 Per determinare l'indice del record corrente dall'origine dati sottostante, utilizzare il <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.PageCount%2A> proprietà per determinare il numero totale di record visualizzati nel controllo.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'indice della pagina visualizzata.</summary>
        <value>L'indice in base zero dell'elemento di dati visualizzato in un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> dall'origine dati sottostante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando è abilitata la funzionalità di paging (quando il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> è impostata su `true`), utilizzare il <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> proprietà per determinare l'indice del record attualmente visualizzato. È inoltre possibile utilizzare questa proprietà per modificare a livello di codice il record visualizzato.  
  
> [!NOTE]
>  Quando è abilitata la funzionalità di paging, è inoltre possibile utilizzare questa proprietà per determinare il numero di pagina di record visualizzato. Tuttavia, tenere presente che questa proprietà è in base zero.  
  
 Per determinare il numero totale di elementi nell'origine dati, utilizzare il <xref:System.Web.UI.WebControls.FormView.PageCount%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> proprietà per determinare l'indice della pagina del record visualizzato.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore selezionato è minore di -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> cambia dopo un'operazione di spostamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo genera il <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> evento quando un pulsante di spostamento (un pulsante con relativo `CommandName` impostata su "Pagina") all'interno del controllo è selezionata, ma dopo che il <xref:System.Web.UI.WebControls.FormView> controllo gestisce l'operazione di spostamento. In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata ogni volta che si verifica questo evento.  
  
> [!NOTE]
>  Questo evento non viene generato quando si imposta a livello di codice il <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> proprietà.  
  
 Pulsanti di spostamento vengono in genere si trova nella riga del pager di un <xref:System.Web.UI.WebControls.FormView> controllo. Questo evento viene spesso utilizzato per sincronizzare una <xref:System.Web.UI.WebControls.FormView> controllare con un <xref:System.Web.UI.WebControls.GridView> controllo o per impostare il comportamento del <xref:System.Web.UI.WebControls.FormView> controllo dopo un'operazione di spostamento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> evento per restituire il <xref:System.Web.UI.WebControls.FormView> alla modalità di sola lettura quando l'utente passa a un altro record.  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> cambia prima di un'operazione di spostamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo genera il <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> evento quando un pulsante di spostamento (un pulsante con relativo `CommandName` impostata su "Pagina") all'interno del controllo è selezionata, ma prima che il <xref:System.Web.UI.WebControls.FormView> controllo gestisce l'operazione di spostamento. In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata, ad esempio l'annullamento dell'operazione di paging, ogni volta che si verifica questo evento.  
  
> [!NOTE]
>  Questo evento non viene generato quando si imposta a livello di codice il <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> proprietà.  
  
 Pulsanti di spostamento vengono in genere si trova nella riga del pager di un <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 Oggetto <xref:System.Web.UI.WebControls.FormViewPageEventArgs> oggetto viene passato per il metodo di gestione degli eventi, che consente di determinare l'indice della pagina selezionata dall'utente e per indicare che l'operazione di spostamento deve essere annullata. Per determinare l'indice della pagina selezionata dall'utente, utilizzare il <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> proprietà. Per annullare l'operazione di paging, impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà del <xref:System.Web.UI.WebControls.FormViewPageEventArgs> oggetto `true`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> evento per annullare un'operazione di spostamento.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.PagerSettings" /> che consente di impostare le proprietà dei pulsanti di spostamento in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.PagerSettings" /> che consente di impostare le proprietà dei pulsanti di spostamento in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> proprietà per controllare le impostazioni della riga del pager in un <xref:System.Web.UI.WebControls.FormView> controllo. La riga del pager viene visualizzata quando è abilitata la funzionalità di paging (quando il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> è impostata su `true`) e contiene i controlli che consentono all'utente di spostarsi su altri record nel controllo. Questa proprietà è di sola lettura. Tuttavia, è possibile impostare le proprietà del <xref:System.Web.UI.WebControls.PagerSettings> dell'oggetto viene restituito. Le proprietà possono essere impostate in modo dichiarativo nel formato `Property-Subproperty`, dove `Subproperty` è una proprietà del <xref:System.Web.UI.WebControls.PagerSettings> oggetto (ad esempio, `PagerSettings-Mode`). Le proprietà possono essere impostate anche a livello di codice nel formato `Property.Subproperty` (ad esempio, `PagerSettings.Mode`). Impostazioni comuni includono in genere una modalità di visualizzazione della riga di spostamento e testo personalizzato o le immagini per i controlli di navigazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> proprietà per specificare le proprietà della riga di spostamento.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che consente di impostare l'aspetto della riga di spostamento in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che rappresenta lo stile della riga di spostamento in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> proprietà per controllare l'aspetto della riga del pager in un <xref:System.Web.UI.WebControls.FormView> controllo. La riga del pager viene visualizzata quando è abilitata la funzionalità di paging (quando il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> è impostata su `true`) e contiene i controlli che consentono all'utente di spostarsi a pagine diverse nel controllo. Questa proprietà è di sola lettura. Tuttavia, è possibile impostare le proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> dell'oggetto viene restituito. Le proprietà possono essere impostate in modo dichiarativo utilizzando uno dei metodi seguenti:  
  
-   Inserire un attributo nel tag di apertura del <xref:System.Web.UI.WebControls.FormView> controllo nel modulo `Property-Subproperty`, dove `Subproperty` è una proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> oggetto (ad esempio, `PagerStyle-ForeColor`).  
  
-   Nidificare una `<PagerRowStyle>` elemento tra i tag di apertura e chiusura del <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 Le proprietà possono essere impostate anche a livello di codice nel formato `Property.Subproperty` (ad esempio, `PagerStyle.ForeColor`). Impostazioni comuni includono in genere un colore di sfondo personalizzato, colore di primo piano e le proprietà del carattere.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> proprietà per specificare le impostazioni di stile per la riga del pager.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto personalizzato per la riga di spostamento in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.ITemplate" /> con il contenuto personalizzato per la riga di spostamento. Il valore predefinito è Null, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene visualizzata una riga del pager in un <xref:System.Web.UI.WebControls.FormView> controllare quando è abilitata la funzionalità di paging (quando il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> è impostata su true). La riga del pager contiene i controlli che consentono all'utente di spostarsi a pagine diverse nel controllo. Anziché utilizzare l'interfaccia utente di riga incorporate (UI), è possibile definire la propria interfaccia utente utilizzando il <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> proprietà.  
  
> [!NOTE]
>  Quando il <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> viene impostata la riga del pager predefinite dell'interfaccia utente esegue l'override.  
  
 Per specificare un modello personalizzato per la riga del pager, inserire innanzitutto `<PagerTemplate>` tra i tag di apertura e chiusura dei tag di <xref:System.Web.UI.WebControls.FormView> controllo. È quindi possibile elencare il contenuto del modello tra l'apertura e chiusura `<PagerTemplate>` tag. Per controllare l'aspetto della riga di spostamento, usare il <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> proprietà.  
  
 In genere, i controlli pulsante vengono aggiunti al modello di cercapersone per eseguire le operazioni di paging. Il <xref:System.Web.UI.WebControls.FormView> controllo esegue un'operazione di paging quando un controllo pulsante con il relativo `CommandName` viene fatto clic su proprietà è impostata su "Pagina". Il pulsante `CommandArgument` proprietà determina il tipo di operazione di paging da eseguire. Nella tabella seguente sono elencati i valori di argomento di comando supportati dal <xref:System.Web.UI.WebControls.FormView> controllo.  
  
|Valore CommandArgument|Descrizione|  
|---------------------------|-----------------|  
|"Avanti"|Consente di passare alla pagina successiva.|  
|"Precedente"|Consente di passare alla pagina precedente.|  
|"First"|Consente di passare alla prima pagina.|  
|"Ultimo"|Passa all'ultima pagina.|  
|Valore Integer|Consente di passare al numero di pagina specificato.|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come definire un modello personalizzato tramite cercapersone.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="formView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">Oggetto <see cref="T:System.Collections.IEnumerable" /> che rappresenta l'origine dati.</param>
        <summary>Associa l'origine dati specificata al controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo da associare all'origine dati specificata al controllo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Poiché il <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> metodo sealed, è necessario eseguire l'override di questo metodo se è necessario eseguire eventuali attività aggiuntive quando si associano dati.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="formView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta la gerarchia dei controlli del controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per impostare la gerarchia dei controlli di <xref:System.Web.UI.WebControls.FormView> controllare prima del rendering del controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="formView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argomento di evento da cui creare un oggetto <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> per l'evento o gli eventi generati.</param>
        <summary>Genera gli eventi appropriati per il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> durante il postback al server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La pagina chiama il <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> metodo quando si verifica un evento di postback che genera gli eventi appropriati per un <xref:System.Web.UI.WebControls.FormView> controllo. Questa chiamata viene eseguita nel ciclo di vita della pagina al termine di notifica durante il caricamento e modifica, ma prima che si verifichi il rendering preliminare. Questo metodo è stato implementato per creare un <xref:System.Web.UI.WebControls.CommandEventArgs> oggetto per gli eventi che vengono generati.  
  
> [!NOTE]
>  Questo metodo viene usato principalmente dagli sviluppatori di controlli per estendere il <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="formView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente il flusso di output per il rendering sul client.</param>
        <summary>Visualizza il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> nel client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.Render%2A> metodo viene utilizzato per eseguire il rendering del contenuto del controllo server per il browser del client utilizzando l'oggetto specificato <xref:System.Web.UI.HtmlTextWriter> oggetto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il controllo racchiude il codice HTML di cui è stato eseguito il rendering in un elemento <see langword="table" /> in modo da applicare gli stili inline.</summary>
        <value>
          <see langword="true" /> se il controllo racchiude il codice HTML di cui è stato eseguito il rendering in un elemento <see langword="table" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per apportare, ad esempio proprietà di stile inline <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> si applicano a tutto il codice HTML che viene eseguito il rendering del controllo, ASP.NET racchiude il codice HTML visualizzabile in un `table` elemento. Se non si desidera esterna `table` elemento da sottoporre a rendering, impostare questa proprietà su `false`. In tal caso, se si tenta di impostare le proprietà di stile che si applicano all'intero controllo inline, viene generata un'eccezione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Row : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> che rappresenta la riga di dati in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>L'oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> che rappresenta la riga di dati in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.Row%2A> proprietà per l'accesso a livello di codice il <xref:System.Web.UI.WebControls.FormViewRow> oggetto che rappresenta la riga di dati. La riga di dati vengono forniti contenuti diversi in base al modello sottoposto a rendering per la modalità corrente (specificata dal <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> proprietà). È possibile accedere solo il contenuto del modello per la modalità corrente. Nella tabella seguente viene illustrato il modello viene utilizzato per ciascuna modalità.  
  
|Modalità|Modello sottoposto a rendering|  
|----------|-----------------------|  
|Edit|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|INS|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Sola lettura|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView.Row%2A> proprietà è disponibile solo dopo il <xref:System.Web.UI.WebControls.FormView> ha creato la riga di dati nel <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 Questa proprietà viene in genere utilizzata quando è necessario modificare a livello di codice la riga di dati, ad esempio quando si aggiunge contenuto personalizzato. Tutte le modifiche per il <xref:System.Web.UI.WebControls.FormView.Row%2A> proprietà deve essere eseguita dopo il <xref:System.Web.UI.WebControls.FormView> controllo è stato associato a dati; in caso contrario, il <xref:System.Web.UI.WebControls.FormView> controllo sovrascrive tutte le modifiche.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.Row%2A> proprietà per accedere alle proprietà della riga di dati durante il <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che consente di impostare l'aspetto della riga di dati in un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> in modalità di sola lettura.</summary>
        <value>Un riferimento all'oggetto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> che rappresenta lo stile della riga di dati in un controllo <see cref="T:System.Web.UI.WebControls.FormView" /> in modalità di sola lettura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> proprietà per controllare l'aspetto dei dati di riga quando un <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di sola lettura (visualizzazione). Quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di sola lettura, la riga di dati consente di visualizzare il contenuto definito dall'utente specificato per il <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> proprietà. Questa proprietà è di sola lettura. Tuttavia, è possibile impostare le proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> dell'oggetto viene restituito. Le proprietà possono essere impostate in modo dichiarativo utilizzando uno dei metodi seguenti:  
  
-   Inserire un attributo nel tag di apertura del <xref:System.Web.UI.WebControls.FormView> controllo nel modulo `Property-Subproperty`, dove `Subproperty` è una proprietà del <xref:System.Web.UI.WebControls.TableItemStyle> oggetto (ad esempio, `RowStyle-ForeColor`).  
  
-   Annidare un' `<RowStyle>` elemento tra i tag di apertura e chiusura del <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 Le proprietà possono essere impostate anche a livello di codice nel formato `Property.Subproperty` (ad esempio, `RowStyle.ForeColor`). Impostazioni comuni includono in genere un colore di sfondo personalizzato, colore di primo piano e le proprietà del carattere.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> proprietà per specificare uno stile personalizzato per i dati di un riga quando un <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di sola lettura.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="formView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva lo stato delle proprietà del controllo <see cref="T:System.Web.UI.WebControls.FormView" /> da mantenere, anche quando la proprietà <see cref="P:System.Web.UI.Control.EnableViewState" /> è impostata su <see langword="false" />.</summary>
        <returns>Restituisce lo stato di visualizzazione corrente del controllo server. Se al controllo non è associato alcuno stato di visualizzazione, questo metodo restituisce <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per salvare lo stato del <xref:System.Web.UI.WebControls.FormView> proprietà del controllo che devono essere mantenute, anche quando le <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> è impostata su `false`.  
  
> [!NOTE]
>  Questo metodo viene usato principalmente dagli sviluppatori di controlli per estendere il <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="formView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva lo stato di visualizzazione corrente del controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> che contiene lo stato salvato del controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A> è un metodo di supporto chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per salvare lo stato del controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore della chiave dati del record corrente in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Il valore della chiave dati del record corrente in un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> è impostata, il <xref:System.Web.UI.WebControls.FormView> controllo crea automaticamente un <xref:System.Web.UI.WebControls.DataKey> oggetto che contiene le coppie chiave/valore del campo o campi elencati nella <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> proprietà per il record corrente. Il <xref:System.Web.UI.WebControls.DataKey> oggetto rappresenta il campo chiave primaria o i campi per il record corrente e viene archiviato nel <xref:System.Web.UI.WebControls.FormView.DataKey%2A> proprietà. Anziché utilizzare il <xref:System.Web.UI.WebControls.FormView.DataKey%2A> proprietà per accedere al valore di chiave di dati, è possibile utilizzare il <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> proprietà come collegamento.  
  
> [!NOTE]
>  Quando il <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> elenchi di proprietà di più campi, questa proprietà restituisce il valore del primo campo elencato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> proprietà per determinare il valore del campo chiave.  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="formView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice da impostare.</param>
        <summary>Imposta l'indice della pagina attualmente visualizzata nel controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />.</summary>
        <value>Oggetto che rappresenta l'indice di visualizzazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.FormView> a un'interfaccia <xref:System.Web.UI.IDataItemContainer>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</summary>
        <value>Restituisce sempre 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.FormView> a un'interfaccia <xref:System.Web.UI.IDataItemContainer>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argomento per l'evento.</param>
        <summary>Genera eventi per il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> durante il postback al server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La pagina chiama il <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> metodo quando si verifica un evento di postback. Questa chiamata viene eseguita nel ciclo di vita della pagina al termine di notifica durante il caricamento e modifica, ma prima del rendering della pagina.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una matrice contenente i nomi dei campi di chiave primaria degli elementi visualizzati nel controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Matrice contenente i nomi dei campi di chiave primaria degli elementi visualizzati nel controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.FormView> a un'interfaccia <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'elenco di elementi di dati a cui viene associato il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> quando l'origine dati contiene più elenchi di elementi di dati.</summary>
        <value>Nome dell'elenco di elementi di dati a cui viene associato il controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.FormView> a un'interfaccia <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.WebControls.IDataBoundControl.DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto che contiene l'elenco di dati recuperato dal controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Oggetto che contiene l'elenco di dati recuperato dal controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.FormView> a un'interfaccia <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ID del controllo origine dati che contiene l'elenco di elementi di dati recuperato dal controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>ID del controllo origine dati che contiene l'elenco di elementi di dati recuperato dal controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.FormView> a un'interfaccia <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto origine dati che contiene l'elenco di elementi di dati recuperato dal controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Oggetto origine dati che contiene l'elenco di elementi di dati recuperato dal controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.FormView> a un'interfaccia <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IDataBoundItemControl.DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto che rappresenta il valore della chiave di dati della riga nel controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Oggetto che rappresenta il valore della chiave di dati della riga nel controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.FormView> a un'interfaccia <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la modalità corrente del controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Modalità corrente del controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.FormView> a un'interfaccia <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Controllo pulsante che ha eseguito il postback della pagina al server.</param>
        <summary>Determina le opzioni dell'evento di postback per il controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>Le opzioni dell'evento di postback per il controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> è un metodo helper che viene chiamato dal <xref:System.Web.UI.WebControls.FormView> controllo per creare un <xref:System.Web.UI.PostBackOptions> oggetto che contiene le opzioni di evento di postback per il controllo. Il <xref:System.Web.UI.PostBackOptions> oggetto viene in genere utilizzato come un parametro per il <xref:System.Web.UI.Page.GetPostBackEventReference%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto contenuto nel parametro <paramref name="buttonControl" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" /> di <paramref name="buttonControl" /> è <see langword="true" />.</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.FormView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore <see cref="T:System.Web.UI.HtmlTextWriterTag" /> per il controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Restituisce sempre <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView.TagKey%2A> proprietà consente al flusso di output scrivere il tag HTML appropriato per il <xref:System.Web.UI.WebControls.FormView> controllo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È possibile eseguire l'override di questa proprietà per specificare quale <see cref="T:System.Web.UI.HtmlTextWriterTag" /> valore da utilizzare per il controllo derivato.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> che rappresenta la riga di spostamento visualizzata nella parte superiore di un controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> che rappresenta la riga di spostamento superiore nel controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il paging è abilitato (quando il <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> è impostata su `true`), viene automaticamente visualizzata una riga aggiuntiva denominata la riga del pager nel <xref:System.Web.UI.WebControls.FormView> controllo. La riga del pager contiene i controlli che consentono all'utente di spostarsi tra gli altri record e possono essere visualizzati nella parte superiore, inferiore, o superiore e inferiore del controllo. Usare la <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> proprietà per l'accesso a livello di codice il <xref:System.Web.UI.WebControls.FormViewRow> oggetto che rappresenta la riga di spostamento superiore nel <xref:System.Web.UI.WebControls.FormView> controllo.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> proprietà è disponibile solo dopo il <xref:System.Web.UI.WebControls.FormView> ha creato la riga di spostamento superiore nel <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 Questa proprietà viene in genere utilizzata quando è necessario modificare a livello di codice la riga di spostamento superiore, ad esempio quando si aggiunge contenuto personalizzato. Tutte le modifiche per il <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> proprietà deve essere eseguita dopo il <xref:System.Web.UI.WebControls.FormView> controllo è stato associato a dati; in caso contrario, il <xref:System.Web.UI.WebControls.FormView> controllo sovrascrive tutte le modifiche.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> proprietà a cui accedere la riga del pager visualizzata nella parte superiore di un <xref:System.Web.UI.WebControls.FormView> controllo. La riga del pager viene quindi aggiornata con contenuto aggiuntivo.  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="formView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Segna il punto da cui iniziare a individuare e salvare le variazioni dello stato di visualizzazione nel controllo <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene sottoposto a override per contrassegnare il punto iniziale in corrispondenza del quale iniziare a rilevare e le modifiche al controllo come parte dello stato del controllo di visualizzazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="formView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> per eseguire la convalida della pagina quando viene chiamato il metodo, altrimenti <see langword="false" />.</param>
        <summary>Aggiorna il record corrente nell'origine dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.FormView> controllo si trova nella modalità di modifica, usare il <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> metodo a livello di codice aggiornare il record corrente nell'origine dati. Questo metodo viene comunemente utilizzato quando è necessario aggiornare il record corrente all'esterno del <xref:System.Web.UI.WebControls.FormView> controllare, ad esempio relativi a un controllo diverso nella pagina.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.FormView> controllo deve essere in modalità di modifica quando questo metodo viene chiamato; in caso contrario, un <xref:System.Web.HttpException> viene generata un'eccezione.  
  
 Per specificare se la convalida della pagina viene eseguita prima dell'operazione di aggiornamento, utilizzare il `causesValidation` parametro. La chiamata a questo metodo genera anche il <xref:System.Web.UI.WebControls.FormView.ItemUpdated> e <xref:System.Web.UI.WebControls.FormView.ItemUpdating> eventi.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> metodo a livello di codice aggiornare il record corrente in un <xref:System.Web.UI.WebControls.FormView> controllo nell'origine dati.  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Questo metodo viene chiamato quando il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> non è in modalità di modifica.  - oppure - L'oggetto <see cref="T:System.Web.UI.DataSourceView" /> associato al controllo <see cref="T:System.Web.UI.WebControls.FormView" /> è Null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del metodo sulla pagina che viene chiamata quando il controllo esegue un'operazione di aggiornamento.</summary>
        <value>Nome del metodo sulla pagina che viene chiamata quando il controllo esegue un'operazione di aggiornamento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per una serie di esercitazioni sull'uso di associazione di modelli con Web Form, vedere [associazione di modelli e Web Form](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>