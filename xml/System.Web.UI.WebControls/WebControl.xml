<Type Name="WebControl" FullName="System.Web.UI.WebControls.WebControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68c8941b59897ff726b1ff80581dd3b644f4f02a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30601255" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebControl extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="VB.NET" Value="Public Class WebControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebControl : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta la classe base che definisce i metodi, le proprietà e gli eventi comuni a tutti i controlli presenti nello spazio dei nomi <see cref="N:System.Web.UI.WebControls" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.WebControls.WebControl> classe fornisce proprietà, metodi ed eventi comuni a tutti i controlli server Web. È possibile controllare l'aspetto e il comportamento di un controllo server Web impostando le proprietà definite in questa classe. Ad esempio, il colore di sfondo e il colore del carattere di un controllo sono controllate tramite il <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> e <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> proprietà, rispettivamente. I controlli che è possibile visualizzare un bordo, è possibile controllare la larghezza del bordo, lo stile del bordo e il colore del bordo impostando il <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>, <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>, e <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> proprietà. Le dimensioni di un controllo server Web possono essere specificata utilizzando il <xref:System.Web.UI.WebControls.WebControl.Height%2A> e <xref:System.Web.UI.WebControls.WebControl.Width%2A> proprietà.  
  
 Il comportamento del controllo può essere specificato impostando alcune proprietà. È possibile abilitare e disabilitare un controllo impostando la <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> proprietà. Al posto del controllo nell'ordine di tabulazione è controllato dall'impostazione di <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> proprietà. È possibile specificare una descrizione comando per il controllo impostando la <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> proprietà.  
  
> [!NOTE]
>  Non tutti i controlli supportano tutte le proprietà definite in questa classe. Per informazioni specifiche sul supporto di una proprietà, vedere la documentazione per il controllo specifico.  
  
> [!NOTE]
>  Alcune proprietà nella classe di eseguire il rendering in modo diverso, in base al browser. Alcune proprietà non esegue il rendering, mentre altre eseguire il rendering, ma non hanno alcun effetto. Il <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> proprietà del <xref:System.Web.HttpBrowserCapabilities> oggetto determina la modalità di rendering di un controllo server Web. Per i browser che supportano HTML 4.0, il <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> proprietà conterrà una normale <xref:System.Web.HttpBrowserCapabilities> viene rendering oggetto e la maggior parte delle proprietà utilizzando gli attributi di stile HTML 4.0. I browser che non supportano HTML 4.0 utilizzerà il <xref:System.Web.UI.Html32TextWriter> oggetto. Questo verrà associato automaticamente gli attributi di stile per attributi di tag HTML 3.2 pertinenti. In alcuni casi, ad esempio con il <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> proprietà, gli attributi di stile verranno convertiti in ulteriori tag, ad esempio `<font>` tag. In alcuni casi, non sarà disponibile alcun mapping eseguito. Per informazioni specifiche sulle modalità di rendering di una proprietà in diversi browser, vedere la documentazione per la proprietà specifica.  
  
 Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.WebControl>, vedere il <xref:System.Web.UI.WebControls.WebControl.%23ctor%2A> costruttore.  
  
   
  
## Examples  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.WebControl" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.WebControl" /> che rappresenta un tag HTML <see langword="Span" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.WebControl> classe che rappresenta un `Span` elemento HTML.  
  
 Nella tabella seguente mostra il valore di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.WebControl>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|`TagKey`|Il valore di enumerazione <xref:System.Web.UI.HtmlTextWriterTag.Span>.|  
  
> [!NOTE]
>  Questo costruttore non viene chiamato direttamente. Viene chiamato in genere il costruttore di una classe derivata per inizializzare il <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> proprietà per il <xref:System.Web.UI.HtmlTextWriterTag.Span> valore di enumerazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl(System::String ^ tag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">Tag HTML.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.WebControl" /> utilizzando il tag HTML specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare e inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.WebControl> classe con il tag HTML specificato.  
  
 La tabella seguente illustra i valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.WebControl>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|`TagKey`|Il valore di enumerazione <xref:System.Web.UI.HtmlTextWriterTag.Unknown>.|  
|`TagName`|Valore del parametro `tag`.|  
  
> [!NOTE]
>  Questo costruttore non viene chiamato direttamente. Viene chiamato in genere il costruttore di una classe derivata per inizializzare il <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> e <xref:System.Web.UI.WebControls.WebControl.TagName%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebControl (System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebControl(System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tag">Uno dei valori di <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.WebControl" /> utilizzando il tag HTML specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare e inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.WebControl> classe utilizzando l'oggetto specificato <xref:System.Web.UI.HtmlTextWriterTag?displayProperty=nameWithType> valore.  
  
 Nella tabella seguente mostra il valore di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.WebControl>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|`TagKey`|Il <xref:System.Web.UI.HtmlTextWriterTag> specificato dal valore di enumerazione di `tag` parametro.|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il costruttore per il <xref:System.Web.UI.WebControls.WebControl> classe per creare un `TextArea` elemento HTML e visualizzarlo nella pagina Web Form.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.WebControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.WebControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.WebControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.WebControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public virtual string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tasto di scelta che consente di accedere rapidamente al controllo server Web.</summary>
        <value>Tasto di scelta per la navigazione rapida al controllo server Web. Il valore predefinito è <see cref="F:System.String.Empty" />, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> proprietà per specificare il tasto di scelta rapida per il controllo server Web. In questo modo è possibile accedere rapidamente al controllo premendo il tasto ALT e la chiave per il carattere specificato sulla tastiera. Ad esempio, impostando la chiave di accesso di un controllo per la stringa `"D"` indica che l'utente possa passare al controllo premendo ALT + D.  
  
 È consentita solo un'unica stringa di caratteri per il <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> proprietà. Se si tenta di impostare questa proprietà su un valore che non è né `null`, <xref:System.String.Empty>, né un'unica stringa di caratteri, viene generata un'eccezione.  
  
> [!NOTE]
>  Questa proprietà è supportata solo in Internet Explorer 4.0 e versioni successive.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare e utilizzare il <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> proprietà di un <xref:System.Web.UI.WebControls.TextBox> controllo.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.AccessKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.AccessKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il tasto di scelta specificato non corrisponde a <see langword="null" />, <see cref="F:System.String.Empty" /> né a una stringa composta da un unico carattere.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che rappresenta il flusso di output di cui eseguire il rendering del contenuto HTML nel client.</param>
        <summary>Aggiunge attributi e stili HTML dei quali è necessario eseguire il rendering nell'oggetto <see cref="T:System.Web.UI.HtmlTextWriterTag" /> specificato. Questo metodo viene utilizzato principalmente dagli sviluppatori di controlli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per eseguire il rendering di stili e attributi per un controllo Server Web nel client, in genere si chiama il <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> e <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> metodi per inserire ogni attributo e applicare stili a singolarmente la <xref:System.Web.UI.HtmlTextWriter> flusso di output. Per semplificare il processo, il metodo incapsula tutte le chiamate al <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType> e <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> metodi per ogni attributo e lo stile associato al controllo server Web. Tutti gli attributi e gli stili vengono inseriti le <xref:System.Web.UI.HtmlTextWriter> flusso di output in una singola chiamata al metodo. Questo metodo viene in genere sottoposto a override dagli sviluppatori di controlli nelle classi derivate per inserire gli attributi appropriati e gli stili per il <xref:System.Web.UI.HtmlTextWriter> flusso di output per la classe.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> metodo non può essere utilizzato per inserire lo script client. Per usare lo script client, vedere la <xref:System.Web.UI.ClientScriptManager> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare una classe che deriva dalla <xref:System.Web.UI.WebControls.WebControl> classe. L'implementazione di base di <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> metodo sottoposto a override per aggiungere gli attributi appropriati per la classe derivata nel <xref:System.Web.UI.HtmlTextWriter> flusso di output.  
  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public void ApplyStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">Oggetto <see cref="T:System.Web.UI.WebControls.Style" /> che rappresenta lo stile da copiare.</param>
        <summary>Copia tutti gli elementi non vuoti dello stile specificato nel controllo Web, sovrascrivendo eventuali elementi di stile del controllo. Il metodo viene utilizzato principalmente dagli sviluppatori di controlli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> metodo per applicare uno stile a un <xref:System.Web.UI.WebControls.DataGrid> controllo.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[WebControlApplyStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlApplyStyle/CS/webcontrolapplystylecs.aspx#1)]
 [!code-aspx-vb[WebControlApplyStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlApplyStyle/VB/webcontrolapplystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di attributi arbitrari (solo per il rendering) che non corrispondono alle proprietà del controllo.</summary>
        <value>Insieme <see cref="T:System.Web.UI.AttributeCollection" /> di coppie di nomi e valori.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> raccolta contiene una raccolta di tutti gli attributi dichiarati nel tag di apertura di un controllo server Web. Ciò consente di controllare a livello di codice gli attributi associati a un controllo server Web. È possibile aggiungere attributi alla raccolta o rimuovere gli attributi dalla raccolta.  
  
> [!NOTE]
>  Questa proprietà viene eseguito il rendering con tutti gli attributi nella raccolta nel tag di apertura del controllo, indipendentemente dalle impostazioni del browser. Non tutti i browser supportano tutti gli attributi che viene eseguito il rendering. Gli attributi non supportati vengono in genere ignorati dal browser.  
  
> [!NOTE]
>  Non è possibile aggiungere script sul lato client per un <xref:System.Web.UI.WebControls.WebControl> istanza utilizzando il <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> insieme. Per aggiungere uno script sul lato client, utilizzare il <xref:System.Web.UI.Page.ClientScript%2A> proprietà il <xref:System.Web.UI.Page> controllo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come la <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> proprietà di un <xref:System.Web.UI.WebControls.WebControl> può essere utilizzato per eseguire codice JavaScript comando quando il <xref:System.Web.UI.WebControls.TextBox> perde lo stato attivo.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Attributes Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Attributes Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AttributeCollection" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore di sfondo del controllo server Web.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore di sfondo del controllo. Il valore predefinito è <see cref="F:System.Drawing.Color.Empty" />, che indica che la proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> proprietà per specificare il colore di sfondo del controllo server Web. Questa proprietà viene impostata utilizzando un <xref:System.Drawing.Color?displayProperty=nameWithType> oggetto.  
  
> [!NOTE]
>  Questa proprietà verrà eseguito il rendering solo per alcuni controlli. Ad esempio, <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, e <xref:System.Web.UI.WebControls.ValidationSummary> verrà eseguito il rendering di questa proprietà. Funziona anche per <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> e <xref:System.Web.UI.WebControls.DataList> se i relativi `RepeatLayout` proprietà `RepeatLayout.Table`, non `RepeatLayout.Flow`.  
  
 In generale, controlla solo il cui rendering viene eseguito come un `<table>` tag può visualizzare un colore di sfondo in HTML 3.2, mentre qualsiasi controllo può essere effettuata in HTML 4.0.  
  
 Per i controlli che eseguono il rendering come un `<span>` tag (inclusi <xref:System.Web.UI.WebControls.Label>, tutti i controlli di convalida e i controlli elenco con i relativi `RepeatLayout` proprietà impostata su `RepeatLayout.Flow`), questa proprietà funzionerà in Microsoft Internet Explorer versione 5 e versioni successive, ma non in Microsoft Internet Explorer versione 4.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> proprietà del <xref:System.Web.UI.WebControls.Table> controllo ereditato il <xref:System.Web.UI.WebControls.WebControl> classe di base.  
  
 [!code-aspx-csharp[Classic WebControl.BackColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BackColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BackColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore del bordo del controllo Web.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore del bordo del controllo. Il valore predefinito è <see cref="F:System.Drawing.Color.Empty" />, che indica che la proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> proprietà per specificare il colore del bordo del controllo Server Web. Questa proprietà viene impostata utilizzando un <xref:System.Drawing.Color> oggetto.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> proprietà esegue il rendering solo per determinati controlli. Ad esempio, il <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, e <xref:System.Web.UI.WebControls.ValidationSummary> controlli verranno eseguito il rendering di questa proprietà. Funziona anche per il <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>, e <xref:System.Web.UI.WebControls.DataList> controlla se i relativi `RepeatLayout` è impostata su `RepeatLayout.Table`, non `RepeatLayout.Flow`. Tuttavia, viene visualizzato come il `bordercolor` attributo, che non fa parte dello standard HTML 3.2. Il `bordercolor` attributo è supportato in Microsoft Internet Explorer versione 3.0 o versione successiva, ma non la maggior parte degli altri browser.  
  
 Quando il <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> non è impostata, il browser userà il colore del bordo predefinito. Fare riferimento al browser per determinare la combinazione di colori predefinita.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> proprietà del <xref:System.Web.UI.WebControls.Table> controllo ereditato il <xref:System.Web.UI.WebControls.WebControl> classe di base.  
  
 [!code-aspx-csharp[Classic WebControl.BorderColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo stile del bordo del controllo server Web.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Web.UI.WebControls.BorderStyle" />. Il valore predefinito è <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> proprietà per specificare lo stile del bordo per il controllo server Web. Questa proprietà viene impostata utilizzando uno del <xref:System.Web.UI.WebControls.BorderStyle> valori di enumerazione. Nella tabella seguente sono elencati i valori possibili.  
  
|Stile bordo|Descrizione|  
|------------------|-----------------|  
|`NotSet`|Non è impostato lo stile del bordo.|  
|`None`|Nessun bordo|  
|`Dotted`|Bordo a linea punteggiata.|  
|`Dashed`|Bordo a linea tratteggiata.|  
|`Solid`|Bordo a linea continua.|  
|`Double`|Un bordo a doppia linea continua.|  
|`Groove`|Bordo incassato per dare al bordo un aspetto incassato.|  
|`Ridge`|Bordo in rilievo per dare al bordo un aspetto in rilievo.|  
|`Inset`|Bordo incassato per dare al controllo un aspetto incassato.|  
|`Outset`|Bordo in rilievo per dare al controllo un aspetto in rilievo.|  
  
> [!NOTE]
>  Questa proprietà non eseguirà il rendering nei browser precedenti a Microsoft Internet Explorer 4 per qualsiasi controllo server Web. È disponibile un equivalente a esso in HTML 3.2.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> proprietà del <xref:System.Web.UI.WebControls.Table> controllo ereditato il <xref:System.Web.UI.WebControls.WebControl> classe di base.  
  
 [!code-aspx-csharp[Classic WebControl.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la larghezza del bordo del controllo server Web.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.Unit" /> che rappresenta la larghezza del bordo di un controllo server Web. Il valore predefinito è <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> proprietà per specificare la larghezza del bordo per un controllo.  
  
> [!NOTE]
>  Questa proprietà non funziona con tutti i controlli server Web. Si applica solo ai controlli che visualizzano sotto forma di tabella, ad esempio <xref:System.Web.UI.WebControls.Table> e <xref:System.Web.UI.WebControls.DataGrid>.  
  
 Questa proprietà è impostata con un <xref:System.Web.UI.WebControls.Unit> oggetto. Se il <xref:System.Web.UI.WebControls.Unit.Value%2A> proprietà del <xref:System.Web.UI.WebControls.Unit> contiene un numero negativo, viene generata un'eccezione.  
  
> [!NOTE]
>  Lo spessore del bordo può essere espresso solo in pixel per i browser precedenti a Microsoft Internet Explorer versione 5. In Microsoft Internet Explorer versione 5 e versioni successive sono supportati tutti i tipi di unità. Fare riferimento al controllo specifico per informazioni dettagliate.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> proprietà del <xref:System.Web.UI.WebControls.Table> controllo ereditato dalla <xref:System.Web.UI.WebControls.WebControl> classe di base.  
  
 [!code-aspx-csharp[Classic WebControl.BorderWidth Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderWidth Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">È stato specificato un valore negativo per la larghezza del bordo.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ControlStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ControlStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ControlStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ControlStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stile del controllo server Web. Questa proprietà viene usata principalmente dagli sviluppatori di controlli.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.Style" /> che incapsula le proprietà relative all'aspetto del controllo server Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> proprietà incapsula tutte le proprietà del <xref:System.Web.UI.WebControls.WebControl> classe che specificano l'aspetto del controllo, ad esempio <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> e <xref:System.Web.UI.WebControls.WebControl.Font%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      </Docs>
    </Member>
    <Member MemberName="ControlStyleCreated">
      <MemberSignature Language="C#" Value="public bool ControlStyleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlStyleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlStyleCreated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se è stato creato un oggetto <see cref="T:System.Web.UI.WebControls.Style" /> per la proprietà <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />. Questa proprietà viene utilizzata principalmente dagli sviluppatori di controlli.</summary>
        <value>
          <see langword="true" /> se è stato creato un oggetto <see cref="T:System.Web.UI.WebControls.Style" /> per la proprietà <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      </Docs>
    </Member>
    <Member MemberName="CopyBaseAttributes">
      <MemberSignature Language="C#" Value="public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBaseAttributes(class System.Web.UI.WebControls.WebControl controlSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyBaseAttributes (controlSrc As WebControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyBaseAttributes(System::Web::UI::WebControls::WebControl ^ controlSrc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlSrc" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="controlSrc">Oggetto <see cref="T:System.Web.UI.WebControls.WebControl" /> che rappresenta il controllo del codice sorgente con le proprietà da copiare nel controllo server Web da cui è chiamato questo metodo.</param>
        <summary>Copia le proprietà non incapsulate dall'oggetto <see cref="P:System.Web.UI.WebControls.WebControl.Style" /> dal controllo server Web specificato al controllo server Web dal quale è stato chiamato il metodo. Questo metodo viene utilizzato principalmente dagli sviluppatori di controlli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.CopyBaseAttributes%2A> metodo copia i <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>, <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>, <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>, <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>, e <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> proprietà dal controllo server Web specificato per il controllo server Web che questo metodo viene chiamato da. Viene in genere utilizzato nei casi in cui un controllo server Web funziona tramite la creazione di nuovi controlli in modo dinamico durante il rendering e l'utilizzo dei controlli. Questo metodo è utile in questa situazione perché tutte le proprietà dei controlli server Web non è incapsulati dalla copia di <xref:System.Web.UI.WebControls.Style> affinché possano essere collocati in un controllo più esterno di un tag che viene eseguito il rendering dell'oggetto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="controlSrc" /> è <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea l'oggetto di stile utilizzato internamente dalla classe <see cref="T:System.Web.UI.WebControls.WebControl" /> per implementare tutte le proprietà correlate allo stile. Questo metodo viene utilizzato principalmente dagli sviluppatori di controlli.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.WebControls.Style" /> usato per implementare tutte le proprietà del controllo correlate allo stile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.CreateControlStyle%2A> metodo viene utilizzato per creare lo stile dell'oggetto che viene utilizzata internamente per implementare lo stile tutte le proprietà correlate. Le classi derivate possono eseguire l'override di questo metodo per creare uno stile che è appropriato per la classe. Il metodo viene utilizzato principalmente dagli sviluppatori di controlli.  
  
 **Nota** agli sviluppatori di controllo devono restituire un <xref:System.Web.UI.WebControls.Style> che deriva dal <xref:System.Web.UI.WebControls.Style> che restituisce il controllo di base. Non è possibile presupporre che il <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> è di un particolare tipo di stile, poiché un controllo derivato può restituire un tipo diverso.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la classe CSS (Cascading Style Sheet) di cui viene eseguito il rendering tramite il controllo server Web sul client.</summary>
        <value>Classe CSS di cui viene eseguito il rendering tramite il controllo server Web sul client. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> proprietà per specificare la classe CSS per il rendering sul client per il controllo Server Web. Questa proprietà verrà eseguito il rendering nel browser per tutti i controlli. Viene sempre sottoposto a rendering come attributo di classe, indipendentemente dal browser.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 Ad esempio, si supponga la dichiarazione del controllo server Web seguente:  
  
```  
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />  
```  
  
 Il codice HTML seguente viene eseguito il rendering sul client per la dichiarazione precedente del controllo server Web:  
  
```  
<input type=text class="class1" style="ForeColor:red">  
```  
  
 Se si utilizza CSS (cascading style sheet) per personalizzare l'aspetto di un controllo, utilizzare gli stili in linea o un file CSS separato, ma non entrambi. Utilizzando gli stili inline sia un file CSS separato può provocare risultati imprevisti.  
  
> [!NOTE]
>  Nei browser che non supportano CSS, l'impostazione di <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> proprietà avrà alcun effetto.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> proprietà per modificare lo stile di un <xref:System.Web.UI.WebControls.HyperLink> controllo.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.CssClass Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.CssClass Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.CssClass Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.CssClass Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic WebControl.CssClass Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic WebControl.CssClass Example/Common/source.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisabledCssClass">
      <MemberSignature Language="C#" Value="public static string DisabledCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DisabledCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DisabledCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DisabledCssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la classe CSS da applicare all'elemento HTML di cui è stato eseguito il rendering quando il controllo è disabilitato.</summary>
        <value>Classe CSS da applicare all'elemento HTML di cui è stato eseguito il rendering quando il controllo è disabilitato. Il valore predefinito è "aspNetDisabled".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà può essere utilizzata per modificare il nome che viene eseguito il rendering per il <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> proprietà dei singoli controlli Web. Per impostazione predefinita, questa proprietà restituisce "aspNetDisabled".  
  
 Quando <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> viene sottoposto a override in una classe derivata per restituire `false`, il valore della <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> è eseguito il rendering come valore della proprietà di `class` attributo dell'elemento HTML per il controllo. In questo caso, se è presente un valore di <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> proprietà, verranno applicate entrambe le classi CSS per l'elemento HTML di cui è stato eseguito il rendering. Il `class` attributo sarà costituito il valore della <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> proprietà seguito dal valore del <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> proprietà, separati da uno spazio.  
  
 Questa proprietà è statica, il che significa che è possibile impostare solo per la <xref:System.Web.UI.WebControls.WebControl> classe. Il valore viene impostato su viene utilizzato per tutti i controlli in un'applicazione Web. È possibile specificare valori diversi per i singoli controlli.  
  
 Se si desidera utilizzare un nome di classe diverso da quello predefinito di "aspNetDisabled", è in genere inserire il codice per eseguire questa operazione nel `Application_Start` metodo del file Global. asax, come illustrato nell'esempio seguente:  
  
```vb  
Private Sub Application_Start(  
    ByVal sender As Object, ByVal e As EventArgs)  
    WebControl.DisabledCssClass = "customDisabledClassName"  
End Sub  
```  
  
```csharp  
void Application_Start(object sender, EventArgs e)  
{  
    WebControl.DisabledCssClass = "customDisabledClassName";  
}  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene mostrato il codice HTML per disattivato <xref:System.Web.UI.WebControls.Label> controllare quando il <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> proprietà `false`, quando il <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> proprietà ha il valore predefinito e quando il <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> proprietà è vuota.  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 Nell'esempio seguente viene eseguito il rendering HTML nelle stesse condizioni, eccetto il <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> proprietà presenta il valore "SampleStyle"`:`  
  
 `<span id="Label1" class="aspNetDisabled SampleStyle">Test</span>`  
  
 Per altre informazioni, vedere la proprietà <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il controllo server Web è abilitato.</summary>
        <value>
          <see langword="true" /> se il controllo è abilitato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> di un controllo è impostata su `false`, in genere viene visualizzato il controllo in grigio. Se il controllo è un elemento di input, il browser impedisce l'utente facendo clic o digitare in essa contenuti. Gli elementi HTML che eseguono il rendering per un controllo server vengono contrassegnati come disabilitate impostando i relativi `disabled` attributo o un loro CSS `class` attributo. Per altre informazioni, vedere <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> e <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  
  
 Questa proprietà viene propagata verso il basso nella gerarchia dei controlli. Se si disabilita un controllo contenitore, vengono disabilitati anche i controlli figlio all'interno del contenitore. Per altre informazioni, vedere la proprietà <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>.  
  
> [!NOTE]
>  In un controllo composito personalizzato, questo comportamento di ereditarietà non viene applicato ai controlli che hanno non ancora creato i relativi controlli figlio. È necessario impostare lo stato di abilitazione del figlio controlli quando vengono creati, o eseguire l'override di <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> proprietà per chiamare il <xref:System.Web.UI.Control.EnsureChildControls%2A> metodo.  
  
> [!NOTE]
>  La disabilitazione di un controllo impedisce solo l'interazione con il controllo dall'utente tramite l'interfaccia utente del browser. È possibile che un utente di creare una richiesta che invia un postback viene elaborato dalla pagina, anche se i controlli della pagina sono disabilitati. Prima di elaborare una richiesta di postback, verificare che il controllo è visibile e abilitato.  
  
 Non tutti i controlli supportano questa proprietà. Vedere i singoli controlli per i dettagli.  
  
 Questa proprietà non può essere impostata da temi oppure temi di fogli di stile. Per ulteriori informazioni, vedere <xref:System.Web.UI.ThemeableAttribute> e [ASP.NET temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come abilitare e disabilitare un <xref:System.Web.UI.WebControls.TextBox> controllo ereditato dal <xref:System.Web.UI.WebControls.WebControl> classe base, impostando il relativo <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> proprietà a livello di codice.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Enabled Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Enabled Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.EnsureChildControls" />
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se al controllo vengono applicati i temi.</summary>
        <value>
          <see langword="true" /> per utilizzare i temi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> proprietà indica se i temi sono abilitati per un controllo specificato. Quando il <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> proprietà `true`, la directory del tema per l'applicazione viene eseguita la ricerca per le interfacce di controllo da applicare. Se è presente alcuna interfaccia per il controllo specifico nella directory dei temi, le interfacce non sono applicate.  
  
 Quando il <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> proprietà `false`, la directory di tema non viene eseguita la ricerca e il contenuto della <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> proprietà non viene utilizzata.  
  
 Un controllo può eseguire l'override di <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> valore impostato dal relativo controllo padre o la pagina che lo contiene. Ad esempio, se un controllo padre di <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> proprietà impostata su `false`, è possibile applicare in modo selettivo i temi per i controlli figlio contenuti nel controllo padre impostando il <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> proprietà `true` il figlio singoli controlli.  
  
 Temi possono essere abilitati a livello di pagina, contenitore o controllo. Quando i temi sono disabilitato a livello di pagina o del contenitore, i temi sono disabilitati per tutti i controlli contenuti in una pagina o del contenitore.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le proprietà del carattere associate al controllo server Web.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.FontInfo" /> che rappresenta le proprietà del carattere del controllo server Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.Font%2A> proprietà per specificare le proprietà del carattere del controllo Server Web. Questa proprietà include sottoproprietà che è possibile accedere in modo dichiarativo sotto forma di `Property-Subproperty` (ad esempio `Font-Bold`) o a livello di codice sotto forma di `Property.Subproperty` (ad esempio `Font.Bold`).  
  
 Verranno eseguito il rendering di tutte le sottoproprietà nei browser prima di Microsoft Internet Explorer versione 4 per tutti i controlli. Sono: <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>, <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>, <xref:System.Web.UI.WebControls.FontInfo.Name%2A>, <xref:System.Web.UI.WebControls.FontInfo.Names%2A>, <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>, <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>, e <xref:System.Web.UI.WebControls.FontInfo.Size%2A> (però solo le dimensioni dei caratteri, ad esempio `Small`, `Smaller`e così via, funzionano).  
  
> [!NOTE]
>  Sebbene queste sottoproprietà esegue il rendering nel browser prima di Microsoft Internet Explorer versione 4, che viene eseguito il rendering HTML è diverso da browser più recenti. Anziché il rendering come attributi di stile, queste sottoproprietà vengono visualizzate come elementi HTML, ad esempio `<b>` e `<font>`.  
  
 È l'unica sottoproprietà che non verrà eseguito il rendering nel browser meno recenti per tutti i controlli <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebControl.Font%2A> proprietà per raccogliere informazioni di carattere da un <xref:System.Web.UI.WebControls.Label> controllo.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.Font Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Font Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Font Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Font Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore di primo piano, in genere il colore del testo, del controllo server Web.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore di primo piano del controllo. Il valore predefinito è <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> proprietà per specificare il colore di primo piano del controllo server Web. Il colore di primo piano corrisponde in genere al colore del testo. Verrà eseguito il rendering di questa proprietà nei browser precedenti a Microsoft Internet Explorer versione 4 per tutti i controlli, ad eccezione di <xref:System.Web.UI.WebControls.Image>, <xref:System.Web.UI.WebControls.AdRotator>, <xref:System.Web.UI.WebControls.HyperLink> e <xref:System.Web.UI.WebControls.LinkButton>.  
  
> [!NOTE]
>  Nei browser precedenti a Microsoft Internet Explorer versione 4, questa proprietà viene visualizzata come `<font>` tag.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> proprietà del <xref:System.Web.UI.WebControls.Table> controllo ereditato dalla <xref:System.Web.UI.WebControls.WebControl> classe di base.  
  
 [!code-aspx-csharp[Classic WebControl.ForeColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAttributes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se sono impostati attributi per il controllo.</summary>
        <value>
          <see langword="true" /> se per il controllo sono impostati attributi; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.HasAttributes%2A> restituisce proprietà `true` quando il <xref:System.Web.UI.WebControls.WebControl> istanza dispone di coppie nome/valore di attributo. Le coppie attributo possono essere impostate nella proprietà o nello stato di visualizzazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'altezza del controllo server Web.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.Unit" /> che rappresenta l'altezza del controllo. Il valore predefinito è <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.Height%2A> proprietà per specificare l'altezza del controllo server Web.  
  
> [!NOTE]
>  Questa proprietà non esegue il rendering di tutti i controlli nei browser precedenti a Microsoft Internet Explorer versione 4. I controlli che non eseguono il rendering di questa proprietà nei browser meno recenti includono <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>e i controlli di convalida. Il <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> e <xref:System.Web.UI.WebControls.DataList> anche questa proprietà nei browser meno recenti non vengono visualizzati quando i relativi `RepeatLayout` è impostata su `RepeatLayout.Flow`. Inoltre, solo i tipi di unità `Pixel` e `Percentage` sono supportati nei browser meno recenti.  
  
 Poiché questa proprietà è conforme allo standard HTML, i controlli server Web che mostrano come una tabella, ad esempio <xref:System.Web.UI.WebControls.Table> e <xref:System.Web.UI.WebControls.DataGrid>, non supporta questa proprietà nei browser precedenti a Microsoft Internet Explorer versione 4.  
  
> [!NOTE]
>  Per impostare il <xref:System.Web.UI.WebControls.WebControl.Height%2A> tipo di proprietà a un'unità diversa da quella predefinita di `Pixel`, è necessario creare un nuovo tipo di unità specifico per il tipo di unità desiderato. Ad esempio, per impostare un controllo <xref:System.Web.UI.WebControls.WebControl.Height%2A> proprietà su un valore percentuale pari a 100, è possibile eseguire le operazioni seguenti:  
>   
>  `myWebControl.Width = Unit.Percentage(100);`  
>   
>  Per ulteriori informazioni sui tipi di unità disponibile per il <xref:System.Web.UI.WebControls.WebControl.Height%2A> proprietà, vedere la <xref:System.Web.UI.WebControls.Unit> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare in modo dichiarativo il <xref:System.Web.UI.WebControls.WebControl.Height%2A> proprietà del <xref:System.Web.UI.WebControls.Table> controllo ereditato dalla <xref:System.Web.UI.WebControls.WebControl> classe di base.  
  
 [!code-aspx-csharp[Classic WebControl.Height Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Height Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Height Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Height Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">È stato specificato un valore negativo per l'altezza.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLink" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il controllo è abilitato.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Web.UI.WebControls.WebControl" /> è abilitato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa è una proprietà di sola lettura. Se si desidera disabilitare un controllo, impostare il relativo <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> proprietà `false`.  
  
 Se un controllo non è contenuto in un altro controllo, il valore del <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> proprietà è sempre lo stesso valore di <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> proprietà ha un valore diverso da quello di <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> proprietà se un controllo è un figlio di un altro controllo e se tutte le condizioni seguenti sono vere:  
  
-   Il valore di <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> proprietà o <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> proprietà del controllo padre è `false`.  
  
-   Il <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> del controllo figlio è impostata su `true`.  
  
 In questo caso, il controllo figlio eredita lo stato disabilitato del controllo padre. Il <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> proprietà del controllo figlio restituisce `false` per indicare che il controllo è disabilitato, anche se il controllo figlio non è stato disabilitato in modo esplicito impostando il relativo <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> proprietà `false`. Il controllo padre stesso potrebbe essere relativo <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> proprietà impostata su `true` ma può ereditare lo stato disabilitato dal relativo elemento padre e così via.  
  
 Quando ASP.NET esegue il rendering di elementi HTML per un controllo server, contrassegna gli elementi come disabilitati impostando i relativi `disabled` attributo o un loro CSS `class` attributo. Per altre informazioni, vedere <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> e <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Oggetto che rappresenta lo stato di controllo da ripristinare.</param>
        <summary>Ripristina le informazioni sullo stato di visualizzazione da una richiesta precedente salvata con il metodo <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato principalmente dall'infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice. Tuttavia, gli sviluppatori di controlli possono eseguire l'override questo metodo per specificare come un controllo server personalizzato ripristina lo stato di visualizzazione. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Il <xref:System.Web.UI.WebControls.WebControl.LoadViewState%2A> metodo ripristina le informazioni sullo stato di visualizzazione che è state salvate durante un precedente <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> richiesta. Il <xref:System.Web.UI.WebControls.WebControl> classe esegue l'override della base <xref:System.Web.UI.Control.LoadViewState%2A> metodo per gestire il <xref:System.Web.UI.Control.ViewState%2A>, <xref:System.Web.UI.WebControls.WebControl.Style%2A>, e <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="MergeStyle">
      <MemberSignature Language="C#" Value="public void MergeStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">Oggetto <see cref="T:System.Web.UI.WebControls.Style" /> che rappresenta lo stile da copiare.</param>
        <summary>Copia tutti gli elementi non vuoti dello stile specificato nel controllo Web, ma non sovrascrive eventuali elementi di stile del controllo. Questo metodo viene utilizzato principalmente dagli sviluppatori di controlli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> metodo per unire uno stile con lo stile di un <xref:System.Web.UI.WebControls.DataGrid> controllo.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[WebControlMergeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlMergeStyle/CS/webcontrolmergestylecs.aspx#1)]
 [!code-aspx-vb[WebControlMergeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlMergeStyle/VB/webcontrolmergestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che riceve il contenuto del controllo.</param>
        <summary>Esegue il rendering del controllo nel writer HTML specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.Render%2A> metodo viene usato principalmente dagli sviluppatori di controlli.  
  
 Il <xref:System.Web.UI.WebControls.WebControl.Render%2A> metodo invia il controllo Web specificata <xref:System.Web.UI.HtmlTextWriter> istanza. Eseguire l'override di questo metodo per restituire il controllo server personalizzato al client.  
  
 Il <xref:System.Web.UI.WebControls.WebControl.Render%2A> chiamate al metodo prima di <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A> (metodo), il <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> (metodo) e infine il <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> metodo per inviare il controllo al client.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che rappresenta il flusso di output di cui eseguire il rendering del contenuto HTML nel client.</param>
        <summary>Esegue il rendering del tag HTML di apertura del controllo nel writer specificato. Questo metodo viene utilizzato principalmente dagli sviluppatori di controlli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo è reso pubblico altri controlli possono eseguire il rendering di più controlli tra i tag di apertura e chiusura di un controllo server Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che rappresenta il flusso di output di cui eseguire il rendering del contenuto HTML nel client.</param>
        <summary>Esegue il rendering del contenuto del controllo nel writer specificato. Questo metodo viene utilizzato principalmente dagli sviluppatori di controlli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> metodo per il rendering del contenuto del controllo tra i tag di inizio e di fine. L'implementazione predefinita di questo metodo esegue il rendering di qualsiasi figlio controlli.  
  
 Se il controllo dispone di controlli figlio, è necessario chiamare la base <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> metodo o una chiamata di <xref:System.Web.UI.Control.RenderChildren%2A> nel punto in cui si desidera che i controlli figlio da sottoporre a rendering per il writer di testo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che rappresenta il flusso di output di cui eseguire il rendering del contenuto HTML nel client.</param>
        <summary>Esegue il rendering del tag HTML di chiusura del controllo nel writer specificato. Questo metodo viene utilizzato principalmente dagli sviluppatori di controlli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo è reso pubblico altri controlli possono eseguire il rendering di più controlli tra i tag di apertura e chiusura di un controllo server Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva qualsiasi stato modificato dopo la chiamata del metodo <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" />.</summary>
        <returns>Oggetto che contiene lo stato di visualizzazione corrente del controllo. In caso contrario, <see langword="null" /> se al controllo non è associato alcuno stato di visualizzazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> metodo viene usato principalmente dagli sviluppatori di controlli.  
  
 I valori delle proprietà per un controllo server cumulativi è stato di visualizzazione. Questi valori vengono inseriti automaticamente nel <xref:System.Web.UI.Control.ViewState%2A> proprietà per il controllo server, che è un'istanza del <xref:System.Web.UI.StateBag> classe. Il <xref:System.Web.UI.Control.ViewState%2A> valore della proprietà viene quindi inserito in un oggetto stringa dopo il salvataggio dello stato fase del ciclo di vita per il controllo server. Per ulteriori informazioni, vedere [Panoramica del ciclo di vita della pagina ASP.NET](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Quando viene salvato lo stato di visualizzazione, l'oggetto stringa viene restituito al client come una variabile che viene archiviata in un HTML nascosto `input` elemento. Quando si creano controlli server personalizzati, è possibile migliorare l'efficienza eseguendo l'override di <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> (metodo) e la modifica di <xref:System.Web.UI.Control.ViewState%2A> proprietà del controllo server. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'interfaccia personalizzata da applicare al controllo.</summary>
        <value>Nome dell'interfaccia personalizzata da applicare al controllo. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le interfacce disponibili per un controllo sono contenute in uno o più file di interfaccia in una directory dei temi. Il <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> proprietà specifica quale di queste interfacce da applicare al controllo. Un'interfaccia è specifica per un determinato controllo. è possibile condividere l'impostazione dell'interfaccia tra i controlli di tipi diversi.  
  
 Se non si imposta la <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> proprietà, un controllo utilizza l'interfaccia predefinita se ne è stata definita. Ad esempio, se un'interfaccia senza un ID è definito per un <xref:System.Web.UI.WebControls.Image> controllare, tale interfaccia verrà applicata a tutti <xref:System.Web.UI.WebControls.Image> controlli che non fa riferimento in modo esplicito un'interfaccia in base all'ID e che non sono impostati per disabilitare i temi. Se è definita un'interfaccia con un ID per un <xref:System.Web.UI.WebControls.Image> controllare, quindi tale interfaccia si applica solo a <xref:System.Web.UI.WebControls.Image> controlli la cui <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> è impostato su tale ID.  
  
 Se i file di interfaccia in una directory di tema non contengono un'interfaccia con l'oggetto specificato <xref:System.Web.UI.WebControls.WebControl.SkinID%2A>, un <xref:System.ArgumentException> viene generata l'eccezione in fase di esecuzione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'interfaccia specificata nella proprietà <see cref="P:System.Web.UI.WebControls.WebControl.SkinID" /> non esiste nel tema.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ Style { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di attributi di testo di cui verrà eseguito il rendering sotto forma di attributo di stile nel tag esterno del controllo server Web.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.CssStyleCollection" /> contenente gli attributi di stile HTML di cui eseguire il rendering nel tag esterno del controllo server Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.Style%2A> insieme per gestire gli attributi di stile di cui è stato eseguito il rendering nel tag esterno del controllo server Web. Questa proprietà verrà eseguito il rendering in tutti i browser per tutti i controlli.  
  
> [!NOTE]
>  I browser che non supportano gli attributi di stile ignorerà il codice HTML.  
  
 Qualsiasi valore di stile impostato tramite le proprietà di stile fortemente tipizzate (ad esempio, `BackColor="Red"`) comporterà automaticamente un valore corrispondente nella raccolta.  
  
 I valori impostati in questa raccolta non vengono applicati automaticamente alle proprietà di stile fortemente tipizzate.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebControl.Style%2A> proprietà per visualizzare o nascondere un <xref:System.Web.UI.WebControls.Label> controllo in una pagina.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.Style Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Style Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Style Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il controllo deve impostare l'attributo <see langword="disabled" /> dell'elemento HTML di cui è stato eseguito il rendering su "disabilitato" quando la proprietà <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> del controllo è <see langword="false" />.</summary>
        <value>Sempre <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nelle classi derivate, questa proprietà indica come ASP.NET deve eseguire il rendering HTML per un controllo quando il controllo è disabilitato.  
  
## <a name="disabling-aspnet-web-controls"></a>I controlli Web ASP.NET disabilitazione  
 Quando il <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> di un controllo ASP.NET è impostata su `false` (ovvero, quando il controllo è disabilitato), lo scopo è che ASP.NET esegua il rendering del controllo nella pagina tuttavia visualizzarla in uno stato disabilitato (in genere visualizzata in grigio). Se un controllo padre è disabilitato, gli elementi figlio di tale controllo vengono visualizzati anche come disabilitato. In di questo caso, il controllo figlio <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> è impostata su `false`, anche se il relativo <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> potrebbe essere impostata su `true`.  
  
 In ASP.NET 3.5 e versioni precedenti, quando un controllo <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> proprietà `false`, ASP.NET imposta il `disabled` su "disabled" dell'attributo nell'elemento HTML che esegue il rendering del controllo. Tuttavia, lo standard HTML 4.01 consente il `disabled` attributo solo su determinati elementi utilizzati per l'input dell'utente. Ad esempio, il `disabled` l'attributo è consentito per `input` elementi, ma non per `span` elementi.  
  
 La maggior parte dei browser supportano un aspetto disabilitato predefinito per gli elementi di sola visualizzazione che hanno `disabled` attributi. Tuttavia, per essere conforme agli standard HTML, per impostazione predefinita, ASP.NET 4 omette gli attributi non validi.  
  
## <a name="how-the-supportsdisabledattribute-property-is-used"></a>Come utilizzare la proprietà SupportsDisabledAttribute  
 Se il <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> proprietà `true`, ASP.NET esegue il rendering un `disabled` attributo quando il controllo è disabilitato. Se questa proprietà è `false`, ASP.NET esegue il rendering un `class` attributo quando il controllo è disabilitato.  
  
 Le classi derivate eseguire l'override di questa proprietà per restituire `false` se tutte le condizioni seguenti sono vere:  
  
-   Il controllo esegue il rendering di un elemento HTML che non supporta il `disabled` attributo.  
  
-   Il <xref:System.Web.UI.Control.RenderingCompatibility%2A> proprietà indica un numero di versione ASP.NET precedente alla 4.0.  
  
 Il <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> proprietà non indica necessariamente se l'elemento HTML che viene eseguito il rendering per un controllo supporta (consente) il `disabled` attributo. Se un controllo <xref:System.Web.UI.Control.RenderingCompatibility%2A> proprietà indica un numero di versione ASP.NET precedente alla 4.0, il valore del controllo <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> potrebbe restituire proprietà `true` anche se il codice HTML non supporta il `disabled` attributo.  
  
## <a name="backward-compatibility-for-disabled-controls"></a>Compatibilità con le versioni precedenti per i controlli disabilitati  
 Quando si utilizza Visual Studio per aggiornare un progetto Web per ASP.NET 4 da una versione precedente, Visual Studio imposta automaticamente il `controlRenderingCompatibilityVersion` attributo nel file Web. config (che imposta il <xref:System.Web.UI.Control.RenderingCompatibility%2A> proprietà) su un numero di versione precedente. Poiché il <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> proprietà restituisce sempre `true` quando il <xref:System.Web.UI.Control.RenderingCompatibility%2A> è inferiore a 4.0, in questo modo i controlli Web per il rendering HTML per i controlli disabilitati come avveniva nelle versioni precedenti. Se si desidera che un sito Web aggiornato per il rendering HTML mediante l'algoritmo introdotto in ASP.NET 4, è possibile modificare o rimuovere il `controlRenderingCompatibilityVersion` attributo. Per altre informazioni, vedere la proprietà <xref:System.Web.UI.Control.RenderingCompatibility%2A>.  
  
## <a name="setting-a-disabled-appearance-by-using-css"></a>L'impostazione di un aspetto disabilitato tramite CSS  
 Se il <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> è di proprietà di un controllo `false` e il controllo è disabilitata, ASP.NET imposta il `class` attributo dell'elemento HTML di cui è stato eseguito rendering, il valore di <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> proprietà. Il valore predefinito di <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> proprietà è "aspNetDisabled".  
  
 Per fornire un aspetto disabilitato per i controlli disabilitati, è necessario definire una regola CSS per la classe rappresentata dal valore della <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> proprietà.  
  
 L'elemento HTML che viene eseguito il rendering per un controllo potrebbe disporre di più di un valore in relativi `class` attributo se è presente un valore nella relativa <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> proprietà. Per altre informazioni, vedere la proprietà <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il markup per un disabilitato <xref:System.Web.UI.WebControls.Label> controllo:  
  
 `<asp:Label id="Label1" runat="server" Text="Test" Enabled="false"/>`  
  
 In ASP.NET 3.5 e versioni precedenti, questo markup esegue il rendering HTML seguente:  
  
 `<span id="Label1" disabled="disabled">Test</span>`  
  
 In ASP.NET 4, se il valore della <xref:System.Web.UI.Control.RenderingCompatibility%2A> è 4.0 o versione successiva e se il <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> è impostata sul valore predefinito, lo stesso markup esegue il rendering HTML seguente:  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (name As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ name) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'attributo.</param>
        <summary>Ottiene un attributo del controllo Web con il nome specificato.</summary>
        <returns>Valore dell'attributo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23GetAttribute%2A> metodo è un'implementazione esplicita dell'interfaccia di un membro. E può essere utilizzato solo quando l'istanza del <xref:System.Web.UI.WebControls.WebControl> classe viene eseguito il cast a un <xref:System.Web.UI.IAttributeAccessor> interfaccia.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (name As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ name, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Componente nome della coppia nome-valore dell'attributo.</param>
        <param name="value">Componente valore della coppia nome-valore dell'attributo.</param>
        <summary>Imposta un attributo del controllo Web sul nome e il valore specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23SetAttribute%2A> metodo è un'implementazione esplicita dell'interfaccia di un membro. E può essere utilizzato solo quando l'istanza del <xref:System.Web.UI.WebControls.WebControl> classe viene eseguito il cast a un <xref:System.Web.UI.IAttributeAccessor> interfaccia.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public virtual short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'indice di tabulazione del controllo server Web.</summary>
        <value>Indice di tabulazione del controllo server Web. Il valore predefinito è <see langword="0" />, che indica che la proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> proprietà per specificare o per determinare l'indice della scheda di un controllo server Web nella pagina Web Form. Quando si preme il `Tab` chiave, l'ordine in cui i controlli server Web ricevano lo stato attivo è determinato dal <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> proprietà di ogni controllo. Quando una pagina viene caricata inizialmente, il primo elemento che riceve lo stato attivo quando il `Tab` si preme la barra degli indirizzi è. Successivamente, i controlli della pagina Web Form sono schede a in ordine crescente, in base al valore del <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> proprietà di ogni controllo, a partire dal valore positivo più piccolo, diverso da zero. Se più controlli condividono lo stesso indice di scheda, i controlli riceverà lo stato attivo nell'ordine in che cui sono dichiarati nella pagina Web Form. Infine, i controlli che dispongono di un indice di tabulazione pari a zero vengono abilitati nell'ordine in che cui sono dichiarati.  
  
> [!NOTE]
>  Verranno eseguito il rendering solo i controlli con un indice di tabulazione diverso da zero la `tabindex` attributo.  
  
 È possibile rimuovere un controllo Server Web dall'ordine di tabulazione impostando la <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> proprietà su un valore negativo.  
  
> [!NOTE]
>  Questa proprietà è supportata solo in Internet Explorer 4 e versioni successive.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> proprietà del <xref:System.Web.UI.WebControls.WebControl> per impostare l'ordine di tabulazione dei controlli nella pagina.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.TabIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.TabIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice di tabulazione specificato non è compreso nell'intervallo tra -32768 e 32767.</exception>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore <see cref="T:System.Web.UI.HtmlTextWriterTag" /> corrispondente al controllo server Web. Questa proprietà viene usata principalmente dagli sviluppatori di controlli.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> proprietà per determinare il <xref:System.Web.UI.HtmlTextWriterTag> valore associato a questo controllo server Web. Questa proprietà viene usata principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected virtual string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ TagName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del tag del controllo. Questa proprietà viene usata principalmente dagli sviluppatori di controlli.</summary>
        <value>Nome del tag del controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.TagName%2A> proprietà per determinare il nome del tag del controllo associata a questo controllo server Web. Questa proprietà viene usata principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo visualizzato quando il puntatore del mouse viene posizionato sul controllo server Web.</summary>
        <value>Testo visualizzato quando il puntatore del mouse viene posizionato sul controllo server Web. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> proprietà per specificare il testo personalizzato che viene visualizzato quando il puntatore del mouse viene posizionato sul controllo server Web.  
  
> [!NOTE]
>  Questa proprietà viene eseguito il rendering per tutti i browser. Tuttavia, solo Microsoft Internet Explorer visualizza questa proprietà come descrizione comando. Tutti gli altri browser, questa proprietà verrà ignorata.  
  
 Il valore di questa proprietà, se impostato, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per ulteriori informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> proprietà il <xref:System.Web.UI.WebControls.Button> controllo ereditato il <xref:System.Web.UI.WebControls.WebControl> classe di base.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forza il controllo a tenere traccia dello modifiche apportate allo stato di visualizzazione in modo che vengano archiviate nella proprietà <see cref="P:System.Web.UI.Control.ViewState" /> dell'oggetto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> metodo viene usato principalmente dagli sviluppatori di controlli.  
  
 Il <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> contrassegna il punto iniziale in corrispondenza del quale iniziare la registrazione e salvataggio delle modifiche allo stato di visualizzazione per il controllo. Il <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> metodo viene chiamato automaticamente da ASP.NET quando viene inizializzato un controllo server.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la larghezza del controllo server Web.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.Unit" /> che rappresenta la larghezza del controllo. Il valore predefinito è <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WebControl.Width%2A> proprietà per specificare la larghezza del controllo server Web.  
  
> [!NOTE]
>  Questa proprietà non esegue il rendering di tutti i controlli nei browser precedenti a Microsoft Internet Explorer versione 4. I controlli che non eseguono il rendering di questa proprietà nei browser meno recenti includono <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>e i controlli di convalida. Il <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> e <xref:System.Web.UI.WebControls.DataList> anche questa proprietà nei browser meno recenti non vengono visualizzati quando i relativi `RepeatLayout` è impostata su `RepeatLayout.Flow`. Inoltre, solo i tipi di unità `Pixel` e `Percentage` sono supportati nei browser meno recenti.  
  
 Poiché questa proprietà è conforme allo standard HTML, i controlli server Web che mostrano come una tabella, ad esempio <xref:System.Web.UI.WebControls.Table> e <xref:System.Web.UI.WebControls.DataGrid>, non supporta questa proprietà nei browser precedenti a Microsoft Internet Explorer versione 4.  
  
> [!NOTE]
>  Per impostare il <xref:System.Web.UI.WebControls.WebControl.Width%2A> tipo di proprietà in modo dichiarativo a un'unità diversa da quella predefinita di `Pixel`, è necessario creare un nuovo tipo di unità specifico per il tipo di unità desiderato. Ad esempio, per impostare un controllo <xref:System.Web.UI.WebControls.WebControl.Width%2A> proprietà su un valore percentuale pari a 100, è possibile eseguire le operazioni seguenti:  
>   
>  `myWebControl.width = Unit.Percentage(100);`  
>   
>  Per ulteriori informazioni sui tipi di unità disponibile per il <xref:System.Web.UI.WebControls.WebControl.Width%2A> proprietà, vedere la <xref:System.Web.UI.WebControls.Unit> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare in modo dichiarativo il <xref:System.Web.UI.WebControls.WebControl.Width%2A> proprietà del <xref:System.Web.UI.WebControls.Table> controllo ereditato dalla <xref:System.Web.UI.WebControls.WebControl> classe di base.  
  
 [!code-aspx-csharp[Classic WebControl.Width Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Width Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Width Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">È stato specificato un valore negativo per la larghezza del controllo server Web.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
  </Members>
</Type>