<Type Name="LinqDataSourceDeleteEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ccde8e297e7fa550eadd02196d38705cb8e4a6a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30596715" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceDeleteEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceDeleteEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceDeleteEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce dati per l'evento <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> oggetto viene passato a un gestore per il <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> evento. Il <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> proprietà contiene i dati che verranno eliminati.  
  
 Se l'oggetto che rappresenta l'origine dati genera un'eccezione di convalida prima di eliminare i dati, il <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> proprietà contiene un'istanza di <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> classe. È possibile recuperare tutte le eccezioni di convalida tramite il <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> proprietà. Se non viene generata alcuna eccezione di convalida, il <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> contiene proprietà `null`. Se si gestiscono le eccezioni di convalida e non si desidera che l'eccezione venga generata nuovamente, impostare il <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> proprietà `true`.  
  
 Creare un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> evento per convalidare i dati, esaminare gli errori di convalida della classe di dati o annullare l'operazione di eliminazione. Per annullare l'operazione di eliminazione, impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true`.  
  
 Per impostazione predefinita, il <xref:System.Web.UI.WebControls.LinqDataSource> controllo Archivia i valori originali dell'origine dati nella visualizzazione stato della pagina Web, ad eccezione di quelli il cui <xref:System.Data.Linq.Mapping.ColumnAttribute> attributo è contrassegnato come `UpdateCheck.Never`. LINQ to SQL controlla automaticamente l'integrità dei dati prima di eliminare i dati. Questa operazione, confrontando i valori correnti dell'origine dati con i valori originali che vengono archiviati nello stato di visualizzazione. È possibile eseguire la convalida dei dati aggiuntivi tramite la creazione di un gestore per il <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> evento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come annullare l'operazione di eliminazione in base a una proprietà di <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> proprietà e un valore dalla pagina Web. Nell'esempio, gli utenti devono selezionare un <xref:System.Web.UI.WebControls.CheckBox> record di controllo per confermare che si desidera eliminare un prodotto quando il relativo `OnSale` è impostata su `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (object originalObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Object ^ originalObject);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject">Oggetto del tipo specificato nella proprietà <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> che contiene i dati da eliminare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">L’eccezione che si è verificata durante la convalida dei dati da eliminare.</param>
        <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> con l'eccezione specificata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l’eccezione generata durante la convalida dei dati prima dell'operazione di eliminazione.</summary>
        <value>L’eccezione, se si verifica un errore; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se prima di eseguita l'operazione di eliminazione, viene generata un'eccezione di convalida, l'eccezione viene archiviata nella <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> proprietà. In un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> evento, è possibile recuperare l'eccezione tramite la <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'eccezione è stata gestita e non deve essere nuovamente generata.</summary>
        <value>
          <see langword="true" /> se l'eccezione è stata gestita; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> evento per esaminare le eccezioni di convalida che sono state generate prima l'operazione di eliminazione. Se si gestisce l'eccezione e non si desidera che venga generata nuovamente, impostare il <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> proprietà `true`. Se non si imposta la <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> proprietà `true`, l'eccezione verrà propagata al gestore dell'evento successivo nello stack di chiamate.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto che rappresenta i dati da eliminare.</summary>
        <value>Oggetto del tipo specificato nella proprietà <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> che contiene i dati da eliminare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> proprietà per interagire con i dati prima che venga eliminato. È possibile convalidare i dati oppure è possibile annullare l'evento impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true`. È possibile modificare il record eliminare modificando i valori dell'oggetto nel <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come annullare l'operazione di eliminazione in base a una proprietà di <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> proprietà e un valore dalla pagina Web. Nell'esempio, gli utenti devono selezionare un <xref:System.Web.UI.WebControls.CheckBox> record di controllo per confermare che si desidera eliminare un prodotto quando il relativo `OnSale` è impostata su `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>