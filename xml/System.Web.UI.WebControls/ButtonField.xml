<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="967d641d860743b22c8335cfdab7069d12e7afe9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36384210" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <TypeSignature Language="F#" Value="type ButtonField = class&#xA;    inherit ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un campo visualizzato come pulsante in un controllo associato a dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ButtonField> classe viene utilizzata da tutti i controlli associati a dati (ad esempio <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>) per visualizzare un pulsante per ogni record viene visualizzata. Il <xref:System.Web.UI.WebControls.ButtonField> oggetto viene visualizzato in modo diverso a seconda del controllo associato a dati in cui viene utilizzato. Ad esempio, il <xref:System.Web.UI.WebControls.GridView> controllo viene visualizzata una <xref:System.Web.UI.WebControls.ButtonField> oggetto come una colonna, mentre il <xref:System.Web.UI.WebControls.DetailsView> controllo lo visualizza in una riga.  
  
 Fare clic su un pulsante in un campo pulsante genera l'evento di comando del controllo associato a dati padre. È possibile fornire una routine personalizzata da eseguire quando viene premuto un pulsante di comando, fornendo un gestore eventi per l'evento di comando.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.GridView> controllo genera il <xref:System.Web.UI.WebControls.GridView.RowCommand> evento, mentre il <xref:System.Web.UI.WebControls.DetailsView> controllare genera il <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> evento.  
  
 Per determinare l'indice del record che genera l'evento di comando, utilizzare il <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> proprietà dell'argomento dell'evento che viene passata all'evento di comando per il controllo associato a dati. Il <xref:System.Web.UI.WebControls.ButtonField> classe popola automaticamente la <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> proprietà con il valore di indice appropriato.  
  
 Per specificare il tipo di pulsante per visualizzare, utilizzare il <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> proprietà. Quando si visualizza un pulsante di comando o di collegamento, utilizzare il <xref:System.Web.UI.WebControls.ButtonField.Text%2A> proprietà per specificare la didascalia da visualizzare nei pulsanti.  
  
> [!NOTE]
>  Se si imposta la <xref:System.Web.UI.WebControls.ButtonField.Text%2A> proprietà, tutti i pulsanti un <xref:System.Web.UI.WebControls.ButtonField> condividono la stessa didascalia.  
  
 In alternativa, è possibile associare il <xref:System.Web.UI.WebControls.ButtonField> oggetto a un campo in un'origine dati. In questo modo è possibile visualizzare diversi didascalie per i pulsanti di <xref:System.Web.UI.WebControls.ButtonField> oggetto. I valori presenti nel campo specificato sono utilizzati per le didascalie dei pulsanti. Impostare il <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> proprietà da associare un <xref:System.Web.UI.WebControls.ButtonField> oggetto a un campo in un'origine dati.  
  
 Quando si visualizza un pulsante immagine, utilizzare il <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> proprietà per specificare l'immagine da visualizzare per i pulsanti di <xref:System.Web.UI.WebControls.ButtonField> oggetto.  
  
> [!NOTE]
>  Tutti i pulsanti in una <xref:System.Web.UI.WebControls.ButtonField> oggetto condividono la stessa immagine.  
  
 È possibile nascondere una <xref:System.Web.UI.WebControls.ButtonField> oggetto in un controllo associato a dati impostando il <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> proprietà `false`.  
  
 Il <xref:System.Web.UI.WebControls.ButtonField> oggetto consente di personalizzare le sezioni di intestazione e piè di pagina. Per visualizzare una didascalia nella sezione di intestazione o piè di pagina, impostare il <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> o <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> proprietà, rispettivamente. Anziché visualizzare il testo nella sezione di intestazione, è possibile visualizzare un'immagine impostando il <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> proprietà. Per nascondere la sezione di intestazione in un <xref:System.Web.UI.WebControls.ButtonField> dell'oggetto, impostare il <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> proprietà `false`.  
  
> [!NOTE]
>  Alcuni controlli associati a dati (ad esempio il <xref:System.Web.UI.WebControls.GridView> controllo) possono visualizzare o nascondere solo l'intera sezione di intestazione del controllo. Questi controlli associati a dati non supportano il <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> proprietà per un singolo campo pulsante. Per mostrare o nascondere l'intera sezione di intestazione di un controllo associato a dati (se disponibile), utilizzare il `ShowHeader` proprietà per il controllo.  
  
 È anche possibile personalizzare l'aspetto del <xref:System.Web.UI.WebControls.ButtonField> oggetto (colore carattere, colore di sfondo e così via) impostando le proprietà di stile per le diverse parti del campo. Nella tabella seguente sono elencate le proprietà di stile diverso.  
  
|Proprietà di stile|Le impostazioni di stile per|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|I controlli del server Web figlio il <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|La sezione di piè di pagina del <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|La sezione dell'intestazione di <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Gli elementi di dati nel <xref:System.Web.UI.WebControls.ButtonField>.|  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ButtonField> dell'oggetto per visualizzare una colonna di pulsanti di comando in un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A> costruttore per inizializzare una nuova istanza della <xref:System.Web.UI.WebControls.ButtonField> classe. Questo costruttore viene comunemente utilizzato quando si aggiungono campi a un controllo associato a dati creato dinamicamente.  
  
 Per aggiungere un <xref:System.Web.UI.WebControls.ButtonField> dell'oggetto in modo dinamico a un controllo associato a dati, creare un nuovo <xref:System.Web.UI.WebControls.ButtonField> dell'oggetto, impostarne le proprietà e quindi aggiungerlo alla raccolta di campi per il controllo associato a dati. Ad esempio, se si utilizza il <xref:System.Web.UI.WebControls.GridView> di controllo, aggiungere il <xref:System.Web.UI.WebControls.ButtonField> dell'oggetto per il <xref:System.Web.UI.WebControls.GridView.Columns%2A> insieme.  
  
> [!NOTE]
>  Anche se è possibile aggiungere campi in modo dinamico a un controllo associato a dati, campi devono essere dichiarati in modo statico e quindi visualizzati o nascosti, come appropriato. Dichiarazione di tutti i campi in modo statico riduce le dimensioni dello stato di visualizzazione per il controllo associato a dati padre.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il costruttore m:System.Web.UI.WebControls.ButtonField. # ctor per aggiungere un <xref:System.Web.UI.WebControls.ButtonField> dell'oggetto in modo dinamico a un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa che rappresenta l'azione da eseguire quando si fa clic su un pulsante in un oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Nome dell'azione da eseguire quando si fa clic su un pulsante nell'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> proprietà per associare un nome di comando, ad esempio `"Add"` oppure `"Remove"`, con i pulsanti nel <xref:System.Web.UI.WebControls.ButtonField> oggetto. È possibile impostare il <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> proprietà per qualsiasi stringa che identifica l'azione da eseguire quando viene scelto il pulsante di comando. È possibile quindi a livello di programmazione determinare il nome del comando in un gestore eventi ed eseguire le azioni appropriate.  
  
> [!NOTE]
>  Tutti i pulsanti in una <xref:System.Web.UI.WebControls.ButtonField> oggetto condividono lo stesso nome di comando.  
  
 Controlli con associazione a dati riconoscono alcuni nomi di comando e automaticamente generano e gestiscono gli eventi appropriati per il controllo. Vengono riconosciuti i nomi dei comandi seguenti:  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 Per richiamare il paging, impostare il <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> al `"Page"` e il <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> dell'oggetto contenuto <xref:System.Web.UI.WebControls.Button> il controllo a `"First"`, `"Last"`, `"Prev"`, `"Next"`, o un numero di pagina. Tuttavia, poiché il <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> per un <xref:System.Web.UI.WebControls.ButtonField> controllo è sempre l'indice di riga integer, un <xref:System.Web.UI.WebControls.ButtonField> controllo non è adatto per richiamare il paging. Analogamente, mentre è possibile richiamare l'ordinamento impostando il <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> al `"Sort"`, la <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> proprietà per un <xref:System.Web.UI.WebControls.ButtonField> controllo è sempre l'indice di riga integer. Per questo motivo, un <xref:System.Web.UI.WebControls.ButtonField> controllo non è adatto per richiamare l'ordinamento. Per personalizzato i nomi di comando, ad esempio `"Add"` e `"Remove"`, è necessario scrivere il codice dell'evento per controllare il nome di comando, eseguire un'azione personalizzata. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.DataControlCommands>.  
  
> [!NOTE]
>  Non tutti i nomi dei comandi sono riconosciuti da tutti i controlli associati a dati. Ad esempio `"New"` non è riconosciuto dal <xref:System.Web.UI.WebControls.GridView> controllo e `"Select"` non è riconosciuto dal <xref:System.Web.UI.WebControls.DetailsView> controllo.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> proprietà per specificare un nome di comando per i pulsanti in una <xref:System.Web.UI.WebControls.ButtonField> oggetto di un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="buttonField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Oggetto <see cref="T:System.Web.UI.WebControls.DataControlField" /> in cui copiare le proprietà dell'oggetto corrente <see cref="T:System.Web.UI.WebControls.ButtonField" />.</param>
        <summary>Copia le proprietà dell'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" /> corrente nell'oggetto <see cref="T:System.Web.UI.WebControls.DataControlField" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A> è un metodo helper che viene utilizzato il <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> metodo per copiare le proprietà dell'oggetto corrente <xref:System.Web.UI.WebControls.ButtonFieldBase>-oggetto derivato dal <xref:System.Web.UI.WebControls.DataControlField> oggetto creato tramite il <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> (metodo).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metodo in una classe derivata, chiamare il <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metodo della classe di base per assicurarsi di copiare tutte le proprietà dell'oggetto.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="buttonField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea e restituisce una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <returns>Nuova istanza della classe <see cref="T:System.Web.UI.WebControls.ButtonField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A> è un metodo helper che viene utilizzato il <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> metodo della classe di base per creare un oggetto vuoto <xref:System.Web.UI.WebControls.ButtonField> oggetto da cui copiare le proprietà dell'oggetto corrente <xref:System.Web.UI.WebControls.ButtonField>-oggetto derivato.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Eseguire l'override di <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> per restituire una nuova istanza della classe derivata. Non chiamare il <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> metodo della classe base.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del campo di dati per cui il valore è associato alla proprietà <see cref="P:System.Web.UI.WebControls.Button.Text" /> del controllo <see cref="T:System.Web.UI.WebControls.Button" /> sottoposto a rendering dall'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Nome del campo da associare all'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" />. Il valore predefinito è una stringa vuota (""), che indica che la proprietà <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" /> non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> proprietà di un <xref:System.Web.UI.WebControls.ButtonField> oggetto viene impostato per il <xref:System.Web.UI.WebControls.ButtonType.Button> o <xref:System.Web.UI.WebControls.ButtonType.Link> valore, utilizzare il <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> proprietà per specificare il nome del campo da associare al <xref:System.Web.UI.WebControls.ButtonField> oggetto. I valori del campo vengono quindi visualizzati come testo per i pulsanti nel <xref:System.Web.UI.WebControls.ButtonField> oggetto. Facoltativamente, è possibile formattare il testo visualizzato impostando il <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> proprietà.  
  
 Anziché utilizzare il <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> proprietà da associare un <xref:System.Web.UI.WebControls.ButtonField> dell'oggetto a un campo da un'origine dati, è possibile utilizzare il <xref:System.Web.UI.WebControls.ButtonField.Text%2A> proprietà per visualizzare testo statico per il testo dei pulsanti nel <xref:System.Web.UI.WebControls.ButtonField> oggetto. Quando il <xref:System.Web.UI.WebControls.ButtonField.Text%2A> proprietà viene utilizzata, ogni pulsante condivide la stessa didascalia.  
  
> [!NOTE]
>  Se il <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> e <xref:System.Web.UI.WebControls.ButtonField.Text%2A> sono entrambe impostate, il <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> proprietà ha la precedenza.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> proprietà per specificare il campo da visualizzare un <xref:System.Web.UI.WebControls.ButtonField> colonna di un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa in cui è specificato il formato di visualizzazione per il valore del campo.</summary>
        <value>Stringa di formato in cui è specificato il formato di visualizzazione per il valore del campo. Il valore predefinito è una stringa vuota (""), a indicare che al valore di campo non è stata applicata alcuna formattazione speciale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> proprietà per specificare un formato di visualizzazione personalizzato per i valori che vengono visualizzati nel <xref:System.Web.UI.WebControls.ButtonField> oggetto. Se il <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> non è impostata, il valore per il campo viene visualizzato senza alcuna formattazione speciale.  
  
> [!NOTE]
>  La stringa di formato viene applicata solo quando il <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> è impostata.  
  
 La stringa di formato può essere qualsiasi valore letterale stringa e in genere include un segnaposto per il valore per il campo. Ad esempio, nella stringa di formato `"Item Value: {0}"`, il `{0}` segnaposto viene sostituito con il valore per il campo quando viene visualizzato nel <xref:System.Web.UI.WebControls.ButtonField> oggetto. Il resto della stringa di formato viene visualizzato come testo letterale.  
  
> [!NOTE]
>  Se la stringa di formato non include un segnaposto, il valore per il campo dall'origine dati non sia presenti il testo visualizzato finale.  
  
 Il segnaposto è costituito da due parti separate da punti e racchiuse tra parentesi graffe, nel formato { `A` : `Bxx` }. Il valore prima dei due punti (`A` nell'esempio generale) specifica l'indice del valore del campo in un elenco di parametri in base zero.  
  
> [!NOTE]
>  Ciò `A` parametro fa parte della sintassi di formattazione. Essendo presente un solo valore di campo in ogni cella, questo valore può essere impostato solo su 0.  
  
 I due punti e i valori dopo i due punti sono facoltativi. Il carattere dopo i due punti (`B` nell'esempio generale) specifica il formato in cui si desidera visualizzare il valore. Nella tabella seguente sono elencati i formati comuni.  
  
|Formato carattere|Descrizione|  
|----------------------|-----------------|  
|`C`|Visualizza i valori numerici in formato di valuta.|  
|`D`|Consente di visualizzare i valori numerici in formato decimale.|  
|`E`|Consente di visualizzare i valori numerici in formato scientifico (esponenziale).|  
|`F`|Visualizza i valori numerici in formato fisso.|  
|`G`|Visualizza i valori numerici in formato generale.|  
|`N`|Visualizza i valori numerici in formato numerico.|  
|`X`|Consente di visualizzare i valori numerici in formato esadecimale.|  
  
> [!NOTE]
>  Ad eccezione di `X`, i caratteri di formato non sono più distinzione maiuscole / minuscole. Il `X` formato carattere consente di visualizzare i caratteri esadecimali nel caso in cui è specificato.  
  
 Il valore dopo il carattere di formato (`xx` nell'esempio generale) specifica il numero di cifre significative o posizioni decimali da visualizzare. Ad esempio, la stringa di formato `"{0:F2}"` viene visualizzato un numero a virgola fissa con due cifre decimali.  
  
 Per altre informazioni sulla formattazione delle stringhe, vedere [Formatting Types](~/docs/standard/base-types/formatting-types.md) (Formattazione dei tipi).  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> proprietà per specificare un formato di visualizzazione personalizzato per i valori di un campo.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonField.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">Valore di campo da formattare.</param>
        <summary>Esegue la formattazione del valore di campo specificato per una cella nell'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <returns>Valore di campo convertito nel formato specificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A> è un metodo helper che viene utilizzato per trasformare un valore del campo nel formato specificato per il <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende la <see cref="T:System.Web.UI.WebControls.ButtonField" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" /> metodo per eseguire una routine personalizzata.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'immagine da visualizzare per ciascun pulsante nell'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Immagine da visualizzare per ciascun pulsante nell'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" />. Il valore predefinito è una stringa vuota (""), che indica che la proprietà <see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" /> non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> proprietà di un <xref:System.Web.UI.WebControls.ButtonField> oggetto viene impostato per il <xref:System.Web.UI.WebControls.ButtonType.Image> valore, utilizzare il <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> proprietà per specificare l'immagine da visualizzare per ogni pulsante. Questa immagine può essere in qualsiasi formato di file (con estensione jpg, GIF, bmp e così via), purché il browser client supporti il formato di.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> proprietà per specificare un'immagine da visualizzare per ogni pulsante di <xref:System.Web.UI.WebControls.ButtonField> oggetto. Per questo esempio di codice visualizzare, è necessario fornire la propria immagine.  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="buttonField.Initialize (sortingEnabled, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">
          <see langword="true" /> per abilitare l'ordinamento; in caso contrario, <see langword="false" />.</param>
        <param name="control">Controllo dati proprietario dell'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" />.</param>
        <summary>Inizializza l'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" /> corrente.</summary>
        <returns>
          <see langword="false" /> per indicare che non è necessario riassociare il controllo ai dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> viene chiamato dal controllo dei dati con cui il <xref:System.Web.UI.WebControls.ButtonField> oggetto è associato per eseguire l'inizializzazione dell'oggetto di base per le istanze del campo, prima che il campo venga aggiunto a una raccolta di righe. Controlli di dati, ad esempio <xref:System.Web.UI.WebControls.DetailsView> e <xref:System.Web.UI.WebControls.GridView>, chiamare il <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> metodo in loro `CreateChildControls` metodi prima degli altri metodi, ad esempio `CreateRow`, vengono chiamati per creare righe specifiche con i dati.  
  
 Chiamare il <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> metodo quando si scrive un controllo associato a dati personalizzato che usa <xref:System.Web.UI.WebControls.TableCell> oggetti per eseguire l'inizializzazione di base per un <xref:System.Web.UI.WebControls.ButtonField> oggetto. Implementare questo metodo se il <xref:System.Web.UI.WebControls.ButtonField>-tipo derivato richiede qualsiasi inizializzazione dell'oggetto prima di compilare <xref:System.Web.UI.WebControls.TableCell> gli oggetti con i dati o controlli il <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> metodo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È necessario eseguire l'override di <see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" /> metodo e restituire <see langword="true" />, se il campo richiede che l'associazione dati sia eseguita durante il postback in ordine per il campo corretto funzionamento.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="buttonField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Oggetto <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> da inizializzare.</param>
        <param name="cellType">Valore <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> che indica il tipo di riga (di intestazione, del piè di pagina o di dati).</param>
        <param name="rowState">Uno dei valori di <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <param name="rowIndex">L'indice in base zero della riga.</param>
        <summary>Inizializza l'oggetto <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> specificato nello stato della riga specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> metodo consente di creare il tipo di pulsante specificato dal <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> proprietà e lo aggiunge al <xref:System.Web.UI.Control.Controls%2A> raccolta del <xref:System.Web.UI.WebControls.DataControlFieldCell> oggetto. Il <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> proprietà del <xref:System.Web.UI.WebControls.Button> NFS è impostata su `rowIndex`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la didascalia statica visualizzata per ciascun pulsante nell'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Didascalia statica visualizzata per ciascun pulsante nell'oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" />. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> proprietà di un <xref:System.Web.UI.WebControls.ButtonField> oggetto viene impostato per il <xref:System.Web.UI.WebControls.ButtonType.Button> o <xref:System.Web.UI.WebControls.ButtonType.Link> valore, utilizzare il <xref:System.Web.UI.WebControls.ButtonField.Text%2A> proprietà per visualizzare testo statico per la didascalia dei pulsanti nel <xref:System.Web.UI.WebControls.ButtonField>. Ogni pulsante condivide la stessa didascalia.  
  
 Anziché utilizzare il <xref:System.Web.UI.WebControls.ButtonField.Text%2A> proprietà per visualizzare testo statico in un <xref:System.Web.UI.WebControls.ButtonField> dell'oggetto, è possibile usare i <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> proprietà da associare il <xref:System.Web.UI.WebControls.ButtonField> a un campo in un'origine dati. I valori del campo vengono quindi visualizzati come didascalia dei pulsanti.  
  
> [!NOTE]
>  Se il <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> e <xref:System.Web.UI.WebControls.ButtonField.Text%2A> sono entrambe impostate, il <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> proprietà ha la precedenza.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.ButtonField.Text%2A> proprietà per specificare la didascalia da visualizzare per ogni pulsante in un <xref:System.Web.UI.WebControls.ButtonField> oggetto.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="buttonField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se i controlli contenuti in un oggetto <see cref="T:System.Web.UI.WebControls.ButtonField" /> supportano i callback.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> è un metodo helper che consente di determinare se i controlli che sono contenuti in un <xref:System.Web.UI.WebControls.ButtonField> supportano i callback dell'oggetto. Questo metodo viene implementato come un metodo vuoto (un metodo che non contiene alcun codice) per indicare che sono supportati i callback.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> metodo viene usato principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le classi che derivano dal <see cref="T:System.Web.UI.WebControls.BoundField" /> classe può eseguire l'override di <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> metodo per indicare se i controlli contenuti in base al campo supportano i callback. Per indicare che sono supportati i callback, implementare il <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> metodo come metodo vuoto che non viene generata un'eccezione; in caso contrario, generare un'eccezione con un messaggio utile che descrive perché i callback non sono supportati.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>