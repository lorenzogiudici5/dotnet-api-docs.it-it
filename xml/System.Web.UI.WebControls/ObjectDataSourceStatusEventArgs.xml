<Type Name="ObjectDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e47f0857a8d0623beb44d99fad55c61c8e7f6ce" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36380604" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i dati per gli eventi <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" /> e <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> del controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> classe viene utilizzata nel <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> metodi per fornire accesso ai parametri di output, i valori restituiti e le eccezioni generate dal metodo che viene chiamato dal <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Questi è possibile accedere attraverso il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> proprietà, rispettivamente. Tramite l'aggiunta di un delegato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> degli eventi, è possibile esaminare i dati e qualsiasi elaborazione post aggiuntivi che è obbligatorio.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo espone molti eventi che è possibile gestire per utilizzare l'oggetto business sottostante in diversi momenti nel ciclo di vita. Nella tabella seguente elenca gli eventi e associato <xref:System.EventArgs> classi e i delegati del gestore eventi.  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Si verifica immediatamente prima che la creazione dell'istanza dell'oggetto business.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Si verifica immediatamente dopo la creazione dell'istanza dell'oggetto business.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> Si verifica prima che i dati vengono recuperati.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> e <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Vengono eseguite prima di un'operazione di inserimento, aggiornamento o eliminazione viene eseguita.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> Si verifica dopo che i dati vengono recuperati.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> e <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Si verificano dopo l'inserimento, aggiornamento o l'operazione di eliminazione viene completata.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Si verifica prima che venga eliminato un oggetto business.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Il secondo esempio di codice fornisce un oggetto business di livello intermedio di esempio che utilizza il primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Il <xref:System.Web.UI.WebControls.GridView> vengono inizialmente visualizzate sia un set di tutti i dipendenti, utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà per recuperare i dati dal `EmployeeLogic` oggetto. Poiché il <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> è impostata su `true`, la <xref:System.Web.UI.WebControls.GridView> controllare automaticamente consente di visualizzare un **eliminare** pulsante.  
  
 Se si fa clic il **eliminare** pulsante, la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> azione viene eseguita utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà e i parametri specificati in modo il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme. In questo esempio di codice, un parametro è specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme che corrisponde all'ID del dipendente. Infatti, anche se l'ID è incluso nel <xref:System.Windows.Forms.DataGridView.Columns%2A> insieme come una <xref:System.Web.UI.WebControls.BoundField> dell'oggetto, verrà passato sotto forma di stringa per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Aggiungendo l'oggetto in modo esplicito il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme con un <xref:System.Web.UI.WebControls.Parameter.Type%2A> impostata sul <xref:System.TypeCode.Int32> valore, l'applicazione superi correttamente dal <xref:System.Web.UI.WebControls.ObjectDataSource> al metodo come un numero intero anziché come stringa.  
  
 In questo esempio di codice vengono eseguite anche alcuni passaggi di pre-elaborazione e post-elaborazione. Il `NorthwindEmployeeDeleting` delegato viene chiamato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento prima che il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> azione viene eseguita e il `NorthwindEmployeeDeleted` delegato viene chiamato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento dopo il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> azione è stata completata, per gestire qualunque eccezioni che potrebbero essersi verificati. Il `NorthwindEmployeeDeleted` delegato accede alle eventuali eccezioni generate dall'oggetto business che utilizza il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> oggetto. In questo esempio, se un `NorthwindDataException` viene generata un'eccezione, viene gestita da questo delegato.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Esempio di codice seguente fornisce un oggetto business di livello intermedio di esempio che utilizza l'esempio di codice precedente. L'elenco seguente descrive le due classi principali che sono definite nell'esempio di codice:  
  
-   Il `EmployeeLogic` classe è una classe che non mantengono lo stato e incapsula la logica di business.  
  
-   Il `NorthwindEmployee` classe è una classe modello che contiene solo la funzionalità di base che è necessario per caricare e mantenere i dati dal livello dati.  
  
 Inoltre, un `NorthwindDataException` classe viene fornita per praticità.  
  
 Questo set di classi di esempio viene utilizzato il database Northwind Traders, ovvero un database di esempio che è disponibile in Microsoft SQL Server e Microsoft Access. Per un esempio funzionante completo, è necessario compilare questo codice sotto forma di libreria e quindi utilizzare queste classi da una pagina ASP. La pagina ASP che viene fornita nell'esempio precedente è configurata per l'utilizzo di questa libreria di classi.  Il `UpdateEmployeeInfo` (metodo) non è completamente implementato, pertanto non verranno inseriti i dati nel database di Northwind Traders quando si utilizza questo esempio.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnValue As Object, outputParameters As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="returnValue">Oggetto che rappresenta un valore restituito per l'operazione completa del database.</param>
        <param name="outputParameters">Dizionario <see cref="T:System.Collections.IDictionary" /> di coppie nome/valore di oggetti parametri.</param>
        <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> con i parametri di output specificati e il valore restituito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `returnValue` parametro può essere qualsiasi oggetto che viene restituito da una chiamata al metodo di dati dell'oggetto business. Il `outputParameters` parametro è un <xref:System.Collections.IDictionary> raccolta di coppie nome/valore che corrispondono a quelle nella firma del metodo e vengono passati per riferimento.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary * Exception -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="returnValue">Oggetto che rappresenta un valore restituito per l'operazione completa del database.</param>
        <param name="outputParameters">Dizionario <see cref="T:System.Collections.IDictionary" /> di coppie nome/valore di oggetti parametri.</param>
        <param name="exception">Eccezione <see cref="T:System.Exception" /> che include tutte le eccezioni interne generate durante la chiamata del metodo.</param>
        <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> con i parametri di output specificati, il valore restituito e l'eccezione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `returnValue` parametro può essere qualsiasi oggetto che viene restituito da una chiamata al metodo di dati dell'oggetto business. Il `outputParameters` parametro è un <xref:System.Collections.IDictionary> raccolta di coppie nome/valore che corrispondono a quelle nella firma del metodo e vengono passati per riferimento. Il `exception` parametro è un <xref:System.Exception> eccezione che include tutte le eccezioni generate dal metodo che viene chiamato dal <xref:System.Web.UI.WebControls.ObjectDataSource> controllo durante un'operazione di dati. Se l'eccezione non viene gestita da un <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> metodo, viene generata dal <xref:System.Web.UI.WebControls.ObjectDataSource> controllo una volta completato l'operazione di dati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di righe interessate dall'operazione di dati.</summary>
        <value>Numero di righe interessate dall'operazione di dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> valore per verificare che il numero previsto di righe è stato interessato.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un wrapper per tutte le eccezioni generate dal metodo chiamato dal controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> durante un operazione di dati.</summary>
        <value>Eccezione <see cref="T:System.Exception" /> che include tutte le eccezioni generate dall'oggetto business nella relativa proprietà <see cref="P:System.Exception.InnerException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Exception> eccezione non rappresenta l'eccezione che viene generata dal metodo di dati dell'oggetto business. È possibile utilizzare il <xref:System.Exception.InnerException%2A> proprietà per accedere all'eccezione generata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Il <xref:System.Web.UI.WebControls.GridView> vengono inizialmente visualizzate sia un set di tutti i dipendenti, utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà per recuperare i dati dal `EmployeeLogic` oggetto. Poiché il <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> è impostata su `true`, la <xref:System.Web.UI.WebControls.GridView> controllare automaticamente consente di visualizzare un **eliminare** pulsante.  
  
 Se si fa clic il **eliminare** pulsante, la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> azione viene eseguita utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà e i parametri specificati in modo il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme.  
  
 In questo esempio di codice vengono eseguite anche alcuni passaggi di pre-elaborazione e post-elaborazione. Il `NorthwindEmployeeDeleting` delegato viene chiamato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento prima che il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> azione viene eseguita e il `NorthwindEmployeeDeleted` delegato viene chiamato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento dopo il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> azione è stata completata, eseguire eventuali eccezioni. In questo esempio, se un `NorthwindDataException` viene generata un'eccezione, viene gestita dal `NorthwindEmployeeDeleted` delegare.  
  
 Per esaminare l'implementazione del `EmployeeLogic` oggetto business di livello intermedio che utilizza questo esempio di codice, vedere la panoramica della classe in <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se un'eccezione generata dall'oggetto business è stata gestita.</summary>
        <value>
          <see langword="true" /> se un'eccezione generata dall'oggetto business è stata gestita e non generata dal controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'oggetto business genera un'eccezione, il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> è impostata su `false` e l'eccezione è stato eseguito il wrapping di <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> proprietà. Se si usa un' <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> dell'oggetto, è possibile controllare il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> proprietà e gestire l'eccezione. Se si gestisce l'eccezione, impostare il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> proprietà da `true` o <xref:System.Web.UI.WebControls.ObjectDataSource> controllo verrà generata un'eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Il <xref:System.Web.UI.WebControls.GridView> vengono inizialmente visualizzate sia un set di tutti i dipendenti, utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà per recuperare i dati dal `EmployeeLogic` oggetto. Poiché il <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> è impostata su `true`, la <xref:System.Web.UI.WebControls.GridView> controllare automaticamente consente di visualizzare un **eliminare** pulsante.  
  
 Se si fa clic il **eliminare** pulsante, la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> azione viene eseguita utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà e i parametri specificati in modo il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme. In questo esempio di codice vengono eseguite anche alcuni passaggi di pre-elaborazione e post-elaborazione. Il `NorthwindEmployeeDeleting` delegato viene chiamato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento prima che il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> azione viene eseguita e il `NorthwindEmployeeDeleted` delegato viene chiamato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento dopo il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> azione è stata completata, per gestire qualunque eccezioni che potrebbero essersi verificati. In questo esempio, se un `NorthwindDataException` viene generata un'eccezione, viene gestita dal `NorthwindEmployeeDeleted` delegare.  
  
 Per esaminare l'implementazione del `EmployeeLogic` oggetto business di livello intermedio che utilizza questo esempio di codice, vedere la panoramica della classe in <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary OutputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary OutputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputParameters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ OutputParameters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputParameters : System.Collections.IDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme che contiene i parametri del metodo dell'oggetto business e i relativi valori.</summary>
        <value>Oggetto <see cref="T:System.Collections.IDictionary" /> delle coppie nome/valore che rappresentano i parametri del metodo dell'oggetto business e dei relativi valori corrispondenti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i parametri vengono passati al metodo dell'oggetto business per riferimento vengono restituiti nel <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> insieme.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore restituito dal metodo dell'oggetto business, se presente, come oggetto.</summary>
        <value>Oggetto che rappresenta il valore restituito dal metodo dell'oggetto business; in caso contrario, <see langword="null" />, se il metodo dell'oggetto business non restituisce alcun valore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> viene impostata <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> costruttore. Il valore è impostato sul valore restituito della chiamata al metodo oggetto business, che viene chiamata tramite reflection. Se il metodo di business non restituisce alcun valore (ad esempio quando restituito dal metodo di oggetto business `void`), il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> proprietà valutata a `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>