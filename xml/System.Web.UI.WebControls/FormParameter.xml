<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88237153ce4c8ace34a6d78f89772fef2d7b0878" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599445" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Associa il valore di un campo <see cref="P:System.Web.HttpRequest.Form" /> di una richiesta HTTP a un oggetto Parameter.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Web.UI.WebControls.FormParameter> classe per associare il valore di una variabile di form nel <xref:System.Web.HttpRequest.Form%2A> insieme a un parametro utilizzato in una query con parametri o un comando. I controlli associati a dati per il parametro potrebbero generare un'eccezione se un <xref:System.Web.UI.WebControls.FormParameter> è specificato, ma viene passata alcuna variabile di modulo corrispondente. Potrebbero anche non visualizzare alcun dato se la variabile di modulo viene passata non prevede alcun valore corrispondente. Impostare il <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> per evitare queste situazioni, dove appropriato.  
  
 Il <xref:System.Web.UI.WebControls.FormParameter> classe fornisce il <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> proprietà, che identifica il nome della variabile da associare, oltre a quelli ereditati dal modulo di <xref:System.Web.UI.WebControls.Parameter> classe.  
  
> [!IMPORTANT]
>  Il <xref:System.Web.UI.WebControls.FormParameter> non convalida il valore passato dall'elemento di form in alcun modo; viene utilizzato il valore non elaborato. Nella maggior parte dei casi è possibile convalidare il valore della <xref:System.Web.UI.WebControls.FormParameter> prima che venga utilizzato da un controllo origine dati gestendo un evento, ad esempio il `Selecting`, `Updating`, `Inserting`, o `Deleting` evento esposto dal controllo origine dati in uso. Se il valore del parametro non supera i test di convalida, è possibile annullare l'operazione dati impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà dell'oggetto associato <xref:System.ComponentModel.CancelEventArgs> classe `true`.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inserire dati in un database utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource> controllo e una semplice pagina Web ASP.NET. I dati correnti nella tabella di dati viene visualizzati nel <xref:System.Web.UI.WebControls.DropDownList> controllo. È possibile aggiungere nuovi record tramite l'immissione di valori di <xref:System.Web.UI.WebControls.TextBox> controlli e fare clic sul pulsante. Quando si fa clic sul pulsante, i valori specificati vengono inseriti nel database e <xref:System.Web.UI.WebControls.DropDownList> viene aggiornato.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.FormParameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza senza nome della classe <see cref="T:System.Web.UI.WebControls.FormParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Web.UI.WebControls.FormParameter> oggetto creato con il <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> costruttore viene inizializzato con i valori predefiniti per tutte le relative proprietà. Il <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> viene inizializzata su <xref:System.String.Empty?displayProperty=nameWithType>. Inoltre, il <xref:System.Web.UI.WebControls.Parameter.Name%2A> proprietà viene inizializzata su <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Type%2A> proprietà viene inizializzata su <xref:System.TypeCode.Object?displayProperty=nameWithType>, il <xref:System.Web.UI.WebControls.Parameter.Direction%2A> proprietà viene inizializzata su <xref:System.Data.ParameterDirection.Input>e il <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> proprietà viene inizializzata null (`Nothing` in Visual Basic).  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  Il <xref:System.Web.UI.WebControls.FormParameter> non convalida il valore passato dall'elemento di form in alcun modo; viene utilizzato il valore non elaborato. Nella maggior parte dei casi, è possibile convalidare il valore della <xref:System.Web.UI.WebControls.FormParameter> prima che venga utilizzato da un controllo origine dati gestendo un evento, ad esempio il `Selecting`, `Updating`, `Inserting`, o `Deleting` evento esposto dal controllo origine dati in uso. Se il valore del parametro non supera i test di convalida, è possibile annullare l'operazione dati impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà dell'oggetto associato <xref:System.ComponentModel.CancelEventArgs> classe `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">Istanza <see cref="T:System.Web.UI.WebControls.FormParameter" /> da cui viene inizializzata l'istanza corrente.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.FormParameter" /> con i valori dell'istanza specificata dal parametro <paramref name="original" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> costruttore è un `protected` costruttore di copia utilizzato per duplicare un <xref:System.Web.UI.WebControls.FormParameter> istanza. I valori del <xref:System.Web.UI.WebControls.FormParameter>, tra cui <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, e <xref:System.Web.UI.WebControls.Parameter.Type%2A> vengono trasferiti alla nuova istanza.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome del parametro.</param>
        <param name="formField">Nome della variabile di form a cui è associato l'oggetto Parameter. Il valore predefinito è <see cref="F:System.String.Empty" />.</param>
        <summary>Inizializza una nuova istanza denominata della classe <see cref="T:System.Web.UI.WebControls.FormParameter" />, utilizzando la stringa specificata per identificare il campo della variabile di form per l'associazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Web.UI.WebControls.FormParameter> oggetto creato con il <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> costruttore viene inizializzato con il nome di parametro specificato e una stringa che identifica la variabile di modulo che si associa il parametro. Il <xref:System.Web.UI.WebControls.Parameter.Type%2A> e <xref:System.Web.UI.WebControls.Parameter.Direction%2A> vengono inizializzate con i valori predefiniti.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  Il <xref:System.Web.UI.WebControls.FormParameter> non convalida il valore passato dall'elemento di form in alcun modo; viene utilizzato il valore non elaborato. Nella maggior parte dei casi, è possibile convalidare il valore della <xref:System.Web.UI.WebControls.FormParameter> prima che venga utilizzato da un controllo origine dati gestendo un evento, ad esempio il `Selecting`, `Updating`, `Inserting`, o `Deleting` evento esposto dal controllo origine dati in uso. Se il valore del parametro non supera i test di convalida, è possibile annullare l'operazione dati impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà dell'oggetto associato <xref:System.ComponentModel.CancelEventArgs> classe `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome del parametro.</param>
        <param name="dbType">Tipo di database del parametro.</param>
        <param name="formField">Nome della variabile di form a cui è associato l'oggetto Parameter.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.FormParameter" />, utilizzando la stringa specificata per identificare il campo della variabile di form per l'associazione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome del parametro.</param>
        <param name="type">Tipo rappresentato dal parametro. Il valore predefinito è <see cref="F:System.TypeCode.Object" />.</param>
        <param name="formField">Nome della variabile di form a cui è associato l'oggetto Parameter. Il valore predefinito è <see cref="F:System.String.Empty" />.</param>
        <summary>Inizializza una nuova istanza denominata e fortemente tipizzata della classe <see cref="T:System.Web.UI.WebControls.FormParameter" />, utilizzando la stringa specificata per identificare la variabile di form per l'associazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Web.UI.WebControls.FormParameter> oggetto creato con il <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> costruttore viene inizializzato con il nome del parametro specificato, <xref:System.Web.UI.WebControls.Parameter.Type%2A>e una stringa che identifica la variabile di modulo che si associa il parametro. Solo il <xref:System.Web.UI.WebControls.Parameter.Direction%2A> e <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> vengono inizializzate con i valori predefiniti.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  Il <xref:System.Web.UI.WebControls.FormParameter> non convalida il valore passato dall'elemento di form in alcun modo; viene utilizzato il valore non elaborato. Nella maggior parte dei casi, è possibile convalidare il valore della <xref:System.Web.UI.WebControls.FormParameter> prima che venga utilizzato da un controllo origine dati gestendo un evento, ad esempio il `Selecting`, `Updating`, `Inserting`, o `Deleting` evento esposto dal controllo origine dati in uso. Se il valore del parametro non supera i test di convalida, è possibile annullare l'operazione dati impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà dell'oggetto associato <xref:System.ComponentModel.CancelEventArgs> classe `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un duplicato dell'istanza <see cref="T:System.Web.UI.WebControls.FormParameter" /> corrente.</summary>
        <returns>Un oggetto <see cref="T:System.Web.UI.WebControls.FormParameter" /> che costituisce un duplicato esatto dell'oggetto corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormParameter.Clone%2A> chiamate al metodo il <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> costruttore di copia per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.FormParameter> classe con i valori dell'istanza corrente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.Web.HttpContext" /> corrente della richiesta.</param>
        <param name="control">Oggetto <see cref="T:System.Web.UI.Control" /> associato alla pagina in cui è utilizzato l'oggetto <see cref="T:System.Web.UI.WebControls.FormParameter" />.</param>
        <summary>Viene aggiornato e restituisce il valore dell'oggetto <see cref="T:System.Web.UI.WebControls.FormParameter" />.</summary>
        <returns>Un oggetto che rappresenta il valore aggiornato e corrente del parametro. Se il contesto o la richiesta è null (<see langword="Nothing" /> in Visual Basic), il metodo <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> restituisce null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormParameter> tenta di associare la variabile di form ogni volta il <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metodo viene chiamato.  
  
 Il `context` parametro viene utilizzato il <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metodo per recuperare il valore del campo modulo specificato nella richiesta. Il `control` parametro viene ignorato.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome della variabile di form a cui si associa il parametro.</summary>
        <value>Una stringa che identifica la variabile di form a cui si associa il parametro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> identifica una coppia nome/valore che viene passata il <xref:System.Web.HttpRequest.Form%2A> insieme. Mentre il <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> proprietà identifica il nome della coppia, il <xref:System.Web.UI.WebControls.FormParameter> associa al relativo valore corrispondente in fase di esecuzione. Se la coppia nome/valore di stringa della variabile modulo previsto non viene passata alla pagina Web ASP.NET nella raccolta, il <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metodo associa il parametro per il valore di <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> proprietà, se è impostato. Se il <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> non è impostata, il <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metodo non riesce ad associare il parametro a un valore.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come visualizzare i dati filtrati utilizzando un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e un <xref:System.Web.UI.WebControls.FormParameter> per recuperare dati da un oggetto business di livello intermedio e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare i risultati.  
  
 L'esempio di codice è costituito un <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.GridView> (controllo), il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e un pulsante di invio. Per impostazione predefinita, il <xref:System.Web.UI.WebControls.TextBox> viene popolato con il nome di uno dei dipendenti di Northwind Traders. Il <xref:System.Web.UI.WebControls.GridView> Visualizza le informazioni sul dipendente identificato dal nome della parentesi di <xref:System.Web.UI.WebControls.TextBox>. Per recuperare i dati in un altro dipendente, immettere il nome completo del dipendente nel <xref:System.Web.UI.WebControls.TextBox> e fare clic sul pulsante.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà specifica un'espressione utilizzata per filtrare i dati recuperati tramite il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>. Questa proprietà Usa i segnaposto dei parametri che vengono valutati per i parametri contenuti nella <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> insieme. In questo esempio, il segnaposto del parametro è un <xref:System.Web.UI.WebControls.FormParameter> associato al valore del <xref:System.Web.UI.WebControls.TextBox> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato l'oggetto business di livello intermedio che utilizza l'esempio di codice precedente. In questo esempio è costituito da due classi base: il `EmployeeLogic` classe incapsula la logica di business e `NorthwindEmployee` classe è una classe modello che contiene solo la funzionalità di base necessaria per caricare e mantenere i dati dal livello dati. Per semplicità, il `EmployeeLogic` classe crea un set statico di dati, anziché recuperare i dati da un livello dati. È inoltre utile per questo esempio, poiché l'esempio si basa su all'utente di specificare il nome completo di un dipendente di Northwind Traders per illustrare il filtro. Per un esempio funzionante completo, è necessario compilare e utilizzare queste classi con gli esempi di codice ASP.NET forniti.  
  
> [!IMPORTANT]
>  Il <xref:System.Web.UI.WebControls.FormParameter> non convalida il valore passato dall'elemento di form in alcun modo; viene utilizzato il valore non elaborato. Nella maggior parte dei casi, è possibile convalidare il valore della <xref:System.Web.UI.WebControls.FormParameter> prima che venga utilizzato da un controllo origine dati gestendo un evento, ad esempio il `Selecting`, `Updating`, `Inserting`, o `Deleting` evento esposto dal controllo origine dati in uso. Se il valore del parametro non supera i test di convalida, è possibile annullare l'operazione dati impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà dell'oggetto associato <xref:System.ComponentModel.CancelEventArgs> classe `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'input del client nel parametro viene convalidato.</summary>
        <value>
          <see langword="true" /> se l'input del client viene convalidato; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>