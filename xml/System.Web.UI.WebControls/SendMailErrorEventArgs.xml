<Type Name="SendMailErrorEventArgs" FullName="System.Web.UI.WebControls.SendMailErrorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71540fca903b9568b09aa47c0ad13790c2047d5e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendMailErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SendMailErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMailErrorEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i dati per l'evento <see langword="SendMailError" /> di controlli quali <see cref="T:System.Web.UI.WebControls.ChangePassword" />, <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> e <see cref="T:System.Web.UI.WebControls.PasswordRecovery" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> oggetto contiene un messaggio di errore generato dal provider di posta SMTP quando non riesce a inviare un messaggio di posta elettronica di <xref:System.Web.UI.WebControls.ChangePassword> (controllo), o <xref:System.Web.UI.WebControls.CreateUserWizard> controllo. In tal caso, il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> l'oggetto viene inviato per la <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>.  
  
 Creare un <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> delegato per gestire l'evento. La gestione dell'evento consente l'applicazione Web di continuare l'esecuzione anche se si è verificata un'eccezione. Ciò è utile quando non è fondamentale per inviare un messaggio di posta elettronica. Ad esempio, se l'eccezione si verifica quando un utente è una procedura guidata più passaggi, può essere utile registrare l'errore, visualizzare un messaggio informativo all'utente e consentire all'utente di completare la procedura guidata.  
  
 Esaminare il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> proprietà per determinare la causa effettiva dell'eccezione. La causa più comune per l'eccezione è un errore di configurazione nel [ &lt;smtp&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) del file di configurazione del computer. Sebbene un errore come questo viene in genere individuato durante lo sviluppo e il debug di un'applicazione, i server di posta elettronica possono causare l'interruzione imprevista in un ambiente di produzione ed è necessario determinare se si desidera che l'intera applicazione esito negativo in questa situazione. In caso contrario, la gestione dell'evento consente all'applicazione di continuare.  
  
 È necessario impostare il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> proprietà `true` per segnalare che l'eccezione è stata gestita; in caso contrario, l'eccezione viene generata di nuovo e includerà il messaggio di errore e stack di chiamata originale.  
  
 Se non si crea un gestore eventi per il <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> evento, o se si crea un gestore eventi, ma lasciare il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> proprietà impostata su `false`, l'applicazione Web verrà arrestata se si verifica un errore durante l'invio di un messaggio di posta elettronica e verrà ASP.NET visualizzare un messaggio di errore.  
  
 Il <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> metodo consente inoltre alle classi derivate di gestire l'evento, anziché questa effettuati da parte di <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>. Questa è la tecnica consigliata per la gestione dell'evento in una classe derivata da <xref:System.Web.UI.WebControls.ChangePassword> o <xref:System.Web.UI.WebControls.CreateUserWizard>.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [Server di gestione di eventi in ASP.NET Web Form Pages](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come una pagina ASP.NET che usa un <xref:System.Web.UI.WebControls.ChangePassword> controllo Web e include un gestore eventi per il <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> evento denominato SendMailError. L'esempio di codice si presuppone che il sito Web ASP.NET è stato configurato per utilizzare l'appartenenza ASP.NET e autenticazione basata su form e che è stato creato un utente il cui nome e la password sono noti all'utente. Per ulteriori informazioni, vedere [How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Se la modifica della password ha esito positivo, il codice di `SendingMail` gestore eventi tenta di inviare un messaggio di posta elettronica all'utente di confermare la modifica. SMTP deve essere già configurato nel server in modo che per eseguire questo esempio di codice. Per informazioni su come configurare un server SMTP, vedere [NIB: procedura: installare e configurare i server virtuali SMTP in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Ai fini di questo esempio, non è necessario configurare un server SMTP. Nell'esempio viene creato per verificare la presenza di un errore inviare un messaggio di posta elettronica.  
  
 Se un server di posta elettronica non è configurato correttamente o si verifica un altro errore e non può essere inviato il messaggio di posta elettronica, il `SendMailError` funzione viene chiamata. Viene visualizzato un messaggio all'utente. Inoltre, viene registrato un evento nel registro eventi applicazioni di Windows con il presupposto che esista un'origine eventi denominata MySamplesSite già. Vedere l'esempio di codice seguente per creare l'origine evento specificata. Per ulteriori informazioni sulla creazione di un'origine eventi, vedere [Server di gestione di eventi in ASP.NET Web Form Pages](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> proprietà del <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> oggetto è impostato su `true` per indicare che l'errore è stato gestito.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Se si desidera aggiungere a livello di codice l'origine eventi denominata MySamplesSite nel log dell'applicazione, utilizzare l'esempio di codice riportato di seguito. L'origine evento deve essere presente affinché il primo esempio di codice per funzionare correttamente. Esempio di codice seguente richiede privilegi di amministratore.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> in una classe derivata, assicurarsi di chiamare il <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> metodo della classe base affinché i delegati registrati ricevano l'evento.</para>
    </block>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMailErrorEventArgs (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SendMailErrorEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMailErrorEventArgs(Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Exception" /> contenente l'eccezione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce l'eccezione generata da un servizio di posta SMTP quando non è possibile inviare un messaggio di posta elettronica.</summary>
        <value>Un oggetto <see cref="T:System.Exception" /> che contiene l'eccezione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> proprietà contiene l'eccezione generata dal provider di posta SMTP quando non riesce a inviare un messaggio di posta elettronica di <xref:System.Web.UI.WebControls.ChangePassword> controllo o <xref:System.Web.UI.WebControls.CreateUserWizard>. La causa più comune per questa eccezione è un errore di configurazione nel [ &lt;smtp&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) del file di configurazione del computer, che produce il seguente messaggio di eccezione: `The transport failed to connect to the server.`  
  
 Non vengono generate eccezioni se si verifica un errore nel messaggio di posta elettronica quando si incorpora un file tramite <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>. Viene invece il file incorporato visualizzato interrotto quando viene visualizzato il messaggio di posta elettronica.  
  
 È necessario impostare il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> oggetto, passato come il `e` parametro di <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>a `true` per segnalare che l'eccezione è stata gestita; in caso contrario, viene nuovamente generata l'eccezione e include il messaggio di errore e stack di chiamata originale.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come una pagina ASP.NET che usa un <xref:System.Web.UI.WebControls.ChangePassword> controllo Web e include un gestore eventi per il <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> evento denominato `SendMailError`. L'esempio di codice si presuppone che il sito Web ASP.NET è stato configurato per utilizzare l'appartenenza ASP.NET e autenticazione basata su form e che è stato creato un utente il cui nome e la password sono noti all'utente. Per ulteriori informazioni, vedere [How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Se la modifica della password ha esito positivo, il codice di `SendingMail` gestore eventi tenta di inviare un messaggio di posta elettronica all'utente di confermare la modifica. SMTP deve essere già configurato nel server in modo che per eseguire questo esempio di codice. Per informazioni su come configurare un server SMTP, vedere [NIB: procedura: installare e configurare i server virtuali SMTP in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Ai fini di questo esempio, non è necessario configurare un server SMTP. Nell'esempio viene creato per verificare la presenza di un errore inviare un messaggio di posta elettronica.  
  
 Se un server di posta elettronica non è configurato correttamente o si verifica un altro errore e non può essere inviato il messaggio di posta elettronica, il `SendMailError` funzione viene chiamata. Viene visualizzato un messaggio all'utente. Inoltre, viene registrato un evento nel registro eventi applicazioni di Windows con il presupposto che esista un'origine eventi denominata MySamplesSite già. Vedere l'esempio di codice seguente per creare l'origine evento specificata. Per ulteriori informazioni sulla creazione di un'origine eventi, vedere [Server di gestione di eventi in ASP.NET Web Form Pages](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> proprietà del <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> oggetto è impostato su `true` per indicare che l'errore è stato gestito.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Se si desidera aggiungere a livello di codice l'origine eventi denominata MySamplesSite nel log dell'applicazione, utilizzare l'esempio di codice riportato di seguito. L'origine evento deve essere presente affinché il primo esempio di codice per funzionare correttamente. Esempio di codice seguente richiede privilegi di amministratore.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se l'eccezione SMTP contenuta nella proprietà <see cref="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" /> è stata gestita.</summary>
        <value>Se il valore è <see langword="true" />, l'eccezione viene utilizzata e gestita dal delegato <see cref="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />. Se invece il valore è <see langword="false" />, l'eccezione viene generata di nuovo con lo stack di chiamate e il messaggio di errore originari.  
  
 Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> proprietà indica se il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> è stata gestita. L'eccezione viene generata dal provider di posta SMTP quando non riesce a inviare un messaggio di posta elettronica di <xref:System.Web.UI.WebControls.ChangePassword> controllo o <xref:System.Web.UI.WebControls.CreateUserWizard>. La causa più comune per l'eccezione è un errore di configurazione nel [ &lt;smtp&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) del file di configurazione del computer. Sebbene un errore come questo viene in genere individuato durante lo sviluppo e il debug di un'applicazione, i server di posta elettronica possono causare l'interruzione imprevista in un ambiente di produzione ed è necessario determinare se si desidera che l'intera applicazione esito negativo in questa situazione. In caso contrario, la gestione dell'evento consente all'applicazione di continuare.  
  
 Se non si crea un gestore eventi per il <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> evento, o se si crea un gestore eventi, ma lasciare il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> proprietà impostata su `false`, l'applicazione Web verrà arrestata se si verifica un errore durante l'invio di un messaggio di posta elettronica e verrà ASP.NET visualizzare un messaggio di errore. La gestione dell'evento consente l'applicazione Web di continuare l'esecuzione anche se si è verificata un'eccezione. Ciò è utile quando non è fondamentale per inviare un messaggio di posta elettronica. Ad esempio, se l'eccezione si verifica quando un utente è una procedura guidata più passaggi, può essere utile registrare l'errore, visualizzare un messaggio informativo all'utente e consentire all'utente di completare la procedura guidata.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come una pagina ASP.NET che usa un <xref:System.Web.UI.WebControls.ChangePassword> controllo Web e include un gestore eventi per il <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> evento denominato `SendMailError`. L'esempio di codice si presuppone che il sito Web ASP.NET è stato configurato per utilizzare l'appartenenza ASP.NET e autenticazione basata su form e che è stato creato un utente il cui nome e la password sono noti all'utente. Per ulteriori informazioni, vedere [How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Se la modifica della password ha esito positivo, il codice di `SendingMail` gestore eventi tenta di inviare un messaggio di posta elettronica all'utente di confermare la modifica. SMTP deve essere già configurato nel server in modo che per eseguire questo esempio di codice. Per informazioni su come configurare un server SMTP, vedere [NIB: procedura: installare e configurare i server virtuali SMTP in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Ai fini di questo esempio, non è necessario configurare un server SMTP. Nell'esempio viene creato per verificare la presenza di un errore inviare un messaggio di posta elettronica.  
  
 Se un server di posta elettronica non è configurato correttamente o si verifica un altro errore e non può essere inviato il messaggio di posta elettronica, il `SendMailError` funzione viene chiamata. Viene visualizzato un messaggio all'utente. Inoltre, viene registrato un evento nel registro eventi applicazioni di Windows con il presupposto che esista un'origine eventi denominata MySamplesSite già. Vedere l'esempio di codice seguente per creare l'origine evento specificata. Per ulteriori informazioni sulla creazione di un'origine eventi, vedere [Server di gestione di eventi in ASP.NET Web Form Pages](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> proprietà del <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> oggetto è impostato su `true` per indicare che l'errore è stato gestito.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Se si desidera aggiungere a livello di codice l'origine eventi denominata MySamplesSite nel log dell'applicazione, utilizzare l'esempio di codice riportato di seguito. L'origine evento deve essere presente affinché il primo esempio di codice per funzionare correttamente. Esempio di codice seguente richiede privilegi di amministratore.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
  </Members>
</Type>