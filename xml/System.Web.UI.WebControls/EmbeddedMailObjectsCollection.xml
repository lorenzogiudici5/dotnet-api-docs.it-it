<Type Name="EmbeddedMailObjectsCollection" FullName="System.Web.UI.WebControls.EmbeddedMailObjectsCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7579cd22c412f662f4a19f012ff6aa106b85e36" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37536114" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EmbeddedMailObjectsCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObjectsCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObjectsCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObjectsCollection sealed : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObjectsCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents an ordered set of <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> archivia i riferimenti agli elementi che verranno incorporati in un messaggio di posta elettronica. Elementi incorporati possono essere file di immagine, ad esempio il logo della società. Il <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> viene usato per il <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> proprietà del <xref:System.Web.UI.WebControls.MailDefinition> oggetto.  
  
 Messaggi di posta elettronica che supportano gli oggetti incorporati sono configurabili nei controlli Web dei seguenti impostando i <xref:System.Web.UI.WebControls.MailDefinition> proprietà in modo dichiarativo:  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  I valori di <xref:System.Web.UI.WebControls.EmbeddedMailObject> e <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> oggetti non vengono archiviati nello stato di visualizzazione. Ciò consente di evitare agli utenti malintenzionati individuare le informazioni sul percorso per il server.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra una pagina ASP.NET che usa un' <xref:System.Web.UI.WebControls.ChangePassword> controllo Web e include un gestore eventi per il <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> evento denominato `SendingMail`. L'esempio di codice presuppone che il sito Web di ASP.NET sia stato configurato per l'uso di appartenenza ASP.NET e autenticazione basata su form e che è stato creato un utente il cui nome e la password sono noti all'utente. Per altre informazioni, vedere [procedura: autenticazione basata su form semplice implementare](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Se la modifica della password ha esito positivo, il codice nel `SendingMail` gestore dell'evento tenta di inviare un messaggio di posta elettronica all'utente di confermare la modifica. SMTP deve essere già configurato nel server affinché l'esempio di codice funzioni. Per informazioni su come configurare un server SMTP, vedere [NIB: procedura: installare e configurare i server virtuali SMTP in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Ai fini di questo esempio, non è necessario configurare un server SMTP. Nell'esempio viene costruito per testare gli errori inviare un messaggio di posta elettronica.  
  
 Se un server di posta elettronica non è configurato correttamente o viene generato un altro errore e non può essere inviato il messaggio di posta elettronica, il `SendMailError` funzione viene chiamata. Viene visualizzato un messaggio all'utente. Inoltre, un evento viene registrato nel registro eventi applicazioni di Windows con il presupposto che esista un'origine evento denominata MySamplesSite già. Vedere l'esempio di codice seguente per creare l'origine evento specificata. Per altre informazioni sulla creazione di un'origine evento, vedere [Server di gestione di eventi in pagine Web Form ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> proprietà del <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> è impostata su `true` per indicare che l'errore è stato gestito.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Se è necessario a livello di codice aggiungere l'origine eventi denominata MySamplesSite nel registro dell'applicazione, usare il codice seguente. Questa origine evento deve esistere affinché il primo esempio di codice funzioni correttamente. Esempio di codice seguente richiede privilegi di amministratore.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Esempio di codice seguente è utilizzabile come file di ChangePasswordMail. htm per il codice di esempio precedente.  
  
> [!IMPORTANT]
>  L'invio di account utente di nomi o le password nel messaggio di posta elettronica è una potenziale minaccia alla sicurezza. Messaggi di posta elettronica vengono in genere inviati in testo normale e possono essere letto da "analisi" applicazioni di rete speciale.  Per migliorare la sicurezza, usare le mitigazioni descritti in [controlli di accesso di protezione](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObjectsCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObjectsCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.EmbeddedMailObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.EmbeddedMailObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As EmbeddedMailObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::EmbeddedMailObject ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.EmbeddedMailObject -&gt; int" Usage="embeddedMailObjectsCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.EmbeddedMailObject" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> to add to the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />.</param>
        <summary>Adds an <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> to the end of the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> collection.</summary>
        <returns>Returns the index of the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> in the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The specified <paramref name="value" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.EmbeddedMailObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.EmbeddedMailObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As EmbeddedMailObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::EmbeddedMailObject ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.EmbeddedMailObject -&gt; bool" Usage="embeddedMailObjectsCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.EmbeddedMailObject" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> to locate in the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> object.</param>
        <summary>Determines whether the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> contains a specific <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />.</summary>
        <returns>
          <see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> contains <paramref name="obj" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf%2A> metodo per identificare la posizione del <xref:System.Web.UI.WebControls.EmbeddedMailObject> nel <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.EmbeddedMailObject[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.EmbeddedMailObject[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As EmbeddedMailObject(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::EmbeddedMailObject ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.EmbeddedMailObject[] * int -&gt; unit" Usage="embeddedMailObjectsCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.EmbeddedMailObject[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The one-dimensional <see cref="T:System.Array" /> is the destination of the elements copied from the current <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />. The array must have zero-based indexing.</param>
        <param name="index">The zero-based index in <c>array</c> at which copying begins.</param>
        <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance beginning at the specified index in the array.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The specified <paramref name="array" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="index" /> is out of range of the collection.</exception>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.EmbeddedMailObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.EmbeddedMailObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As EmbeddedMailObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::EmbeddedMailObject ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.EmbeddedMailObject -&gt; int" Usage="embeddedMailObjectsCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.EmbeddedMailObject" />
      </Parameters>
      <Docs>
        <param name="value">An <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> to locate in the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />.</param>
        <summary>Determines the index of a specific <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> in the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />.</summary>
        <returns>The index of the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> if it exists in the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />; otherwise, -1.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.EmbeddedMailObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.EmbeddedMailObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As EmbeddedMailObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::EmbeddedMailObject ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.EmbeddedMailObject -&gt; unit" Usage="embeddedMailObjectsCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Web.UI.WebControls.EmbeddedMailObject" />
      </Parameters>
      <Docs>
        <param name="index">An integer value that indicates the index position at which to insert the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> in the collection.</param>
        <param name="value">An <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> object to insert into the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />.</param>
        <summary>Inserts an <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> into the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> object at the specified index position.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `index` è 0, `value` viene aggiunto all'inizio del <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>. Se `index` è uguale al numero di elementi nel <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>, `value` viene aggiunto alla fine.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="index" /> is out of range of the collection.</exception>
        <exception cref="T:System.ArgumentNullException">The specified <paramref name="value" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.EmbeddedMailObject this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.EmbeddedMailObject Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As EmbeddedMailObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::EmbeddedMailObject ^ default[int] { System::Web::UI::WebControls::EmbeddedMailObject ^ get(int index); void set(int index, System::Web::UI::WebControls::EmbeddedMailObject ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.EmbeddedMailObject with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.EmbeddedMailObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the element to get.</param>
        <summary>Returns a specific element of a <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />, identified by its position.</summary>
        <value>Restituisce il <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> in corrispondenza della posizione specificata dal <paramref name="index" /> parametro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `index` non corrisponde a un membro esistente della raccolta, si verifica un errore.  
  
 Il <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item%2A> proprietà la proprietà predefinita per una raccolta. Di conseguenza, le righe di codice seguenti sono equivalenti:  
  
```vb  
myObject = myCollection(index)  
myObject = myCollection.Item(index)  
```  
  
```csharp  
myObject = myCollection[index];  
myObject = myCollection.Item[index];  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  -or-  <paramref name="index" /> is equal to or greater than the number of items in the collection.</exception>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnValidate : obj -&gt; unit&#xA;override this.OnValidate : obj -&gt; unit" Usage="embeddedMailObjectsCollection.OnValidate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.EmbeddedMailObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.EmbeddedMailObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As EmbeddedMailObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::EmbeddedMailObject ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.EmbeddedMailObject -&gt; unit" Usage="embeddedMailObjectsCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.EmbeddedMailObject" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> to remove from the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />.</param>
        <summary>Removes the first occurrence of the specified <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> from the <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove%2A> metodo Usa le informazioni contenute nel <xref:System.Web.UI.WebControls.EmbeddedMailObject> per identificare l'elemento da rimuovere dalla raccolta.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>