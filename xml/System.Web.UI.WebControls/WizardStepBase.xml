<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5981e7c18390097f7357c75fda929484a656009d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378234" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <TypeSignature Language="F#" Value="type WizardStepBase = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements the basic functionality required by a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare direttamente un'istanza di <xref:System.Web.UI.WebControls.WizardStepBase> classe. Al contrario, questa classe è ereditata dal <xref:System.Web.UI.WebControls.WizardStep> classe e il <xref:System.Web.UI.WebControls.TemplatedWizardStep> classe per fornire la funzionalità di base di un passaggio in un controllo che funge da procedura guidata.  
  
 È possibile derivare la <xref:System.Web.UI.WebControls.WizardStepBase> classe per creare una classe personalizzata che rappresenta un passaggio univoco in un controllo procedura guidata.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReturn : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the user is allowed to return to the current step from a subsequent step in a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</summary>
        <value>
          <see langword="true" /> Se l'utente può tornare al passaggio corrente; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> proprietà può essere utilizzata per attivare lo spostamento lineare in un <xref:System.Web.UI.WebControls.Wizard> controllo. Se dispone di ogni passaggio relativo <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> impostata su `false`, l'utente non sarà in grado di tornare al passaggio dopo che è stato eseguito l'accesso. Uno scenario in cui è possibile utilizzare questa funzionalità è a impedire all'utente di tornare al passaggio dopo che è stata completata perché si sono mantenuti i dati da un database sotto forma di ogni passaggio è stata completata. Se si salvano i dati dopo ogni passaggio e consentire all'utente di tornare al passaggio e modificare le informazioni dopo che è stato salvato, i dati salvati potrebbe infatti essere danneggiati. Impostando il <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> proprietà `false`, dopo che l'utente ha lasciato un passaggio, egli non sarà in grado di accedervi e modificano i valori.  
  
 Il <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> proprietà determina come e quando le **Previous** pulsante non viene eseguito il rendering. Nella tabella seguente vengono descritte le **Previous** pulsante il comportamento di rendering.  
  
|Scenario|Comportamento|  
|--------------|--------------|  
|Lineare: Passaggio 1 ha <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> impostato su `false` e l'azione utente passa con il passaggio 2.|Passaggio 2 non viene visualizzato il **Previous** pulsante.|  
|Non lineare: Passaggio 1 ha <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> impostato su `false` e l'azione utente passa al passaggio 3.|Passaggio 3 non vengono visualizzati i **Previous** pulsante.|  
|Pulsanti intestazione laterale: Passaggio 2 ha <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> impostato su `false` , <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> è impostata su `true`, e un utente fa clic sul pulsante intestazione laterale.|Nessun pulsante vengono disabilitato automaticamente sulla barra laterale quando <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> è impostata su `false`. Se un utente fa clic sul pulsante, viene ignorato l'azione.|  
|Lineare e Non lineare con il modello personalizzato: il passaggio ha un modello di navigazione personalizzati.|No automatica se si verifica nasconda o la visualizzazione <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> è impostata su `false` quando si utilizza un modello per la navigazione. Il **Previous** pulsante deve essere facoltativo nel modello.|  
|Progettazione di Visual Studio e <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> : il controllo ha 5 passaggi, sta lavorando in passaggio 4 e si esegue la pagina.|Quando il passaggio 4 è il <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>, il **Previous** del pulsante. Il **Previous** pulsante è nascosto solo per <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> impostata su <xref:System.Web.UI.WebControls.WizardStepType.Step> quando il passaggio precedente nella cronologia dispone <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> impostato su `false`. Poiché il passaggio 4 viene eseguito il rendering e non sono passaggi nella cronologia, il **Previous** pulsante non è nascosto.|  
|Passaggio iniziale e navigazione Non lineare: un utente visita passaggio 3 e quindi fare clic su passaggio 4 e quindi il passaggio 1 ha <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> impostato su <xref:System.Web.UI.WebControls.WizardStepType.Start>.|La procedura guidata non aggiunge un **Previous** pulsante quando il <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> è impostata su <xref:System.Web.UI.WebControls.WizardStepType.Start> indipendentemente dal modo in cui l'utente passa a tale passaggio.|  
|Stesso passaggio nella cronologia: Un utente visita il passaggio 3 in cui <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> è impostata su <xref:System.Web.UI.WebControls.WizardStepType.Step> e le relative azioni l'utente non esegue il commit. Vengono quindi fare clic sul pulsante Indietro nel passaggio 3.|Controllo della procedura guidata verifica se il **Previous** passaggio nella cronologia rappresenta il passaggio "stesso" che l'utente è attualmente in. Se il passaggio è uguale a, controllo della procedura guidata cerca nella cronologia per determinare il passaggio "diverso" precedente e si basa la visualizzazione delle **Previous** pulsante e destinazione in base al "passaggio diverso" nella cronologia.|  
  
> [!NOTE]
>  Quando il <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> è impostata su `false`, ma la <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> proprietà del controllo padre di <xref:System.Web.UI.WebControls.WizardStepBase> è impostato su `true`, facendo clic su un pulsante nell'area dell'intestazione laterale non ha alcun effetto. Area dell'intestazione laterale viene visualizzato in genere per specificare opzioni di navigazione non lineare, pertanto se non si utilizza la funzionalità di navigazione non lineare, è possibile impostare il <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> proprietà `false`.  
  
 Questa proprietà non può essere impostata tramite i temi o temi di fogli di stile. Per altre informazioni, vedere <xref:System.Web.UI.ThemeableAttribute> e [ASP.NET temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> proprietà per impedire all'utente di restituire al passaggio di <xref:System.Web.UI.WebControls.Wizard> controllo dopo che è stato eseguito l'accesso. Nell'esempio, il `Step1` passaggio ha relativi <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> impostata su `false`. Dopo che l'utente lascia il `Step1` viene visualizzato alcun pulsante indietro il passaggio, nel `Step2` passaggio.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
        <value>
          <see langword="true" /> usare i temi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> proprietà indica se i temi sono abilitati per il <xref:System.Web.UI.WebControls.WizardStepBase> controllo. Il <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> proprietà determina anche se i temi sono abilitati per i controlli contenuti nella propria raccolta di controlli. Quando il <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> proprietà `true`, viene eseguita la ricerca di directory di tema dell'applicazione per le interfacce di controllo da applicare. Se è presente alcuna interfaccia per il controllo specifico nella directory dei temi, un'interfaccia non viene applicata. Quando il <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> proprietà è `false`, la directory di tema non viene eseguita la ricerca e il valore della <xref:System.Web.UI.Control.SkinID%2A> proprietà non viene usata.  
  
 Un controllo può eseguire l'override di <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> valore impostato dal relativo controllo padre o dalla pagina che lo contiene. Ad esempio, se un <xref:System.Web.UI.WebControls.WizardStepBase> controllo ha <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> impostato su `false`, è possibile applicare in modo selettivo i temi per i controlli figlio contenuti nel passaggio della procedura guidata impostando il <xref:System.Web.UI.Control.EnableTheming%2A> proprietà `true` per i singoli controlli figlio.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the programmatic identifier assigned to the server control.</summary>
        <value>Identificatore programmatico assegnato al controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> proprietà per identificare e fare riferimento a un particolare procedura guidata passaggio in una pagina Web Form. Il <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> valore diventa il nome dell'istanza del controllo nella pagina; in questo modo è possibile accedere facilmente a un determinato passaggio nel codice per la pagina. Ad esempio, se si imposta la <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> proprietà di un <xref:System.Web.UI.WebControls.WizardStepBase> controllo al passaggio "1", è possibile fare riferimento i controlli figlio del passaggio della procedura guidata nel codice per la pagina come `Step1.Controls`.  
  
 Il <xref:System.Web.UI.WebControls.WizardStepBase> controllo assicura che ogni passaggio in un <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> controllo ha un identificatore univoco valido quando i passaggi vengono aggiunte o modificati in fase di progettazione. Ad esempio, quando si imposta il <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> per un passaggio in fase di progettazione, non può corrispondere all'identificatore di contenuto in un altro passaggio il <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> controllo e non può corrispondere al <xref:System.Web.UI.Control.ID%2A> destinata a contenere il <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> controllo.  
  
   
  
## Examples  
 L'esempio di codice seguente definisce tre passaggi della procedura guidata per un <xref:System.Web.UI.WebControls.Wizard> controllo in una pagina Web Form. Nel codice per la pagina, le istanze di passaggio della procedura guidata sono denominate dai relativi valori di ID, mentre è possibile fare riferimento nel codice come `WizardStep1`, `WizardStep2`, e `WizardStep3`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The property was set to an invalid identifier string at design time.  -or-  The property was set to the same identifier as the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.  -or-  The property was set to the same identifier as another step in the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizardStepBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An <see cref="T:System.Object" /> that represents the that represents the control state to be restored.</param>
        <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> method.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name associated with a step in a control that acts as a wizard.</summary>
        <value>Il nome associato a un passaggio in un controllo che funge da procedura guidata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> proprietà restituisce una stringa che identifica un passaggio in un controllo procedura guidata. Se viene specificato un valore per il <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> proprietà, il <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> restituirà tale valore. Se viene specificato alcun valore per il <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> proprietà, il <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> proprietà restituisce il valore della <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> proprietà. Se non sono specificati valori per entrambe le <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> o il <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> proprietà, il <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> restituisce proprietà `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="wizardStepBase.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizardStepBase.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
        <summary>Outputs the content of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> control's child controls to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberSignature Language="F#" Value="member this.StepType : System.Web.UI.WebControls.WizardStepType with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of navigation user interface (UI) to display for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Web.UI.WebControls.WizardStepType" />. Il valore predefinito è <see langword="WizardStepType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> proprietà per specificare il tipo dei pulsanti di navigazione da visualizzare per un passaggio in un <xref:System.Web.UI.WebControls.Wizard> controllo. Se si specifica un valore per questa proprietà, tutti i passaggi contrassegnati come <xref:System.Web.UI.WebControls.WizardStepType.Complete> consente di visualizzare nello stato disabilitato nella barra laterale.  
  
 Se non si specifica un valore per questa proprietà, il valore predefinito è `WizardStepType.Auto`.  
  
 Nella tabella seguente elenca le impostazioni disponibili per il <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> proprietà e il comportamento risultante del passaggio:  
  
 `WizardStepType.Auto`  
 Interfaccia utente che viene eseguito il rendering per il passaggio di spostamento è determinato dall'ordine in cui viene dichiarato il passaggio.  
  
 `WizardStepType.Complete`  
 Il passaggio è quella più recente da visualizzare. Il rendering non vengono eseguiti alcun pulsanti di navigazione.  
  
 `WizardStepType.Finish`  
 Il passaggio è il passaggio finale dei dati raccolta. Vengono visualizzati i pulsanti precedente e fine per la navigazione.  
  
 `WizardStepType.Start`  
 Il passaggio è il primo da visualizzare. Non viene visualizzato un pulsante Indietro.  
  
 `WizardStepType.Step`  
 Se si tratta qualsiasi passaggio tra l'inizio e il passaggio di fine. Rendering dei pulsanti precedente e successivo per la navigazione. Questo tipo di passaggio è utile per eseguire l'override di <xref:System.Web.UI.WebControls.WizardStepType.Auto> tipo di passaggio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.WizardStepType" /> enumeration values.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the title to use for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control when the sidebar feature is enabled.</summary>
        <value>Il titolo da utilizzare per un passaggio in un <see cref="T:System.Web.UI.WebControls.Wizard" /> controllare quando è abilitata la funzionalità di barra laterale. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> proprietà per visualizzare un titolo descrittivo per un passaggio in un <xref:System.Web.UI.WebControls.Wizard> controllare quando è abilitata la funzionalità di barra laterale. Se il <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> non è impostata e la barra laterale è attivata, il valore della <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> proprietà viene visualizzata per il pulsante intestazione laterale.  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> proprietà per visualizzare un titolo descrittivo per un passaggio di <xref:System.Web.UI.WebControls.Wizard> controllo. Nell'esempio `Step1` non dispone di relativa <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> proprietà impostata, viene visualizzato nel <xref:System.Web.UI.WebControls.Wizard> controllo come "WizardStep1". `Step2` avere relativo <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> impostata, viene visualizzato come "Fase 2".  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wizard : System.Web.UI.WebControls.Wizard" Usage="System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.UI.WebControls.Wizard" /> control that is the parent of the object derived from <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
        <value>Il <see cref="T:System.Web.UI.WebControls.Wizard" /> controllo che rappresenta l'elemento padre dell'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
  </Members>
</Type>