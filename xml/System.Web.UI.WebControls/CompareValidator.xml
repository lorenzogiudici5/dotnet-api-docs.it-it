<Type Name="CompareValidator" FullName="System.Web.UI.WebControls.CompareValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="563df817cb8f8f66bd22697bce653971ac74dc4e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36583699" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompareValidator : System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompareValidator extends System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareValidator&#xA;Inherits BaseCompareValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareValidator : System::Web::UI::WebControls::BaseCompareValidator" />
  <TypeSignature Language="F#" Value="type CompareValidator = class&#xA;    inherit BaseCompareValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseCompareValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CompareValidator runat="server" ErrorMessage="CompareValidator"&gt;&lt;/{0}:CompareValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Confronta il valore immesso dall'utente in un controllo di input con il valore immesso in un altro controllo di input o con un valore costante.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.CompareValidator> controllo per confrontare il valore immesso dall'utente in un controllo di input, ad esempio un <xref:System.Web.UI.WebControls.TextBox> controllo con il valore immesso in un altro controllo di input o un valore costante. Il <xref:System.Web.UI.WebControls.CompareValidator> il controllo passa la convalida se il valore del controllo di input corrisponde ai criteri specificati per il <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>, <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>, e/o <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> proprietà.  
  
 È anche possibile usare il <xref:System.Web.UI.WebControls.CompareValidator> controllo per indicare se il valore immesso in un controllo di input può essere convertito nel tipo di dati specificato dal <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> proprietà.  
  
 Specificare il controllo di input da convalidare impostando il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> proprietà. Se si desidera confrontare un controllo di input specifico con un altro controllo di input, impostare il <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> proprietà per specificare il controllo da confrontare con.  
  
> [!NOTE]
>  Se il valore immesso nel controllo di input specificato dal <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> non può essere convertita nel tipo di dati specificato dal <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> proprietà, ma il valore immesso nel controllo di input specificato dal <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> proprietà possono essere convertiti, il controllo di input da convalidare è considerato valido. Pertanto, è necessario inserire un <xref:System.Web.UI.WebControls.CompareValidator> oppure <xref:System.Web.UI.WebControls.RangeValidator> nel controllo di input specificato dal <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> proprietà.  
  
 Invece di confronto del valore di un controllo di input con un altro controllo di input, è possibile confrontare il valore di un controllo di input su un valore costante. Specificare il valore costante da confrontare con impostando il <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> proprietà.  
  
> [!NOTE]
>  Se il valore specificato per il <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> non può essere convertita nel tipo di dati specificato dal <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> proprietà, viene generata un'eccezione. Assicurarsi di controllare il tipo di dati di un valore prima di assegnarlo a livello di codice per il <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> proprietà.  
  
> [!NOTE]
>  Non impostare contemporaneamente i <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> e il <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> proprietà nello stesso momento. È possibile confrontare il valore di un controllo di input a un altro controllo di input o su un valore costante. Se entrambe le proprietà sono impostate, il <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> proprietà ha la precedenza.  
  
 Utilizzare il <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> proprietà per specificare il tipo di confronto da eseguire, ad esempio maggiore di, uguale a, e così via. Se si imposta la <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> proprietà da `ValidationCompareOperator.DataTypeCheck`, la <xref:System.Web.UI.WebControls.CompareValidator> controllo Ignora la <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> e <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> proprietà e semplicemente indica se il valore immesso nel controllo di input può essere convertito nel tipo di dati specificato dal <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> proprietà viene utilizzata per specificare il tipo di dati di entrambi i valori di confronto. Entrambi i valori vengono convertiti automaticamente in questo tipo di dati prima di eseguita l'operazione di confronto.  
  
> [!IMPORTANT]
>  Quando il <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> è impostata su <xref:System.Web.UI.WebControls.ValidationDataType.Date> e il tipo di calendario corrente è non gregoriani, la convalida viene eseguita solo sul lato server. Lo script client validator supporta solo i calendari gregoriano.  
  
 Nella tabella seguente sono elencati i vari tipi di dati che possono essere confrontati.  
  
|Tipo di dati|Descrizione|  
|---------------|-----------------|  
|`String`|Tipo di dati string.|  
|`Integer`|Specifica un tipo di dati integer a 32 bit con segno.|  
|`Double`|E con precisione doppia a virgola mobile a tipo di dati numerico.|  
|`Date`|Tipo di dati date.|  
|`Currency`|Un tipo di dati decimale. Non può contenere i simboli di valuta.|  
  
> [!NOTE]
>  Se il controllo di input è vuoto, viene chiamata alcuna funzione di convalida e convalida ha esito positivo. Utilizzare un <xref:System.Web.UI.WebControls.RequiredFieldValidator> controllo in modo da richiedere all'utente di immettere i dati nel controllo di input.  
  
> [!NOTE]
>  Quando si usa il <xref:System.Web.UI.WebControls.CompareValidator> controllo all'interno di un <xref:System.Web.UI.UpdatePanel> di controllo, assicurarsi che il controllo di convalida e il controllo è associato siano nello stesso riquadro. Per ulteriori informazioni sull'utilizzo di <xref:System.Web.UI.UpdatePanel> controllare la disponibilità di aggiornamenti parziali della pagina, vedere [Cenni preliminari sul Rendering parziale della pagina](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Per ulteriori informazioni sui controlli di convalida, vedere <xref:System.Web.UI.WebControls.BaseValidator>.  
  
## <a name="accessibility"></a>Accessibilità  
 Per informazioni su come configurare il controllo in modo che generi codice conforme agli standard di accessibilità, vedere [accessibilità in Visual Studio e ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) e [controlli ASP.NET e l'accessibilità](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.CompareValidator> controllo per confrontare i valori in due <xref:System.Web.UI.WebControls.TextBox> controlli.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.TextBox" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.Operator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.CompareValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il costruttore predefinito inizializza tutti i campi in base ai valori predefiniti.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="compareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che contiene il flusso di output per il rendering nel client.</param>
        <summary>Aggiunge gli attributi del controllo al flusso di output per il rendering nel client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender%2A> metodo in un controllo server personalizzato in modo che il <xref:System.Web.UI.WebControls.CompareValidator> messaggio di errore viene sempre visualizzato in grassetto.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorender.cs#2)]
[!code-vb[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="override this.ControlPropertiesValid : unit -&gt; bool" Usage="compareValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verifica la validità dei valori delle proprietà del controllo.</summary>
        <returns>
          <see langword="true" /> se le proprietà del controllo sono valide; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid%2A> metodo in un server personalizzato controllare in modo che restituisca sempre il valore della proprietà visibili, purché il <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> proprietà del <xref:System.Web.UI.WebControls.CompareValidator> controllo si trova nella pagina e contiene proprietà di convalida.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalidvb.aspx#1)]  
[!code-csharp[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalid.cs#2)]
[!code-vb[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalid.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Non è possibile convertire il valore della proprietà di destinazione nell'oggetto <see cref="T:System.Type" /> previsto.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlToCompare">
      <MemberSignature Language="C#" Value="public string ControlToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ValidatedControlConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il controllo di input da confrontare con il controllo di input da convalidare.</summary>
        <value>Controllo di input da confrontare con il controllo di input da convalidare. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> proprietà per specificare un controllo di input, ad esempio un <xref:System.Web.UI.WebControls.TextBox> controllo, da confrontare con il controllo di input da convalidare. Se il controllo di input specificato da questa proprietà non è un controllo nella pagina, viene generata un'eccezione.  
  
> [!NOTE]
>  Non impostare contemporaneamente i <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> e il <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> proprietà nello stesso momento. È possibile confrontare il valore di un controllo di input a un altro controllo di input o su un valore costante. Se entrambe le proprietà sono impostate, il <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> proprietà ha la precedenza.  
  
 Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=nameWithType>.  
  
> [!IMPORTANT]
>  Se il controllo da confrontare è nascosto o si trova in un contenitore (ad esempio un <xref:System.Web.UI.WebControls.Panel> controllo) che non è visibile, la convalida viene eseguita solo sul lato server. Lo script client validator supporta solo i controlli visibili.  
  
 Questa proprietà non può essere impostata da temi oppure temi di fogli di stile. Per altre informazioni, vedere <xref:System.Web.UI.ThemeableAttribute> e [ASP.NET temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> proprietà per specificare il controllo da confrontare con il controllo da convalidare.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
        <altmember cref="T:System.Web.UI.WebControls.TextBox" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="compareValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando è sottoposto a override in una classe derivata, questo metodo contiene il codice per determinare se il valore nel controllo di input è valido.</summary>
        <returns>
          <see langword="true" /> se il valore nel controllo di input è valido; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid%2A> metodo in un server personalizzato controllare in modo che restituisca sempre `true` se i valori dei due controlli specificati sono uguali e `false` in caso contrario.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalidvb.aspx#1)]  
[!code-csharp[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationCompareOperator Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationCompareOperator Operator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As ValidationCompareOperator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationCompareOperator Operator { System::Web::UI::WebControls::ValidationCompareOperator get(); void set(System::Web::UI::WebControls::ValidationCompareOperator value); };" />
      <MemberSignature Language="F#" Value="member this.Operator : System.Web.UI.WebControls.ValidationCompareOperator with get, set" Usage="System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationCompareOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'operazione di confronto da eseguire.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />. Il valore predefinito è <see langword="Equal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> proprietà per specificare l'operazione di confronto da eseguire. Nella tabella seguente sono elencate le operazioni di confronto che sono possibili.  
  
|Operazione|Descrizione|  
|---------------|-----------------|  
|`Equal`|Confronto di uguaglianza tra i valori di controllo di input da convalidare e un altro controllo o un valore costante.|  
|`NotEqual`|Confronto di disuguaglianza tra i valori di controllo di input da convalidare e un altro controllo o un valore costante.|  
|`GreaterThan`|Confronto di maggiore tra i valori di controllo di input da convalidare e un altro controllo o un valore costante.|  
|`GreaterThanEqual`|Confronto di maggiore o uguale a tra i valori di controllo di input da convalidare e un altro controllo o un valore costante.|  
|`LessThan`|Un confronto di minoranza tra i valori di controllo di input da convalidare e un altro controllo o un valore costante.|  
|`LessThanEqual`|Confronto di minore o uguale a tra i valori di controllo di input da convalidare e un altro controllo o un valore costante.|  
|`DataTypeCheck`|Un confronto di tipo dei dati tra il valore immesso nel controllo di input in fase di convalida e il tipo di dati specificato dal <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> proprietà. Convalida non riesce se il valore non può essere convertito nel tipo di dati specificato. **Nota:** il <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> e <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> le proprietà vengono ignorate quando si utilizza l'operatore.|  
  
 Questa proprietà non può essere impostata da temi oppure temi di fogli di stile. Per altre informazioni, vedere <xref:System.Web.UI.ThemeableAttribute> e [ASP.NET temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> proprietà per specificare l'operazione di confronto.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'operatore di confronto specificato non è uno dei valori di <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
      </Docs>
    </Member>
    <Member MemberName="ValueToCompare">
      <MemberSignature Language="C#" Value="public string ValueToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore costante da confrontare con il valore immesso dall'utente nel controllo di input da convalidare.</summary>
        <value>Valore costante da confrontare con il valore immesso dall'utente nel controllo di input da convalidare. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> proprietà per specificare un valore costante da confrontare con il valore immesso dall'utente nel controllo di input da convalidare. Se il valore costante specificato da questa proprietà non riesce a convertire il tipo di dati specificato dal <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> proprietà, viene generata un'eccezione.  
  
> [!NOTE]
>  Non impostare contemporaneamente i <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> e il <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> proprietà nello stesso momento. È possibile confrontare il valore di un controllo di input a un altro controllo di input o su un valore costante. Se entrambe le proprietà sono impostate, il <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> proprietà ha la precedenza.  
  
 Questa proprietà non può essere impostata da temi oppure temi di fogli di stile. Per altre informazioni, vedere <xref:System.Web.UI.ThemeableAttribute> e [ASP.NET temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> proprietà da confrontare il valore immesso dall'utente in un <xref:System.Web.UI.WebControls.TextBox> controllo con un valore costante.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>