<Type Name="FormViewInsertedEventArgs" FullName="System.Web.UI.WebControls.FormViewInsertedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="607c78758fd0bc1013529977208dc3e7ddca03e6" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46652418" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewInsertedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce dati per l'evento <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.FormView> controllo genera il <xref:System.Web.UI.WebControls.FormView.ItemInserted> evento quando un pulsante Inserisci (un pulsante con relativo `CommandName` proprietà è impostata su "Insert") all'interno del controllo viene selezionata, ma dopo che il <xref:System.Web.UI.WebControls.FormView> ha inserito il record. In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata, ad esempio la verifica i risultati di un'operazione di inserimento ogni volta che si verifica questo evento.  
  
 Oggetto <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> oggetto viene passato al metodo di gestione degli eventi, che consente di determinare il numero di record interessati e alle eventuali eccezioni che potrebbero essersi verificati. Per determinare il numero di record interessati dall'operazione di inserimento, usare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> proprietà. Usare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> proprietà per determinare se è stata generata un'eccezione. È anche possibile indicare se l'eccezione è stata gestita nel metodo di gestione degli eventi impostando le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> proprietà. Se è necessario accedere ai valori del record inserito, usare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> proprietà.  
  
 Per impostazione predefinita, il <xref:System.Web.UI.WebControls.FormView> controllo restituisce la modalità specificata dal <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> proprietà dopo un'operazione di inserimento. Se si verifica un'eccezione durante l'operazione di inserimento, è possibile mantenere il <xref:System.Web.UI.WebControls.FormView> controllo in modalità di inserimento, impostare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> proprietà `true`.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Per un elenco dei valori iniziali delle proprietà di un'istanza della classe <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>, vedere il costruttore <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A>.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> oggetto passato al metodo di gestione degli eventi per il <xref:System.Web.UI.WebControls.FormView.ItemInserted> evento per determinare se si è verificata un'eccezione durante un'operazione di inserimento.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewInsertedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewInsertedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewInsertedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewInsertedEventArgs" Usage="new System.Web.UI.WebControls.FormViewInsertedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Il numero di righe interessate dall'operazione di inserimento.</param>
        <param name="e">Oggetto <see cref="T:System.Exception" /> che rappresenta l'eccezione generata quando è stata eseguita l'operazione di inserimento. Se non è stata generata alcuna eccezione, utilizzare <see langword="null" /> per questo parametro.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> classe.  
  
 Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>|Valore del parametro `affectedRows`.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>|Il <xref:System.Exception?displayProperty=nameWithType> contenuto nell'oggetto di `e` parametro.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>|Inizializzata con un valore `false`.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>|Inizializzata con un valore `false`.|  
  
> [!NOTE]
>  Questo costruttore viene utilizzato principalmente dagli sviluppatori durante la generazione di eventi.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di righe interessate dall'operazione di inserimento.</summary>
        <value>Il numero di righe interessate dall'operazione di inserimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> proprietà per determinare il numero di record interessati dall'operazione di inserimento. Questa proprietà viene comunemente utilizzata per verificare che il numero corretto di record è stato inserito nelle situazioni seguenti:  
  
-   Verificare che sia stato inserito un singolo record. A volte un'istruzione insert sviluppato in modo errato può inserire più record.  
  
-   Verificare che sia stato inserito un record quando si verifica un errore durante l'operazione di inserimento che non generi un'eccezione.  
  
-   Verificare che sia stato inserito un record quando un controllo origine dati che supporta il rilevamento dei conflitti (concorrenza ottimistica), ad esempio la <xref:System.Web.UI.WebControls.SqlDataSource> e <xref:System.Web.UI.WebControls.ObjectDataSource> controlli, è relativo <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> impostata sul `ConflictOptions.CompareAllValues` valore di enumerazione. In questa impostazione, non dovrebbe essere inserito un record con lo stesso valore chiave sotto forma di record da un altro utente contemporaneamente.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> proprietà per verificare che durante l'operazione di inserimento è stato inserito un record.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'eventuale eccezione generata durante l'operazione di inserimento.</summary>
        <value>Un oggetto <see cref="T:System.Exception" /> che rappresenta l'eccezione generata durante l'operazione di inserimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> proprietà per determinare l'eccezione, se presente, che è stata generata durante l'operazione di inserimento. Se non viene generata alcuna eccezione, questa proprietà restituisce `null`.  
  
> [!NOTE]
>  Se è stata generata un'eccezione e si decide di gestire l'eccezione nel gestore dell'evento, assicurarsi di impostare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> proprietà `true`; in caso contrario, il <xref:System.Web.UI.WebControls.FormView> controllo genera nuovamente l'eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> proprietà per determinare se è stata generata un'eccezione durante un'operazione di inserimento.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se un'eccezione generata durante l'operazione di inserimento è stata gestita nel gestore eventi.</summary>
        <value>
          <see langword="true" /> se l'eccezione è stata gestita nel gestore eventi, altrimenti <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generata un'eccezione durante l'operazione di inserimento, usare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> proprietà che indica se l'eccezione è stata gestita nel gestore eventi. Quando questa proprietà è impostata su `true`, l'eccezione viene considerato gestito e non viene generata nuovamente. Se questa proprietà è impostata su `false`, il <xref:System.Web.UI.WebControls.FormView> controllo genera nuovamente l'eccezione. Per determinare l'eccezione generata, utilizzare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> proprietà per indicare che l'eccezione è stata gestita nel gestore eventi.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInInsertMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il controllo <see cref="T:System.Web.UI.WebControls.FormView" /> deve rimanere in modalità di inserimento dopo un'operazione di inserimento.</summary>
        <value>
          <see langword="true" /> per mantenere la modalità di inserimento dopo un'operazione di inserimento, altrimenti <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, il <xref:System.Web.UI.WebControls.FormView> controllo restituisce la modalità specificata dal <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> proprietà. Usare la <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> proprietà per specificare se il <xref:System.Web.UI.WebControls.FormView> controllo deve rimanere in modalità di inserimento dopo un'operazione di inserimento. Per mantenere la <xref:System.Web.UI.WebControls.FormView> controllo in modalità di inserimento, impostare questa proprietà su `true`.  
  
> [!NOTE]
>  Questa proprietà deve essere utilizzata solo quando si verifica una situazione (ad esempio, viene generata un'eccezione) che richiede un comportamento diverso rispetto a quanto avviene in genere che il controllo. Se il <xref:System.Web.UI.WebControls.FormView> controllo deve rimanere in modalità di inserimento per impostazione predefinita, impostare il <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> proprietà invece.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> proprietà per mantenere la <xref:System.Web.UI.WebControls.FormView> controllo in modalità di inserimento quando un'eccezione si verifica durante un'operazione di inserimento.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un dizionario contenente le coppie nome/valore dei campi per il record inserito.</summary>
        <value>Un oggetto <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> contenente un dizionario delle coppie nome/valore dei campi per il record inserito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> proprietà per accedere ai valori dei campi per il record inserito. Ad esempio, è possibile usare questi valori per mantenere un registro del record inserito.  
  
 Il <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> proprietà restituisce un <xref:System.Collections.Specialized.OrderedDictionary> oggetto che implementa il <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfaccia. Il <xref:System.Collections.Specialized.OrderedDictionary> oggetto contiene <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> gli oggetti che rappresentano i campi del record inserito. Per accedere ai nomi dei campi, usare il <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> proprietà del <xref:System.Collections.Specialized.OrderedDictionary> oggetto. Analogamente, è possibile accedere ai valori dei campi usando la <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> proprietà.  
  
> [!NOTE]
>  In alternativa, è anche possibile usare l'indicizzatore del <xref:System.Collections.Specialized.OrderedDictionary> direttamente i valori di oggetto per accedere al campo. Il vantaggio dell'utilizzo dell'indicizzatore è la restituzione direttamente i valori dei campi. I controlli che si basano sull'ordine dei campi dell'origine dati (ad esempio <xref:System.Web.UI.WebControls.AccessDataSource>) possono accedere ai valori di campo solo in base all'indice.  
  
   
  
## Examples  
 L'esempio seguente illustra come scorrere gli elementi di <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> raccolta.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgsValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/CS/formviewinsertedeventargsvaluescs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgsValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/VB/formviewinsertedeventargsvaluesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      </Docs>
    </Member>
  </Members>
</Type>