<Type Name="BaseCompareValidator" FullName="System.Web.UI.WebControls.BaseCompareValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="642c17fb955ea5ca44497ba52239d63b98193508" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36583818" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseCompareValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseCompareValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCompareValidator abstract : System::Web::UI::WebControls::BaseValidator" />
  <TypeSignature Language="F#" Value="type BaseCompareValidator = class&#xA;    inherit BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Funge da classe di base astratta per i controlli di convalida che eseguono confronti tipizzati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BaseCompareValidator> classe è ereditata da tutti i controlli di convalida che confrontano i valori, ad esempio il <xref:System.Web.UI.WebControls.CompareValidator> e <xref:System.Web.UI.WebControls.RangeValidator> controlli, per fornire funzioni di base comuni.  
  
 Utilizzare il <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> proprietà per specificare i dati di tipo in cui i valori vengono convertiti in prima da confrontare.  
  
> [!NOTE]
>  Se il valore del controllo di input da convalidare non è possibile convertire nel tipo di dati specificato, la convalida ha esito negativo. Il <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> del controllo di convalida è impostata su `false`.  
  
 Il <xref:System.Web.UI.WebControls.BaseCompareValidator> classe contiene inoltre diverse proprietà e metodi statici che sono utili quando si esegue le convalide di confronto. È possibile determinare se una stringa può essere convertita in un tipo di dati specifico tramite il <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> metodo. L'anno massimo che può essere rappresentato da un anno a due cifre è inclusa nel <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> proprietà. Il <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> metodo consente di convertire un anno a due cifre per un anno a quattro cifre.  
  
> [!NOTE]
>  Quando si usa controlli di convalida che derivano dal <xref:System.Web.UI.WebControls.BaseCompareValidator> controllo all'interno di un <xref:System.Web.UI.UpdatePanel> di controllo, assicurarsi che il controllo di convalida e il controllo è associato siano nello stesso riquadro. Per ulteriori informazioni sull'utilizzo di <xref:System.Web.UI.UpdatePanel> controllare la disponibilità di aggiornamenti parziali della pagina, vedere [Cenni preliminari sul Rendering parziale della pagina](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Per ulteriori informazioni sui controlli di convalida, vedere <xref:System.Web.UI.WebControls.BaseValidator>.  
  
## <a name="accessibility"></a>Accessibilità  
 Il codice sottoposto a rendering per impostazione predefinita per questo controllo potrebbe non essere conforme agli standard di accessibilità, ad esempio le linee guida priorità 1 Web Content Accessibility Guidelines 1.0 (WCAG). Per informazioni dettagliate sul supporto di accessibilità per questo controllo, vedere [controlli ASP.NET e l'accessibilità](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseCompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseCompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.BaseCompareValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché il <xref:System.Web.UI.WebControls.BaseCompareValidator> classe è astratta, non è possibile creare un <xref:System.Web.UI.WebControls.BaseCompareValidator> direttamente l'oggetto. Questo costruttore viene comunemente chiamato dal costruttore di una classe derivata per inizializzare le proprietà definite nella <xref:System.Web.UI.WebControls.BaseCompareValidator> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseCompareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che rappresenta il flusso di output per il rendering del contenuto HTML nel client.</param>
        <summary>Aggiunge gli stili e gli attributi HTML dei quali è necessario eseguire il rendering del controllo nell'oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender%2A> metodo viene utilizzato per eseguire il rendering di attributi del controllo nel tag HTML per il controllo. Questo metodo viene in genere sottoposta a override dagli sviluppatori di controlli nelle classi derivate per inserire gli attributi appropriati e gli stili per il <xref:System.Web.UI.HtmlTextWriter> flusso di output per un controllo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> metodo, verificare di chiamare il metodo corrispondente nella classe base. In caso contrario, non vengono visualizzati gli attributi contenuti nella classe base.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se la stringa specificata può essere convertita nel tipo di dati specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="text">Stringa da testare.</param>
        <param name="type">Uno dei valori di <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <summary>Determina se la stringa specificata può essere convertita nel tipo di dati specificato. Questa versione del metodo di overload verifica i valori di valuta, double e della data con il formato utilizzato dalle impostazioni cultura correnti.</summary>
        <returns>
          <see langword="true" /> se la stringa di dati specificata può essere convertita nel tipo di dati specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29> metodo per determinare se la stringa specificata può essere convertita nel tipo di dati specificato. Questo metodo viene comunemente utilizzato per verificare se una stringa può essere convertita in un tipo di dati compatibili prima di eseguire un'operazione che dipende dal tipo di dati selezionato.  
  
 Questa versione del metodo testa il valore utilizzando il formato utilizzato dalle impostazioni cultura correnti. Per testare il valore utilizzando un formato indipendente dalla lingua, usare il <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=nameWithType> versione di questo metodo di overload.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo di <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> per confrontare due valori integer e determinare se il secondo valore integer può essere convertito.  
  
 [!code-aspx-csharp[BaseCompareValidatorCanConvert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/CS/basecomparevalidatorcanconvertcs.aspx#1)]
 [!code-aspx-vb[BaseCompareValidatorCanConvert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/VB/basecomparevalidatorcanconvertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType, cultureInvariant As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType * bool -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type, cultureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">Stringa da testare.</param>
        <param name="type">Uno dei valori dell'enumerazione <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <param name="cultureInvariant">
          <see langword="true" /> per verificare i valori utilizzando un formato relativo a impostazioni cultura non associate; in caso contrario, <see langword="false" />.</param>
        <summary>Determina se la stringa specificata può essere convertita nel tipo di dati specificato. Questa versione del metodo di overload consente di specificare se i valori sono verificati utilizzando un formato relativo a impostazioni cultura non associate.</summary>
        <returns>
          <see langword="true" /> se la stringa di dati specificata può essere convertita nel tipo di dati specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29> metodo per determinare se la stringa specificata può essere convertita nel tipo di dati specificato. Questo metodo viene comunemente utilizzato per verificare se una stringa può essere convertita in un tipo di dati compatibili prima di eseguire un'operazione che dipende dal tipo di dati selezionato. Per indicare che i valori devono essere verificati utilizzando un formato indipendente dalla lingua, passare `true` per il `cultureInvariant` parametro; in caso contrario, i valori vengono testati utilizzando il formato utilizzato dalle impostazioni cultura correnti. Durante il test di un valore utilizzando il formato utilizzato dalle impostazioni cultura correnti, provare a usare il <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> versione di questo metodo di overload.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Confronta due stringhe utilizzando l'operatore e il tipo di convalida di dati specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, string rightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, rightText As String, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, System::String ^ rightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, rightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">Valore sul lato sinistro dell'operatore.</param>
        <param name="rightText">Valore sul lato destro dell'operatore.</param>
        <param name="op">Uno dei valori di <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />.</param>
        <param name="type">Uno dei valori di <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <summary>Confronta due stringhe utilizzando l'operatore e il tipo di dati specificati. Questa versione del metodo di overload confronta i valori di valuta, double e della data con il formato utilizzato dalle impostazioni cultura correnti.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="leftValue" /> fa riferimento al parametro <paramref name="rightValue" /> nel modo specificato dal parametro <paramref name="op" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> metodo viene utilizzato per verificare se il valore della `leftText` parametro è correlato al valore del `rightText` nel modo specificato dal parametro il `op` parametro. Il `type` parametro specifica il tipo di dati dei valori da confrontare.  
  
> [!NOTE]
>  Se il `op` parametro è impostato su `ValidationCompareOperator.DataTypeCheck`, questo metodo verifica solo il valore del `leftText` parametro per il tipo di dati specificato per il `type` parametro. Il `rightText` parametro viene ignorato.  
  
 Questa versione del metodo confronta i valori utilizzando il formato utilizzato dalle impostazioni cultura correnti. Per confrontare i valori utilizzando un formato indipendente dalla lingua, utilizzare il <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> versione di questo metodo di overload.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, cultureInvariantLeftText As Boolean, rightText As String, cultureInvariantRightText As Boolean, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, bool cultureInvariantLeftText, System::String ^ rightText, bool cultureInvariantRightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * bool * string * bool * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, cultureInvariantLeftText, rightText, cultureInvariantRightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="cultureInvariantLeftText" Type="System.Boolean" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="cultureInvariantRightText" Type="System.Boolean" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">Valore sul lato sinistro dell'operatore.</param>
        <param name="cultureInvariantLeftText">
          <see langword="true" /> per convertire i valori sul lato sinistro in un formato relativo a impostazioni cultura non associate; in caso contrario, <see langword="false" />.</param>
        <param name="rightText">Valore sul lato destro dell'operatore.</param>
        <param name="cultureInvariantRightText">
          <see langword="true" /> per convertire i valori sul lato destro in un formato relativo a impostazioni cultura non associate; in caso contrario, <see langword="false" />.</param>
        <param name="op">Uno dei valori di <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />.</param>
        <param name="type">Uno dei valori di <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <summary>Confronta due stringhe utilizzando l'operatore e il tipo di convalida di dati specificati. Questa versione di overload consente di specificare se i valori sono confrontati utilizzando un formato relativo a impostazioni cultura non associate.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="leftValue" /> fa riferimento al parametro <paramref name="rightValue" /> nel modo specificato dal parametro <paramref name="op" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> metodo viene utilizzato per verificare se il valore della `leftText` parametro è correlato al valore del `rightText` nel modo specificato dal parametro il `op` parametro. Il `type` parametro specifica il tipo di dati dei valori da confrontare.  
  
> [!NOTE]
>  Se il `op` parametro è impostato su `ValidationCompareOperator.DataTypeCheck`, questo metodo verifica solo il valore del `leftText` parametro per il tipo di dati specificato per il `type` parametro. Il `rightText` parametro viene ignorato.  
  
 Per indicare che i valori devono essere confrontati utilizzando un formato indipendente dalla lingua, passare `true` per il `cultureInvariantLeftText` e `cultureInvariantRightText` parametri; in caso contrario, i valori vengono confrontati con il formato utilizzato dalle impostazioni cultura correnti. Quando si confrontano valori utilizzando il formato utilizzato dalle impostazioni cultura correnti, provare a usare il <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> versione di questo metodo di overload.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte il testo specificato in un oggetto del tipo di dati specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType *  -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">Testo da convertire.</param>
        <param name="type">Uno dei valori di <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <param name="value">Il metodo restituisce un oggetto con il risultato della conversione. Questo parametro viene passato non inizializzato.</param>
        <summary>Converte il testo specificato in un oggetto del tipo di dati specificato. Questa versione del metodo di overload converte i valori di valuta, double e della data con il formato utilizzato dalle impostazioni cultura correnti.</summary>
        <returns>
          <see langword="true" /> se la conversione riesce; altrimenti, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29> metodo viene utilizzato per convertire il testo in un oggetto di tipo di dati specificato. Anche se il metodo restituisce `true` oppure `false` per indicare se la conversione ha avuto esito positivo, il valore convertito è archiviato nel `value` `out` parametro.  
  
> [!NOTE]
>  Se la conversione ha esito negativo, il `value` parametro è impostato su `null`.  
  
 Questa versione del metodo converte i valori con il formato utilizzato dalle impostazioni cultura correnti. Per convertire i valori utilizzando un formato indipendente dalla lingua, utilizzare il <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=nameWithType> versione di questo metodo di overload.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, cultureInvariant As Boolean, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType * bool *  -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, cultureInvariant, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">Testo da convertire.</param>
        <param name="type">Uno dei valori di <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <param name="cultureInvariant">
          <see langword="true" /> per convertire i valori in un formato relativo a impostazioni cultura non associate; in caso contrario, <see langword="false" />.</param>
        <param name="value">Il metodo restituisce un oggetto con il risultato della conversione. Questo parametro viene passato non inizializzato.</param>
        <summary>Converte il testo specificato in un oggetto del tipo di dati specificato. Questa versione del metodo di overload consente di specificare se i valori sono convertiti utilizzando un formato relativo a impostazioni cultura non associate.</summary>
        <returns>
          <see langword="true" /> se la conversione riesce; altrimenti, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29> metodo viene utilizzato per convertire il testo in un oggetto di tipo di dati specificato. Anche se il metodo restituisce `true` oppure `false` per indicare se la conversione ha avuto esito positivo, il valore convertito è archiviato nel `value` `out` parametro.  
  
> [!NOTE]
>  Se la conversione ha esito negativo, il `value` parametro è impostato su `null`.  
  
 Per indicare che i valori devono essere convertiti utilizzando un formato indipendente dalla lingua, passare `true` per il `cultureInvariant` parametro; in caso contrario, i valori vengono convertiti nel formato utilizzato dalle impostazioni cultura correnti. Quando si converte un valore utilizzando il formato utilizzato dalle impostazioni cultura correnti, provare a usare il <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=nameWithType> versione di questo metodo di overload.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="CultureInvariantValues">
      <MemberSignature Language="C#" Value="public bool CultureInvariantValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CultureInvariantValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInvariantValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CultureInvariantValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CultureInvariantValues : bool with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se i valori sono convertiti in un formato relativo a impostazioni cultura non associate prima del confronto.</summary>
        <value>
          <see langword="true" /> per convertire i valori in un formato relativo a impostazioni cultura non associate prima che vengano confrontati; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> è impostata su `true`, proprietà del controllo che non sono fortemente tipizzate vengono convertite in un formato indipendente dalla lingua prima del confronto. Quando questa proprietà è impostata su `false`, i valori vengono convertiti nel formato delle impostazioni cultura correnti. Il <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> proprietà non influisce sui valori che vengono immesse dagli utenti del controllo in una pagina Web.  
  
 Questa proprietà non può essere impostata tramite i temi o tramite i temi di foglio di stile. Per altre informazioni, vedere <xref:System.Web.UI.ThemeableAttribute> e [ASP.NET temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      </Docs>
    </Member>
    <Member MemberName="CutoffYear">
      <MemberSignature Language="C#" Value="protected static int CutoffYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CutoffYear" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property CutoffYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property int CutoffYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CutoffYear : int" Usage="System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore massimo utilizzabile per rappresentare un anno con due cifre.</summary>
        <value>Valore massimo utilizzabile per rappresentare un anno con due cifre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> proprietà per determinare l'anno massimo che può essere rappresentato da un anno a due cifre in un intervallo di 100 anni. Se, ad esempio, questa proprietà contiene il valore `2029`, è possibile rappresentare gli anni 1930 il 2029 utilizzando un anno a due cifre. L'anno a due cifre 30 viene interpretato come 1930, mentre 29 viene interpretato come 2029. Non è possibile modificare il valore di questa proprietà direttamente. Tuttavia, è possibile modificare l'anno massimo che può essere rappresentato da un anno a due cifre impostando il <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="DetermineRenderUplevel">
      <MemberSignature Language="C#" Value="protected override bool DetermineRenderUplevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DetermineRenderUplevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DetermineRenderUplevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool DetermineRenderUplevel();" />
      <MemberSignature Language="F#" Value="override this.DetermineRenderUplevel : unit -&gt; bool" Usage="baseCompareValidator.DetermineRenderUplevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se il controllo di convalida può essere sottoposto a rendering per un browser più recente (di livello superiore).</summary>
        <returns>
          <see langword="true" /> se è possibile eseguire il rendering del controllo di convalida per un browser di livello superiore; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel%2A> metodo è una funzione helper utilizzata principalmente il <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> proprietà per determinare se il browser del client supporta il rendering di "livello superiore" (per il rendering in un browser più recente). Il <xref:System.Web.UI.WebControls.BaseCompareValidator> classe esegue l'override di questo metodo per restituire `false` se le impostazioni cultura correnti utilizzano un calendario non gregoriano.  
  
> [!NOTE]
>  Questo metodo viene utilizzato principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" /> metodo, verificare di chiamare il metodo corrispondente nella classe base. In caso contrario, verranno ignorate alle condizioni definite nella classe base.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="GetDateElementOrder">
      <MemberSignature Language="C#" Value="protected static string GetDateElementOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string GetDateElementOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetDateElementOrder () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ GetDateElementOrder();" />
      <MemberSignature Language="F#" Value="static member GetDateElementOrder : unit -&gt; string" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina l'ordine di visualizzazione del mese, giorno e anno in un valore della data per le impostazioni cultura correnti.</summary>
        <returns>Stringa che rappresenta l'ordine di visualizzazione del mese, giorno e anno in un valore della data per le impostazioni cultura correnti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il mese, giorno e anno del valore date possono essere visualizzati in ordini diversi a seconda delle impostazioni cultura correnti. Il <xref:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder%2A> metodo viene utilizzato per determinare l'ordine in cui questi valori vengono visualizzati. Nella tabella seguente vengono illustrati i diversi valori restituiti da questo metodo.  
  
|Ordine degli elementi di data|Valore restituito|  
|------------------------|------------------|  
|Giorno, mese, anno|"dmy"|  
|Mese, giorno, anno|"mdy"|  
|Anno, mese, giorno|"ymd"|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFullYear">
      <MemberSignature Language="C#" Value="protected static int GetFullYear (int shortYear);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 GetFullYear(int32 shortYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetFullYear (shortYear As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int GetFullYear(int shortYear);" />
      <MemberSignature Language="F#" Value="static member GetFullYear : int -&gt; int" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetFullYear shortYear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shortYear">Anno a due cifre.</param>
        <summary>Genera la rappresentazione a quattro cifre dell'anno specificato con due sole cifre.</summary>
        <returns>Rappresentazione a quattro cifre dell'anno specificato con due sole cifre.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> per generare la rappresentazione di anno a quattro cifre dell'anno a due cifre specificato. La rappresentazione dell'anno a quattro cifre dipende dal valore della <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> proprietà, che contiene l'anno massimo che può essere rappresentato da un anno a due cifre in un intervallo di 100 anni. Ad esempio, se il <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> proprietà contiene il valore `2029`, il <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> metodo restituisce un anno tra 1930 e 2029. L'anno a due cifre 30 viene interpretato come 1930, mentre 29 viene interpretato come 2029. È possibile modificare l'anno massimo che può essere rappresentato da un anno a due cifre impostando il <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> proprietà.  
  
> [!NOTE]
>  Poiché questo metodo è `static`, è possibile usarlo senza creare un'istanza della classe, specificando il nome del metodo e il nome della classe, ad esempio, `BaseCompareValidator.GetFullYear`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationDataType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationDataType Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As ValidationDataType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationDataType Type { System::Web::UI::WebControls::ValidationDataType get(); void set(System::Web::UI::WebControls::ValidationDataType value); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Web.UI.WebControls.ValidationDataType with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di dati in cui vengono convertiti i valori da utilizzare per il confronto prima dell'esecuzione del confronto.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Web.UI.WebControls.ValidationDataType" />. Il valore predefinito è <see langword="String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> proprietà per specificare il tipo di dati utilizzato per il confronto. Il <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> proprietà viene usata in modo diverso da vari controlli di convalida di confronto.  
  
> [!IMPORTANT]
>  Quando il <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> è impostata su <xref:System.Web.UI.WebControls.ValidationDataType.Date> e il tipo di calendario corrente è non gregoriani, la convalida viene eseguita solo sul lato server. Lo script client validator supporta solo i calendari gregoriano.  
  
 Ad esempio, nel <xref:System.Web.UI.WebControls.RangeValidator> (controllo), tutti i valori confrontati (il limite superiore, il limite inferiore e valore del controllo di input) vengono convertiti nel tipo di dati specificato prima di eseguire qualsiasi confronto. Tuttavia, se si usa un <xref:System.Web.UI.WebControls.CompareValidator> controllo e dell'impostazione relativa <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> proprietà da `ValidationCompareOperator.DataTypeCheck`, solo il valore del controllo di input viene convertito nel tipo di dati specificato.  
  
> [!NOTE]
>  Se il valore del controllo di input associato al controllo di convalida non può essere convertito nel tipo di dati specificato, la convalida ha esito negativo. Il <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> del controllo di convalida è impostata su `false`.  
  
 Nella tabella seguente sono elencati i valori che è possibile utilizzare per il <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> proprietà.  
  
|Tipo di dati|Descrizione|  
|---------------|-----------------|  
|`String`|Specifica un tipo di dati stringa.|  
|`Integer`|Specifica un tipo di dati integer con segno a 32 bit.|  
|`Double`|Specifica tipo di dati numerico a virgola mobile a precisione doppia.|  
|`Date`|Specifica un tipo di dati date.|  
|`Currency`|Specifica un tipo di dati di tipo valuta.|  
  
 Questa proprietà non può essere impostata da temi oppure temi di fogli di stile. Per altre informazioni, vedere <xref:System.Web.UI.ThemeableAttribute> e [ASP.NET temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> proprietà per specificare il tipo di dati convertiti in valori confrontati prima che venga effettuato il confronto.  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il tipo di dati specificato non è uno dei valori <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
      </Docs>
    </Member>
  </Members>
</Type>