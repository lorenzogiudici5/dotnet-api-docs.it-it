<Type Name="TreeNodeCollection" FullName="System.Web.UI.WebControls.TreeNodeCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2382121d5364129fa236d74aea8a6ed85d34fa60" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta un insieme di oggetti <see cref="T:System.Web.UI.WebControls.TreeNode" /> nel controllo <see cref="T:System.Web.UI.WebControls.TreeView" />. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeNodeCollection> classe viene utilizzata per archiviare e gestire una raccolta di <xref:System.Web.UI.WebControls.TreeNode> gli oggetti di <xref:System.Web.UI.WebControls.TreeView> controllo. Il <xref:System.Web.UI.WebControls.TreeView> controlli utilizza la <xref:System.Web.UI.WebControls.TreeNodeCollection> classe in una delle relative proprietà. Memorizza i relativi nodi radice nel <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> proprietà e i nodi selezionati nella <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> proprietà. Il <xref:System.Web.UI.WebControls.TreeNodeCollection> insieme viene utilizzato anche per il <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> proprietà per archiviare i nodi figlio (se presente).  
  
 La <xref:System.Web.UI.WebControls.TreeNodeCollection> classe supporta diversi metodi per accedere agli elementi nella raccolta:  
  
-   Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A> indicizzatore per recuperare un <xref:System.Web.UI.WebControls.TreeNode> oggetto direttamente in un indice specifico in base zero.  
  
-   Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> metodo per creare un enumeratore che può essere utilizzato per scorrere la raccolta.  
  
-   Utilizzare `foreach` (c#) o `For Each` (Visual Basic) per l'iterazione della raccolta.  
  
-   Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> metodo per copiare il contenuto della raccolta in un <xref:System.Array> oggetto.  
  
 È possibile gestire a livello di codice il <xref:System.Web.UI.WebControls.TreeNodeCollection> aggiungendo e rimuovendo <xref:System.Web.UI.WebControls.TreeNode> oggetti. Per aggiungere nodi alla raccolta, utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> o <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> metodo. Per rimuovere nodi dalla raccolta, utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, o <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> metodo.  
  
> [!NOTE]
>  Quando il <xref:System.Web.UI.WebControls.TreeView> è associato a un'origine dati, il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> e <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> raccolte vengono popolate automaticamente ogni volta che si verifica l'associazione. Tutte le modifiche alle raccolte tra associazioni andranno persi. Per mantenere queste modifiche, aggiornare l'origine dati o per ricompilare manualmente ogni volta che si associa la raccolta.  
  
 Il <xref:System.Web.UI.WebControls.TreeNodeCollection> contiene proprietà e metodi che consentono di recuperare informazioni sulla raccolta di se stesso. Per trovare il numero di elementi presenti nella raccolta, utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> proprietà. Se si desidera determinare se la raccolta contiene un determinato <xref:System.Web.UI.WebControls.TreeNode> oggetto, usare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> metodo. Per ottenere l'indice di un <xref:System.Web.UI.WebControls.TreeNode> oggetto nella raccolta, utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come aggiungere nodi al livello di programmazione e rimuoverli da un <xref:System.Web.UI.WebControls.TreeNodeCollection>. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> e <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> restituiscono un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> utilizzando i valori predefiniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.TreeNodeCollection> classe utilizzando i valori predefiniti. Questo costruttore è comunemente utilizzato quando si crea una raccolta di nodi radice in cui un nodo padre (o proprietario) non è obbligatorio.  
  
> [!NOTE]
>  Quando si crea una raccolta di nodi non radice, è necessario utilizzare il costruttore di overload che accetta il `owner` parametro, invece di questo costruttore, per specificare il nodo padre.  
  
 Questo costruttore viene utilizzato principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeNode owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection(System::Web::UI::WebControls::TreeNode ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="owner">Oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> che rappresenta il nodo padre dell'insieme.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> utilizzando il nodo padre, o proprietario, specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.TreeNodeCollection> classe utilizzando il nodo padre specificato (o proprietario). Questo costruttore viene comunemente utilizzato quando si crea una raccolta di nodi non radice in cui è necessario specificare il nodo padre.  
  
> [!NOTE]
>  Quando si crea una raccolta di nodi radice, è opportuno utilizzare il costruttore predefinito poiché i nodi radice non dispone di un nodo padre.  
  
 Questo costruttore viene utilizzato principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="child">Oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> da accodare.</param>
        <summary>Aggiunge l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> specificato alla fine dell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> metodo per aggiungere l'oggetto specificato <xref:System.Web.UI.WebControls.TreeNode> oggetto alla fine del <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.TreeNodeCollection> consente di aggiungere riferimenti null (Nothing in Visual Basic), nonché duplicato <xref:System.Web.UI.WebControls.TreeNode> oggetti.  
  
 In alternativa, è possibile inserire un <xref:System.Web.UI.WebControls.TreeNode> oggetto di <xref:System.Web.UI.WebControls.TreeNodeCollection> in un indice specifico usando il <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> (metodo).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> metodo a livello di codice aggiungere un nodo per il <xref:System.Web.UI.WebControls.TreeNodeCollection>. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> e <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> ogni proprietà restituiscono un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="index">Posizione di indice in base zero in corrispondenza della quale inserire l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="child">L'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> da aggiungere.</param>
        <summary>Inserisce nell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> corrente in corrispondenza della posizione di indice specificata l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> per inserire l'oggetto specificato <xref:System.Web.UI.WebControls.TreeNode> oggetto di <xref:System.Web.UI.WebControls.TreeNodeCollection> in corrispondenza dell'indice in base zero specificato.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.TreeNodeCollection> consente di inserire riferimenti null (Nothing in Visual Basic), nonché duplicato <xref:System.Web.UI.WebControls.TreeNode> oggetti.  
  
 In alternativa, è possibile aggiungere un <xref:System.Web.UI.WebControls.TreeNode> oggetto alla fine del <xref:System.Web.UI.WebControls.TreeNodeCollection> utilizzando il <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> metodo a livello di codice aggiungere un nodo per il <xref:System.Web.UI.WebControls.TreeNodeCollection>. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> e <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> ogni proprietà restituiscono un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="child" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Svuota l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> metodo per rimuovere ogni <xref:System.Web.UI.WebControls.TreeNode> dall'oggetto di <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
> [!NOTE]
>  Per rimuovere un singolo nodo dalla raccolta, utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> o <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> metodo a livello di codice vuoto un <xref:System.Web.UI.WebControls.TreeNodeCollection>. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> e <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> restituiscono un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNode c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNode c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As TreeNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNode ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="c">Oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> da trovare.</param>
        <summary>Determina se l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> specificato è incluso nell'insieme.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> specificato è incluso nell'insieme; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> metodo per determinare se un <xref:System.Web.UI.WebControls.TreeNode> nell'oggetto è contenuto il <xref:System.Web.UI.WebControls.TreeNodeCollection>. Questo metodo viene comunemente utilizzato per verificare l'esistenza di un <xref:System.Web.UI.WebControls.TreeNode> oggetto prima di eseguire un'attività, ad esempio aggiungendo o rimuovendo il nodo dalla raccolta.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> metodo per determinare se il nodo selezionato è presente il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> insieme. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> proprietà restituisce un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNode[] nodeArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (nodeArray As TreeNode(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNode ^&gt; ^ nodeArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeArray" Type="System.Web.UI.WebControls.TreeNode[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nodeArray">Matrice in base zero di oggetti <see cref="T:System.Web.UI.WebControls.TreeNode" /> che riceve gli elementi copiati dall'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</param>
        <param name="index">Posizione nella matrice di destinazione in cui iniziare la ricezione del contenuto copiato.</param>
        <summary>Copia tutti gli elementi dall'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> a una matrice unidimensionale compatibile di oggetti <see cref="T:System.Web.UI.WebControls.TreeNode" />, a partire dall'indice specificato nella matrice di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> metodo per copiare il contenuto del <xref:System.Web.UI.WebControls.TreeNodeCollection> nell'oggetto specificato in base zero <xref:System.Array?displayProperty=nameWithType> oggetto. Gli elementi vengono copiati a partire dall'indice specificato della matrice di destinazione. Con il <xref:System.Array?displayProperty=nameWithType> dell'oggetto, è quindi possibile utilizzare la sintassi della matrice per accedere agli elementi di <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
 In alternativa, è inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> metodo per creare un enumeratore che può essere utilizzato per accedere agli elementi nella raccolta.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> metodo per copiare i valori di un <xref:System.Web.UI.WebControls.TreeNodeCollection> in una matrice. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> proprietà restituisce un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di elementi nell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <value>Numero di elementi presenti nel controllo <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> proprietà per determinare il numero di elementi in un <xref:System.Web.UI.WebControls.TreeNodeCollection>. Questa proprietà viene comunemente utilizzata quando si scorre una raccolta per determinare il limite superiore della raccolta. Il <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> proprietà è comunemente utilizzata per determinare se una raccolta è vuota.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> proprietà per determinare il numero di elementi di <xref:System.Web.UI.WebControls.TreeNodeCollection>. Esegue quindi una preordinata del <xref:System.Web.UI.WebControls.TreeView> controllo per visualizzare il testo di ogni nodo.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore che può essere utilizzato per scorrere un oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <returns>Enumeratore che può essere utilizzato per scorrere l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> metodo per creare un enumeratore che sia possibile scorrere facilmente per ottenere ogni elemento di <xref:System.Web.UI.WebControls.TreeNodeCollection>. Per ottenere l'elemento attualmente indicato nell'enumeratore, utilizzare il <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> proprietà. Utilizzare il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> metodo per spostare l'elemento successivo. Se si desidera riportare l'enumeratore all'inizio della raccolta, utilizzare il <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metodo.  
  
> [!NOTE]
>  Dopo aver creato un enumeratore o utilizzare il <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> (metodo), è necessario chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> metodo. In caso contrario, l'elemento rappresentato dal <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> proprietà non è definita.  
  
 In alternativa, è inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> metodo per creare un <xref:System.Array?displayProperty=nameWithType> oggetto che può essere utilizzato per accedere agli elementi nella raccolta. In alternativa è possibile utilizzare un `foreach` o `For Each` struttura per scorrere la raccolta.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> metodo per creare un enumeratore che contiene i nodi radice del <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 [!code-aspx-csharp[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/CS/treenodecollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/VB/treenodecollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> da individuare.</param>
        <summary>Determina l'indice dell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> specificato.</summary>
        <returns>Indice in base zero della prima occorrenza di <paramref name="value" /> all'interno dell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, se presente; in caso contrario, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> metodo per determinare l'indice in base zero dell'oggetto specificato <xref:System.Web.UI.WebControls.TreeNode> oggetto di <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto. Se il nodo non è presente nella raccolta, il metodo restituisce -1.  
  
> [!NOTE]
>  Se il nodo specificato è presente più volte nella raccolta, viene restituito l'indice della prima occorrenza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> metodo per determinare l'indice di un nodo radice. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> proprietà restituisce un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> è sincronizzato (thread-safe).</summary>
        <value>
          <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> proprietà viene utilizzata per indicare se l'accesso al <xref:System.Web.UI.WebControls.TreeNodeCollection> è sincronizzato (thread-safe). Questa proprietà è derivata dal <xref:System.Collections.ICollection?displayProperty=nameWithType> classe e viene eseguito l'override per restituire sempre `false`.  
  
 Per ulteriori informazioni sul <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> proprietà, vedere il <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> proprietà del <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaccia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ default[int] { System::Web::UI::WebControls::TreeNode ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice in base zero dell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> da recuperare.</param>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> in corrispondenza dell'indice specificato nell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> nell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> in corrispondenza dell'indice specificato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare l'indicizzatore per accedere a un <xref:System.Web.UI.WebControls.TreeNode> dall'oggetto di <xref:System.Web.UI.WebControls.TreeNodeCollection> in corrispondenza dell'indice specificato utilizzando la notazione di matrice. L'indicizzatore consente di modificare o sostituire un <xref:System.Web.UI.WebControls.TreeNode> oggetto nella raccolta direttamente. La raccolta è in base zero.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come utilizzare l'indicizzatore per accedere a un elemento di <xref:System.Web.UI.WebControls.TreeNodeCollection>. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> e <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> restituiscono un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> da rimuovere.</param>
        <summary>Rimuove dall'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> metodo per rimuovere il nodo specificato dalla raccolta. Tutti gli elementi successivi al nodo vengono spostati verso l'alto per riempire la posizione rimasta vuota. Vengono aggiornati anche gli indici degli elementi spostati.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.TreeNodeCollection> può contenere riferimenti null (Nothing in Visual Basic), nonché duplicare <xref:System.Web.UI.WebControls.TreeNode> oggetti.  
  
 In alternativa, è possibile rimuovere un nodo in un indice specifico usando il <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> metodo. È inoltre possibile rimuovere tutti i nodi nella raccolta utilizzando la <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> metodo a livello di codice rimuovere un nodo di <xref:System.Web.UI.WebControls.TreeNodeCollection>. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> e <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> ogni proprietà restituiscono un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Posizione di indice in base zero del nodo da rimuovere.</param>
        <summary>Rimuove dall'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> in corrispondenza della posizione di indice specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> metodo per rimuovere il <xref:System.Web.UI.WebControls.TreeNode> oggetto in corrispondenza della posizione di indice in base zero specificata da un <xref:System.Web.UI.WebControls.TreeNodeCollection>. Tutti gli elementi successivi al nodo vengono spostati verso l'alto per riempire la posizione rimasta vuota. Vengono aggiornati anche gli indici degli elementi spostati.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.TreeNodeCollection> può contenere riferimenti null (Nothing in Visual Basic), nonché duplicare <xref:System.Web.UI.WebControls.TreeNode> oggetti.  
  
 In alternativa, è possibile rimuovere uno specifico <xref:System.Web.UI.WebControls.TreeNode> oggetto utilizzando il <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> metodo. È inoltre possibile rimuovere tutti i nodi nella raccolta utilizzando la <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> metodo a livello di codice rimuovere un nodo di <xref:System.Web.UI.WebControls.TreeNodeCollection>. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> e <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> ogni proprietà restituiscono un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso all'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <value>Oggetto <see cref="T:System.Object" /> che può essere utilizzato per sincronizzare l'accesso all'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> proprietà fornisce una versione sincronizzata del <xref:System.Web.UI.WebControls.TreeNodeCollection> che può essere utilizzato con codice di sincronizzazione (threading).  
  
> [!CAUTION]
>  Il <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> della proprietà di questa classe sempre restituisce `false`, che indica che la <xref:System.Web.UI.WebControls.TreeNodeCollection> classe non è sincronizzata (non thread-safe).  
  
 Codice di sincronizzazione è necessario eseguire operazioni sul <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> oggetto del <xref:System.Web.UI.WebControls.TreeNodeCollection>, non direttamente sul <xref:System.Web.UI.WebControls.TreeNodeCollection> stesso. In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti. In particolare, viene mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente il <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
> [!NOTE]
>  L'oggetto restituito in questa implementazione è il <xref:System.Collections.ArrayList?displayProperty=nameWithType> oggetto utilizzato per archiviare il <xref:System.Web.UI.WebControls.TreeNode> oggetti nella raccolta.  
  
 L'enumerazione di una raccolta non è di per sé una procedura thread-safe. Anche se una raccolta è sincronizzata, altri thread può comunque modificare la raccolta, che determina l'enumeratore generare un'eccezione. Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.  
  
 Per ulteriori informazioni sul <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> proprietà, vedere il <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> proprietà del <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaccia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Oggetto <see cref="T:System.Array" /> in base zero che riceve gli elementi copiati dall'insieme <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</param>
        <param name="index">Posizione nella matrice di destinazione in cui iniziare la ricezione del contenuto copiato.</param>
        <summary>Copia tutti gli elementi dall'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> a una matrice unidimensionale compatibile <see cref="T:System.Array" />, a partire dall'indice specificato nella matrice di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> metodo per copiare il contenuto del <xref:System.Web.UI.WebControls.TreeNodeCollection> nell'oggetto specificato in base zero <xref:System.Array?displayProperty=nameWithType> oggetto. Gli elementi vengono copiati a partire dall'indice specificato della matrice di destinazione. Con il <xref:System.Array?displayProperty=nameWithType> dell'oggetto, è quindi possibile utilizzare la sintassi della matrice per accedere agli elementi di <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
 In alternativa, è inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> metodo per creare un enumeratore che può essere utilizzato per accedere agli elementi nella raccolta.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> metodo per copiare i valori di un <xref:System.Web.UI.WebControls.TreeNodeCollection> in una matrice. Si noti che il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> proprietà restituisce un <xref:System.Web.UI.WebControls.TreeNodeCollection> oggetto.  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> non è una matrice di oggetti <see cref="T:System.Web.UI.WebControls.TreeNode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> sta salvando le modifiche apportate al relativo stato di visualizzazione.</summary>
        <value>
          <see langword="true" /> se il controllo è contrassegnato per il salvataggio dello stato; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Oggetto <see cref="T:System.Object" /> che contiene i valori salvati dello stato di visualizzazione.</param>
        <summary>Carica lo stato di visualizzazione precedentemente salvato dell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva le modifiche apportate allo stato di visualizzazione in un oggetto <see cref="T:System.Object" />.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> contenente le modifiche apportate allo stato di visualizzazione.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica all'oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> di tenere traccia delle modifiche apportate allo stato di visualizzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo la chiamata a questo metodo su un controllo server, il <xref:System.Web.UI.Control.IsTrackingViewState%2A> restituirà `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
  </Members>
</Type>