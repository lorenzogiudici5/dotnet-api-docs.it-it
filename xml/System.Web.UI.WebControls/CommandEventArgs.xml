<Type Name="CommandEventArgs" FullName="System.Web.UI.WebControls.CommandEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a765e21732a1214948bd7302341c22acbc2d280" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36383759" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CommandEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type CommandEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce dati per l'evento <see langword="Command" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Command` evento viene generato quando un <xref:System.Web.UI.WebControls.Button> o <xref:System.Web.UI.WebControls.ImageButton> fa clic sul controllo.  
  
 Il <xref:System.Web.UI.WebControls.CommandEventArgs> oggetto contiene i dati relativi il `Command` eventi che sono possibile accedere nell'evento gestore. Utilizzando le proprietà disponibili nel <xref:System.Web.UI.WebControls.CommandEventArgs> (classe), è possibile determinare il nome del comando da eseguire, ad esempio `Sort`, oltre a un argomento facoltativo che integrano il comando, ad esempio `Ascending`.  
  
 Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.CommandEventArgs>, vedere il <xref:System.Web.UI.WebControls.CommandEventArgs.%23ctor%2A> costruttore.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come accedere alle proprietà in <xref:System.Web.UI.WebControls.CommandEventArgs> per determinare il comando da eseguire. In questo esempio viene specificato il gestore dell'evento in modo dichiarativo, tramite il <xref:System.Web.UI.WebControls.Button.OnClick%2A> proprietà del <xref:System.Web.UI.WebControls.Button> controllo.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 Esempio di codice riportato di seguito viene illustrato come specificare il gestore dell'evento e aggiungerlo a livello di codice all'evento nel `Page_Load` metodo.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <altmember cref="E:System.Web.UI.WebControls.ImageButton.Command" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandEventArgs (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandEventArgs(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CommandEventArgs : System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.CommandEventArgs" Usage="new System.Web.UI.WebControls.CommandEventArgs e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> con un altro oggetto <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare e inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.CommandEventArgs> classe utilizzando l'oggetto specificato <xref:System.Web.UI.WebControls.CommandEventArgs> oggetto.  
  
 Quando un'istanza di <xref:System.Web.UI.WebControls.CommandEventArgs> viene creato da una chiamata a questo costruttore, le proprietà seguenti vengono inizializzate sui valori specificati.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|CommandName|Parametro `e.CommandName`.|  
|CommandArgument|Parametro `e.CommandArgument`.|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare e inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.CommandEventArgs> classe utilizzando l'oggetto specificato <xref:System.Web.UI.WebControls.CommandEventArgs> oggetto.  
  
 [!code-csharp[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandEventArgs (string commandName, object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandName, object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandName As String, argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandEventArgs(System::String ^ commandName, System::Object ^ argument);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CommandEventArgs : string * obj -&gt; System.Web.UI.WebControls.CommandEventArgs" Usage="new System.Web.UI.WebControls.CommandEventArgs (commandName, argument)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandName">Nome del comando.</param>
        <param name="argument">Oggetto <see cref="T:System.Object" /> contenente gli argomenti del comando.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> con il nome del comando e l'argomento specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare e inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.CommandEventArgs> classe utilizzando il nome del comando specificato e l'argomento.  
  
 Quando un'istanza di <xref:System.Web.UI.WebControls.CommandEventArgs> viene creato da una chiamata a questo costruttore, le proprietà seguenti vengono inizializzate sui valori specificati.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|CommandName|Valore del parametro `commandName`.|  
|CommandArgument|Valore del parametro `argument`.|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare e inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.CommandEventArgs> classe utilizzando il nome del comando specificato e l'argomento.  
  
 [!code-csharp[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/CS/source.cs#1)]
 [!code-vb[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public object CommandArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandArgument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandArgument { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : obj" Usage="System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'argomento del comando.</summary>
        <value>Un oggetto <see cref="T:System.Object" /> contenente l'argomento del comando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> può contenere qualsiasi stringa impostata dal programmatore. Il <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> proprietà integra la <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> proprietà in modo da fornire informazioni aggiuntive per il comando. Ad esempio, è possibile impostare il <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> proprietà da `Sort` e impostare il <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> proprietà `Ascending` per specificare un comando per ordinare in ordine crescente.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> proprietà per determinare informazioni aggiuntive per il comando da eseguire.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string" Usage="System.Web.UI.WebControls.CommandEventArgs.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del comando.</summary>
        <value>Nome del comando da eseguire.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> proprietà per determinare il comando da eseguire. Il <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> proprietà può contenere qualsiasi stringa impostata dal programmatore. Il programmatore può identificare il nome del comando nel codice ed eseguire le operazioni appropriate.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> proprietà per determinare a livello di codice il comando da eseguire.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />
      </Docs>
    </Member>
  </Members>
</Type>