<Type Name="TableCellCollection" FullName="System.Web.UI.WebControls.TableCellCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67f97e655514071f0c9869b850f1746ce5436f6f" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39979878" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TableCellCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableCellCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TableCellCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableCellCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableCellCollection sealed : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type TableCellCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TableCellsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TableCellsCollectionEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TableCellsCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Incapsula un insieme di oggetti <see cref="T:System.Web.UI.WebControls.TableHeaderCell" /> e <see cref="T:System.Web.UI.WebControls.TableCell" /> che costituiscono una riga in un controllo <see cref="T:System.Web.UI.WebControls.Table" />. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa classe per gestire a livello di codice una raccolta di <xref:System.Web.UI.WebControls.TableCell> degli oggetti che compongono una riga in un <xref:System.Web.UI.WebControls.Table> controllo. Questa classe viene comunemente utilizzata per aggiungere o rimuovere le celle da una riga in un <xref:System.Web.UI.WebControls.Table> controllo.  
  
> [!NOTE]
>  Oggetto <xref:System.Web.UI.WebControls.Table> controllo contiene un <xref:System.Web.UI.WebControls.Table.Rows%2A> raccolta che rappresenta una raccolta di <xref:System.Web.UI.WebControls.TableRow> oggetti. Ciascuna <xref:System.Web.UI.WebControls.TableRow> rappresenta una singola riga nella tabella e contiene una <xref:System.Web.UI.WebControls.TableRow.Cells%2A> raccolta che rappresenta una raccolta di <xref:System.Web.UI.WebControls.TableCell> oggetti. Questi <xref:System.Web.UI.WebControls.TableCell> oggetti rappresentano le singole celle della tabella. Per ottenere una singola cella, è innanzitutto necessario ottenere un <xref:System.Web.UI.WebControls.TableRow> dal <xref:System.Web.UI.WebControls.Table.Rows%2A> raccolta di un <xref:System.Web.UI.WebControls.Table> controllo. È quindi possibile ottenere un <xref:System.Web.UI.WebControls.TableCell> dal <xref:System.Web.UI.WebControls.TableRow.Cells%2A> insieme del <xref:System.Web.UI.WebControls.TableRow>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come a livello di codice è riempire un <xref:System.Web.UI.WebControls.Table> controllo. <xref:System.Web.UI.WebControls.TableCell> oggetti che rappresentano le singole celle, vengono aggiunte alla <xref:System.Web.UI.WebControls.TableRow> oggetti che rappresentano le singole righe, tramite il <xref:System.Web.UI.WebControls.TableRow.Cells%2A> proprietà.  
  
 [!code-aspx-csharp[Classic TableCellCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TableRow" />
    <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.TableCell" />
    <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
    <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
    <altmember cref="T:System.Web.UI.WebControls.Table" />
    <altmember cref="T:System.Web.UI.WebControls.TableCellCollection" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.TableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.TableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (cell As TableCell) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::TableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TableCell -&gt; int" Usage="tableCellCollection.Add cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
      </Parameters>
      <Docs>
        <param name="cell">Oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> da aggiungere alla raccolta.</param>
        <summary>Accoda l'oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> specificato alla fine di <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <returns>Il numero di indice di <see cref="T:System.Web.UI.WebControls.TableCell" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo per aggiungere l'oggetto specificato <xref:System.Web.UI.WebControls.TableCell> alla fine di un <xref:System.Web.UI.WebControls.TableCellCollection>.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Web.UI.WebControls.TableCellCollection.Add%2A> metodo per aggiungere un' <xref:System.Web.UI.WebControls.TableCell> a un <xref:System.Web.UI.WebControls.TableCellCollection>. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.TableRow.Cells%2A> proprietà del <xref:System.Web.UI.WebControls.TableRow> è un'istanza del <xref:System.Web.UI.WebControls.TableCellCollection> classe.  
  
 [!code-aspx-csharp[Classic TableCellCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)" />
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.AddRange(System.Web.UI.WebControls.TableCell[])" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, cell As TableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.TableCell -&gt; unit" Usage="tableCellCollection.AddAt (index, cell)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
      </Parameters>
      <Docs>
        <param name="index">Posizione in <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> in cui aggiungere l'oggetto <see cref="T:System.Web.UI.WebControls.TableCell" />.</param>
        <param name="cell">Oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> da aggiungere a <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</param>
        <summary>Aggiunge l'oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> specificato a <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> nella posizione dell'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo per inserire l'oggetto specificato <xref:System.Web.UI.WebControls.TableCell> in un <xref:System.Web.UI.WebControls.TableCellCollection> in corrispondenza dell'indice specificato.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Web.UI.WebControls.TableCellCollection.AddAt%2A> metodo per aggiungere un' <xref:System.Web.UI.WebControls.TableCell> al centro di un <xref:System.Web.UI.WebControls.TableCellCollection>. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.TableRow.Cells%2A> proprietà del <xref:System.Web.UI.WebControls.TableRow> è un'istanza del <xref:System.Web.UI.WebControls.TableCellCollection> classe.  
  
 [!code-aspx-csharp[Classic TableCellCollection.AddAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.AddAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.AddAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.AddAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.AddRange(System.Web.UI.WebControls.TableCell[])" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.UI.WebControls.TableCell[] cells);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.UI.WebControls.TableCell[] cells) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.AddRange(System.Web.UI.WebControls.TableCell[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (cells As TableCell())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Web::UI::WebControls::TableCell ^&gt; ^ cells);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.UI.WebControls.TableCell[] -&gt; unit" Usage="tableCellCollection.AddRange cells" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cells" Type="System.Web.UI.WebControls.TableCell[]" />
      </Parameters>
      <Docs>
        <param name="cells">Matrice contenente gli oggetti <see cref="T:System.Web.UI.WebControls.TableCell" /> da aggiungere all'insieme.</param>
        <summary>Accoda gli oggetti <see cref="T:System.Web.UI.WebControls.TableCell" /> dalla matrice specificata alla fine dell'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.TableCellCollection.AddRange%2A> metodo per aggiungere il <xref:System.Web.UI.WebControls.TableCell> oggetti dalla matrice specificata alla raccolta. Questo metodo viene comunemente utilizzato durante la creazione di una riga di una tabella. Per costruire una riga di una tabella, creare innanzitutto una matrice di <xref:System.Web.UI.WebControls.TableCell> oggetti per rappresentare le celle della riga. Successivamente, usare il <xref:System.Web.UI.WebControls.TableCellCollection.AddRange%2A> , passando la matrice come argomento, per aggiungere il <xref:System.Web.UI.WebControls.TableCell> oggetti alla raccolta.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TableCellCollection.AddRange%2A> metodo per aggiungere i <xref:System.Web.UI.WebControls.TableCell> gli oggetti da una matrice a un <xref:System.Web.UI.WebControls.TableCellCollection>. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.TableRow.Cells%2A> proprietà del <xref:System.Web.UI.WebControls.TableRow> è un'istanza del <xref:System.Web.UI.WebControls.TableCellCollection> classe.  
  
 [!code-csharp[TableCellCollection_AddRange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCellCollection_AddRange/CS/tablecellcollection_addrange.cs.aspx#1)]
 [!code-vb[TableCellCollection_AddRange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCellCollection_AddRange/VB/tablecellcollection_addrange.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="cells" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="tableCellCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove tutti gli oggetti <see cref="T:System.Web.UI.WebControls.TableCell" /> da <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo per rimuovere tutti i <xref:System.Web.UI.WebControls.TableCell> oggetti dal <xref:System.Web.UI.WebControls.TableCellCollection> e impostare il <xref:System.Web.UI.WebControls.TableCellCollection.Count%2A> proprietà su 0.  
  
> [!NOTE]
>  Questo metodo rimuove il <xref:System.Web.UI.WebControls.TableCell> oggetti dal <xref:System.Web.UI.WebControls.TableCellCollection>, ma non rimuove le <xref:System.Web.UI.WebControls.TableRow> dal <xref:System.Web.UI.WebControls.Table> controllo. Assicurarsi di rimuovere anche il <xref:System.Web.UI.WebControls.TableRow> se si desidera rimuovere completamente una riga dalla tabella.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Web.UI.WebControls.TableCellCollection.Clear%2A> metodo per rimuovere tutti <xref:System.Web.UI.WebControls.TableCell> oggetti dalla riga della tabella centrale e li sostituisce con nuovo <xref:System.Web.UI.WebControls.TableCell> oggetti.  
  
 [!code-aspx-csharp[Classic TableCellCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
        <altmember cref="P:System.Web.UI.WebControls.TableCellCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="tableCellCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" /> in base zero che riceve gli elementi copiati dalla classe <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</param>
        <param name="index">Primo indice nella matrice <see cref="T:System.Array" /> specificata per ricevere gli elementi.</param>
        <summary>Copia gli elementi da <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> all'oggetto <see cref="T:System.Array" /> specificato, a partire dall'indice specificato in <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo per copiare il contenuto del <xref:System.Web.UI.WebControls.TableCellCollection> nell'oggetto specificato <xref:System.Array?displayProperty=nameWithType> iniziando in corrispondenza dell'indice specificato.  
  
> [!NOTE]
>  Il `array` il parametro deve essere in base zero <xref:System.Array?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Web.UI.WebControls.TableCellCollection.CopyTo%2A> metodo per copiare gli elementi dal <xref:System.Web.UI.WebControls.TableCellCollection> nella matrice specificata.  
  
 [!code-aspx-csharp[Classic TableCellCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.CopyTo Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.CopyTo Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.TableCellCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di oggetti <see cref="T:System.Web.UI.WebControls.TableCell" /> nella classe <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <value>Numero di oggetti <see cref="T:System.Web.UI.WebControls.TableCell" /> di <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per determinare il numero di celle di <xref:System.Web.UI.WebControls.TableCellCollection>. Il <xref:System.Web.UI.WebControls.TableCellCollection.Count%2A> proprietà spesso viene utilizzata quando si scorre la raccolta per determinare l'angolo limite.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Web.UI.WebControls.TableCellCollection.Count%2A> proprietà per determinare il numero di celle nel <xref:System.Web.UI.WebControls.TableCellCollection>. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.TableRow.Cells%2A> proprietà del <xref:System.Web.UI.WebControls.TableRow> è un'istanza di <xref:System.Web.UI.WebControls.TableCellCollection> classe.  
  
 [!code-csharp[Classic TableCellCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic TableCellCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="GetCellIndex">
      <MemberSignature Language="C#" Value="public int GetCellIndex (System.Web.UI.WebControls.TableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellIndex(class System.Web.UI.WebControls.TableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.GetCellIndex(System.Web.UI.WebControls.TableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellIndex (cell As TableCell) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCellIndex(System::Web::UI::WebControls::TableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.GetCellIndex : System.Web.UI.WebControls.TableCell -&gt; int" Usage="tableCellCollection.GetCellIndex cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
      </Parameters>
      <Docs>
        <param name="cell">Oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> di cui ottenere l'indice in <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</param>
        <summary>Restituisce un valore che rappresenta l’indice dell'oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> specificato da <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <returns>L'indice dell'oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> specificato all'interno di <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. Il valore predefinito è -1, che indica che non è stata trovata nessuna corrispondenza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo per determinare l'indice dell'oggetto specificato <xref:System.Web.UI.WebControls.TableCell> nella <xref:System.Web.UI.WebControls.TableCellCollection>. Se l'oggetto specificato <xref:System.Web.UI.WebControls.TableCell> non è viene trovato, viene restituito un indice di -1.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TableCellCollection.GetCellIndex%2A> proprietà per visualizzare l'indice di colonna della cella selezionata.  
  
 [!code-aspx-csharp[Classic TableCellCollection.GetCellIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.GetCellIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.GetCellIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.GetCellIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="tableCellCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto implementato <see cref="T:System.Collections.IEnumerator" /> contenente tutti gli oggetti <see cref="T:System.Web.UI.WebControls.TableCell" /> presenti nella classe <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <returns>Un oggetto implementato <see cref="T:System.Collections.IEnumerator" /> che contiene tutti gli oggetti <see cref="T:System.Web.UI.WebControls.TableCell" /> all'interno di <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo per creare un <xref:System.Collections.IEnumerator?displayProperty=nameWithType> oggetto che può scorrere facilmente per ottenere ogni elemento implementato il <xref:System.Web.UI.WebControls.TableCellCollection>.  
  
 Usare il <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> proprietà da ottenere l'elemento attualmente puntato nella raccolta.  
  
 Usare il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> metodo per spostare l'elemento successivo nella raccolta.  
  
 Usare il <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> eseguire il metodo per spostare l'enumeratore sulla posizione iniziale.  
  
> [!NOTE]
>  Il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> metodo deve essere chiamato dopo la creazione di un <xref:System.Collections.IEnumerator?displayProperty=nameWithType> oggetto implementato o dopo aver usato la <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metodo per spostare l'enumeratore al primo elemento nella raccolta. In caso contrario, l'elemento rappresentato dal <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> proprietà non è definita.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Web.UI.WebControls.TableCellCollection.GetEnumerator%2A> metodo per creare un <xref:System.Collections.IEnumerator?displayProperty=nameWithType> implementato l'oggetto. Quindi scorrere per visualizzare gli elementi nella riga selezionata.  
  
 [!code-aspx-csharp[Classic TableCellCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.GetEnumerator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.GetEnumerator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.TableCellCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> è di sola lettura.</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce sempre `false` per indicare che il <xref:System.Web.UI.WebControls.TableCellCollection> possibile scrivere in tutti i casi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.TableCellCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'accesso alla classe <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> è sincronizzato (thread-safe).</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è derivata da <xref:System.Collections.ICollection?displayProperty=nameWithType> e viene sottoposto a override per restituire sempre `false`.  
  
 Per altre informazioni sul <xref:System.Web.UI.WebControls.TableCellCollection.IsSynchronized%2A> proprietà, vedere la <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> proprietà del <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaccia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableCell this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableCell Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TableCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableCell ^ default[int] { System::Web::UI::WebControls::TableCell ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TableCell" Usage="System.Web.UI.WebControls.TableCellCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Valore di indice ordinale che specifica l'oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> da restituire.</param>
        <summary>Ottiene un oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> da <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> in corrispondenza dell'indice specificato.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> che rappresenta un elemento di <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare l'indicizzatore per ottenere un singolo <xref:System.Web.UI.WebControls.TableCell> nella <xref:System.Web.UI.WebControls.TableCellCollection> in corrispondenza dell'indice specificato usando la notazione di matrice semplice.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare l'indicizzatore per ottenere un <xref:System.Web.UI.WebControls.TableCell> da un <xref:System.Web.UI.WebControls.TableCellCollection>. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.TableRow.Cells%2A> proprietà del <xref:System.Web.UI.WebControls.TableRow> è un'istanza del <xref:System.Web.UI.WebControls.TableCellCollection> classe.  
  
 [!code-aspx-csharp[Classic TableCellCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.Remove(System.Web.UI.WebControls.TableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (cell As TableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TableCell -&gt; unit" Usage="tableCellCollection.Remove cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
      </Parameters>
      <Docs>
        <param name="cell">Oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> da rimuovere da <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</param>
        <summary>Rimuove l'oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> specificato dall'oggetto <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per rimuovere l'oggetto specificato <xref:System.Web.UI.WebControls.TableCell> da un <xref:System.Web.UI.WebControls.TableCellCollection>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TableCellCollection.Remove%2A> metodo per rimuovere la colonna centro dalla tabella. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.TableRow.Cells%2A> proprietà del <xref:System.Web.UI.WebControls.TableRow> è un'istanza del <xref:System.Web.UI.WebControls.TableCellCollection> classe.  
  
 [!code-aspx-csharp[Classic TableCellCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="tableCellCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell'oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> da rimuovere da <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</param>
        <summary>Rimuove un oggetto <see cref="T:System.Web.UI.WebControls.TableCell" /> da <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> in corrispondenza dell'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per rimuovere un <xref:System.Web.UI.WebControls.TableCell> da un <xref:System.Web.UI.WebControls.TableCellCollection> in corrispondenza dell'indice specificato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TableCellCollection.RemoveAt%2A> metodo per rimuovere la quarta colonna della tabella. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.TableRow.Cells%2A> proprietà del <xref:System.Web.UI.WebControls.TableRow> è un'istanza del <xref:System.Web.UI.WebControls.TableCellCollection> classe. Si noti anche che l'indice del <xref:System.Web.UI.WebControls.TableRow.Cells%2A> insieme è in base zero.  
  
 [!code-aspx-csharp[Classic TableCellCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.RemoveAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.RemoveAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.Remove(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.TableCellCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l’oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <value>Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto restituito in questa implementazione è la <xref:System.Web.UI.WebControls.TableCellCollection> stesso.  
  
 Per altre informazioni sul <xref:System.Web.UI.WebControls.TableCellCollection.SyncRoot%2A> proprietà, vedere la <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> proprietà del <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaccia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (o As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ o) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Oggetto da aggiungere alla raccolta.</param>
        <summary>Aggiunge un oggetto alla raccolta.</summary>
        <returns>Indice in corrispondenza del quale l'oggetto è stato aggiunto alla raccolta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, è consigliabile usare la <xref:System.Web.UI.WebControls.TableCellCollection.Add%2A?displayProperty=nameWithType> metodo per aggiungere un elemento a un <xref:System.Web.UI.WebControls.TableCellCollection> oggetto.  
  
 Il <xref:System.Web.UI.WebControls.TableCellCollection.System%23Collections%23IList%23Add%2A?displayProperty=nameWithType> metodo è un'implementazione di membro di interfaccia esplicita. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.TableCellCollection> a un'interfaccia <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (o As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ o) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Oggetto da individuare all'interno dell'insieme.</param>
        <summary>Determina se l'oggetto specificato è contenuto nell'insieme.</summary>
        <returns>
          <see langword="true" /> se l'oggetto è incluso nella raccolta, in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TableCellCollection.System%23Collections%23IList%23Contains%2A> metodo è un'implementazione di membro di interfaccia esplicita. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.TableCellCollection> a un'interfaccia <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (o As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ o) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Oggetto da individuare all'interno dell'insieme.</param>
        <summary>Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'insieme.</summary>
        <returns>L'indice in base zero della prima occorrenza dell'oggetto all'interno dell'insieme, altrimenti -1 se l'oggetto non è contenuto nell'insieme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, è consigliabile usare la <xref:System.Web.UI.WebControls.TableCellCollection.GetCellIndex%2A> metodo per ottenere l'indice di un elemento in un <xref:System.Web.UI.WebControls.TableCellCollection> oggetto.  
  
 Il <xref:System.Web.UI.WebControls.TableCellCollection.System%23Collections%23IList%23IndexOf%2A> metodo è un'implementazione di membro di interfaccia esplicita. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.TableCellCollection> a un'interfaccia <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.GetCellIndex(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, o As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ o) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Indice a base zero nell'insieme in corrispondenza del quale inserire l'oggetto.</param>
        <param name="o">Oggetto da inserire nella raccolta.</param>
        <summary>Inserisce un oggetto nella raccolta in corrispondenza dell'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, è consigliabile usare la <xref:System.Web.UI.WebControls.TableCellCollection.AddAt%2A> metodo per aggiungere un elemento a un <xref:System.Web.UI.WebControls.TableCellCollection> oggetto.  
  
 Il <xref:System.Web.UI.WebControls.TableCellCollection.System%23Collections%23IList%23Insert%2A> metodo è un'implementazione di membro di interfaccia esplicita. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.TableCellCollection> a un'interfaccia <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value>
          <see langword="true" /> se l'elenco ha una dimensione fissa; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere usato solo quando la <xref:System.Web.UI.WebControls.TableCellCollection> cast dell'istanza per il <xref:System.Collections.IList> interfaccia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
        <value>Elemento in corrispondenza dell'indice specificato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere usato solo quando la <xref:System.Web.UI.WebControls.TableCellCollection> cast dell'istanza per il <xref:System.Collections.IList> interfaccia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (o As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ o) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Oggetto da rimuovere dalla raccolta.</param>
        <summary>Rimuove un oggetto dall'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, è consigliabile usare la <xref:System.Web.UI.WebControls.TableCellCollection.Remove%2A?displayProperty=nameWithType> metodo per rimuovere un elemento da un <xref:System.Web.UI.WebControls.TableCellCollection> oggetto.  
  
 Il <xref:System.Web.UI.WebControls.TableCellCollection.System%23Collections%23IList%23Remove%2A> metodo è un'implementazione di membro di interfaccia esplicita. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.WebControls.TableCellCollection> a un'interfaccia <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.Remove(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>