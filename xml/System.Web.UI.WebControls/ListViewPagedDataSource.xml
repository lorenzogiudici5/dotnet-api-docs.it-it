<Type Name="ListViewPagedDataSource" FullName="System.Web.UI.WebControls.ListViewPagedDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a7cafd32c20e9e350f914327ca92e832064eaa5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36381022" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewPagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewPagedDataSource extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ComponentModel.ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewPagedDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewPagedDataSource&#xA;Implements ICollection, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewPagedDataSource : System::Collections::ICollection, System::ComponentModel::ITypedList" />
  <TypeSignature Language="F#" Value="type ListViewPagedDataSource = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ITypedList" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Encapsulates the paging-related properties of a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ListViewPagedDataSource> classe incapsula le proprietà che consentono il <xref:System.Web.UI.WebControls.ListView> controllo di eseguire il paging.  
  
 Questa classe utilizza il miglior metodo per enumerare i dati associati. Se l'origine dati sottostante supporta l'accesso indicizzato (ad esempio <xref:System.Array?displayProperty=nameWithType> e <xref:System.Collections.IList?displayProperty=nameWithType> oggetti), la classe utilizza tale accesso. In caso contrario, la classe utilizza l'enumeratore creato mediante il <xref:System.Collections.IEnumerable.GetEnumerator%2A> metodo.  
  
 Per un elenco dei valori iniziali delle proprietà di un'istanza della classe <xref:System.Web.UI.WebControls.ListViewPagedDataSource>, vedere il costruttore <xref:System.Web.UI.WebControls.ListViewPagedDataSource.%23ctor%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Array" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.IEnumerable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewPagedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewPagedDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewPagedDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewPagedDataSource" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare e inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.ListViewPagedDataSource> classe.  
  
 Di seguito sono illustrati i valori iniziali delle proprietà di un'istanza della classe <xref:System.Web.UI.WebControls.ListViewPagedDataSource>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount%2A>|0|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowServerPaging">
      <MemberSignature Language="C#" Value="public bool AllowServerPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowServerPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowServerPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowServerPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowServerPaging : bool with get, set" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether server-based paging is enabled.</summary>
        <value>
          <see langword="true" /> Se il paging basato su server è abilitato. in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging%2A> proprietà per specificare se è abilitato il paging basato su server. Se questa proprietà è impostata su `true`, l'oggetto origine dati esegue il paging basato su server. In caso contrario, il <xref:System.Windows.Forms.ListView> controllo esegue il paging basato su interfaccia utente. Nel paging basato su interfaccia utente, il <xref:System.Windows.Forms.ListView> controllo richiede tutti i record dall'origine dati e utilizza solo quelli per la pagina corrente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewPagedDataSource.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">A zero-based <see cref="T:System.Array" /> object that receives the copied items from the data source.</param>
        <param name="index">The first position in the specified <see cref="T:System.Array" /> object to receive the copied contents.</param>
        <summary>Copies all the items from the data source to the specified <see cref="T:System.Array" /> object, starting at the specified index in <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per copiare il contenuto dell'origine dati specificato <xref:System.Array?displayProperty=nameWithType> oggetto, iniziando in corrispondenza dell'indice specificato. Il <xref:System.Array?displayProperty=nameWithType> oggetto viene spesso utilizzato per scorrere gli elementi nell'origine dati.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of items that will be used from the data source for the current page.</summary>
        <value>Il numero di elementi che verranno utilizzati dall'origine dati per la pagina corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.ListViewPagedDataSource.Count%2A> proprietà per determinare il numero di elementi che verranno utilizzati dall'origine dati. Il valore restituito è determinato in base ai criteri seguenti:  
  
-   Se la pagina corrente non è l'ultima pagina e il <xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A> è impostata su un valore che è maggiore o uguale a 0, il valore di <xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A> proprietà viene restituita.  
  
-   Se la pagina corrente non è l'ultima pagina e il <xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A> è impostata su un valore che è minore di 0, il valore della <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A> viene sottratto dal valore della proprietà di <xref:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex%2A> proprietà prima che venga restituito.  
  
-   Se la pagina corrente è l'ultima pagina, il valore della <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A> viene sottratto dal valore della proprietà di <xref:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex%2A> proprietà prima che venga restituito.  
  
-   Se il <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A> proprietà `null`, viene restituito 0.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerable ^ DataSource { System::Collections::IEnumerable ^ get(); void set(System::Collections::IEnumerable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Collections.IEnumerable with get, set" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the data source.</summary>
        <value>Oggetto che implementa <see cref="T:System.Collections.IEnumerable" /> che rappresenta l'origine dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A> proprietà da ottenere o impostare l'origine dati che il paging.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceCount">
      <MemberSignature Language="C#" Value="public int DataSourceCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataSourceCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSourceCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataSourceCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceCount : int" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of items in the data source.</summary>
        <value>Il numero di elementi nell'origine dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A> proprietà per determinare il numero di elementi presenti nell'origine dati. Se viene usato il paging basato su server, il valore di <xref:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount%2A> proprietà viene restituita; in caso contrario, viene restituito il numero totale di elementi nell'origine dati.  
  
> [!NOTE]
>  Se il <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A> proprietà `null`, viene restituito 0.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The data source object does not implement the <see cref="T:System.Collections.ICollection" /> interface.</exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewPagedDataSource.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an object that implements <see cref="T:System.Collections.IEnumerator" /> and that contains all items in the data source.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> object that contains all items in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per ottenere un <xref:System.Collections.IEnumerator?displayProperty=nameWithType> dell'oggetto che è possibile utilizzare per accedere ai singoli elementi nell'origine dati. Per accedere all'elemento in corrispondenza della posizione corrente nell'enumeratore, utilizzare il <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> proprietà. Utilizzare il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> metodo per spostare l'elemento successivo della raccolta. Per spostare l'enumeratore sulla propria posizione originale, usare il <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metodo.  
  
> [!NOTE]
>  Quando si innanzitutto Ottiene l'enumeratore o quando si chiama il <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metodo per spostare l'enumeratore al primo elemento nella raccolta, è necessario chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> metodo. In caso contrario, l'elemento rappresentato dal <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> proprietà non è definita.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="listViewPagedDataSource.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the collection as bindable. This can be <see langword="null" />.</param>
        <summary>Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object that represents the properties that are used to bind data.</summary>
        <returns>The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object that represents the properties that are used to bind data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties%2A> metodo per ottenere un <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=nameWithType> oggetto che rappresenta le proprietà che consentono di associare i dati. Il <xref:System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties%2A> chiamate al metodo di <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=nameWithType> metodo dell'oggetto origine dati sottostante. Se il <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A> proprietà è `null` oppure non implementa il <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> interfaccia, `null` viene restituito.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string&#xA;override this.GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="listViewPagedDataSource.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that this list name is returned for.</param>
        <summary>Returns the name of the list. This method does not apply to this class.</summary>
        <returns>An empty string in all cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene ereditato dal <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> interfaccia e non sono applicabili per questa classe. È stato implementato in modo che restituisca <xref:System.String.Empty?displayProperty=nameWithType> per tutti i casi. Per ulteriori informazioni sul metodo <xref:System.Web.UI.WebControls.ListViewPagedDataSource.GetListName%2A>, vedere <xref:System.ComponentModel.ITypedList.GetListName%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.ListViewPagedDataSource" /> object is read-only.</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServerPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsServerPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServerPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsServerPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsServerPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerPagingEnabled : bool" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether server-based paging is enabled.</summary>
        <value>
          <see langword="true" /> se il paging basato su server è indicato tramite la proprietà <see cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging" />; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether access to the data source is synchronized (thread-safe).</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è derivata dal <xref:System.Collections.ICollection?displayProperty=nameWithType> l'interfaccia e viene eseguito l'override per restituire sempre `false` , a indicare che questa classe non è thread-safe.  
  
 Per ulteriori informazioni sul <xref:System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized%2A> proprietà, vedere la <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> proprietà del <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaccia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="MaximumRows">
      <MemberSignature Language="C#" Value="public int MaximumRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRows : int with get, set" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum number of items to display on a single page.</summary>
        <value>Il numero massimo di elementi da visualizzare in una singola pagina.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndex">
      <MemberSignature Language="C#" Value="public int StartRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndex : int with get, set" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the index of the first record displayed on the page.</summary>
        <value>L'indice del primo record visualizzati nella pagina.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that can be used to synchronize access to the collection.</summary>
        <value>Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto restituito in questa implementazione è il <xref:System.Web.UI.WebControls.ListViewPagedDataSource> oggetto stesso.  
  
 Per ulteriori informazioni sul <xref:System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot%2A> proprietà, vedere la <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> proprietà del <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaccia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int with get, set" Usage="System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the total number of items in the data source when server-based paging is being used.</summary>
        <value>Numero totale di elementi nell'origine dati quando viene usato il paging basato su server.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount" />
      </Docs>
    </Member>
  </Members>
</Type>