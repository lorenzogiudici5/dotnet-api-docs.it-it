<Type Name="LoginView" FullName="System.Web.UI.WebControls.LoginView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1240eec889eaa251a6de975e3e2475daf8a5adb5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599985" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LoginView : System.Web.UI.Control, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginView extends System.Web.UI.Control implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LoginView" />
  <TypeSignature Language="VB.NET" Value="Public Class LoginView&#xA;Inherits Control&#xA;Implements INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoginView : System::Web::UI::Control, System::Web::UI::INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ViewChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("CurrentView")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Visualizza il modello di contenuto appropriato per un determinato utente, in base allo stato di autenticazione e all'appartenenza a ruoli dell'utente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo argomento  
  
-   [Introduzione](#introduction)  
  
-   [Sintassi dichiarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduzione  
 Il <xref:System.Web.UI.WebControls.LoginView> controllo Visualizza il sito Web contenuto modelli (o "visualizzazioni") per utenti diversi, in base che l'utente è autenticato e, se in tal caso, i ruoli del sito Web di cui l'utente appartiene a.  
  
> [!NOTE]
>  Se non si ha familiarità con il set di controlli di accesso disponibili in ASP.NET, vedere [Cenni preliminari sui controlli di accesso ASP.NET](http://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d) prima di continuare. Per un elenco di altri argomenti correlati ai controlli di accesso e all'appartenenza, vedere [gestione degli utenti tramite l'appartenenza](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 Il modello archiviato nella <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> proprietà viene visualizzata per tutti i visitatori del sito Web che non è connesso. Una volta che un utente è connesso, il sito visualizza un modello associato a uno dei ruoli dell'utente nel <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> proprietà o il modello predefinito specificato nella <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.LoginView> controllo gestisce il passaggio tra i vari modelli dopo l'assegnazione a una delle tre proprietà di modello di modelli di <xref:System.Web.UI.WebControls.LoginView> classe:  
  
-   <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> -Specifica il modello da visualizzare agli utenti che non sono connessi al sito Web. Gli utenti connessi non vedranno mai questo modello.  
  
-   <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> -Specifica il modello predefinito da visualizzare per gli utenti connessi al sito Web ma non appartengono a qualsiasi gruppo di ruoli con modelli predefiniti.  
  
-   <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> -Specifica il modello da visualizzare per gli utenti connessi che sono membri dei ruoli con modelli di gruppo di ruoli definiti. Modelli di contenuto sono associati a una particolare set di ruoli in <xref:System.Web.UI.WebControls.RoleGroup> istanze.  
  
 Modelli di ruolo gruppo vengono eseguita la ricerca nell'ordine che siano definite nell'origine. Il primo modello gruppo di ruoli corrispondente viene visualizzato all'utente. Se un utente è un membro di più di un ruolo, viene utilizzato il primo modello gruppo di ruoli che corrisponde a uno dei ruoli dell'utente. Se più di un modello è associato a un singolo ruolo, viene utilizzato il primo modello definito.  
  
 Nella tabella seguente viene descritto il comportamento del <xref:System.Web.UI.WebControls.LoginView> consentono di controllare quando varie combinazioni di modelli.  
  
|Modello LoggedIn|Proprietà modello anonimo|Proprietà RoleGroups|Comportamento di LoginView|  
|--------------------------------|---------------------------------|-------------------------|------------------------|  
|Non impostato|Non impostato|Non impostato|Non visualizza alcun contenuto.|  
|Imposta|Non impostato|Non impostato|Visualizza il contenuto solo quando l'utente è connesso.|  
|Non impostato|Imposta|Non impostato|Visualizza il contenuto solo quando l'utente non è connesso.|  
|Non impostato|Non impostato|Imposta|Visualizza il primo modello di <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> raccolta che corrisponde a uno dei ruoli dell'utente. Se viene trovata alcuna corrispondenza, viene visualizzato alcun contenuto.|  
|Imposta|Imposta|Non impostato|Se l'utente è connesso, viene visualizzato il modello specificato nella <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> proprietà. Se l'utente non è connesso, viene visualizzato il modello specificato nella <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> proprietà.|  
|Imposta|Imposta|Imposta|Se l'utente è connesso, viene visualizzato il primo modello di <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> raccolta che corrisponde a uno dei ruoli dell'utente. Se viene trovata alcuna corrispondenza, viene visualizzato il modello specificato nella <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> proprietà. Se l'utente non è connesso, viene visualizzato il modello specificato nella <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> proprietà.|  
|Imposta|Non impostato|Imposta|Se l'utente è connesso, viene visualizzato il primo modello di <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> raccolta che corrisponde a uno dei ruoli dell'utente. Se viene trovata alcuna corrispondenza, viene visualizzato il modello specificato nella <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> proprietà. Se l'utente non è connesso, viene visualizzato nulla.|  
|Non impostato|Imposta|Imposta|Se l'utente è connesso, viene visualizzato il primo modello di <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> raccolta che corrisponde a uno dei ruoli dell'utente. Se viene trovata alcuna corrispondenza, viene visualizzato nulla. Se l'utente non è connesso, viene visualizzato il modello specificato nella <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> proprietà.|  
  
 Il <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> e <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> può essere utilizzato con qualsiasi schema di autenticazione che imposta il <xref:System.Security.Principal.IIdentity.Name%2A> proprietà del <xref:System.Web.UI.Page> dell'oggetto <xref:System.Web.UI.Page.User%2A> proprietà. È necessario configurare la gestione dei ruoli usare il <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> proprietà per definire i modelli di base sul ruolo dell'utente nel sito Web. Per ulteriori informazioni, vedere [informazioni sulla gestione dei ruoli](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6).  
  
 Il <xref:System.Web.UI.Control.Focus%2A> metodo non imposta lo stato attivo iniziale della pagina Web per il <xref:System.Web.UI.WebControls.LoginView> controllo o uno qualsiasi dei relativi controlli figlio. Controlli contenuti nel <xref:System.Web.UI.WebControls.LoginView> controllo vengono creati dopo il <xref:System.Web.UI.Control.PreRender> evento. Per impostare lo stato attivo su un controllo figlio contenuto di <xref:System.Web.UI.WebControls.LoginView>, gestire il `On_PreRender` e chiamare il relativo <xref:System.Web.UI.Control.Focus%2A> (metodo).  È inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.LoginView.ViewChanging> e <xref:System.Web.UI.WebControls.LoginView.ViewChanged> eventi per accedere a livello di codice i controlli di <xref:System.Web.UI.WebControls.LoginView> modelli di controllo.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintassi dichiarativa  
  
```  
<asp:LoginView  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    OnViewChanged="ViewChanged event handler"  
    OnViewChanging="ViewChanging event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
        <AnonymousTemplate>  
            <!-- child controls -->  
        </AnonymousTemplate>  
        <LoggedInTemplate>  
            <!-- child controls -->  
        </LoggedInTemplate>  
        <RoleGroups>  
                <asp:RoleGroup  
                    Roles="string"  
                >  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                </asp:RoleGroup>  
        </RoleGroups>  
</asp:LoginView>  
```  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare i modelli per ognuno dei tre tipi di modello supportati dal <xref:System.Web.UI.WebControls.LoginView> controllo.  
  
 [!code-aspx-csharp[LoginViewClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewClass/CS/loginviewclasscs.aspx#1)]
 [!code-aspx-vb[LoginViewClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewClass/VB/loginviewclassvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Security.Roles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoginView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza del controllo <see cref="T:System.Web.UI.WebControls.LoginView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AnonymousTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AnonymousTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.AnonymousTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnonymousTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AnonymousTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il modello da visualizzare agli utenti che non hanno eseguito l'accesso al sito Web.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.ITemplate" /> da visualizzare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> proprietà specifica il modello di contenuto da visualizzare agli utenti del sito Web quando non si è connesso al sito Web. Questo modello viene visualizzato quando il <xref:System.Security.Principal.IIdentity.Name%2A> proprietà del <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> proprietà `null`.  
  
 Il <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> modello non viene mai visualizzato agli utenti autenticati. Se il <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> proprietà è vuota, viene visualizzato alcun contenuto per gli utenti non connessi.  
  
   
  
## Examples  
 L'esempio di codice seguente viene utilizzato il modello specificato nella <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> servizi personalizzati di modello per visualizzare un invito a iscriversi.  
  
 [!code-aspx-csharp[LoginViewAnonymousTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-aspx-vb[LoginViewAnonymousTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.UI.ControlCollection" /> che contiene i controlli figlio per il controllo <see cref="T:System.Web.UI.WebControls.LoginView" />.</summary>
        <value>Insieme dei controlli figlio per il controllo <see cref="T:System.Web.UI.WebControls.LoginView" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea i controlli figlio che costituiscono il controllo <see cref="T:System.Web.UI.WebControls.LoginView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LoginView.CreateChildControls%2A> metodo consente di creare i controlli singoli che costituiscono il <xref:System.Web.UI.WebControls.LoginView> controllo. Il set di controlli creati varia in base al modello di contenuto visualizzato per l'utente. Ad esempio, quando un utente non è connesso al sito Web, solo i controlli contenuti nel modello specificato nella <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> proprietà vengono creati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Associa un'origine dati al controllo <see cref="T:System.Web.UI.WebControls.LoginView" /> e a tutti i relativi controlli figlio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.LoginView.DataBind%2A> metodo per associare i dati da un'origine per il <xref:System.Web.UI.WebControls.LoginView> controllo e i relativi elementi figlio. Questo metodo consente di risolvere tutte le espressioni di associazione di dati di <xref:System.Web.UI.WebControls.LoginView> controllo e degli eventuali controlli figlio del modello attivo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se al controllo <see cref="T:System.Web.UI.WebControls.LoginView" /> possono essere applicati i temi.</summary>
        <value>
          <see langword="true" /> per utilizzare i temi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> proprietà indica se i temi sono abilitati per il <xref:System.Web.UI.WebControls.LoginView> controllo. Il <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> proprietà determina anche se i temi sono abilitati per i controlli contenuti nel relativo <xref:System.Web.UI.WebControls.LoginView.Controls%2A> insieme. Quando il <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> proprietà `true`, directory dei temi dell'applicazione viene eseguita la ricerca per le interfacce di controllo da applicare. Se è presente alcuna interfaccia per il controllo specifico nella directory dei temi, un'interfaccia non viene applicata. Quando il <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> proprietà `false`, la directory di tema non viene eseguita la ricerca e il contenuto della <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> proprietà non vengono utilizzati.  
  
 Un controllo può eseguire l'override di <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> valore impostato dal relativo controllo padre o di pagina che lo contiene. Ad esempio, se un controllo padre <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> impostato su `false`, è possibile applicare in modo selettivo i temi per i controlli figlio contenuti nel controllo padre impostando il <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> proprietà `true` per i singoli controlli figlio.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta lo stato attivo per l'input su un controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LoginView.Focus%2A> metodo non imposta lo stato attivo iniziale della pagina Web per il <xref:System.Web.UI.WebControls.LoginView> controllo o a uno dei relativi controlli figlio. I controlli contenuti nel <xref:System.Web.UI.WebControls.LoginView> controllo vengono creati dopo il <xref:System.Web.UI.Control.PreRender> evento. Per impostare lo stato attivo su un controllo figlio contenuto di <xref:System.Web.UI.WebControls.LoginView>, gestire il `On_PreRender` e chiamare il relativo <xref:System.Web.UI.Control.Focus%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Si chiama il metodo <see cref="M:System.Web.UI.WebControls.LoginView.Focus" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Oggetto <see cref="T:System.Object" /> che rappresenta lo stato del controllo da ripristinare.</param>
        <summary>Questo metodo implementa <see cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggedInTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LoggedInTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LoggedInTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.LoggedInTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoggedInTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LoggedInTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il modello da visualizzare agli utenti del sito Web che hanno effettuato l'accesso al sito, ma non sono membri di uno dei gruppi di ruolo specificati nella proprietà <see cref="P:System.Web.UI.WebControls.LoginView.RoleGroups" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.ITemplate" /> da visualizzare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> proprietà viene visualizzata agli utenti del sito Web quando vengono soddisfatte entrambe le condizioni seguenti:  
  
-   Il <xref:System.Security.Principal.IIdentity.Name%2A> proprietà del <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> proprietà non è `null`  
  
-   L'utente non appartiene a un gruppo di ruoli definito nel <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> proprietà specifica un modello predefinito per gli utenti autenticati del sito Web. Se la gestione dei ruoli, non è stato configurato il <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> è l'unico modello disponibile per gli utenti autenticati. Per ulteriori informazioni sulla configurazione di gestione dei ruoli, vedere [informazioni sulla gestione dei ruoli](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6).  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> modello per visualizzare i collegamenti a informazioni personalizzate per gli utenti connessi.  
  
 [!code-aspx-csharp[LoginViewAnonymousTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-aspx-vb[LoginViewAnonymousTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LoginView.OnInit%2A> metodo esegue l'inizializzazione per il <xref:System.Web.UI.WebControls.LoginView> controllo.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.LoginView.OnInit%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Determina quale modello dei gruppi di ruolo visualizzare, in base ai ruoli dell'utente che ha eseguito l'accesso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> metodo viene chiamato durante la <xref:System.Web.UI.Control.PreRender> evento per determinare quale modello di contenuto da visualizzare all'utente. Se il <xref:System.Security.Principal.IIdentity.Name%2A> proprietà del <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> proprietà `null`, il modello specificato nella <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> proprietà viene visualizzata; in caso contrario, viene visualizzato il modello associato al ruolo dell'utente. Se l'utente non appartiene a un gruppo di ruolo definito o se la gestione dei ruoli, non è stato configurato il <xref:System.Web.UI.WebControls.LoginView> controllo Visualizza il modello specificato nella <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> proprietà. Per ulteriori informazioni sulla configurazione di gestione dei ruoli, vedere [provider gestione ruoli](http://msdn.microsoft.com/library/71ddd651-5f91-471b-ad9f-61249b0bf0d5).  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" /> dopo che il controllo <see cref="T:System.Web.UI.WebControls.LoginView" /> è passato a un'altra visualizzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.LoginView> controllo passa le visualizzazioni, rimuove i controlli del modello precedente e crea i nuovi controlli figlio del nuovo modello. Il <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> metodo viene chiamato una volta creati i nuovi controlli figlio.  
  
 Utilizzare il <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> metodo per eseguire qualsiasi elaborazione, ad esempio associazione dati, necessaria per inizializzare i controlli nella nuova visualizzazione.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnViewChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanging (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanging(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewChanging (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewChanging(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" /> prima che il controllo <see cref="T:System.Web.UI.WebControls.LoginView" /> passi a un'altra visualizzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.LoginView> passa le visualizzazioni, rimuove i controlli del modello precedente e crea i nuovi controlli figlio del nuovo modello. Il <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> metodo viene chiamato prima che vengano rimossi i controlli precedenti.  
  
 Utilizzare il <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> metodo per eseguire tutte le elaborazioni necessarie, quali il salvataggio delle informazioni di controllo, prima che i controlli vengono rimossi.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> utilizzato per eseguire il rendering del contenuto del controllo server nel browser del client.</param>
        <summary>Esegue il rendering del contenuto del controllo server Web nel browser del client con l'oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LoginView.Render%2A> metodo viene utilizzato per eseguire il rendering del contenuto del controllo del server per il browser del client utilizzando l'oggetto specificato <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> oggetto.  
  
 **Nota** questo metodo viene usato principalmente dagli sviluppatori di controlli per estendere il <xref:System.Web.UI.WebControls.LoginView> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RoleGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RoleGroupCollection RoleGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.RoleGroupCollection RoleGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.RoleGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RoleGroups As RoleGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RoleGroupCollection ^ RoleGroups { System::Web::UI::WebControls::RoleGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RoleGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di gruppi di ruolo in base ai quali i modelli di contenuto vengono associati a ruoli particolari.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> che contiene i modelli di gruppi di ruolo definiti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> proprietà contiene i modelli di contenuto associati ai vari ruoli sul sito Web. La raccolta nel <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> proprietà viene eseguita la ricerca nell'ordine in cui i modelli vengono definiti nell'origine. Il primo modello gruppo di ruoli corrispondente viene visualizzato all'utente. Se un utente è un membro di più di un ruolo, viene utilizzato il primo modello gruppo di ruoli che corrisponde a uno dei ruoli dell'utente. Se più di un modello è associato a un singolo ruolo, verrà utilizzato il primo modello definito.  
  
 Se un utente connesso non appartiene a un qualsiasi ruolo contenuto nella raccolta gruppo di ruoli, il sito viene visualizzato il modello di contenuto specificato nella <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> proprietà. Gli utenti anonimi non sono mai visualizzati un modello contenuto nel <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> insieme.  
  
 È necessario configurare la gestione dei ruoli usare il <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> proprietà per definire i modelli in base al ruolo dell'utente nel sito Web. Per ulteriori informazioni, vedere [informazioni sulla gestione dei ruoli](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6).  
  
 Questa proprietà non può essere impostata da temi oppure temi di fogli di stile. Per ulteriori informazioni, vedere <xref:System.Web.UI.ThemeableAttribute> e [ASP.NET temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> insieme. Poiché il <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> e <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> non sono impostate, il contenuto viene visualizzato solo per gli utenti che appartengono ai ruoli con un modello di contenuto definito.  
  
 [!code-aspx-csharp[LoginViewRoleGroups#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewRoleGroups/CS/loginviewrolegroupscs.aspx#1)]
 [!code-aspx-vb[LoginViewRoleGroups#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewRoleGroups/VB/loginviewrolegroupsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva tutte le modifiche dello stato di un controllo server apportate dopo il postback della pagina nel server.</summary>
        <returns>Restituisce lo stato corrente del controllo server. Se al controllo non è associato alcuno stato, questo metodo restituisce <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">Oggetto <see cref="T:System.Collections.IDictionary" /> che contiene i dati della fase di progettazione per il controllo.</param>
        <summary>Imposta i dati della fase di progettazione per un controllo.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'interfaccia da applicare al controllo <see cref="T:System.Web.UI.WebControls.LoginView" />.</summary>
        <value>Nome dell'interfaccia da applicare al controllo <see cref="T:System.Web.UI.WebControls.LoginView" />. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le interfacce disponibili per un controllo sono contenute in uno o più file di interfaccia in una directory dei temi. Il <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> proprietà specifica quale di queste interfacce da applicare al controllo. Un'interfaccia è specifica per un determinato controllo. non è possibile condividere le impostazioni dell'interfaccia tra i controlli di tipi diversi.  
  
 Se non si imposta la <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> proprietà, un controllo utilizza l'interfaccia predefinita se ne è stata definita. Ad esempio, se un'interfaccia senza un ID è definito per un <xref:System.Web.UI.WebControls.Image> controllare, tale interfaccia verrà applicata a tutti <xref:System.Web.UI.WebControls.Image> controlli che non fa riferimento in modo esplicito un'interfaccia in base all'ID e che non sono impostati per disabilitare i temi. Se è definita un'interfaccia con un ID per un <xref:System.Web.UI.WebControls.Image> controllare, tale interfaccia verrà applicata solo a <xref:System.Web.UI.WebControls.Image> controlli la cui <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> è impostato su tale ID.  
  
 Se i file di interfaccia in una directory di tema non contengono un'interfaccia con l'oggetto specificato <xref:System.Web.UI.WebControls.LoginView.SkinID%2A>, un <xref:System.ArgumentException> viene generata l'eccezione in fase di esecuzione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'interfaccia specificata nella proprietà <see cref="P:System.Web.UI.WebControls.LoginView.SkinID" /> non esiste nel tema.</exception>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato dopo che è cambiata la visualizzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.LoginView> controllo passa le visualizzazioni, rimuove i controlli del modello precedente e crea i nuovi controlli figlio del nuovo modello. Il <xref:System.Web.UI.WebControls.LoginView.ViewChanged> evento viene generato una volta creati i nuovi controlli figlio.  
  
 Utilizzare il <xref:System.Web.UI.WebControls.LoginView.ViewChanged> evento per eseguire qualsiasi elaborazione, ad esempio associazione dati, necessaria per inizializzare i controlli nella nuova visualizzazione.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.LoginView.ViewChanged> evento viene generato solo se lo stato di accesso per un utente cambia durante un postback della pagina. Il <xref:System.Web.UI.WebControls.LoginView.ViewChanged> evento non verrà generato se un utente accede usando il <xref:System.Web.UI.WebControls.Login> (controllo), o se l'utente si disconnette utilizzando il <xref:System.Web.UI.WebControls.LoginStatus> controllo. Il <xref:System.Web.UI.WebControls.LoginView.ViewChanged> evento non si verificherà anche se un utente viene registrato o out seguito da un reindirizzamento. Un esempio di quando il <xref:System.Web.UI.WebControls.LoginView.ViewChanged> evento si verifica quando un utente viene disconnesso chiamando il <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo senza essere reindirizzati a un'altra pagina. Durante il successivo postback della pagina di <xref:System.Web.UI.WebControls.LoginView> controllo rileva la modifica dello stato di accesso per l'utente e quindi generare il <xref:System.Web.UI.WebControls.LoginView.ViewChanged> evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      </Docs>
    </Member>
    <Member MemberName="ViewChanging">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewChanging As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato prima che cambi la visualizzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.LoginView> controllo passa le visualizzazioni, rimuove i controlli del modello precedente e crea i nuovi controlli figlio del nuovo modello. Il <xref:System.Web.UI.WebControls.LoginView.ViewChanging> evento viene generato prima che vengano rimossi i controlli precedenti.  
  
 Utilizzare il <xref:System.Web.UI.WebControls.LoginView.ViewChanging> evento per eseguire qualsiasi elaborazione, ad esempio il salvataggio delle informazioni di controllo, necessari prima i controlli vengono rimossi.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.LoginView.ViewChanging> evento viene generato solo se lo stato di accesso per un utente cambia durante un postback della pagina. Il <xref:System.Web.UI.WebControls.LoginView.ViewChanging> evento non verrà generato se un utente accede usando il <xref:System.Web.UI.WebControls.Login> (controllo), o se l'utente si disconnette utilizzando il <xref:System.Web.UI.WebControls.LoginStatus> controllo. Il <xref:System.Web.UI.WebControls.LoginView.ViewChanging> evento non si verificherà anche se un utente viene registrato o out seguito da un reindirizzamento. Un esempio di quando il <xref:System.Web.UI.WebControls.LoginView.ViewChanging> evento si verifica quando un utente viene disconnesso chiamando il <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo senza essere reindirizzati a un'altra pagina. Durante il successivo postback della pagina di <xref:System.Web.UI.WebControls.LoginView> controllo rileva la modifica dello stato di accesso per l'utente e quindi generare il <xref:System.Web.UI.WebControls.LoginView.ViewChanging> evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      </Docs>
    </Member>
  </Members>
</Type>