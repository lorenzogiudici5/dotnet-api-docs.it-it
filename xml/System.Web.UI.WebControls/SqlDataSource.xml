<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34dff01451d4ba6258731af2ba7a9443d91cb876" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30601085" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un database di SQL nei controlli con associazione a dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo argomento  
  
-   [Introduzione](#introduction)  
  
-   [Connessioni dati](#data_connections)  
  
-   [Esecuzione di operazioni di dati](#performing_data_operations)  
  
-   [Provider di dati](#data_provider)  
  
-   [Memorizzazione nella cache](#caching)  
  
-   [Funzionalità aggiuntive](#additional_features)  
  
-   [Vista origine dati](#data_source_view)  
  
-   [Sintassi dichiarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduzione  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo origine dati rappresenta i dati in un database relazionale di SQL per i controlli con associazione a dati. È possibile utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource> controllo in combinazione con un controllo con associazione a dati per recuperare dati da un database relazionale e per visualizzare, modificare e ordinare i dati in una pagina Web con pochi o nessun codice.  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a>Connessioni dati  
 Per connettersi a un database, è necessario impostare il <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> proprietà in una stringa di connessione valida. Il <xref:System.Web.UI.WebControls.SqlDataSource> può supportare qualsiasi database relazionale di SQL che può essere connesso all'utilizzo di un provider ADO.NET, ad esempio il `SqlClient`, `OleDb`, `Odbc`, o `OracleClient` provider. Per informazioni su come proteggere le stringhe di connessione, vedere [How To: le stringhe di connessione protetta quando i controlli origine dati di utilizzo](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
 Per recuperare dati da un database sottostante, impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà con una query SQL. Se il database che il <xref:System.Web.UI.WebControls.SqlDataSource> associata supporta stored procedure, è possibile impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà sul nome di una stored procedure. La query SQL specificata si può anche essere una query con parametri. È possibile aggiungere <xref:System.Web.UI.WebControls.Parameter> gli oggetti che sono associati a una query con parametri per il <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> insieme. Per ulteriori informazioni sulle query SQL con parametri e la relativa sintassi, vedere [utilizzo dei parametri con i controlli origine dati per il filtraggio](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo recupera i dati ogni volta che il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo viene chiamato. Questo metodo fornisce l'accesso a livello di codice al metodo specificato da <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. Il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo viene chiamato automaticamente da controlli associati ai <xref:System.Web.UI.WebControls.SqlDataSource> quando i relativi <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metodo viene chiamato. Se si imposta la <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> proprietà di un controllo con associazione a dati, il controllo viene associato automaticamente ai dati dall'origine dati, come richiesto. Impostazione di `DataSourceID` il metodo consigliato per l'associazione è un <xref:System.Web.UI.WebControls.ObjectDataSource> un controllo con associazione a dati. In alternativa, è possibile utilizzare il `DataSource` proprietà, ma è necessario chiamare esplicitamente il <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metodo del controllo con associazione a dati. Alcuni esempi di controlli con associazione a dati che è possono utilizzare <xref:System.Web.UI.WebControls.SqlDataSource> sono <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, e <xref:System.Web.UI.WebControls.DropDownList>. È possibile chiamare il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo a livello di codice in qualsiasi momento per recuperare i dati dal database sottostante.  
  
 In scenari ASP.NET dichiarativi e a livello di codice, è possibile impostare il <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> proprietà del controllo con associazione a dati per l'ID del <xref:System.Web.UI.WebControls.SqlDataSource> controllo. È inoltre possibile assegnare un'istanza del <xref:System.Web.UI.WebControls.SqlDataSource> classe per la <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> proprietà del controllo con associazione a dati. Per ulteriori informazioni sull'associazione di controlli con associazione a dati ai controlli origine dati, vedere [opzioni di accesso ai dati ASP.NET](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Esecuzione di operazioni di dati  
 A seconda delle funzionalità del prodotto di database sottostante e la configurazione dell'istanza del <xref:System.Web.UI.WebControls.SqlDataSource> (classe), è possibile eseguire operazioni sui dati, ad esempio aggiornamenti, inserimenti ed eliminazioni. Per eseguire queste operazioni sui dati, impostare il testo del comando appropriato e i relativi parametri per l'operazione che si desidera eseguire. Ad esempio, per un'operazione di aggiornamento, impostare il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà da una stringa SQL o il nome di una stored procedure e aggiungere i parametri richiesti per il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> insieme. L'aggiornamento viene eseguito quando il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metodo viene chiamato in modo esplicito dal codice o automaticamente da un controllo con associazione a dati. Viene seguito lo stesso modello generale per <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operazioni.  
  
 La query SQL e i comandi utilizzati nel <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, e <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> proprietà possono essere parametrizzate. Ciò significa che la query o un comando è possibile utilizzare segnaposto anziché valori letterali e associare i segnaposto all'applicazione o le variabili definite dall'utente. È possibile associare i parametri nelle query SQL a variabili di sessione, i valori passati nella stringa di query per una pagina Web Form, i valori delle proprietà di altri controlli server e altro ancora. Per ulteriori informazioni sull'utilizzo di parametri nella query SQL con il <xref:System.Web.UI.WebControls.SqlDataSource>, vedere [utilizzo dei parametri con i controlli origine dati per il filtraggio](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f) e [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!NOTE]
>  Per impostazione predefinita, se uno dei parametri è `null` quando si esegue un `Select` dei comandi, verrà restituito alcun dato e non verrà generata alcuna eccezione. È possibile modificare questo comportamento impostando la <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> proprietà `false`.  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a>Provider di dati  
 Per impostazione predefinita, il <xref:System.Web.UI.WebControls.SqlDataSource> controllo funziona con il Provider di dati .NET Framework per SQL Server, ma <xref:System.Web.UI.WebControls.SqlDataSource> non è Microsoft SQL Server specifici. È possibile connettere il <xref:System.Web.UI.WebControls.SqlDataSource> controllo con qualsiasi prodotto di database per cui è disponibile un provider ADO.NET gestito. Quando si utilizza il <xref:System.Data.OleDb?displayProperty=nameWithType> provider, il <xref:System.Web.UI.WebControls.SqlDataSource> può funzionare con qualsiasi database conforme a OLE DB. Quando si utilizza il <xref:System.Data.Odbc?displayProperty=nameWithType> provider, il <xref:System.Web.UI.WebControls.SqlDataSource> può essere utilizzato con qualsiasi database, inclusi IBM DB2, MySQL e PostgreSQL e il driver ODBC. Quando si utilizza il <xref:System.Data.OracleClient?displayProperty=nameWithType> provider, il <xref:System.Web.UI.WebControls.SqlDataSource> può funzionare con i database Oracle 8.1.7 e versioni successive. L'elenco dei provider disponibili è registrato nel `DbProviderFactories` sezione del file di configurazione, sia nel file Machine. config o Web. config. Per ulteriori informazioni, vedere [selezione di dati mediante il controllo SqlDataSource](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
<a name="caching"></a>   
## <a name="caching"></a>Memorizzazione nella cache  
 Se si visualizzano i dati sulla pagina utilizzando un <xref:System.Web.UI.WebControls.SqlDataSource> controllo, è possibile aumentare le prestazioni della pagina utilizzando la funzionalità di memorizzazione dati controllo origine dati. La memorizzazione nella cache riduce il carico di elaborazione nel server di database a scapito della memoria sul server Web. Nella maggior parte dei casi, questo è un buon compromesso. Il <xref:System.Web.UI.WebControls.SqlDataSource> memorizza automaticamente i dati quando il <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> è impostata su `true` e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> proprietà è impostata per il numero di secondi che la cache memorizza i dati prima che venga eliminata la voce della cache. È inoltre possibile specificare un <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> ed eventualmente <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> valore.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Funzionalità aggiuntive  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> fornisce funzionalità aggiuntive, come elencato nella tabella seguente.  
  
|Funzionalità|Requisiti|  
|----------------|------------------|  
|Memorizzazione nella cache|Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> proprietà per il <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valore, il <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> proprietà `true`e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> proprietà in base al comportamento desiderato per i dati memorizzati nella cache.|  
|Eliminazione|Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> proprietà da un'istruzione SQL utilizzata per eliminare i dati. Questa istruzione è in genere con parametri.|  
|Filtro|Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> proprietà per il <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valore. Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà su un'espressione di filtro utilizzata per filtrare i dati quando il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo viene chiamato.|  
|Inserimento|Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> proprietà da un'istruzione SQL utilizzata per inserire i dati. Questa istruzione è in genere con parametri.|  
|Paging|Non supportata attualmente dal <xref:System.Web.UI.WebControls.SqlDataSource>, tuttavia alcuni dati associati a controlli, ad esempio <xref:System.Web.UI.WebControls.GridView>, supportano questa funzionalità quando si imposta la <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> proprietà per il <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valore.|  
|Selezione|Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà da un'istruzione SQL utilizzata per recuperare i dati.|  
|Ordinamento|Impostare la proprietà <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> su <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>.|  
|Updating|Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà da un'istruzione SQL utilizzata per aggiornare i dati. Questa istruzione è in genere con parametri.|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a>Vista origine dati  
 Come con tutti i controlli origine dati, il <xref:System.Web.UI.WebControls.SqlDataSource> controllo è associato a una classe di visualizzazione origine dati. Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo ha un solo oggetto associato <xref:System.Web.UI.WebControls.SqlDataSourceView>, e è sempre denominato `Table`.  
  
 Non vi è alcun il rendering visivo il <xref:System.Web.UI.WebControls.SqlDataSource> controllo viene implementato come un controllo in modo che è possibile crearlo in modo dichiarativo e, facoltativamente, in modo da consentirne deve far parte di gestione dello stato. Di conseguenza, il <xref:System.Web.UI.WebControls.SqlDataSource> non supporta funzionalità visive, ad esempio quelli forniti dal <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> o <xref:System.Web.UI.DataSourceControl.SkinID%2A> proprietà.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintassi dichiarativa  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
   
  
## Examples  
 Un progetto di sito Web di Visual Studio con codice sorgente è disponibile a complemento di questo argomento: [scaricare](http://go.microsoft.com/fwlink/?LinkId=192424).  
  
 In questa sezione contiene quattro esempi di codice:  
  
-   Nel primo esempio viene illustrato come visualizzare i dati di SQL Server in un <xref:System.Web.UI.WebControls.GridView> controllo utilizzando la sintassi dichiarativa.  
  
-   Nel secondo esempio di codice viene illustrato come visualizzare i dati da un database conforme a ODBC in un <xref:System.Web.UI.WebControls.GridView> controllo utilizzando la sintassi dichiarativa.  
  
-   Nel terzo esempio di codice viene illustrato come visualizzare e aggiornare i dati in un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
-   Nel quarto esempio di codice viene illustrato come visualizzare e aggiornare i dati in un <xref:System.Web.UI.WebControls.DropDownList> controllo.  
  
    > [!NOTE]
    >  Questi esempi viene illustrato come utilizzare la sintassi dichiarativa per accedere ai dati. Per informazioni su come accedere ai dati tramite il codice anziché markup, vedere [l'accesso ai dati in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.SqlDataSource> controllo in modo dichiarativo per recuperare dati da SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.SqlDataSource> controllo in modo dichiarativo per recuperare dati da un database conforme a ODBC e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo. Il <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> proprietà è il nome del Provider di dati .NET Framework per ODBC, vale a dire <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 L'esempio di codice seguente viene illustrato un comune scenario di visualizzazione e aggiornamento con il <xref:System.Web.UI.WebControls.GridView> controllo. Come con gli esempi precedenti, i dati dal database Northwind vengono visualizzati nel <xref:System.Web.UI.WebControls.GridView> controllo. Inoltre, poiché un <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà viene specificata e <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> è impostata su `true`, è possibile modificare e aggiornare i record senza codice aggiuntivo. Il <xref:System.Web.UI.WebControls.GridView> controllo gestisce automaticamente l'aggiunta di parametri per il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> insieme e chiama il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metodo quando il **aggiornamento** pulsante il <xref:System.Web.UI.WebControls.GridView> si fa clic sul controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 L'esempio di codice seguente viene illustrato un comune scenario di visualizzazione e aggiornamento con il <xref:System.Web.UI.WebControls.DropDownList> e <xref:System.Web.UI.WebControls.TextBox> controlli. Il <xref:System.Web.UI.WebControls.DropDownList> controllo non aggiunge automaticamente i parametri di aggiornamento per il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> raccolta né chiamata di <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metodo, pertanto è necessario farlo. I parametri di aggiornamento vengono specificati in modo dichiarativo ed è possibile aggiungere un gestore eventi per eseguire il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operazione quando viene generato un evento.  
  
> [!IMPORTANT]
>  In questo esempio include una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Stringa di connessione utilizzata per la connessione al database sottostante.</param>
        <param name="selectCommand">Query SQL utilizzata per recuperare dati dal database sottostante. Se la query SQL è una stringa SQL con parametri, potrebbe essere necessario aggiungere oggetti <see cref="T:System.Web.UI.WebControls.Parameter" /> all'insieme <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> con la stringa di connessione specificata e il comando Seleziona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi per `selectCommand` dipende dal provider ADO.NET attualmente in uso, identificato tramite il <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> proprietà. Se la stringa SQL è una query o un comando con parametri, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=nameWithType>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> (classe), il segnaposto del parametro è `'@parameterName'`. Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, il segnaposto del parametro è `'?'`. Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> valore può essere una stringa SQL o il nome di una stored procedure, se l'origine dati supporta le stored procedure.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare un <xref:System.Web.UI.WebControls.SqlDataSource> controllare mediante il <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> costruttore. L'esempio è insolito che la <xref:System.Web.UI.WebControls.SqlDataSource> controllo viene utilizzato in una pagina Web Form, ma nell'implementazione di un oggetto di livello intermedio come un modo semplice per un oggetto business di interagire con un database. L'esempio Usa una stringa di connessione che viene archiviata nel file Web. config.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.UI.WebControls.ObjectDataSource> classe.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">Nome del provider di dati utilizzato dall'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />. Per impostazione predefinita, se non viene impostato alcun provider, l'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> utilizza il provider ADO.NET per Microsoft SQL Server.</param>
        <param name="connectionString">Stringa di connessione utilizzata per la connessione al database sottostante.</param>
        <param name="selectCommand">Query SQL utilizzata per recuperare dati dal database sottostante. Se la query SQL è una stringa SQL con parametri, potrebbe essere necessario aggiungere oggetti <see cref="T:System.Web.UI.WebControls.Parameter" /> all'insieme <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> con la stringa di connessione specificata e il comando Seleziona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi di `selectCommand` dipende dal provider ADO.NET attualmente in uso, è identificato dal `providerName` parametro. Se la stringa SQL è una query o un comando con parametri, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è <xref:System.Data.SqlClient?displayProperty=nameWithType>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> (classe), il segnaposto del parametro è `'@parameterName'`. Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, il segnaposto del parametro è `'?'`. Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà può essere una stringa SQL o il nome di una stored procedure, se l'origine dati supporta le stored procedure.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di secondi durante i quali il controllo origine dati memorizza nella cache i dati recuperati dal metodo <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</summary>
        <value>Numero di secondi durante i quali l'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> memorizza nella cache i risultati di un'operazione del metodo <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />. Il valore predefinito è 0. Il valore non può essere negativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo supporta la memorizzazione nella cache di dati. Mentre vengono memorizzati i dati, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo recupera i dati dalla cache piuttosto che dal database sottostante. Alla scadenza della cache, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo recupera i dati dal database sottostante e li memorizza nella cache i dati.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo memorizza automaticamente i dati quando il <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> è impostata su `true` e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> è impostata su un valore maggiore di 0, che indica il numero di secondi che la cache memorizza i dati prima della voce della cache viene eliminato. Il valore 0 indica una cache lunga all'infinito.  
  
 Il comportamento della cache è determinato da una combinazione della durata e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> proprietà. Se il <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valore, il <xref:System.Web.UI.WebControls.SqlDataSource> memorizza nella cache di dati nella prima operazione di recupero di dati, li mantiene in memoria per un al massimo la quantità di tempo specificato da <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> proprietà. I dati potrebbero essere rilasciati prima della durata, se la memoria è obbligatoria. La cache viene aggiornata durante l'operazione successiva. Se il <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valore, il controllo origine dati memorizza i dati nella prima operazione di recupero di dati, ma reimposta l'intervallo di tempo che vengono mantenuti nella cache per ogni operazione successiva. La cache scade, se è presente alcuna attività per un periodo di tempo uguale al <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> valore dopo l'ultimo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operazione.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo può memorizzare nella cache dati solo quando è in <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modalità. A <xref:System.NotSupportedException> eccezione viene generata dal <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo, se il <xref:System.Web.UI.WebControls.SqlDataSource> NFS è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valore e la memorizzazione nella cache è abilitata anche.  
  
> [!IMPORTANT]
>  Quando si utilizza la rappresentazione del client con l'autenticazione di Microsoft Windows, viene memorizzato nella cache i dati quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un'altra chiamata al database per verificare l'accesso dell'utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come recuperare i dati dal database Northwind in Microsoft SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo con abilitata la memorizzazione nella cache dei dati. Il <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> è impostato su 20 secondi e, in quanto il <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valore per impostazione predefinita, gli utenti di questa pagina verrà visualizzato i dati aggiornati ogni 20 secondi.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il comportamento di scadenza della cache che, quando combinato con la durata, descrive il comportamento della cache utilizzato dal controllo origine dati.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. Il valore predefinito è il valore <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo supporta la memorizzazione nella cache di dati. Mentre vengono memorizzati i dati, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo recupera i dati dalla cache piuttosto che dal database sottostante. Alla scadenza della cache, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo recupera i dati dal database sottostante e li memorizza nella cache i dati.  
  
 Il comportamento della cache è determinato da una combinazione di <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> impostazioni. Se il <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valore, il <xref:System.Web.UI.WebControls.SqlDataSource> memorizza nella cache di dati nella prima operazione di recupero di dati, li mantiene in memoria per la quantità di tempo specificato dal <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> , proprietà e quindi lo elimina dopo il termine scaduti. La cache viene aggiornata durante l'operazione successiva. Se il <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valore, il controllo origine dati memorizza i dati nella prima operazione di recupero di dati, ma reimposta l'intervallo di tempo che vengono mantenuti nella cache per ogni operazione successiva. La cache scade, se è presente alcuna attività per un periodo di tempo uguale al <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> valore dopo l'ultimo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operazione.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo può memorizzare nella cache di dati solo quando nel <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modalità. A <xref:System.NotSupportedException> eccezione viene generata dal <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo, se il <xref:System.Web.UI.WebControls.SqlDataSource> NFS è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valore e la memorizzazione nella cache è abilitata anche.  
  
> [!IMPORTANT]
>  Quando si utilizza la rappresentazione del client con l'autenticazione di Microsoft Windows, viene memorizzato nella cache i dati quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un'altra chiamata al database per verificare l'accesso dell'utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come recuperare i dati dal database Northwind in Microsoft SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo con abilitata la memorizzazione nella cache dei dati. Poiché il <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valore, non sarà possibile visualizzare dati aggiornati anche se il <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> valore è 20 secondi. I dati memorizzati nella cache vengono aggiornati solo se è presente alcuna attività nella pagina per più di 20 secondi dall'ultimo caricamento della pagina.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una dipendenza di chiave definita dall'utente collegata a tutti gli oggetti cache dati creati dal controllo origine dati. Tutti gli oggetti relativi alla cache scadono in modo esplicito quando scade la chiave.</summary>
        <value>Chiave che identifica tutti gli oggetti relativi alla cache creati dall'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo supporta la memorizzazione nella cache di dati. Mentre vengono memorizzati i dati, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo recupera i dati dalla cache piuttosto che dal database sottostante. Alla scadenza della cache, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo recupera i dati dal database sottostante e li memorizza nella cache i dati.  
  
 È possibile impostare il <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> proprietà per creare una dipendenza tra tutte le voci di cache che vengono creati il <xref:System.Web.UI.WebControls.SqlDataSource> controllo e la chiave. È possibile a livello di codice che scada tutte le voci di cache in qualsiasi momento per la scadenza della chiave.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo può memorizzare nella cache di dati solo quando nel <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modalità. A <xref:System.NotSupportedException> eccezione viene generata dal <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo, se il <xref:System.Web.UI.WebControls.SqlDataSource> NFS è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valore e la memorizzazione nella cache è abilitata anche.  
  
 Viene creata una voce della cache univoche per ogni combinazione del <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, e <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> proprietà. Più <xref:System.Web.UI.WebControls.SqlDataSource> controlli possono utilizzare le stesse voci della cache in scenari in cui i controlli caricano gli stessi dati dallo stesso database sottostante.  
  
> [!IMPORTANT]
>  Quando si utilizza la rappresentazione del client con l'autenticazione di Microsoft Windows, viene memorizzato nella cache i dati quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un'altra chiamata al database per verificare l'accesso dell'utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se un'operazione di recupero dati viene annullata quando qualsiasi parametro contenuto nell'insieme <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> restituisce <see langword="null" />.</summary>
        <value>
          <see langword="true" /> se un'operazione di recupero dati viene annullata quando un parametro contenuto nell'insieme <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> restituisce <see langword="null" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> proprietà viene archiviata nello stato di visualizzazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore indicante come il controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> esegue aggiornamenti ed eliminazioni quando i dati in una riga del database sottostante vengono modificati durante l'operazione.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.ConflictOptions" />. Il valore predefinito è il valore <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> proprietà determina se i parametri per i valori vecchi e nuovi vengono applicati per la `Update` metodo. Ad esempio, se il comando specificato dal <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà restituisce un <xref:System.Data.DataTable> oggetto con le colonne `Name` e `Number` e <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.OverwriteChanges> valore, i parametri vengono creati per `Name` e `Number` per il `Update` metodo. Se il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.CompareAllValues> valore, i parametri vengono creati per `Name`, `Number`, `original_Name`, e `original_Number`. (Il nome esatto dei parametri per i valori originali dipende il <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> proprietà.) Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo determina se il `Update` metodo specificato nella <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà presenta parametri corrispondenti.  
  
 Controllo della concorrenza è una tecnica che utilizzano archivi dati al controllo modalità di lettura e quando più client accedono e modificano gli stessi dati è cambiati nell'archivio dati. Ad esempio, un client legge i dati e visualizza all'utente, mentre un altro client legge gli stessi dati e presenta a un altro utente. Se entrambi gli utenti di aggiornano i dati e inviano per l'archiviazione dei dati, potrebbero verificarsi risultati imprevisti, poiché entrambi i client potrebbero fornire valori diversi per gli stessi dati. Questa viene considerata un conflitto. Impostando il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> proprietà per il <xref:System.Web.UI.ConflictOptions.CompareAllValues> valore, il `Update` metodo può confrontare i valori vecchi e nuovi per l'origine dei dati per rilevare i conflitti e gestirli, in base alle esigenze.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> proprietà delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa di connessione specifica del provider ADO.NET utilizzata dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per la connessione a un database sottostante.</summary>
        <value>Stringa specifica del provider di dati .NET Framework utilizzata dall'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per la connessione al database di SQL che rappresenta. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo può essere utilizzato con un'ampia gamma di provider ADO.NET e la sintassi della stringa di connessione utilizzata per connettersi a un'origine dati sottostante è specifica del provider.  
  
 Quando si configura un <xref:System.Web.UI.WebControls.SqlDataSource> , si imposta la <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> proprietà per il tipo di database (il valore predefinito è <xref:System.Data.SqlClient?displayProperty=nameWithType>), e si imposta la <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> proprietà in una stringa di connessione che include le informazioni necessarie per connettersi per il database. Il contenuto di una stringa di connessione diversi a seconda del tipo di database sta accedendo al controllo origine dati. Ad esempio, il <xref:System.Web.UI.WebControls.SqlDataSource> controllo richiede un nome del server, nome del database (catalogo) e informazioni su come autenticare l'utente durante la connessione a SQL Server. Per informazioni sul contenuto delle stringhe di connessione, vedere il <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> proprietà per il <xref:System.Data.SqlClient.SqlConnection> (classe), <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> proprietà per il <xref:System.Data.OracleClient.OracleConnection> (classe), <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> proprietà per il <xref:System.Data.OleDb.OleDbConnection> (classe), o <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> proprietà per il <xref:System.Data.Odbc.OdbcConnection> classe.  
  
 Se si modifica il <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> proprietà, il <xref:System.Web.UI.IDataSource.DataSourceChanged> evento viene generato, tutti i controlli associati ai <xref:System.Web.UI.WebControls.SqlDataSource> riassociazione del controllo.  
  
> [!IMPORTANT]
>  Per informazioni sull'archiviazione di una stringa di connessione, vedere [How To: Secure Connection Strings quando i controlli origine dati di utilizzo](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> proprietà per connettersi a un database di Microsoft SQL Server e visualizzare i risultati del <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà in un <xref:System.Web.UI.WebControls.GridView> controllo. Nel secondo esempio di codice viene illustrato uno scenario più complesso, in cui un <xref:System.Web.UI.WebControls.SqlDataSource> controllo viene utilizzato per visualizzare e aggiornare i dati in un database di Microsoft Access protetto da password. In ogni caso, il `connectionStrings` elemento del file Web. config verrà visualizzata per prima, seguita dalla pagina ASP.NET che contiene il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> proprietà per connettersi a un database di SQL Server e visualizzare i risultati del <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà in un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 L'esempio di codice seguente illustra uno scenario più complesso rispetto all'esempio di codice precedente, in cui un <xref:System.Web.UI.WebControls.SqlDataSource> controllo viene utilizzato per visualizzare e aggiornare dati in un database di Access protetti da password. Poiché il <xref:System.Web.UI.WebControls.SqlDataSource> viene utilizzato con l'accesso, il <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> è impostata sul <xref:System.Data.OleDb> provider e il <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> è impostata su una stringa di connessione appropriata per un database di Access UNC condiviso. Oggetto <xref:System.Web.UI.WebControls.GridView> controllo Visualizza gli ordini con date di spedizione. È possibile aggiornare un ordine selezionando la casella di controllo appropriata e quindi scegliendo il **aggiornare** pulsante.  
  
> [!IMPORTANT]
>  In questo esempio è inclusa una password in testo normale solo a scopo illustrativo. In un'applicazione di produzione, le stringhe di connessione che includono le password devono essere crittografate. Per altre informazioni, vedere [Protezione delle informazioni di connessione](~/docs/framework/data/adonet/protecting-connection-information.md).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nome della visualizzazione origine dati.</param>
        <summary>Crea un oggetto visualizzazione origine dati associato al controllo origine dati.</summary>
        <returns>Un oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> associato all'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che derivano dal <xref:System.Web.UI.WebControls.SqlDataSource> classe può eseguire l'override di <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> per restituire fortemente tipizzata di oggetti vista origine dati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la modalità di recupero dati utilizzata dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per recuperare dati.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />. Il valore predefinito è il <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> valore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identifica la modalità di recupero di dati come un <xref:System.Web.UI.WebControls.SqlDataSource> controllo recupera dati dal database sottostante.  
  
 Quando il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valore, i dati vengono caricati in un <xref:System.Data.DataSet> oggetto e archiviati in memoria nel server. Questo consente scenari in cui controlli dell'interfaccia utente, ad esempio <xref:System.Web.UI.WebControls.GridView>, offrono l'ordinamento, filtro e le funzionalità di paging.  
  
 Quando il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valore, i dati vengono recuperati da un <xref:System.Data.IDataReader> oggetto, ovvero un cursore forward-only di sola lettura. Il tipo specifico del <xref:System.Data.IDataReader> oggetto dipende dal provider di dati NET che il <xref:System.Web.UI.WebControls.SqlDataSource> Usa, che è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> proprietà. Per impostazione predefinita, il <xref:System.Web.UI.WebControls.SqlDataSource> controllo utilizza il provider per Microsoft SQL Server, il <xref:System.Data.SqlClient?displayProperty=nameWithType>, e il lettore dati è un <xref:System.Data.SqlClient.SqlDataReader> oggetto.  
  
 Se si modifica il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> proprietà, il <xref:System.Web.UI.IDataSource.DataSourceChanged> evento viene generato, tutti i controlli associati ai <xref:System.Web.UI.WebControls.SqlDataSource> riassociazione.  
  
 Il valore di <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> proprietà viene archiviata nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSource> controllo il <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valore per uno scenario con un <xref:System.Web.UI.WebControls.ListBox> controllo che non richiede alcun ordinamento, paging o filtraggio.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> non è uno dei valori definiti nell'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue un'operazione di eliminazione utilizzando la stringa SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> e tutti i parametri nell'insieme <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />.</summary>
        <returns>Valore che rappresenta il numero di righe eliminate dal database sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di eseguita l'operazione di eliminazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento. È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima di un'operazione di eliminazione.  
  
 Al termine dell'operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> evento. È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metodo è fornito per l'accesso a livello di codice per il `Delete` metodo. Se il <xref:System.Web.UI.WebControls.SqlDataSource> controllo è associato a un controllo con associazione a dati, il controllo con associazione a dati chiama automaticamente il **eliminare** metodo.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metodo delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> metodo il <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo. Per eseguire l'operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView> compila un <xref:System.Data.Common.DbCommand> utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> valori, quindi viene eseguita la <xref:System.Data.Common.DbCommand> nel database sottostante.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> testo per eliminare un ordine dal database Northwind. Inizialmente, i dati vengono recuperati dalla tabella Orders e visualizzati in un <xref:System.Web.UI.WebControls.DropDownList> controllo. È necessario dichiarare in modo esplicito il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> proprietà e chiamare il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metodo quando si utilizzano i controlli con associazione a dati, ad esempio il <xref:System.Web.UI.WebControls.DropDownList> (a differenza di altri controlli, ad esempio <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>, che compilano automaticamente il parametri e chiamare il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metodo su un controllo origine dati). In questo esempio, il <xref:System.Web.UI.WebControls.Button.OnClick%2A> eventi viene delegato a privato `OnDelete` degli eventi che chiama in modo esplicito il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metodo il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> non può stabilire una connessione con l'origine dati sottostante.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa SQL utilizzata dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per eliminare dati dal database sottostante.</summary>
        <value>Stringa SQL utilizzata da <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per eliminare dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> rappresenta una query SQL o il nome di una stored procedure e viene utilizzato il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metodo.  
  
 Poiché il tipo di SQL utilizzato varia a seconda dei prodotti del database, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, il quale è identificato dalla proprietà <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Se la stringa SQL è una query con parametri o un comando, anche la sintassi del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=nameWithType>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> (classe), la sintassi del parametro è `'@parameterName'`. Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, il segnaposto del parametro è `'?'`. Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> proprietà può essere una stringa SQL o il nome di una stored procedure, se il database supporta le stored procedure.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> proprietà delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
> [!IMPORTANT]
>  Per motivi di sicurezza, il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> proprietà non viene memorizzata nello stato di visualizzazione. Poiché è possibile decodificare il contenuto dello stato di visualizzazione sul client, l'archiviazione di informazioni riservate sulla struttura del database nella visualizzazione stato potrebbe causare vulnerabilità.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> testo per eliminare un ordine dalla tabella Orders del database Northwind. Dati vengono recuperati dalla tabella Orders e visualizzati un <xref:System.Web.UI.WebControls.GridView> controllo. Il <xref:System.Web.UI.WebControls.GridView> esegue il rendering di un **eliminare** pulsante automaticamente quando il <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> è impostata su `true`. Inoltre, quando il **eliminare** si fa clic sul pulsante, il <xref:System.Web.UI.WebControls.GridView> controllo popola automaticamente la <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> insieme e chiama il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metodo. Infine, poiché in questo esempio di codice vengono eliminati i dati, viene aggiunto un gestore eventi per tentare di eseguire il backup del database sul disco prima che il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> viene eseguita l'operazione.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se il testo nella proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> è un'istruzione SQL o il nome di una stored procedure.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Il valore predefinito è il valore <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> proprietà delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene completata un'operazione di eliminazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> evento per esaminare i valori dei parametri di output dopo un'operazione di eliminazione è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> oggetto associato all'evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di parametri che contiene i parametri utilizzati dalla proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> dall'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> associato al controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contenente i parametri utilizzati dalla proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> proprietà contiene una query SQL con parametri, il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> insieme contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter> oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.  
  
> [!NOTE]
>  Assicurarsi che non <xref:System.Web.UI.WebControls.BoundField> controlli nel controllo con associazione a dati che associa il <xref:System.Web.UI.WebControls.SqlDataSource> controllo hanno nomi che corrispondono a tutti i nomi di parametro nel <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> insieme. Potrebbe essere parametri che hanno lo stesso nome come campi associati vengono esclusi dal comando SQL e di un errore "parametro non è stato specificato".  
  
 Se il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.CompareAllValues> valore, i parametri vengono creati per i valori vecchi e nuovi dei dati. I parametri per i valori precedenti sono denominati in base al <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> proprietà.  
  
 A seconda del provider ADO.NET, l'ordine dei parametri di <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> raccolta potrebbe essere importante. Il <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> associano i parametri nella raccolta in base all'ordine in cui i parametri vengono visualizzati nella query SQL con parametri. Il <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> di controllo, associa i parametri nella raccolta abbinando il nome del parametro e un segnaposto nella query SQL. Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> proprietà recupera il <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> proprietà contenuta la <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> testo per eliminare un ordine dal database Northwind. Inizialmente, i dati vengono recuperati dalla tabella Orders e visualizzati in un <xref:System.Web.UI.WebControls.DropDownList> controllo. È necessario dichiarare in modo esplicito <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> proprietà e chiamare il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metodo quando si utilizzano i controlli con associazione a dati, ad esempio <xref:System.Web.UI.WebControls.DropDownList> (a differenza di altri controlli, ad esempio <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>, che compilano automaticamente i parametri e chiamare <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> in un controllo origine dati). In questo esempio, il <xref:System.Web.UI.WebControls.Button.OnClick%2A> eventi viene delegato a privato `OnDelete` degli eventi che chiama in modo esplicito il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metodo il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima di un'operazione di eliminazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell'applicazione, per convalidare i valori dei parametri o per modificare i valori dei parametri prima di <xref:System.Web.UI.WebControls.SqlDataSource> controllo esegue l'operazione di eliminazione.  
  
 La connessione all'origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare l'operazione chiamando direttamente il <xref:System.Data.Common.DbCommand.Cancel%2A> metodo il <xref:System.Data.Common.DbCommand> oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> oggetto. Tuttavia, annullare l'operazione di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> oggetto `true`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento generato prima che un <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operazione viene eseguita. Poiché in questo esempio vengono eliminati dati dal database Northwind, un <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> gestore viene aggiunto a tentare di eseguire il backup del database sul disco prima che il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> viene eseguita l'operazione.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se la memorizzazione di dati nella cache è abilitata nel controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>
          <see langword="true" /> se la memorizzazione di dati nella cache è abilitata per il controllo origine dati; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo supporta la memorizzazione nella cache di dati. Mentre vengono memorizzati i dati, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo recupera i dati dalla cache piuttosto che dal database sottostante. Alla scadenza della cache, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo recupera i dati dal database sottostante e li memorizza nella cache i dati.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo memorizza automaticamente i dati quando il <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> è impostata su `true` e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> è impostata su un valore maggiore di 0, che indica il numero di secondi che la cache memorizza i dati prima di recuperare un nuovo set.  
  
> [!IMPORTANT]
>  Quando si utilizza la rappresentazione del client con l'autenticazione di Microsoft Windows, viene memorizzato nella cache i dati quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un'altra chiamata al database per verificare l'accesso dell'utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come recuperare i dati dal database Northwind in Microsoft SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo con abilitata la memorizzazione nella cache dei dati. Il <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> è impostata su `true` e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> è impostato su 20 secondi. Poiché il <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> campo per impostazione predefinita, gli utenti di questa pagina verrà visualizzato i dati aggiornati ogni 20 secondi.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> viene impostata su <see langword="true" /> quando la memorizzazione nella cache non è supportata dall'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'espressione di filtro che viene applicata quando il metodo <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> viene chiamato.</summary>
        <value>Stringa che rappresenta un'espressione di filtro applicata quando i dati vengono recuperati usando il metodo <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> valore della proprietà è un'espressione di stringa di formato (una stringa che viene elaborata dal <xref:System.String.Format%2A?displayProperty=nameWithType> metodo) che utilizza i valori nel <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> raccolta per i parametri di sostituzione è incluso nella stringa. La sintassi dell'espressione di filtro è la stessa sintassi è accettata dal <xref:System.Data.DataView.RowFilter%2A> proprietà, perché l'espressione di filtro è applicata al <xref:System.Data.DataView.RowFilter%2A> proprietà del <xref:System.Data.DataView> oggetto restituito dall'esecuzione di <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> (metodo). Per ulteriori informazioni, vedere <xref:System.Data.DataColumn.Expression%2A>.  
  
 Se si aggiungono parametri per il <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> insieme, è inoltre possibile includere segnaposto della stringa di formato (ad esempio, `"{0}")` nell'espressione per sostituire i valori dei parametri. I segnaposto vengono sostituiti in base all'indice del parametro di <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> insieme. Se un oggetto di <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> insieme `null`, l'oggetto verrà sostituito da una stringa vuota.  
  
 È possibile includere parametri di <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà. Se il parametro è di tipo stringa o carattere, racchiuderlo tra virgolette singole. Virgolette non sono necessari, se il parametro è un tipo numerico. Il <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> insieme contiene i parametri vengono valutati per i segnaposto che si trovano nella <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo supporta il filtraggio dei dati solo quando nel <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modalità.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come recuperare i dati dal database Northwind e filtrarli utilizzando un <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> stringa e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> insieme. Il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà viene applicata a ogni volta che il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo viene eseguito per recuperare i dati. In questo esempio, il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> contiene un segnaposto per un parametro di filtro è contenuto nel <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> insieme. Inoltre, il parametro di filtro è un <xref:System.Web.UI.WebControls.ControlParameter> oggetto a cui è associato il <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> proprietà del <xref:System.Web.UI.WebControls.DropDownList> controllo. Poiché il <xref:System.Web.UI.WebControls.DropDownList> controllo ha relativo <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> proprietà impostata su `true`, qualsiasi modifica della selezione per il <xref:System.Web.UI.WebControls.DropDownList> controllo causa l'invio di informazioni al server della pagina e <xref:System.Web.UI.WebControls.GridView> riassociazione all'origine dati del controllo controllare con il nuovo filtro.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> è stata impostata e l'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> è in modalità <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima di un'operazione di filtro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento per eseguire le operazioni di convalida sui valori dei parametri di filtro prima di <xref:System.Web.UI.WebControls.SqlDataSource> controllo esegue un'operazione di filtro. È possibile annullare il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> oggetto `true`. L'evento viene generato solo se il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà è impostata.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> delegato dell'evento per il <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> evento del <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di parametri associati a tutti i segnaposto di parametro nella stringa <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contenente un insieme di parametri associato a tutti i segnaposto di parametro presenti nella proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I parametri di <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> sono associati ai parametri specificati nella raccolta di <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà. Segnaposti del parametro specificati nel <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà corrispondenti a oggetti parametro nell'ordine il <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> raccolta quando il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo viene chiamato.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> proprietà recupera il <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> proprietà contenuta la <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come recuperare i dati dal database Northwind e filtrarli utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> proprietà. Il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSource> il controllo viene applicato in qualsiasi momento il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo viene eseguito per recuperare i dati. In questo esempio, il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà contiene un segnaposto per un parametro di filtro è contenuto nel <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> insieme. Inoltre, il parametro di filtro è un <xref:System.Web.UI.WebControls.ControlParameter> oggetto a cui è associato il <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> proprietà del <xref:System.Web.UI.WebControls.DropDownList> controllo. Poiché il <xref:System.Web.UI.WebControls.DropDownList> controllo ha relativo <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> proprietà impostata su `true`, qualsiasi modifica apportata la <xref:System.Web.UI.WebControls.DropDownList> selezione, la pagina inviare informazioni al server e il <xref:System.Web.UI.WebControls.GridView> riassociazione controllo al controllo origine dati con il nuovo filtro.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Data.Common.DbProviderFactory" /> associato al provider ADO.NET identificato dalla proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.Common.DbProviderFactory" /> che rappresenta il provider ADO.NET identificato; in caso contrario, un'istanza dell'oggetto <see cref="N:System.Data.SqlClient" />, se non viene impostato alcun provider.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Common.DbProviderFactory> proprietà viene utilizzata per il <xref:System.Web.UI.WebControls.SqlDataSource> controllo per creare gli oggetti connessione e comando parametro ADO.NET corretti durante l'interazione con un database.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nome della visualizzazione da recuperare. Poiché l'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> supporta una sola visualizzazione, <c>viewName</c> viene ignorato.</param>
        <summary>Ottiene la visualizzazione origine dati denominata associata al controllo origine dati.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> denominato "Table" associato all'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo supporta solo una vista origine dati. Come con tutti gli oggetti vista origine dati, il <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto che è associato il controllo origine dati definisce le relative funzionalità, esegue tutte le operazioni necessarie per recuperare dati dal database sottostante, che esegue le operazioni, ad esempio l'ordinamento, inserimento, eliminazione e l'aggiornamento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> è <see langword="null" /> o un valore diverso da <c>Table</c>.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un insieme di nomi che rappresentano l'elenco di oggetti visualizzazione associati al controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <returns>Un insieme <see cref="T:System.Collections.ICollection" /> che contiene i nomi delle visualizzazioni associate all'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo supporta solo una visualizzazione nei relativi dati sottostanti, denominati `"Table"`. Il <xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> metodo restituisce una raccolta a elemento singolo con questo nome di una vista.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue un'operazione di inserimento utilizzando la stringa SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> e tutti i parametri nell'insieme <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />.</summary>
        <returns>Valore che rappresenta il numero di righe inserite nel database sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di eseguita l'operazione di inserimento, la <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento. È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima di <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operazione. Per eseguire un'operazione di inserimento, il <xref:System.Web.UI.WebControls.SqlDataSourceView> compila un <xref:System.Data.Common.DbCommand> utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> proprietà, quindi viene eseguita la <xref:System.Data.Common.DbCommand> oggetto nel database sottostante.  
  
 Al termine dell'operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento. È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metodo è fornito per l'accesso a livello di codice per il `Insert` metodo. Se il <xref:System.Web.UI.WebControls.SqlDataSource> controllo è associato a un controllo con associazione a dati, il controllo con associazione a dati chiama automaticamente il `Insert` metodo.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metodo delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> metodo il <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inserire dati in un database utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource> controllo e una semplice pagina Web Form. I dati correnti nella tabella di dati viene visualizzati nel <xref:System.Web.UI.WebControls.DropDownList> controllo. È possibile aggiungere nuovi record tramite l'immissione di valori di <xref:System.Web.UI.WebControls.TextBox> controlli e quindi fare clic sul **inserire** pulsante. Quando il **inserire** si fa clic sul pulsante, i valori specificati vengono inseriti nel database, quindi il <xref:System.Web.UI.WebControls.DropDownList> viene aggiornato.  
  
> [!IMPORTANT]
>  In questo esempio include una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza e i valori vengono inseriti nei parametri senza convalida, è anche una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  In questo esempio viene illustrato come utilizzare la sintassi dichiarativa per accedere ai dati. Per informazioni su come accedere ai dati tramite il codice anziché markup, vedere [l'accesso ai dati in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> non può stabilire una connessione con l'origine dati sottostante.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa SQL utilizzata dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per inserire dati nel database sottostante.</summary>
        <value>Stringa SQL utilizzata da <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per inserire dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> rappresenta una query SQL o il nome di una stored procedure e viene utilizzato il <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metodo.  
  
 Poiché il tipo di SQL utilizzato varia a seconda dei prodotti del database, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, il quale è identificato dalla proprietà <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Se la stringa SQL è una query o un comando con parametri, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=nameWithType>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> (classe), il segnaposto del parametro è `'@parameterName'`. Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, il segnaposto del parametro è `'?'`. Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> può essere una stringa SQL o il nome di una stored procedure, se l'origine dati supporta le stored procedure.  
  
 Questa proprietà di delega per il <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView> associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
> [!IMPORTANT]
>  Per motivi di sicurezza, il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> proprietà non viene memorizzata nello stato di visualizzazione. Poiché è possibile decodificare il contenuto dello stato di visualizzazione sul client, l'archiviazione di informazioni riservate sulla struttura del database nella visualizzazione stato potrebbe causare vulnerabilità.  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio viene illustrato come inserire dati in un database utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource> controllo e una semplice pagina Web Form. Nel secondo esempio di codice viene illustrato come recuperare i dati da Microsoft SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo e come utilizzare un <xref:System.Web.UI.WebControls.DetailsView> controllo per visualizzare i dettagli di una riga selezionata nel <xref:System.Web.UI.WebControls.GridView> controllo e come form per inserire nuovi record.  
  
> [!NOTE]
>  Questi esempi viene illustrato come utilizzare la sintassi dichiarativa per accedere ai dati. Per informazioni su come accedere ai dati tramite il codice anziché markup, vedere [l'accesso ai dati in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Esempio di codice riportato di seguito viene illustrato come inserire dati in un database utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource> controllo e una semplice pagina Web Form. I dati correnti nella tabella di dati viene visualizzati nel <xref:System.Web.UI.WebControls.DropDownList> controllo. È possibile aggiungere nuovi record immettendo i valori nel <xref:System.Web.UI.WebControls.TextBox> controlli e quindi scegliendo il **inserire** pulsante. Quando il **inserire** si fa clic sul pulsante, i valori specificati vengono inseriti nel database e <xref:System.Web.UI.WebControls.DropDownList> controllo viene aggiornato.  
  
> [!IMPORTANT]
>  In questo esempio include una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza e i valori vengono inseriti nei parametri senza convalida, è anche una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 Esempio di codice riportato di seguito viene illustrato come recuperare dati da SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo e come utilizzare un <xref:System.Web.UI.WebControls.DetailsView> controllo per visualizzare i dettagli di una riga selezionata nel <xref:System.Web.UI.WebControls.GridView> controllo e come form per inserire nuovi record.  
  
 Inizialmente, i dati vengono visualizzati nel <xref:System.Web.UI.WebControls.GridView> controllo e la riga selezionata del <xref:System.Web.UI.WebControls.GridView> viene visualizzato anche nella <xref:System.Web.UI.WebControls.DetailsView> controllo. Il <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> i controlli di utilizzare dati diversi controlli di origine; quello che è associato il <xref:System.Web.UI.WebControls.DetailsView> ha il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> proprietà, che assicura che la riga selezionata del <xref:System.Web.UI.WebControls.GridView> è visualizzato.  
  
 Se si fa clic generato automaticamente **inserire** pulsante il <xref:System.Web.UI.WebControls.DetailsView> (controllo), il <xref:System.Web.UI.WebControls.DetailsView> Visualizza un'interfaccia utente diverso, viene utilizzata per inserire un nuovo record. L'esempio utilizza una stored procedure per inserire i record e restituisce la chiave primaria della riga inserita. Se si inserisce un record, il <xref:System.Web.UI.WebControls.DetailsView> popola automaticamente la <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> insieme con i valori di colonne associate e chiama il <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metodo. Il <xref:System.Web.UI.WebControls.DetailsView> in grado di dedurre i parametri corretti da qualsiasi <xref:System.Web.UI.WebControls.BoundField> oggetto e un parametro per il <xref:System.Web.UI.WebControls.TemplateField> dell'oggetto quando viene utilizzata la sintassi di associazione dati bidirezionale di ASP.NET. In questo esempio viene aggiunto un parametro aggiuntivo nel <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> gestore eventi per gestire la chiave primaria che viene restituita dalla stored procedure.  
  
 Infine, dopo l'inserimento dei dati nel database tramite il <xref:System.Web.UI.WebControls.DetailsView> (controllo), il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> gestore eventi viene chiamato per gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, il valore della chiave primaria della riga inserita viene visualizzata e <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> del (metodo)<xref:System.Web.UI.WebControls.GridView> controllo viene chiamato in modo esplicito per aggiornare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se il testo nella proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> è un'istruzione SQL o il nome di una stored procedure.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Il valore predefinito è il valore <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> proprietà delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come recuperare dati da un database di Microsoft SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo. Viene inoltre illustrato come utilizzare un <xref:System.Web.UI.WebControls.DetailsView> controllo per visualizzare i dettagli di una riga selezionata nel <xref:System.Web.UI.WebControls.GridView> e come form per inserire nuovi record.  
  
 Il <xref:System.Web.UI.WebControls.GridView> controllo consente di visualizzare un set di dati e <xref:System.Web.UI.WebControls.DetailsView> Visualizza i dettagli per una particolare riga. Se si fa clic generato automaticamente **inserire** pulsante il <xref:System.Web.UI.WebControls.DetailsView> (controllo), il <xref:System.Web.UI.WebControls.DetailsView> Visualizza un'interfaccia utente diverso, viene utilizzata per inserire un nuovo record. L'esempio utilizza una stored procedure per inserire i record e restituisce la chiave primaria della riga inserita. Nome della stored procedure è impostato <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> proprietà e identificato come una stored procedure impostando il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> proprietà per il <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valore.  
  
 Dopo l'inserimento dei dati nel database tramite il <xref:System.Web.UI.WebControls.DetailsView> (controllo), il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> gestore eventi viene chiamato per gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, il valore della chiave primaria della riga inserita viene visualizzata e <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metodo il <xref:System.Web.UI.WebControls.GridView> controllo viene chiamato in modo esplicito per aggiornare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene completata un'operazione di inserimento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento per esaminare i valori dei parametri di output dopo un'operazione di inserimento è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> oggetto associato all'evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come recuperare dati da Microsoft SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo e come utilizzare un <xref:System.Web.UI.WebControls.DetailsView> controllo per visualizzare i dettagli di una riga selezionata nel <xref:System.Web.UI.WebControls.GridView> e come form per inserire nuovi record.  
  
> [!NOTE]
>  In questo esempio viene illustrato come utilizzare la sintassi dichiarativa per accedere ai dati. Per informazioni su come accedere ai dati tramite il codice anziché markup, vedere [l'accesso ai dati in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Inizialmente, i dati vengono visualizzati nel <xref:System.Web.UI.WebControls.GridView> controllo e la riga selezionata del <xref:System.Web.UI.WebControls.GridView> viene visualizzato anche nella <xref:System.Web.UI.WebControls.DetailsView> controllo. Il <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> i controlli di utilizzare dati diversi controlli di origine; quello che è associato il <xref:System.Web.UI.WebControls.DetailsView> ha il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> proprietà, che assicura che la riga selezionata del <xref:System.Web.UI.WebControls.GridView> è visualizzato.  
  
 Se si fa clic generato automaticamente **inserire** pulsante il <xref:System.Web.UI.WebControls.DetailsView> (controllo), il <xref:System.Web.UI.WebControls.DetailsView> Visualizza un'interfaccia utente diverso, viene utilizzata per inserire un nuovo record. L'esempio utilizza una stored procedure per inserire i record e restituisce la chiave primaria della riga inserita. Se si inserisce un record, il <xref:System.Web.UI.WebControls.DetailsView> popola automaticamente la <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> insieme con i valori di colonne associate e chiama il <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metodo. Il <xref:System.Web.UI.WebControls.DetailsView> in grado di dedurre i parametri corretti da qualsiasi <xref:System.Web.UI.WebControls.BoundField> oggetto e un parametro per il <xref:System.Web.UI.WebControls.TemplateField> dell'oggetto quando viene utilizzata la sintassi di associazione dati bidirezionale di ASP.NET. In questo esempio viene aggiunto un parametro aggiuntivo nel <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> gestore eventi per gestire la chiave primaria che viene restituita dalla stored procedure.  
  
 Infine, dopo l'inserimento dei dati nel database tramite il <xref:System.Web.UI.WebControls.DetailsView> (controllo), il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> gestore eventi viene chiamato per gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, il valore della chiave primaria della riga inserita viene visualizzata e <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> del (metodo)<xref:System.Web.UI.WebControls.GridView> controllo viene chiamato in modo esplicito per aggiornare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima di un'operazione di inserimento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell'applicazione, per convalidare i valori dei parametri o per modificare i valori dei parametri prima di <xref:System.Web.UI.WebControls.SqlDataSource> controllo esegue l'operazione di inserimento. La connessione all'origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare l'operazione chiamando direttamente il <xref:System.Data.Common.DbCommand.Cancel%2A> metodo il <xref:System.Data.Common.DbCommand> oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> proprietà. Tuttavia, annullare l'operazione di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> oggetto `true`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come recuperare dati da Microsoft SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo e come utilizzare un <xref:System.Web.UI.WebControls.DetailsView> controllo per visualizzare i dettagli di una riga selezionata nel <xref:System.Web.UI.WebControls.GridView> e come form per inserire nuovi record.  
  
> [!NOTE]
>  In questo esempio viene illustrato come utilizzare la sintassi dichiarativa per accedere ai dati. Per informazioni su come accedere ai dati tramite il codice anziché markup, vedere [l'accesso ai dati in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Inizialmente, i dati vengono visualizzati nel <xref:System.Web.UI.WebControls.GridView> controllo e la riga selezionata del <xref:System.Web.UI.WebControls.GridView> viene visualizzato anche nella <xref:System.Web.UI.WebControls.DetailsView> controllo. Il <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> i controlli di utilizzare dati diversi controlli di origine; quello che è associato il <xref:System.Web.UI.WebControls.DetailsView> ha il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> proprietà, che assicura che la riga selezionata del <xref:System.Web.UI.WebControls.GridView> è visualizzato.  
  
 Se si fa clic generato automaticamente **inserire** pulsante il <xref:System.Web.UI.WebControls.DetailsView> (controllo), il <xref:System.Web.UI.WebControls.DetailsView> Visualizza un'interfaccia utente diverso, viene utilizzata per inserire un nuovo record. L'esempio utilizza una stored procedure per inserire i record e restituisce la chiave primaria della riga inserita. Se si inserisce un record, il <xref:System.Web.UI.WebControls.DetailsView> popola automaticamente la <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> insieme con i valori di colonne associate e chiama il <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metodo. Il <xref:System.Web.UI.WebControls.DetailsView> in grado di dedurre i parametri corretti da qualsiasi <xref:System.Web.UI.WebControls.BoundField> oggetto e un parametro per il <xref:System.Web.UI.WebControls.TemplateField> quando viene utilizzata la sintassi di associazione dati bidirezionale di ASP.NET. In questo esempio viene aggiunto un parametro aggiuntivo nel <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> gestore eventi per gestire la chiave primaria che viene restituita dalla stored procedure.  
  
 Infine, dopo l'inserimento dei dati nel database tramite il <xref:System.Web.UI.WebControls.DetailsView> (controllo), il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> gestore eventi viene chiamato per gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, il valore della chiave primaria della riga inserita viene visualizzata e `DataBind` del (metodo)<xref:System.Web.UI.WebControls.GridView> controllo viene chiamato in modo esplicito per aggiornare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di parametri che contiene i parametri utilizzati dalla proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> dall'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> associato al controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contenente i parametri utilizzati dalla proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> proprietà recupera il <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> proprietà contenuta la <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
 Se il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> proprietà contiene una query SQL con parametri, il <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> insieme contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter> oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.  
  
 A seconda del provider ADO.NET, l'ordine dei parametri di <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> raccolta potrebbe essere importante. Il <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> associano i parametri nella raccolta in base all'ordine in cui compaiono nella query SQL con parametri. Il <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> di controllo, associa i parametri nella raccolta abbinando il nome del parametro con un alias di segnaposto nella query SQL. Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inserire dati in un database utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource> controllo e una semplice pagina Web Form. I dati correnti nella tabella di dati viene visualizzati nel <xref:System.Web.UI.WebControls.DropDownList> controllo. È possibile aggiungere nuovi record tramite l'immissione di valori di <xref:System.Web.UI.WebControls.TextBox> controlli e quindi fare clic sul **inserire** pulsante. Quando il **inserire** si fa clic sul pulsante, i valori specificati vengono inseriti nel database e <xref:System.Web.UI.WebControls.DropDownList> controllo viene aggiornato.  
  
> [!IMPORTANT]
>  In questo esempio include una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza e i valori vengono inseriti nei parametri senza convalida, è anche una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  In questo esempio viene illustrato come utilizzare la sintassi dichiarativa per accedere ai dati. Per informazioni su come accedere ai dati tramite il codice anziché markup, vedere [l'accesso ai dati in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Oggetto che rappresenta lo stato dell'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
        <summary>Carica nel controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> lo stato delle proprietà che devono essere mantenute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> metodo viene utilizzato per caricare lo stato di visualizzazione salvato in precedenza il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa di formato da applicare ai nomi di tutti i parametri passati al metodo <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> o <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />.</summary>
        <value>Stringa che rappresenta una stringa di formato applicata ai nomi di tutti i parametri <paramref name="oldValues" /> passati al metodo <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> o <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />. L'impostazione predefinita è "{0}".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> stringa di formato viene applicata solo alle chiavi primarie, ad esempio quelle che sono identificati dal `DataKeyNames` proprietà del controllo con associazione a dati associato o di eliminazione e aggiornare gli scenari in cui il <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.CompareAllValues>valore e un set di `oldValues` vengono passati al metodo di dati corrispondente. In questo caso, la stringa di formato viene applicata a ogni nome di parametro nel `oldValues` insieme.  
  
 Due scenari comuni in cui è possibile modificare il <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> proprietà sono i seguenti:  
  
-   Per distinguere tra i valori vecchi e nuovi aggiornamenti. Quando il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.CompareAllValues> valore, i parametri vengono aggiunti i valori originali e quelli nuovi per il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> insieme. Senza la stringa di formattazione, verranno creati due parametri con lo stesso nome per ogni campo dati. Se si modifica il nome del parametro del valore originale, è possibile confrontare i dati di origine dei dati per rilevare i conflitti e confrontare i valori di chiave.  
  
-   Alcune finestre di progettazione visiva implementano uno schema di denominazione specifico per le chiavi e i valori originali.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Aggiunge un gestore eventi <see cref="E:System.Web.UI.Page.LoadComplete" /> al controllo <see cref="T:System.Web.UI.Page" /> che contiene il controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il gestore dell'evento che viene aggiunto per il <xref:System.Web.UI.WebControls.SqlDataSource> gli aggiornamenti dell'oggetto di <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> valori. Se i valori vengono aggiornati, il <xref:System.Web.UI.IDataSource.DataSourceChanged> evento viene generato, tutti i controlli associati ai <xref:System.Web.UI.WebControls.SqlDataSource> riassociazione del controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del provider di dati .NET Framework utilizzato dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per la connessione a un'origine dati sottostante.</summary>
        <value>Nome del provider di dati utilizzato dall'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />; in caso contrario, il provider ADO.NET per Microsoft SQL Server, se non è impostato alcun provider. Il valore predefinito è il provider ADO.NET per Microsoft SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework include i provider di dati seguenti:  
  
-   Il <xref:System.Data.SqlClient?displayProperty=nameWithType> provider è il valore predefinito, Provider di dati .NET Framework per SQL Server.  
  
-   Il <xref:System.Data.OleDb?displayProperty=nameWithType> provider è il Provider di dati .NET Framework per OLE DB.  
  
-   Il <xref:System.Data.Odbc?displayProperty=nameWithType> provider è il Provider di dati .NET Framework per ODBC.  
  
-   Il <xref:System.Data.OracleClient?displayProperty=nameWithType> provider è il Provider di dati .NET Framework per Oracle.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> proprietà mai è impostata sul nome del provider ADO.NET non gestito, ad esempio `MSDAORA`. Per ulteriori informazioni, vedere [selezione di dati mediante il controllo SqlDataSource](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
 Se si modifica il <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> proprietà, il <xref:System.Web.UI.IDataSource.DataSourceChanged> evento viene generato, tutti i controlli associati ai <xref:System.Web.UI.WebControls.SqlDataSource> riassociazione.  
  
 Viene specificato un elenco dei provider disponibili nel `DbProviderFactories` sottosezione del `system.data` sezione del file Machine. config.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Il primo esempio di codice viene illustrato come connettersi a un database di SQL Server utilizzando il valore predefinito Provider dati .NET Framework per SQL Server per il <xref:System.Web.UI.WebControls.SqlDataSource> (controllo), il <xref:System.Data.SqlClient?displayProperty=nameWithType>. Nel secondo esempio di codice viene illustrato come connettersi a un database ODBC utilizzando il Provider di dati .NET Framework per ODBC, il <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 Esempio di codice riportato di seguito viene illustrato come connettersi a un database di SQL Server utilizzando il provider di dati predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> (controllo), il <xref:System.Data.SqlClient?displayProperty=nameWithType>. Ogni volta che il <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> proprietà non è impostata in modo esplicito, viene utilizzato il provider predefinito. Il <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> proprietà è specifico del provider.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 L'esempio di codice seguente è funzionalmente equivalente all'esempio di codice precedente, viene illustrato come connettersi a un database ODBC utilizzando il Provider di dati .NET Framework per ODBC, il <xref:System.Data.Odbc?displayProperty=nameWithType>. Il <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> proprietà è impostata sul nome di un nome origine dati ODBC (DSN) che viene utilizzato per connettersi al database ODBC.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva lo stato di visualizzazione corrente del controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <returns>Oggetto che contiene lo stato salvato dell'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Oggetto <see cref="T:System.Web.UI.DataSourceSelectArguments" /> utilizzato per richiedere operazioni sui dati oltre il recupero dei dati di base.</param>
        <summary>Recupera dati dal database sottostante utilizzando la stringa SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> e tutti i parametri dell'insieme <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</summary>
        <returns>Elenco <see cref="T:System.Collections.IEnumerable" /> di righe di dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo viene chiamato automaticamente durante la <xref:System.Web.UI.Control.PreRender> fase del ciclo di vita della pagina. Viene chiamato dai controlli con associazione a dati che sono stati associati a un <xref:System.Web.UI.WebControls.SqlDataSource> controllare tramite i relativi <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> metodo restituisce un <xref:System.Data.DataView> oggetto se di <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valore. Il <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> metodo restituisce un <xref:System.Data.IDataReader> oggetto se di <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valore. Chiudi il <xref:System.Data.IDataReader> al termine della lettura dei dati dell'oggetto.  
  
 Prima di <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operazione viene eseguita, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> evento. È possibile gestire questo evento per esaminare i valori dei parametri e per eseguire le elaborazioni prima di <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operazione.  
  
 Dopo il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> al completamento dell'operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Selected> evento. È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione.  
  
 Se il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> è impostata su <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> e la memorizzazione nella cache è abilitata, il <xref:System.Web.UI.WebControls.SqlDataSource> oggetto recupera i dati e Salva i dati nella cache durante il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operazione. La cache viene creata, annullata o aggiornata in base al comportamento di memorizzazione nella cache che viene specificato tramite la combinazione del <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> proprietà.  
  
> [!IMPORTANT]
>  Quando si utilizza la rappresentazione del client con l'autenticazione di Microsoft Windows, viene memorizzato nella cache i dati quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un'altra chiamata al database per verificare l'accesso dell'utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache.  
  
 Se il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> è impostata su <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> proprietà è stata specificata, l'espressione di filtro viene valutata con tutte le proprietà fornite <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> proprietà e il filtro risultante viene applicato all'elenco di dati durante il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>operazione.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> metodo il <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo. Per eseguire un'operazione di recupero di dati, il <xref:System.Web.UI.WebControls.SqlDataSourceView> compila un <xref:System.Data.Common.DbCommand> oggetto utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> valori, quindi viene eseguita la <xref:System.Data.Common.DbCommand> nel database sottostante.  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come chiamare a livello di codice il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo e impostare i valori in base al risultato della query. Nell'esempio seguente viene illustrato il codice dichiarativo per i controlli Web.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 Nell'esempio seguente viene illustrato come chiamare a livello di codice il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo. Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo restituisce un valore integer. Il valore dell'intero utilizzato per impostare il testo di un <xref:System.Web.UI.WebControls.Label> controllo e per determinare se visualizzare un <xref:System.Web.UI.WebControls.HyperLink> controllo.  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> non può stabilire una connessione con l'origine dati sottostante.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa SQL utilizzata dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per recuperare dati dal database sottostante.</summary>
        <value>Stringa SQL o nome di una stored procedure utilizzata dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per recuperare dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà rappresenta una query SQL o il nome di una stored procedure e viene utilizzata il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo per recuperare dati da un database di SQL Server. Se si utilizza un asterisco (*) nel comando Select per selezionare tutte le colonne e se si utilizza la generazione automatica di codice per eseguire l'aggiornamento o eliminazione, assicurarsi che nessuna colonna deve contenere spazi nei nomi.  
  
 Poiché il tipo di SQL utilizzato varia a seconda dei prodotti del database, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, il quale è identificato dalla proprietà <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Se la stringa SQL è una query o un comando con parametri, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=nameWithType>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> (classe), il segnaposto del parametro è `'@parameterName'`. Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, il segnaposto del parametro è `'?'`. Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà può essere una stringa SQL o il nome di una stored procedure, se l'origine dati supporta le stored procedure.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
> [!IMPORTANT]
>  Per motivi di sicurezza, il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà non viene memorizzata nello stato di visualizzazione. Poiché è possibile decodificare il contenuto dello stato di visualizzazione sul client, l'archiviazione di informazioni riservate sulla struttura del database nella visualizzazione stato potrebbe causare vulnerabilità.  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> testo per una query SQL di base per recuperare dati da un database conforme a ODBC e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo. Nel secondo esempio di codice viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> testo per il nome di una stored procedure e <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> proprietà per il <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valore per recuperare dati da un database di Microsoft SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.DropDownList> controllo.  
  
 In entrambi gli esempi, non è necessario chiamare in modo esplicito il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metodo perché i controlli con associazione a dati che sono associati all'origine dati controllo tramite il <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> proprietà chiama automaticamente il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> durante il (metodo)<xref:System.Web.UI.Control.PreRender> fase.  
  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> testo per una query SQL di base per recuperare dati da un database conforme a ODBC e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> testo per il nome di una stored procedure e <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> proprietà per il <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valore per recuperare dati da un database di SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.DropDownList> controllo. Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà può essere una query SQL o il nome di una stored procedure, se l'origine dati supporta le stored procedure.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se il testo nella proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> è una query SQL o il nome di una stored procedure.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Il valore predefinito è il valore <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> proprietà delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> testo per il nome di una stored procedure e <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> proprietà per il <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valore, per recuperare dati da un database di Microsoft SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.DropDownList> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene completata un'operazione di recupero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Selected> evento per esaminare i valori dei parametri di output dopo un'operazione di recupero di dati è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> oggetto associato all'evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima di un'operazione di recupero dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> evento per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell'applicazione, per convalidare i valori dei parametri o per modificare i valori dei parametri prima di <xref:System.Web.UI.WebControls.SqlDataSource> controllo esegue l'operazione select. Sono disponibili gli argomenti di selezione di <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> oggetto associato all'evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di parametri che contiene i parametri utilizzati dalla proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> dall'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> associato al controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contenente i parametri utilizzati dalla proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà contiene una query SQL con parametri, il <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> insieme contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter> oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.  
  
 A seconda del provider ADO.NET, l'ordine dei parametri di <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> raccolta potrebbe essere importante. Il <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> associano i parametri nella raccolta in base all'ordine in cui compaiono nella query SQL con parametri. Il <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> di controllo, associa i parametri nella raccolta abbinando il nome del parametro con un alias di segnaposto nella query SQL. Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> proprietà recupera il <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> proprietà contenuta la <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come recuperare dati dal database Northwind in Microsoft SQL Server impostando la <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà da una query SQL. La query SQL con parametri e segnaposto nel <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> proprietà corrisponde al <xref:System.Web.UI.WebControls.ControlParameter> oggetto che viene aggiunto al <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> insieme. Il <xref:System.Web.UI.WebControls.DropDownList> controllare, quali il <xref:System.Web.UI.WebControls.ControlParameter> è associato a, agisce come un filtro per ciò che viene visualizzato nel <xref:System.Web.UI.WebControls.ListBox> controllo.  
  
 Per informazioni su altri tipi di parametri che è possibile utilizzare, vedere il <xref:System.Web.UI.WebControls.Parameter> Cenni preliminari sulla classe.  
  
> [!NOTE]
>  Poiché il parametro viene utilizzato in una clausola WHERE, l'utilizzo del <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> proprietà nell'esempio di codice è funzionalmente equivalente all'utilizzo di <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> proprietà.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome di un parametro di stored procedure utilizzato per ordinare i dati recuperati quando il recupero dati viene eseguito utilizzando una stored procedure.</summary>
        <value>Nome di un parametro di stored procedure utilizzato per ordinare i dati recuperati quando il recupero dati viene eseguito utilizzando una stored procedure.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> proprietà viene valutata solo quando il comando SQL che è contenuta la <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> proprietà è il nome di una stored procedure. In questo caso, se il <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> è impostata, contenente il nome di un parametro che viene utilizzato per ordinare i risultati della stored procedure.  
  
 Se il <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> è impostata, viene aggiunto all'inizio di <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa delimitata da punti e virgola che indica i database e le tabelle da utilizzare per la dipendenza della cache da Microsoft SQL Server.</summary>
        <value>Stringa che indica i database e le tabelle da utilizzare per la dipendenza della cache da SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo supporta criteri di scadenza facoltativa in base il <xref:System.Web.Caching.SqlCacheDependency> oggetto per la cache di dati (il servizio deve essere configurato per il server di database).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> stringa identifica i database e tabelle in base al formato stesso che viene utilizzato il `@ Page` direttiva, in cui la prima parte della stringa è una stringa di connessione a un database di Microsoft SQL Server, seguita da un virgola come delimitatore, e Infine, il nome della tabella di database (ad esempio, `"connectionstring1:table1"`). Se il <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> proprietà dipende da più di una tabella, le coppie nome e-tabella di stringhe di connessione sono separate da punti e virgola (ad esempio, `"connectionstring1:table1";connectionstring2:table2"`).  
  
> [!IMPORTANT]
>  Quando si utilizza la rappresentazione del client con l'autenticazione di Microsoft Windows, viene memorizzato nella cache i dati quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un'altra chiamata al database per verificare l'accesso dell'utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare una dipendenza della cache di SQL Server e impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> proprietà di un <xref:System.Web.UI.WebControls.SqlDataSource> controllo. In questo esempio, il database viene eseguito il polling ogni 120 secondi. Se i dati di Northwind Traders Employees tabella vengono modificati nel tempo, tutti i dati memorizzati nella cache il <xref:System.Web.UI.WebControls.SqlDataSource> controllare e visualizzare il <xref:System.Web.UI.WebControls.GridView> controllo viene aggiornato per il <xref:System.Web.UI.WebControls.SqlDataSource> controllare la volta successiva che il database viene eseguito il polling.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tiene traccia delle modifiche dello stato di visualizzazione del controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> in modo che possano essere archiviate nell'oggetto <see cref="T:System.Web.UI.StateBag" /> per il controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> viene eseguito l'override di metodo per contrassegnare il punto di partenza per iniziare a rilevare e le modifiche al controllo come parte dello stato di visualizzazione per il controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue un'operazione di aggiornamento utilizzando la stringa SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> e tutti i parametri nell'insieme <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />.</summary>
        <returns>Valore che rappresenta il numero di righe aggiornate nel database sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metodo viene chiamato automaticamente dal <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.FormView> controlli durante il postback se i dati sono stati modificati. Per i dati che sono stati modificati in altri controlli, la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metodo può essere chiamato in modo esplicito nel postback durante il <xref:System.Windows.Forms.Form.Load> evento.  
  
 Prima di <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operazione viene eseguita, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Updating> evento. È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima un <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operazione.  
  
 Dopo il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> al completamento dell'operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Updated> evento. È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metodo delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> metodo il <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo. Per eseguire un'operazione di aggiornamento, il <xref:System.Web.UI.WebControls.SqlDataSourceView> compila un <xref:System.Data.Common.DbCommand> utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> proprietà, quindi viene eseguita la <xref:System.Data.Common.DbCommand> oggetto nel database sottostante.  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Updating> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.SqlDataSource> controllo per visualizzare i dati in un <xref:System.Web.UI.WebControls.DropDownList> controllo e aggiornare i dati quando il **Invia** si fa clic sul pulsante. Nel secondo esempio di codice viene illustrato come visualizzare i dati recuperati da un database di Microsoft SQL Server in un <xref:System.Web.UI.WebControls.DropDownList> controllare e aggiornare il record utilizzando un <xref:System.Web.UI.WebControls.TextBox> controllo.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.SqlDataSource> controllo per visualizzare i dati in un <xref:System.Web.UI.WebControls.DropDownList> controllo e aggiornare i dati quando il **Invia** si fa clic sul pulsante. Il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà è impostata con un'istruzione SQL con parametri e due <xref:System.Web.UI.WebControls.ControlParameter> i parametri vengono aggiunti per il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> insieme. Quando il **Invia** si fa clic sul pulsante, il <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento viene gestito per chiamare il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metodo in modo esplicito.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato come visualizzare i dati recuperati da un database di SQL Server in un <xref:System.Web.UI.WebControls.DropDownList> controllare e aggiornare il record utilizzando un <xref:System.Web.UI.WebControls.TextBox> controllo. Nell'esempio viene illustrato come utilizzare un <xref:System.Data.Common.DbTransaction> oggetto per aggiungere contesto di transazione quando si utilizza il <xref:System.Web.UI.WebControls.SqlDataSource> controllo per aggiornare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> non può stabilire una connessione con l'origine dati sottostante.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa SQL utilizzata dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per aggiornare i dati nel database sottostante.</summary>
        <value>Stringa SQL utilizzata da <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> per aggiornare i dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> rappresenta una query SQL o il nome di una stored procedure e viene utilizzato il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metodo.  
  
 Poiché il tipo di SQL utilizzato varia a seconda dei prodotti del database, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, il quale è identificato dalla proprietà <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Se la stringa SQL è una query o un comando con parametri, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=nameWithType>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> (classe), il segnaposto del parametro è `'@parameterName'`. Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, il segnaposto del parametro è `'?'`. Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà può essere una stringa SQL o il nome di una stored procedure, se l'origine dati supporta le stored procedure.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
> [!IMPORTANT]
>  Per motivi di sicurezza, il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà non viene memorizzata nello stato di visualizzazione. Poiché è possibile decodificare il contenuto dello stato di visualizzazione sul client, l'archiviazione di informazioni riservate sulla struttura del database nella visualizzazione stato potrebbe causare vulnerabilità.  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSource> controllo e aggiornare i dati in un database di Microsoft SQL Server utilizzando il <xref:System.Web.UI.WebControls.GridView> controllo. Nel secondo esempio di codice viene illustrato come aggiornare i dati in un database ODBC tramite il <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSource> controllo e aggiornare i dati in un database di SQL Server utilizzando il <xref:System.Web.UI.WebControls.GridView> controllo. Il <xref:System.Web.UI.WebControls.GridView> popola automaticamente il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> insieme, deduzione dei parametri dal <xref:System.Web.UI.WebControls.BoundField> oggetti e chiama il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metodo quando il **aggiornamento** collegamento il modificabile<xref:System.Web.UI.WebControls.GridView>è selezionata. In questo esempio include anche alcune operazioni di post-elaborazione: dopo aver aggiornato un record, viene inviato un messaggio di posta elettronica di notifica.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 L'esempio di codice seguente è funzionalmente identico all'esempio di codice precedente, di seguito viene illustrato come aggiornare i dati in un database ODBC tramite il <xref:System.Web.UI.WebControls.GridView> controllo. Il <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> è impostata sul provider ADO.NET per ODBC, il <xref:System.Data.Odbc?displayProperty=nameWithType>e <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> proprietà è impostata sul nome di un nome di origine dati (DSN) ODBC.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se il testo nella proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> è un'istruzione SQL o il nome di una stored procedure.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Il valore predefinito è il valore <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> proprietà delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene completata un'operazione di aggiornamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Updated> evento per esaminare i valori dei parametri di output dopo un'operazione di aggiornamento è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> oggetto associato all'evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come visualizzare e aggiornare i dati recuperati da un database ODBC in un <xref:System.Web.UI.WebControls.GridView> controllo. Dopo l'aggiornamento di un record, il <xref:System.Web.UI.WebControls.SqlDataSource.Updated> evento è gestito da un gestore eventi per eseguire un passaggio di post-elaborazione in cui viene inviata una notifica di posta elettronica.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di parametri che contiene i parametri utilizzati dalla proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> associato al controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contenente i parametri utilizzati dalla proprietà <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> proprietà contiene una query SQL con parametri, il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> insieme contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter> oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.  
  
 I nomi dei parametri possono essere influenzati dal <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> proprietà, in particolare, se il nome identifica una chiave primaria, ad esempio una chiave specificata utilizzando il `DataKeyNames` proprietà del controllo con associazione a dati o di eliminazione e aggiornare gli scenari in cui il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> proprietà è impostata sul <xref:System.Web.UI.ConflictOptions.CompareAllValues> valore e un set di `oldValues` vengono passati al metodo di dati corrispondente. In questo caso, la stringa di formato viene applicata a ogni nome di parametro nel `oldValues` insieme.  
  
 L'ordine dei parametri di <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> raccolta potrebbe essere importante, a seconda del provider ADO.NET. Il <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> associano i parametri nella raccolta in base all'ordine in cui compaiono nella query SQL con parametri. Il <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource> di controllo, associa i parametri nella raccolta abbinando il nome del parametro con un alias di segnaposto nella query SQL. Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> proprietà recupera il <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> proprietà contenuta la <xref:System.Web.UI.WebControls.SqlDataSourceView> oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.SqlDataSource> controllo per visualizzare i dati in un <xref:System.Web.UI.WebControls.DropDownList> controllo e aggiornare i dati quando il **Invia** si fa clic sul pulsante. Il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> viene impostato con un'istruzione SQL con parametri e due <xref:System.Web.UI.WebControls.ControlParameter> i parametri vengono aggiunti per il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> insieme. Quando il **Invia** si fa clic sul pulsante, il <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento viene gestito per chiamare il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metodo in modo esplicito.  
  
> [!IMPORTANT]
>  In questo esempio include una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza e i valori vengono inseriti nei parametri senza convalida, è anche una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima di un'operazione di aggiornamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Updating> evento per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell'applicazione, per convalidare i valori dei parametri o per modificare i valori dei parametri prima di <xref:System.Web.UI.WebControls.SqlDataSource> controllo esegue l'operazione di aggiornamento. La connessione all'origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare direttamente il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operazione sul database chiamando il <xref:System.Data.Common.DbCommand.Cancel%2A> metodo il <xref:System.Data.Common.DbCommand> oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> oggetto. È possibile, tuttavia, annullare l'operazione di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> per `true`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
> [!IMPORTANT]
>  I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Updating> evento per convalidare i valori dei parametri prima di eseguire la query. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare i dati recuperati da un database di Microsoft SQL Server in un <xref:System.Web.UI.WebControls.DropDownList> controllare e aggiornare il record utilizzando un <xref:System.Web.UI.WebControls.TextBox> controllo. Nell'esempio viene illustrato come utilizzare un <xref:System.Data.Common.DbTransaction> oggetto per aggiungere contesto di transazione quando si utilizza il <xref:System.Web.UI.WebControls.SqlDataSource> controllo per aggiornare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>