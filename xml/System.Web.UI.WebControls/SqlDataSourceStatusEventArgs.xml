<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf662220fa381ff1888a96cd50bfa39d132a8c80" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39938463" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce dati per un evento generato dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> dopo che è stata completata un'operazione sui dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> classe viene utilizzata nel <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, e <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> eventi per passare le informazioni su un'operazione di database dopo che viene eseguita dai dati del controllo del codice sorgente. Queste informazioni includono il numero di righe interessate dall'operazione, il <xref:System.Data.Common.DbCommand> oggetto che l'origine dati usata per eseguire l'operazione e nessuna informazione sull'eccezione che ha generato. Tramite l'aggiunta di un delegato del gestore eventi per gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> o <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> eventi, è possibile esaminare i dati e qualsiasi elaborazione post aggiuntivi necessari.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo espone numerosi eventi che è possibile gestire per lavorare con gli oggetti dati sottostanti nel corso di un'operazione sui dati. Nella tabella seguente elenca gli eventi e associate <xref:System.EventArgs> e classi di gestori eventi, per meglio ottenere istruzioni utili per i vari eventi che corrispondono al ciclo di vita di un'operazione di dati usando il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> si verifica prima che i dati vengono recuperati.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> si verificano prima un'operazione di inserimento, aggiornamento o operazione di eliminazione viene eseguita.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> si verificano dopo il recupero dei dati, insert, update o operazioni di eliminazione viene completata.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> classe per esaminare il valore restituito e i valori dei parametri di output che vengono restituiti quando si usa un <xref:System.Web.UI.WebControls.SqlDataSource> controllo con una stored procedure per popolare un <xref:System.Web.UI.WebControls.GridView> controllo. La stored procedure consente di selezionare i dati visualizzati nei <xref:System.Web.UI.WebControls.GridView>, ma passa inoltre altre informazioni al chiamante, ad esempio un parametro di output integer e un valore restituito. I parametri che il <xref:System.Web.UI.WebControls.SqlDataSource> viene utilizzata per la stored procedure è contenuti i <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> insieme e sono costituiti i parametri che passano informazioni dal form Web alla stored procedure, nonché eseguire il backup di parametri che passano le informazioni per il Form. Il <xref:System.Web.UI.WebControls.Parameter.Direction%2A> questi parametri è impostata su <xref:System.Data.ParameterDirection.Output> e <xref:System.Data.ParameterDirection.ReturnValue>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command">La classe <see cref="T:System.Data.Common.DbCommand" /> che rappresenta la query, il comando o la stored procedure di database inviata al database con il controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
        <param name="affectedRows">Numero di righe interessate dall'operazione sul database, se applicabile.</param>
        <param name="exception">Eccezione <see cref="T:System.Exception" /> generata dall'operazione sul database, se applicabile.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> utilizzando i parametri di output specificati, il valore restituito e il numero di righe interessate dall'operazione sul database.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di righe interessate dall'operazione sul database.</summary>
        <value>Numero di righe interessate dall'operazione sul database. Il valore predefinito è -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutte le operazioni restituiscono il numero di righe interessate dall'operazione. Il <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A> proprietà ha lo stesso valore come valore restituito del <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>, e <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metodi.  
  
 Quando la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> viene chiamato e l'origine dati è impostato su <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> modalità, il valore restituito è 0 in tutti i casi.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il comando di database inviato al database.</summary>
        <value>Oggetto <see cref="T:System.Data.Common.DbCommand" /> che rappresenta il comando di database inviato al database.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, o <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> eventi per esaminare e modificare le proprietà del <xref:System.Data.Common.DbCommand> dopo l'invio dal <xref:System.Web.UI.WebControls.SqlDataSource> controllo nel database. Il <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A> proprietà consente di accedere ai valori restituiti e i valori ai parametri di output dopo l'operazione di database viene eseguita tramite il <xref:System.Data.Common.DbCommand.Parameters%2A> proprietà, così come il <xref:System.Data.Common.DbCommand.CommandText%2A> proprietà, che rappresenta la query SQL, comando, o nome della stored procedure che è stato inviato al database.  
  
 Eventuali parametri di output sono specificamente dai parametri che hanno un' <xref:System.Data.ParameterDirection.InputOutput> o <xref:System.Data.ParameterDirection.Output> valore per il <xref:System.Web.UI.WebControls.Parameter.Direction%2A> proprietà del <xref:System.Web.UI.WebControls.Parameter> oggetto. Un valore restituito è da un parametro che ha un <xref:System.Data.ParameterDirection.ReturnValue> valore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come esaminare i valori dei parametri di output quando si usa un <xref:System.Web.UI.WebControls.SqlDataSource> controllo con una stored procedure. Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection contiene i parametri che il <xref:System.Web.UI.WebControls.SqlDataSource> viene utilizzato per la stored procedure ed è costituito da parametri di passano le informazioni da Web form per la stored procedure, nonché i parametri che passa informazioni al modulo di. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un wrapper per le eccezioni generate dal database durante un'operazione sui dati.</summary>
        <value>Eccezione <see cref="T:System.Exception" /> che include tutte le eccezioni generate dal database nella relativa proprietà <see cref="P:System.Exception.InnerException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Exception> proprietà non rappresenta l'eccezione generata dall'operazione sul database. È possibile accedere all'eccezione generata mediante la <xref:System.Exception.InnerException%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se un'eccezione generata dal database è stata gestita.</summary>
        <value>
          <see langword="true" /> se un'eccezione generata dal database è stata gestita e non deve essere generata dal controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il database genera un'eccezione, il <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> è impostata su `false` e l'eccezione è stato eseguito il wrapping di <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> proprietà. Se si usa un' <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>, è possibile controllare il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> proprietà e gestire l'eccezione. Se si gestisce l'eccezione, impostare il <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> proprietà `true` o il <xref:System.Web.UI.WebControls.SqlDataSource> controllo verrà generata un'eccezione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>