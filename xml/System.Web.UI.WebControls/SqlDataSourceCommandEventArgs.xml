<Type Name="SqlDataSourceCommandEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e3371dee348f132c6f03cec3bbf08b59700db6a4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598485" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceCommandEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceCommandEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceCommandEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i dati per gli eventi <see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" /> e <see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" /> del controllo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tramite l'aggiunta di un delegato del gestore eventi per gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> eventi, è possibile eseguire qualsiasi pre-elaborazione aggiuntiva necessaria o annullare completamente il comando di database.  
  
 Poiché il <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> viene derivata dal <xref:System.ComponentModel.CancelEventArgs> (classe), è possibile annullare un in sospeso <xref:System.Web.UI.WebControls.SqlDataSource> comando di database impostando la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true`. È possibile esaminare e manipolare il <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A> raccolta e le altre proprietà prima di eseguire il comando accedendo il <xref:System.Data.Common.DbCommand> oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> classe viene utilizzata nel <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> metodi per fornire accesso a un <xref:System.Web.UI.WebControls.SqlDataSource> comando di database prima di eseguirlo. Il <xref:System.Web.UI.WebControls.SqlDataSource> controllo espone numerosi eventi che è possibile gestire per lavorare con gli oggetti dati sottostanti nel corso di un'operazione di dati. Nella tabella seguente sono elencati gli eventi e associati <xref:System.EventArgs> e le classi del gestore eventi, come indicazione per i vari eventi che corrispondono al ciclo di vita di un'operazione di dati con il <xref:System.Web.UI.WebControls.SqlDataSource> controllo.  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Si verifica prima che i dati vengono recuperati.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> si verificano prima un'istruzione insert, update o un'operazione di eliminazione viene eseguita.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> si verificano dopo il recupero dei dati, inserimento, aggiornamento o eliminazione viene completata.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come visualizzare i dati recuperati da un database di Microsoft SQL Server in un <xref:System.Web.UI.WebControls.DropDownList> controllare e aggiornare il record utilizzando un <xref:System.Web.UI.WebControls.TextBox> controllo. Nell'esempio viene illustrato come utilizzare un <xref:System.Data.Common.DbTransaction> oggetto per aggiungere contesto di transazione quando si utilizza il <xref:System.Web.UI.WebControls.SqlDataSource> controllo per aggiornare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As DbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceCommandEventArgs(System::Data::Common::DbCommand ^ command);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">Oggetto <see cref="T:System.Data.Common.DbCommand" /> che rappresenta il comando <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />, <see cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" /> o <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> annullabile.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> con l'oggetto comando di database specificato.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il comando di database in sospeso.</summary>
        <value>Oggetto <see cref="T:System.Data.Common.DbCommand" /> che rappresenta il comando di database in sospeso.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento per esaminare e modificare le proprietà del <xref:System.Data.Common.DbCommand> prima che venga eseguita dal <xref:System.Web.UI.WebControls.SqlDataSource> controllo. La connessione all'origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare l'operazione di database chiamando il <xref:System.Data.Common.DbCommand.Cancel%2A> metodo il <xref:System.Data.Common.DbCommand> direttamente l'oggetto. Tuttavia, è possibile annullare l'operazione di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> a `true`.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come recuperare dati da Microsoft SQL Server e visualizzarli in un <xref:System.Web.UI.WebControls.GridView> controllo e come utilizzare un <xref:System.Web.UI.WebControls.DetailsView> controllo per visualizzare i dettagli di una riga selezionata nel <xref:System.Web.UI.WebControls.GridView> e come form per inserire nuovi record.  
  
 I dati vengono inizialmente visualizzati nel <xref:System.Web.UI.WebControls.GridView> controllo e la riga selezionata del <xref:System.Web.UI.WebControls.GridView> viene visualizzato anche nella <xref:System.Web.UI.WebControls.DetailsView>. Il <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> i controlli di utilizzare dati diversi controlli di origine; quello che è associato il <xref:System.Web.UI.WebControls.DetailsView> ha un <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> che assicurano che la riga selezionata del <xref:System.Web.UI.WebControls.GridView> viene visualizzato.  
  
 Se si fa clic sul pulsante di inserimento generato automaticamente del <xref:System.Web.UI.WebControls.DetailsView> (controllo), il <xref:System.Web.UI.WebControls.DetailsView> Visualizza un'interfaccia utente diverso, viene utilizzata per inserire un nuovo record. L'esempio utilizza una stored procedure per inserire i record e restituisce la chiave primaria della riga inserita. Se si inserisce un record, il <xref:System.Web.UI.WebControls.DetailsView> popola automaticamente la <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> insieme con i valori di colonne associate e chiama il <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metodo. Il <xref:System.Web.UI.WebControls.DetailsView> in grado di dedurre i parametri corretti da qualsiasi <xref:System.Web.UI.WebControls.BoundField>e un parametro per il <xref:System.Web.UI.WebControls.TemplateField> quando viene utilizzata la sintassi di associazione dati bidirezionale di ASP.NET. In questo esempio viene aggiunto un parametro aggiuntivo nel <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> gestore eventi per gestire la chiave primaria restituita dalla stored procedure.  
  
 Infine, una volta inseriti i dati dal <xref:System.Web.UI.WebControls.DetailsView> nel database, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> gestore eventi viene chiamato per gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, il valore della chiave primaria della riga inserita viene visualizzata e <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metodo il <xref:System.Web.UI.WebControls.GridView>controllo viene chiamato in modo esplicito per aggiornare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
  </Members>
</Type>