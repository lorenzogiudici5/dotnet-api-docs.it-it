<Type Name="WizardStepCollection" FullName="System.Web.UI.WebControls.WizardStepCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57a0caafb261237faa498fdf59812cddbb9b3f3c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39947005" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WizardStepCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WizardStepCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WizardStepCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepCollection sealed : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type WizardStepCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta un insieme di oggetti derivati da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> presenti in un controllo che funge da procedura guidata. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WizardStepCollection> classe viene utilizzata per archiviare e gestire una raccolta di <xref:System.Web.UI.WebControls.WizardStepBase>-derivati gli oggetti in un controllo che funge da procedura guidata, ad esempio il <xref:System.Web.UI.WebControls.CreateUserWizard> controllo o <xref:System.Web.UI.WebControls.Wizard> controllo. Ad esempio, il <xref:System.Web.UI.WebControls.Wizard> controlli utilizza il <xref:System.Web.UI.WebControls.WizardStepCollection> classe per la relativa <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> proprietà.  
  
 Esistono diversi modi per accedere la <xref:System.Web.UI.WebControls.WizardStepBase>-gli oggetti derivati di <xref:System.Web.UI.WebControls.WizardStepCollection>:  
  
-   Usare la <xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A> proprietà per accedere direttamente a un <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto in corrispondenza dell'indice in base zero specifico derivato.  
  
-   Usare il <xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A> metodo per creare un enumeratore che può essere utilizzato per scorrere la raccolta.  
  
-   Usare la <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A> metodo per copiare il contenuto del <xref:System.Web.UI.WebControls.WizardStepCollection> insieme in un <xref:System.Array> oggetto.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come compilare il <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta utilizzando la sintassi dichiarativa.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionDeclare/CS/wizardstepcollectiondeclarecs.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionDeclare/VB/wizardstepcollectiondeclarevb.aspx#3)]  
  
 Nell'esempio seguente viene illustrato come compilare a livello di codice un <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/CS/wizardstepcollectioncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/VB/wizardstepcollectionvb.aspx#1)]  
  
 Di seguito è riportato il file code-behind per la pagina Web dell'esempio precedente.  
  
 [!code-csharp[System.Web.UI.WebControls.WizardStepCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/CS/wizardstepcollection.cs#2)]
 [!code-vb[System.Web.UI.WebControls.WizardStepCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/VB/wizardstepcollection.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="T:System.Web.UI.WebControls.Login" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.Add wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">Oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> da aggiungere all'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</param>
        <summary>Aggiunge alla fine dell'insieme l'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> metodo aggiunge le <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato alla fine del <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta. Per aggiungere un <xref:System.Web.UI.WebControls.WizardStepBase>-un oggetto derivato nella raccolta in corrispondenza di una posizione di indice specifico, utilizzare il <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> (metodo).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata la creazione a livello di codice un <xref:System.Web.UI.WebControls.Wizard> controllo e l'utilizzo del <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> metodo per aggiungere <xref:System.Web.UI.WebControls.WizardStepBase>-derivato <xref:System.Web.UI.WebControls.WizardStep> oggetti per il <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> raccolta. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> proprietà del <xref:System.Web.UI.WebControls.Wizard> controllo è un'istanza del <xref:System.Web.UI.WebControls.WizardStepCollection> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/CS/wizardstepscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/VB/wizardstepsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> passato è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.AddAt (index, wizardStep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="index">Posizione di indice in corrispondenza della quale inserire l'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</param>
        <param name="wizardStep">Oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> da aggiungere all'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</param>
        <summary>Aggiunge l'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> specificato all'insieme nella posizione di indice specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> metodo aggiunge il <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato nella raccolta in corrispondenza della posizione di indice specificata.  
  
 Per aggiungere un <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato alla fine della <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta, uso il <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> passato è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="wizardStepCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove dall'insieme tutti gli oggetti derivati da <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A> metodo per rimuovere tutti i <xref:System.Web.UI.WebControls.WizardStepBase>-gli oggetti derivati dal <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta.  
  
> [!NOTE]
>  Dopo il <xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A> metodo rimuove il <xref:System.Web.UI.WebControls.WizardStepBase>-oggetti derivati dalla raccolta, il <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> proprietà del <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta ha un valore pari a zero.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (wizardStep As WizardStepBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WizardStepBase -&gt; bool" Usage="wizardStepCollection.Contains wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">Oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> da trovare nell'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</param>
        <summary>Determina se l'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> contiene un oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> specifico.</summary>
        <returns>
          <see langword="true" /> se l'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> si trova nell'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.WizardStepCollection.Contains%2A> metodo per determinare se un <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato è contenuto nella raccolta. Questo metodo viene comunemente utilizzato per verificare l'esistenza di una <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato prima di eseguire un'attività, ad esempio rimuovere un <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato dalla raccolta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="wizardStep" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WizardStepBase[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WizardStepBase[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As WizardStepBase(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WizardStepBase ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WizardStepBase[] * int -&gt; unit" Usage="wizardStepCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WizardStepBase[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Matrice in base zero di oggetti <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> che riceve gli elementi copiati dall'insieme.</param>
        <param name="index">Posizione della matrice di destinazione a partire dalla quale quest'ultima inizia a ricevere gli elementi copiati.</param>
        <summary>Copia tutti gli elementi da un insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> a una matrice unidimensionale compatibile di oggetti <see cref="T:System.Web.UI.WebControls.WizardStepBase" />, a partire dall'indice specificato nella matrice di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A> metodo per copiare il contenuto della raccolta nella matrice in base zero specificata. Gli elementi sono copiati iniziando in corrispondenza dell'indice specificato della matrice di destinazione. Dopo gli elementi in una matrice, è possibile utilizzare la sintassi della matrice per accedere agli elementi di <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta.  
  
 In alternativa, è anche possibile usare il <xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A> metodo per creare un enumeratore che può essere utilizzato per accedere agli elementi nella raccolta.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A> metodo per copiare il <xref:System.Web.UI.WebControls.WizardStepBase> oggetti dalla raccolta in una matrice. La matrice viene quindi scorsa per visualizzare il <xref:System.Web.UI.Control.ID%2A> proprietà della ognuno <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> proprietà del <xref:System.Web.UI.WebControls.Wizard> controllo è un'istanza del <xref:System.Web.UI.WebControls.WizardStepCollection> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionCopyTo/CS/wizardstepcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionCopyTo/VB/wizardstepcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.WizardStepCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di oggetti derivati da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> presenti nell'insieme <see cref="T:System.Web.UI.WebControls.Wizard" /> del controllo <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</summary>
        <value>Il numero di oggetti derivati da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> presenti nel controllo <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> proprietà per determinare il numero di <xref:System.Web.UI.WebControls.WizardStepBase>-gli oggetti derivati di <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta. Il <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> proprietà viene generalmente utilizzata quando si scorre la raccolta per determinare la superiore limite.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="wizardStepCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto implementato da <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere gli oggetti derivati da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> nell'insieme.</summary>
        <returns>Un oggetto implementato da <see cref="T:System.Collections.IEnumerator" /> contenente tutti gli oggetti derivati da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> dell'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (wizardStep As WizardStepBase) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WizardStepBase -&gt; int" Usage="wizardStepCollection.IndexOf wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">Oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> da ricercare nell'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</param>
        <summary>Determina il valore di indice che rappresenta la posizione dell'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> specificato nell'insieme.</summary>
        <returns>Se viene trovato, l'indice in base zero della prima occorrenza dell'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> passato all'interno dell'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> corrente, altrimenti -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.WizardStepCollection.IndexOf%2A> metodo per determinare l'indice dell'oggetto specificato <xref:System.Web.UI.WebControls.WizardStepBase>-l'oggetto corrente derivato <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta. Se il <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato non è presente nella raccolta, il metodo restituisce -1.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> passato è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.Insert (index, wizardStep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="index">Posizione di indice in corrispondenza della quale inserire l'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</param>
        <param name="wizardStep">Oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> da inserire nell'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</param>
        <summary>Inserisce l'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> specifico nell'insieme in corrispondenza della posizione di indice specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> metodo aggiunge il <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato nella raccolta in corrispondenza della posizione di indice specificata.  
  
 In alternativa, è possibile usare la <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> metodo per aggiungere il <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato da raccolta. Per aggiungere un <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato alla fine della <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta, uso il <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> (metodo).  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> metodo e il <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> metodo svolgono essenzialmente la stessa funzione. Quando la <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> viene chiamato, ma passa semplicemente il `wizardStep` e `index` i parametri per il <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> (metodo).  
  
   
  
## Examples  
 Il codice seguente viene illustrata la creazione a livello di codice un <xref:System.Web.UI.WebControls.Wizard> controllo e l'uso di <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> metodo per aggiungere <xref:System.Web.UI.WebControls.WizardStepBase>-per oggetti derivati il <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> raccolta. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> proprietà del <xref:System.Web.UI.WebControls.Wizard> controllo è un'istanza del <xref:System.Web.UI.WebControls.WizardStepCollection> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionInsert/CS/wizardstepcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionInsert/VB/wizardstepcollectioninsertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.WizardStepCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se è possibile modificare gli oggetti derivati da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> presenti nell'insieme.</summary>
        <value>
          <see langword="true" /> se l'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> può essere modificato, altrimenti <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.WizardStepCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è derivata dal <xref:System.Collections.ICollection> l'interfaccia e viene sottoposto a override per restituire sempre `false`.  
  
 Per altre informazioni sul <xref:System.Web.UI.WebControls.WizardStepCollection.IsSynchronized%2A> proprietà, vedere la <xref:System.Collections.ICollection.IsSynchronized%2A> proprietà del <xref:System.Collections.ICollection> interfaccia  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepBase this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepBase Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As WizardStepBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WizardStepBase ^ default[int] { System::Web::UI::WebControls::WizardStepBase ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WizardStepBase" Usage="System.Web.UI.WebControls.WizardStepCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell'oggetto <see cref="T:System.Web.UI.WebControls.WizardStep" /> da recuperare.</param>
        <summary>Ottiene un oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> dall'insieme in corrispondenza dell'indice specificato.</summary>
        <value>L'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> presente nell'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> in corrispondenza della posizione di indice specificata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A> proprietà da recuperare i <xref:System.Web.UI.WebControls.WizardStepBase>-in corrispondenza della posizione di indice specificato nell'oggetto derivato il <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta usando la notazione di matrice.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.Remove wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">Oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> da rimuovere dall'insieme.</param>
        <summary>Rimuove dall'insieme l'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> metodo per rimuovere il <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato dal <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta. In alternativa, è possibile usare la <xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A> metodo per rimuovere un <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato da una posizione specificata nel <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> metodo per rimuovere un <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato dal <xref:System.Web.UI.WebControls.WizardStepCollection> raccolta. Si noti che nell'esempio, il <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> proprietà del <xref:System.Web.UI.WebControls.Wizard> controllo è un'istanza del <xref:System.Web.UI.WebControls.WizardStepCollection> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionRemove/CS/wizardstepcollectionremovecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionRemove/VB/wizardstepcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> passato è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="wizardStepCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> da rimuovere.</param>
        <summary>Rimuove l'oggetto derivato da <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> dall'insieme in corrispondenza della posizione specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A> metodo per rimuovere il <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato dal <xref:System.Web.UI.WebControls.WizardStepCollection> insieme in corrispondenza della posizione di indice specificata. In alternativa, è possibile rimuovere uno specifico <xref:System.Web.UI.WebControls.WizardStepBase>-oggetto derivato dall'insieme utilizzando il <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.WizardStepCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
        <value>Oggetto che può essere usato per sincronizzare l'accesso alla raccolta <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto restituito in questa implementazione è la <xref:System.Web.UI.WebControls.WizardStepCollection> oggetto stesso.  
  
 Per altre informazioni sul <xref:System.Web.UI.WebControls.WizardStepCollection.SyncRoot%2A> proprietà, vedere la <xref:System.Collections.ICollection.SyncRoot%2A> proprietà del <xref:System.Collections.ICollection> interfaccia.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Oggetto <see cref="T:System.Array" /> in base zero che riceve gli elementi copiati dall'insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</param>
        <param name="index">Posizione nella matrice di destinazione in cui iniziare la ricezione del contenuto copiato.</param>
        <summary>Copia tutti gli elementi da un insieme <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> a una matrice unidimensionale, a partire dall'indice specificato nella matrice di destinazione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Object" /> da aggiungere alla fine dell'insieme.</param>
        <summary>Aggiunge alla fine dell'insieme l'oggetto specificato.</summary>
        <returns>Posizione in cui è stato inserito il nuovo elemento.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Object" /> da individuare nella raccolta.</param>
        <summary>Determina se l'insieme contiene l'oggetto specificato.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> si trova nell'insieme <see cref="T:System.Collections.IList" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da ricercare nell'insieme.</param>
        <summary>Determina il valore di indice che rappresenta la posizione dell'oggetto specificato nell'insieme.</summary>
        <returns>Valore dell'indice dell'oggetto specificato nell'insieme.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Indice in corrispondenza del quale inserire l'oggetto nell'insieme.</param>
        <param name="value">Oggetto da inserire nella raccolta.</param>
        <summary>Inserisce l'oggetto specificato nell'insieme in corrispondenza della posizione specificata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
        <value>
          <see langword="true" /> se la raccolta è di dimensioni fisse; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell'oggetto da ottenere dall'insieme.</param>
        <summary>Ottiene l'oggetto in corrispondenza dell'indice specificato nella raccolta.</summary>
        <value>Oggetto da recuperare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di accedere a un elemento specifico nella raccolta utilizzando la seguente sintassi: myCollection[index].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da rimuovere dalla raccolta.</param>
        <summary>Rimuove l'oggetto specificato dalla raccolta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>