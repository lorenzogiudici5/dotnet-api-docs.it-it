<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ef52ad56e9cfa9547b24b47a2d6f4a4e6ee0e40" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36581355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce dati per gli eventi <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" /> e <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> classe consente di esaminare i risultati delle operazioni di dati che sono state eseguite da un <xref:System.Web.UI.WebControls.LinqDataSource> controllo. Un <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> oggetto viene passato ai gestori di eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, e <xref:System.Web.UI.WebControls.LinqDataSource.Updated> gli eventi del <xref:System.Web.UI.WebControls.LinqDataSource> controllo.  
  
 Se l'operazione dati è stata completata, l'oggetto dati risultante viene archiviato nel <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà e il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> è di proprietà `null`. Se l'operazione dati non è riuscita, l'eccezione che si sono verificati durante l'operazione dati verrà archiviato nel <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà e il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> è di proprietà `null`. Se è stata gestita l'eccezione rappresentata dal <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> impostare la proprietà, il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> proprietà `true` in modo che l'eccezione non verrà generata.  
  
 Per recuperare il numero totale di record di dati restituito da una query tramite il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> evento. Nel gestore eventi, se il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà è `null`, il prodotto ID viene recuperato dall'oggetto nel <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà. Il prodotto ID è una chiave primaria per la tabella e viene impostato dal database, pertanto il valore non è noto fino al termine dell'operazione di inserimento. Il messaggio di eccezione viene registrato se il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà non è uguale a `null`. Il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> proprietà è impostata su `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Errore che si è verificato durante l'operazione su dati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> utilizzando un'eccezione che si è verificata come risultato dell'operazione su dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato quando viene generata un'eccezione durante l'operazione dati. Il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> è impostata automaticamente su `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">Oggetto che contiene i dati che risultano da un'operazione su dati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> utilizzando un oggetto che contiene i dati dell'operazione su dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato quando l'operazione di dati è stata completata senza errori. Il `result` parametro contiene un oggetto che rappresenta il risultato dell'operazione di dati. Il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> è impostata automaticamente su `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">Oggetto che contiene i dati che risultano da un'operazione su dati.</param>
        <param name="totalRowCount">Numero di righe restituite da un'operazione di recupero dati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> con un oggetto che contiene i dati dell'operazione su dati e il numero di righe restituite.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'eccezione che è stata generata durante l'operazione su dati.</summary>
        <value>Oggetto <see cref="T:System.Exception" /> che rappresenta l'eccezione, se si verifica un errore; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se viene generata un'eccezione durante l'operazione di dati, l'eccezione viene archiviata nel <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà. È possibile creare gestori eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, e <xref:System.Web.UI.WebControls.LinqDataSource.Updated> eventi e recuperare l'eccezione, se presente, tramite il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> evento. Nel gestore eventi, se il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà è `null`, il prodotto ID viene recuperato dall'oggetto nel <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà. L'ID prodotto è una chiave primaria per la tabella ed è impostato il database, pertanto il valore non è noto fino al termine dell'operazione di inserimento. Il messaggio di eccezione viene registrato se il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà non è uguale a `null`. Il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> proprietà è impostata su `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'eccezione è stata gestita e non deve essere nuovamente generata.</summary>
        <value>
          <see langword="true" /> se l'eccezione è stata gestita; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare gestori eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, e <xref:System.Web.UI.WebControls.LinqDataSource.Updated> gli eventi per esaminare tutte le eccezioni che si sono verificati durante tali operazioni. Se si gestisce l'eccezione e non si desidera che venga generata nuovamente, impostare il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> proprietà `true`. Se non si imposta la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> proprietà `true`, l'eccezione verrà propagata al gestore dell'evento successivo nello stack di chiamate.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> evento. Nel gestore eventi, se il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà è `null`, il prodotto ID viene recuperato dall'oggetto nel <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà. Il prodotto ID è una chiave primaria per la tabella e viene impostato dal database, pertanto il valore non è noto fino al termine dell'operazione di inserimento. Il messaggio di eccezione viene registrato se il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà non è uguale a `null`. Il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> proprietà è impostata su `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto che rappresenta il risultato di un'operazione su dati.</summary>
        <value>Oggetto che contiene i dati dell'operazione su dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà per esaminare i valori restituiti da un'operazione di dati. È possibile recuperare i parametri di output da un'operazione di dati o modificare i valori restituiti da una query.  
  
 I dati archiviati nel <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà dipende dal tipo di operazione sui dati che è stata eseguita. Quando si eliminano dati, il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà contiene un oggetto del tipo specificato nella <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> proprietà, con i valori originali che sono stati eliminati dall'origine dati. Quando si inseriscono o aggiornare i dati, il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà contiene un oggetto del tipo specificato nella <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> proprietà, con i nuovi valori che sono state salvate nell'origine dati. Selezionare i dati, il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà contiene i risultati della query.  
  
 Se la query select implica il raggruppamento dei dati o la selezione di un subset delle proprietà dal tipo specificato nella <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> proprietà, il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà contiene un oggetto di un tipo creato dinamicamente. In caso contrario, il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà contiene un oggetto del tipo specificato nella <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> evento. Nel gestore eventi, se il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà è `null`, il prodotto ID viene recuperato dall'oggetto nel <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> proprietà. Il prodotto ID è una chiave primaria per la tabella e viene impostato dal database, pertanto il valore non è noto fino al termine dell'operazione di inserimento. Il messaggio di eccezione viene registrato se il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> proprietà non è uguale a `null`. Il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> proprietà è impostata su `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero totale di righe in un dataset da un'operazione di recupero dati.</summary>
        <value>Numero totale di righe in un dataset da un'operazione di recupero dati, -1 se l'oggetto <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> è stato creato durante un'operazione di modifica dati, -1 se è stato abilitato il paging personalizzato impostando <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> su <see langword="true" /> e impostando <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> su <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> proprietà da ottenere il numero di record nel set di dati durante un'operazione di recupero di dati. Questa proprietà si recupera in genere, quando si visualizzano le pagine di dati e si desidera visualizzare il numero totale di record.  
  
 Quando il paging dei dati, il valore di <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> proprietà potrebbe essere diversa rispetto al numero effettivo di righe restituite dalla query. Questo avviene perché la query restituisce solo il numero di righe che sono necessari per la pagina di dati.  
  
 Il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> proprietà contiene il numero di record da una query solo quando vi si accede in un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Selected> evento. Quando la proprietà è accessibile da un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, oppure <xref:System.Web.UI.WebControls.LinqDataSource.Updated> evento, il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> proprietà contiene -1.  
  
 Il valore della <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> dipende dalla proprietà il <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> proprietà del <xref:System.Web.UI.WebControls.LinqDataSource> (controllo) e nella `AllowPaging` proprietà del controllo associato a dati. Nella tabella seguente sono riepilogati i valori possibili per il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> proprietà.  
  
|Pagina proprietà del controllo LinqDataSource|Proprietà AllowPaging del controllo associato a dati|Proprietà TotalRowCount|Risultato|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|Numero di record per una query.|I dati viene automaticamente eseguito il paging.|  
|`false`|`false`|Numero di record per una query.|Non viene eseguito il paging dei dati.|  
|`true`|`false`|-1|Non viene eseguito il paging dei dati.|  
|`false`|`true`|Il valore assegnato per il <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> proprietà nel gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> evento.|Paging dei dati sono eseguito in base ai valori specificati durante la personalizzazione di paging.|  
  
   
  
## Examples  
 L'esempio seguente mostra una pagina Web con un <xref:System.Web.UI.WebControls.LinqDataSource> (controllo), una <xref:System.Web.UI.WebControls.GridView> (controllo) e un <xref:System.Web.UI.WebControls.Literal> controllo. Il <xref:System.Web.UI.WebControls.LinqDataSource> controllo definisce un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Selected> evento.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 Nell'esempio seguente viene illustrato il codice per il gestore dell'evento per il <xref:System.Web.UI.WebControls.LinqDataSource.Selected> evento. Il valore della <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> proprietà viene assegnata al <xref:System.Web.UI.WebControls.Literal> controllo.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>