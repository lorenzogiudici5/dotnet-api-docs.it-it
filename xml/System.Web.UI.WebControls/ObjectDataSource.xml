<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15236dc6073fb19c95955afb8e0d9d895643e546" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36381748" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un oggetto business che fornisce dati ai controlli con associazione a dati in architetture di applicazioni Web a più livelli.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo argomento  
  
-   [Introduzione](#introduction)  
  
-   [Scopo](#purpose)  
  
-   [Il recupero dei dati](#retrieving_data)  
  
-   [L'esecuzione di operazioni di dati](#performing_data_operations)  
  
-   [Filtraggio dei dati](#filtering_data)  
  
-   [Memorizzazione nella cache](#caching)  
  
-   [Funzionalità](#features)  
  
-   [Visualizzazione dati](#data_view)  
  
-   [Utilizzo di LINQ to SQL](#using_linq_to_sql)  
  
-   [Sintassi dichiarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduzione  
 Un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo funziona con una classe che viene creata. Si creano metodi che recuperano e aggiornano i dati e si forniscono i nomi di tali metodi per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo nel markup. Durante l'elaborazione postback, o per il rendering di <xref:System.Web.UI.WebControls.ObjectDataSource> chiama i metodi che è stato specificato.  
  
 Non vi è alcun il rendering visivo il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Di conseguenza, il <xref:System.Web.UI.WebControls.ObjectDataSource> non supporta funzionalità visive, ad esempio il <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> o <xref:System.Web.UI.DataSourceControl.SkinID%2A> proprietà.  
  
<a name="purpose"></a>   
## <a name="purpose"></a>Scopo  
 Una pratica di progettazione applicazione molto comune è di separare il livello di presentazione dalla logica di business e per incapsulare la logica di business in oggetti business. Questi oggetti costituiscono un livello distinto tra il livello di presentazione e il livello dati, risultante in un'architettura a tre livelli applicazione. Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo offre agli sviluppatori di utilizzare un controllo origine dati ASP.NET mantenendo la relativa architettura di applicazione a tre livelli.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo utilizza la reflection per creare istanze di oggetti business e chiamare metodi su di esse per recuperare, aggiornare, inserire ed eliminare dati. Il <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà identifica il nome della classe che il <xref:System.Web.UI.WebControls.ObjectDataSource> funziona con. Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo crea ed elimina un'istanza della classe per ogni chiamata al metodo; non contiene l'oggetto in memoria per la durata della richiesta Web. Si tratta di grave presi in considerazione se l'oggetto business che utilizza richiede molte risorse o in caso contrario è costoso creare ed eliminare definitivamente. Utilizzo di un oggetto dispendioso potrebbe non essere una scelta ottimale, ma è possibile controllare il ciclo di vita dell'oggetto usando la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventi.  
  
> [!NOTE]
>  I metodi che vengono identificati le <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> le proprietà possono essere metodi di istanza o `static` (`Shared` in Visual Basic) metodi. Se i metodi sono `static` (`Shared` in Visual Basic), non viene creata un'istanza dell'oggetto business e il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> non vengono generati eventi.  
  
<a name="retrieving_data"></a>   
## <a name="retrieving-data"></a>Recupero dei dati  
 Per recuperare dati da un oggetto business, impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà sul nome del metodo che recupera i dati. Se il metodo non restituisce un <xref:System.Collections.IEnumerable> oppure <xref:System.Data.DataSet> dell'oggetto, l'oggetto viene eseguito il wrapping dal runtime in un <xref:System.Collections.IEnumerable> insieme. Se la firma del metodo include parametri, è possibile aggiungere <xref:System.Web.UI.WebControls.Parameter> oggetti per il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> raccolta e quindi associarle ai valori che si desidera passare al metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. Affinché il <xref:System.Web.UI.WebControls.ObjectDataSource> utilizzare i parametri di controllo, i parametri devono corrispondere ai nomi e tipi dei parametri nella firma del metodo. Per altre informazioni, vedere [utilizzo dei parametri con il controllo ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo recupera i dati ogni volta che il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo viene chiamato. Questo metodo fornisce l'accesso a livello di codice al metodo specificato da <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. Il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà viene chiamata automaticamente da tutti i controlli associati ai <xref:System.Web.UI.WebControls.ObjectDataSource> quando i relativi `DataBind` metodo viene chiamato. Se si imposta la `DataSourceID` proprietà di un controllo associato a dati, il controllo viene associata automaticamente ai dati dall'origine dati, in base alle esigenze. Impostazione di `DataSourceID` proprietà è il metodo consigliato per l'associazione un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo a un controllo associato a dati. In alternativa, è possibile impostare il `DataSource` proprietà, ma è necessario chiamare esplicitamente il `DataBind` metodo del controllo associato a dati. È possibile chiamare il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo a livello di codice in qualsiasi momento per recuperare i dati.  
  
 Per ulteriori informazioni sull'associazione dei controlli associati a dati a controlli origine dati, vedere [associazione a dati mediante un controllo origine dati](http://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>L'esecuzione di operazioni di dati  
 A seconda delle funzionalità di business dell'oggetto che il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo funziona con, è possibile eseguire operazioni sui dati, ad esempio gli aggiornamenti, inserimenti ed eliminazioni. Per eseguire queste operazioni sui dati, impostare il nome del metodo appropriato e i parametri associati per l'operazione che si desidera eseguire. Ad esempio, per un'operazione di aggiornamento, impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> necessaria la proprietà sul nome del metodo dell'oggetto business che esegue gli aggiornamenti e aggiunta i parametri per il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> insieme. Se il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo è associato a un controllo associato a dati, i parametri vengono aggiunti per il controllo associato a dati. In questo caso, è necessario assicurarsi che i nomi dei parametri del metodo corrispondano ai nomi di campo nel controllo associato a dati. L'aggiornamento viene eseguito quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> metodo viene chiamato in modo esplicito dal codice o automaticamente da un controllo associato a dati. Viene seguito lo stesso modello generale per <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operazioni. Gli oggetti business sono verrà utilizzati per eseguire questi tipi di dati operazioni un record alla volta, anziché in batch.  
  
<a name="filtering_data"></a>   
## <a name="filtering-data"></a>Filtraggio dei dati  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo possibile filtrare i dati recuperati dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà, se i dati vengono restituiti come un <xref:System.Data.DataSet> o <xref:System.Data.DataTable> oggetto. È possibile impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà per un'espressione di filtro usando un formato di sintassi della stringa e associare i valori nell'espressione per i parametri specificati nel <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> insieme.  
  
<a name="caching"></a>   
## <a name="caching"></a>Memorizzazione nella cache  
 Anche se il <xref:System.Web.UI.WebControls.ObjectDataSource> non viene mantenuto l'istanza dell'oggetto business in più richieste, è possibile memorizzare nella cache il risultato della chiamata al metodo identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. Mentre i dati sono memorizzati nella cache, le chiamate successive per la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo restituire i dati memorizzati nella cache invece di creare l'oggetto business e la chiamata relativo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> tramite reflection. La memorizzazione nella cache consente di evitare la creazione dell'oggetto e la chiamata al metodo di dati a scapito della memoria nel server Web. Il <xref:System.Web.UI.WebControls.ObjectDataSource> automaticamente memorizza nella cache dei dati quando il <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> è impostata su `true`e il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> proprietà è impostata per il numero di secondi durante i quali la cache memorizza i dati prima che la cache viene eliminata. È inoltre possibile specificare un <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> proprietà ed eventualmente <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> proprietà. Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo consente di memorizzare nella cache tutti i tipi di dati, ma è consigliabile non memorizzare nella cache gli oggetti che mantengono le risorse o uno stato che non può essere condivisi in più richieste di servizio (ad esempio, open <xref:System.Data.SqlClient.SqlDataReader> oggetto), in quanto la stessa istanza dell'oggetto verrà utilizzato per gestire più richieste.  
  
<a name="features"></a>   
## <a name="features"></a>Funzionalità  
 Nella tabella seguente vengono descritte le funzionalità del <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
|Funzionalità|Requisiti|  
|----------------|------------------|  
|Selezione|Impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> metodo che seleziona i dati dell'oggetto proprietà sul nome dell'azienda e includere i parametri necessari nel <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> insieme a livello di codice o tramite un controllo associato a dati.|  
|Ordinamento|Impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> proprietà sul nome del parametro nel <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> metodo che contiene i criteri di ordinamento.|  
|Filtro|Impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà in un'espressione di filtro e, facoltativamente, aggiungere i parametri per il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> raccolta per filtrare i dati quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo viene chiamato. Il metodo specificato per il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà deve restituire un <xref:System.Data.DataSet> o <xref:System.Data.DataTable>.|  
|Paging|È supportato il paging dell'origine dati, se il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> metodo contiene i parametri per il numero massimo di record da recuperare e l'indice del primo record da recuperare. I nomi dei parametri devono essere impostati nel <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> proprietà, rispettivamente. Un controllo associato a dati potrebbe essere in grado di eseguire il paging, anche se il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo non supporta il paging direttamente nel metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. Il requisito per il controllo associato a dati sia in grado di eseguire questa operazione è che il metodo specificato per il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà restituiscono un oggetto che implementa il <xref:System.Collections.ICollection> interfaccia.|  
|Updating|Impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> metodo che aggiorna i dati dell'oggetto proprietà sul nome dell'azienda e includere i parametri necessari nel <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> insieme.|  
|Eliminazione|Impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà sul nome dell'azienda dell'oggetto funzione o metodo che elimina i dati e includere i parametri necessari nel <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme.|  
|Inserimento|Impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà sul nome dell'azienda dell'oggetto funzione o metodo che inserisce i dati e includere i parametri necessari nel <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> insieme.|  
|Memorizzazione nella cache|Impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> proprietà da `true`e il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> proprietà in base al comportamento desiderato per i dati memorizzati nella cache.|  
  
> [!NOTE]
>  Quando si usa il <xref:System.Web.UI.WebControls.ObjectDataSource> classe per aggiornare o inserire i dati, le stringhe che vengono immessi nel client non vengono convertite automaticamente dal formato delle impostazioni cultura del client per il formato delle impostazioni cultura del server. Ad esempio, le impostazioni internazionali del client potrebbero specificare gg/MM/AAAA come formato di data e il formato della data nel server potrebbe essere MM/GG/AAAA. In tal caso, immetterlo il 5 ottobre 2009 in un <xref:System.Web.UI.WebControls.TextBox> controllo come 5/10/2009 ma verrebbe interpretato come 10 maggio 2009. 15 ottobre 2009 verrebbe immesso come 15/10/2009 e verrebbe rifiutato come una data non valida.  
  
<a name="data_view"></a>   
## <a name="data-view"></a>Visualizzazione dati  
 Come con tutti i controlli origine dati, il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo è associato a una classe di visualizzazione origine dati. Mentre il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo è l'interfaccia che lo sviluppatore utilizza per operare sui dati, la <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe è l'interfaccia che utilizzano i controlli associati a dati. Inoltre, il <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe descrive le funzionalità del controllo origine dati ed esegue il lavoro effettivo. Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo ha un solo oggetto associato <xref:System.Web.UI.WebControls.ObjectDataSourceView>, e viene sempre denominato `DefaultView`. Mentre il <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto è esposto dal <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> eseguito il wrapping e vengono esposte direttamente dal metodo, molte delle relative proprietà e metodi di <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Dietro le quinte, il <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto esegue tutte le operazioni di dati, inclusi il recupero, l'inserimento, aggiornamento, eliminazione, filtro e ordinamento dei dati. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView>.  
  
<a name="using_linq_to_sql"></a>   
## <a name="using-linq-to-sql"></a>Utilizzo di LINQ to SQL  
 È possibile utilizzare il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con una classe LINQ to SQL. A tale scopo, impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà sul nome della classe contesto dati. È inoltre possibile impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> metodi per i metodi nella classe del contesto dati che eseguono le operazioni corrispondenti. È necessario creare un gestore eventi per il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento per annullare l'eliminazione della classe contesto dati. Questo passaggio è necessario poiché LINQ to SQL supporta l'esecuzione posticipata, mentre il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo tenta di eliminare il contesto dei dati dopo l'operazione Select. Per ulteriori informazioni su come creare LINQ alle classi di SQL, vedere [procedura: creare classi LINQ to SQL in un progetto Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081). Per un esempio di come annullare l'eliminazione di una classe di contesto dei dati, vedere il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento.  
  
## <a name="using-the-entity-framework"></a>Tramite Entity Framework  
 È anche possibile usare il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con Entity Framework. Per altre informazioni, vedere [usando Entity Framework e il controllo ObjectDataSource](http://go.microsoft.com/fwlink/?LinkId=209117).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintassi dichiarativa  
  
```  
<asp:ObjectDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConvertNullToDBNull="True|False"  
    DataObjectTypeName="string"  
    DeleteMethod="string"  
    EnableCaching="True|False"  
    EnablePaging="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertMethod="string"  
    MaximumRowsParameterName="string"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnObjectCreated="ObjectCreated event handler"  
    OnObjectCreating="ObjectCreating event handler"  
    OnObjectDisposing="ObjectDisposing event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    runat="server"  
    SelectCountMethod="string"  
    SelectMethod="string"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    StartRowIndexParameterName="string"  
    TypeName="string"  
    UpdateMethod="string"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:ObjectDataSource>  
```  
  
   
  
## Examples  
 Un progetto di sito Web di Visual Studio con codice sorgente è disponibile complemento a questo argomento: [scaricare](http://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).  
  
 Questa sezione viene illustrato un <xref:System.Web.UI.WebControls.ObjectDataSource> nel markup nell'estensione aspx pagina e vengono indicati gli oggetti business con cui interagisce. L'esempio è la pagina aspx. Contiene una <xref:System.Web.UI.WebControls.GridView> controllo associato a un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Il <xref:System.Web.UI.WebControls.ObjectDataSource> markup del controllo specifica il nome dell'oggetto business e il nome del metodo dell'oggetto business da chiamare per recuperare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 Nell'esempio seguente mostra l'oggetto business che il <xref:System.Web.UI.WebControls.ObjectDataSource> utilizzato dal controllo nella pagina aspx. (Molte altre <xref:System.Web.UI.WebControls.ObjectDataSource> esempi di codice usano anche questo oggetto business.) Nell'esempio è costituito da due classi base seguenti:  
  
-   Il `EmployeeLogic` classe è la logica di business classe che il <xref:System.Web.UI.WebControls.ObjectDataSource> utilizza.  
  
-   Il `NorthwindEmployee` classe definisce l'oggetto dati che viene restituito dal `GetAllEmployees` metodo il `EmployeeLogic` (classe).  
  
 Un ulteriore `NorthwindDataException` classe viene fornita per praticità.  
  
 Questo set di classi di esempio può essere utilizzato con il database Northwind Traders, disponibile con Microsoft SQL Server e Microsoft Access. Per un esempio funzionante completo, è necessario compilare e utilizzare queste classi con l'esempio di pagina con estensione aspx fornito. Per informazioni su come installare il database Northwind Traders, vedere [procedura: installare database di esempio](http://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nome della classe utilizzata dall'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</param>
        <param name="selectMethod">Nome del metodo o funzione richiamato dall'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> per il recupero di dati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> con il nome del tipo e il nome di metodo relativo al recupero dati specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di `typeName` parametro può essere un tipo parziale per il codice che si trova nella directory Bin o App_Code o un nome completo del tipo per il codice che è registrato nella global assembly cache. Se si utilizza la global assembly cache, è necessario aggiungere il riferimento appropriato per il `assemblies` sezione del file di configurazione Machine. config o Web. config.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di secondi durante i quali il controllo origine dati memorizza nella cache i dati recuperati dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Numero di secondi durante i quali l'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> memorizza nella cache i risultati di una chiamata della proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />. Il valore predefinito è 0. Il valore non può essere negativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta la memorizzazione nella cache di dati. Mentre viene memorizzato nella cache dei dati, le chiamate per il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo recuperare dati dalla cache piuttosto che da business oggetto che il <xref:System.Web.UI.WebControls.ObjectDataSource> funziona con. Alla scadenza della cache, il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo recupera i dati dall'oggetto business e li memorizza nella cache i dati.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo memorizza automaticamente i dati quando il <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> è impostata su `true` e il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> proprietà è impostata su un valore maggiore di 0, che indica il numero di secondi che la cache memorizza i dati prima della voce della cache viene eliminato. Un valore pari a 0 indica una cache lunga all'infinito.  
  
 La cache è regolata da una combinazione della durata e il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> impostazione. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valore, la <xref:System.Web.UI.WebControls.ObjectDataSource> memorizza nella cache i dati alla prima chiamata ai <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (metodo) e li mantiene in memoria al massimo, la quantità di tempo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> proprietà. I dati potrebbero essere rilasciati prima della durata, se è necessaria la memoria. La cache viene aggiornata durante la successiva chiamata al metodo di <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> è impostata su <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valore, il controllo origine dati memorizza nella cache i dati alla prima chiamata al <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo, ma reimposta l'intervallo di tempo per il quale vengono mantenuti nella cache in ogni chiamata successiva al <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo. Scadenza della cache, se non si verifica alcuna attività per un periodo di tempo uguale per il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> proprietà dall'ultima chiamata al <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Il primo esempio di codice viene illustrato come un <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto supporta la memorizzazione nella cache. Il secondo esempio di codice viene illustrato come implementare un metodo wrapper che restituisce un <xref:System.Data.DataSet> sull'oggetto per consentire la memorizzazione nella cache con un <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto.  
  
 Esempio di codice seguente viene illustrato come un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta la memorizzazione nella cache. Per abilitare la memorizzazione nella cache, è necessario implementare il metodo che recupera i dati, identificato tramite il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà, per restituire i dati come un <xref:System.Data.DataSet> oggetto. In questo esempio, il <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> è impostata su `true`e il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> proprietà vengono impostate. Il <xref:System.Web.UI.WebControls.ObjectDataSource> memorizza nella cache i dati restituiti dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà per 30 secondi.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato come implementare un metodo wrapper che restituisce un <xref:System.Data.DataSet> sull'oggetto per consentire la memorizzazione nella cache con un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Nell'implementazione di base del `EmployeeLogic` (classe), il `GetAllEmployees` metodo restituisce un <xref:System.Collections.ArrayList> oggetto. Anziché effettuare il refactoring oggetto completamente per funzionare con il <xref:System.Web.UI.WebControls.ObjectDataSource> in una pagina Web Form, un metodo wrapper denominato `GetAllEmployeesAsDataSet` viene aggiunto che restituisce un set di `NorthwindEmployee` i dati come un <xref:System.Data.DataSet>.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.WebControls.ObjectDataSource> classe.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il comportamento di scadenza della cache che, quando combinato con la durata, descrive il comportamento della cache utilizzato dal controllo origine dati.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. Il valore predefinito è <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta la memorizzazione nella cache di dati. Mentre viene memorizzato nella cache dei dati, le chiamate per il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo recuperare dati dalla cache piuttosto che da business oggetto che il <xref:System.Web.UI.WebControls.ObjectDataSource> funziona con. Alla scadenza della cache, il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo recupera i dati dall'oggetto business e li memorizza nella cache i dati.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo memorizza automaticamente i dati quando il <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> è impostata su `true` e il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> proprietà è impostata su un valore maggiore di 0, che indica il numero di secondi che la cache memorizza i dati prima della voce della cache viene eliminato. Un valore pari a 0 indica un periodo di tempo della cache lungo all'infinito.  
  
 La cache è regolata da una combinazione della durata e il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> impostazione. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valore, la <xref:System.Web.UI.WebControls.ObjectDataSource> memorizza nella cache i dati alla prima chiamata ai <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (metodo) e li mantiene in memoria al massimo, la quantità di tempo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> proprietà. I dati potrebbero essere rilasciati prima della durata, se è necessaria la memoria. La cache viene aggiornata durante la successiva chiamata al metodo di <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valore, il controllo origine dati memorizza nella cache i dati alla prima chiamata al <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo, ma reimposta l'intervallo di tempo per il quale vengono mantenuti nella cache per ogni chiamata successiva al <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo. Scadenza della cache, se non si verifica alcuna attività per un periodo di tempo uguale per il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> proprietà dall'ultima chiamata al <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Il primo esempio di codice viene illustrato come un <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto supporta il filtraggio e la memorizzazione nella cache. Il secondo esempio di codice viene illustrato come implementare un metodo wrapper che restituisce un <xref:System.Data.DataSet> sull'oggetto per consentire la memorizzazione nella cache e il filtro con un <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto.  
  
 Esempio di codice seguente viene illustrato come un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta il filtraggio e la memorizzazione nella cache. Per abilitare il filtraggio e la memorizzazione nella cache, è necessario implementare il metodo che recupera i dati, identificato tramite il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà, per restituire i dati come un <xref:System.Data.DataSet> oggetto. In questo esempio, la memorizzazione nella cache è abilitata poiché il `EmployeeLogic` oggetto restituisce dati come un <xref:System.Data.DataSet>, la <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> è impostata su `true`e il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> proprietà vengono impostate. Il <xref:System.Web.UI.WebControls.ObjectDataSource> memorizza nella cache i dati restituiti dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà per 30 secondi.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato come implementare un metodo wrapper che restituisce un <xref:System.Data.DataSet> sull'oggetto per consentire la memorizzazione nella cache e il filtro con un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Nell'implementazione di base del `EmployeeLogic` (classe), il `GetAllEmployees` metodo restituisce un <xref:System.Collections.ArrayList>. Anziché effettuare il refactoring oggetto completamente per funzionare con il <xref:System.Web.UI.WebControls.ObjectDataSource> in una pagina Web Form, un metodo wrapper denominato `GetAllEmployeesAsDataSet` viene aggiunto che restituisce un set di `NorthwindEmployee` i dati come un <xref:System.Data.DataSet>. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.WebControls.ObjectDataSource> classe.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una dipendenza di chiave definita dall'utente collegata a tutti gli oggetti cache dati creati dal controllo origine dati.</summary>
        <value>Chiave che identifica tutti gli oggetti relativi alla cache creati dall'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> proprietà può essere impostata su qualsiasi valore stringa arbitraria.  
  
 Tutti gli oggetti relativi alla cache scadono in modo esplicito quando scade la chiave. Ciò consente di invalidare le voci di cache che vengono create il <xref:System.Web.UI.WebControls.ObjectDataSource> dal propria codice pagina a livello di codice.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta la memorizzazione nella cache di dati. Mentre viene memorizzato nella cache dei dati, le chiamate per il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo recuperare dati dalla cache piuttosto che da business oggetto che il <xref:System.Web.UI.WebControls.ObjectDataSource> funziona con. Alla scadenza della cache, il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo recupera i dati dall'oggetto business e li memorizza nella cache i dati.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo memorizza automaticamente i dati quando il <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> è impostata su `true` e il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> proprietà è impostata su un valore maggiore di 0, che indica il numero di secondi che la cache memorizza i dati prima della voce della cache viene eliminato. Un valore pari a 0 indica una cache lunga all'infinito.  
  
 È possibile impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> proprietà per creare una dipendenza tra tutte le voci di cache che vengono creati il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e la chiave. È possibile far scadere tutte le voci della cache a livello di codice in qualsiasi momento per la scadenza della chiave. Impostare la scadenza della chiave utilizzando il <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> metodo con corrente <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valore del parametro.  
  
 Viene creata una voce della cache univoche per ogni combinazione del <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> proprietà. Più <xref:System.Web.UI.WebControls.ObjectDataSource> controlli possono utilizzare le stesse voci della cache in scenari in cui devono essere caricati i dati usando lo stesso tipo, metodo e i parametri.  
  
   
  
## Examples  
 I tre esempi seguenti mostrano una pagina Web, una classe di pagina code-behind e una classe di accesso ai dati che recuperano record dalla tabella Employees del database Northwind.  
  
 Nel primo esempio viene illustrata una pagina Web contenente due <xref:System.Web.UI.WebControls.ObjectDataSource> controlli, una <xref:System.Web.UI.WebControls.DropDownList> (controllo) e un <xref:System.Web.UI.WebControls.DetailsView> controllo. Il primo <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e il <xref:System.Web.UI.WebControls.DropDownList> controllo vengono utilizzati per recuperare e visualizzare i nomi dei dipendenti dal database. Il secondo <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e il <xref:System.Web.UI.WebControls.DetailsView> controllo vengono utilizzati per recuperare e visualizzare il record employee selezionato dall'utente.  
  
 La memorizzazione nella cache è abilitata per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Pertanto, ogni record viene recuperato dal database di una sola volta. Il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> è impostata su "EmployeeDetails", ma qualsiasi valore stringa può essere usato come chiave. La pagina Web include inoltre un <xref:System.Web.UI.WebControls.Button> controllo che l'utente può fare clic per impostare come scaduti i dati memorizzati nella cache.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 Nel secondo esempio viene illustrato un gestore per il <xref:System.Web.UI.Control.Load> evento e un gestore per il <xref:System.Web.UI.WebControls.Button.Click> evento del <xref:System.Web.UI.WebControls.Button> controllo. Il <xref:System.Web.UI.Control.Load> gestore eventi crea un elemento della cache con una chiave impostata il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valore. Il <xref:System.Web.UI.WebControls.Button.Click> gestore eventi rimuove l'elemento della cache la cui chiave è uguale al <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valore. Quando viene rimosso l'elemento della cache, tutti i dati memorizzati nella cache dipendente dalla chiave è scaduto.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 Nel terzo esempio viene illustrata la classe di accesso ai dati che interagisce con il database Northwind. La classe Usa LINQ per eseguire una query nella tabella Employees. L'esempio richiede una classe LINQ to SQL che rappresenta il database Northwind e la tabella Employees. Per altre informazioni, vedere [procedura: creare classi LINQ to SQL in un progetto Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che determina se al metodo <see langword="Update" /> vengono passati solo i nuovi valori o se al metodo <see langword="Update" /> vengono passati sia i valori obsoleti che nuovi.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.ConflictOptions" />. Il valore predefinito è <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà determina se i parametri per i valori vecchi e nuovi vengono applicati al metodo specificato per il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà. Se, ad esempio, il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà restituisce un <xref:System.Data.DataTable> controllo con le colonne `Name` e `Number`e il <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.OverwriteChanges> campo, i parametri vengono creati per `Name` e `Number` per il `Update` metodo. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.CompareAllValues> valore, i parametri vengono creati per `Name`, `Number`, `original_Name`, e `original_Number`. (Il nome esatto dei parametri per i valori originali dipende il <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> proprietà.) Il <xref:System.Web.UI.WebControls.ObjectDataSource> determina se il metodo specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà dispone di parametri che corrispondono.  
  
 Controllo della concorrenza è una tecnica che utilizzano archivi dati al controllo del codice come dati viene letta e modificati nell'archivio quando più client accedono e modificano gli stessi dati. Ad esempio, un client legge i dati e presenta all'utente, mentre un altro client legge gli stessi dati e di presentazione a un altro utente. Se entrambi gli utenti aggiornano i dati e inviano per l'archiviazione dei dati, potrebbe verificarsi un risultato imprevisto, poiché entrambi i client potrebbero fornire valori diversi per gli stessi dati. Questa viene considerata un conflitto. Impostando il <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> proprietà per il <xref:System.Web.UI.ConflictOptions.CompareAllValues> valore, il `Update` metodo possibile quindi confrontare i valori vecchi e nuovi per l'origine dei dati per rilevare i conflitti e gestirli in base alle esigenze.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se i valori <see cref="T:System.Web.UI.WebControls.Parameter" /> passati a un'operazione di aggiornamento, inserimento o eliminazione vengono convertiti automaticamente da <see langword="null" /> nel valore <see cref="F:System.DBNull.Value" /> dal controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>
          <see langword="true" />, se i valori <see langword="null" /> in oggetti <see cref="T:System.Web.UI.WebControls.Parameter" /> passati al controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> vengono automaticamente convertiti nei valori <see cref="F:System.DBNull.Value" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversione non `null` per il <xref:System.DBNull.Value> valore può causare errori in fase di esecuzione. Utilizzare il <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> proprietà per indicare se <xref:System.Web.UI.WebControls.Parameter> valori passati a un'operazione di aggiornamento, insert o delete vengono automaticamente convertiti dal `null` per il <xref:System.DBNull.Value> del valore di <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome di una classe utilizzata dal controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> per un parametro in un'operazione sui dati di aggiornamento, inserimento o eliminazione, invece di passare singoli valori dal controllo con associazione a dati.</summary>
        <value>Nome di classe parziale o completo che identifica il tipo di oggetto che <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> può utilizzare come parametro per <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> o un'operazione <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anziché specificare diversi parametri che vengono passati per la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metodi, è possibile creare un oggetto che consente di aggregare più valori del campo dati. Questo oggetto viene passato ai metodi, anziché i parametri diversi.  
  
 Il comportamento predefinito di un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo associato a un controllo associato a dati è che il controllo associato a dati crea un <xref:System.Web.UI.WebControls.Parameter> oggetto per ogni parametro nell'origine dati. Se l'oggetto business ha un numero di campi, il metodo risulta ha anche un numero di campi. Il <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà consente di specificare un tipo che contiene una proprietà per ogni campo dati. Quindi, anziché passare diversi parametri del metodo, il runtime crea un oggetto e imposta tutte le relative proprietà. Questo oggetto viene aggiunto alla raccolta di parametri per la chiamata al metodo.  
  
 Il tipo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà deve avere un costruttore predefinito che non ha alcun parametro, pertanto la <xref:System.Web.UI.WebControls.ObjectDataSource> controllo può creare un'istanza del tipo. Il tipo deve avere anche le proprietà impostabili che consentono il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo per popolare l'oggetto con valori che vengono passati dal controllo associato a dati. I nomi delle proprietà nel <xref:System.Web.UI.WebControls.ObjectDataSource> controllo devono corrispondere esattamente ai nomi di parametro dei valori che vengono passati tramite il controllo associato a dati.  
  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> viene impostata e la <xref:System.Web.UI.WebControls.ObjectDataSource> è associato un controllo associato a dati, i metodi specificati dal controllo il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> ogni proprietà devono avere un parametro del tipo specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.OverwriteChanges> valore, il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà deve avere un parametro del tipo specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.CompareAllValues> valore, il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà deve avere due parametri del tipo specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà. Il primo parametro contiene i valori originali; il secondo parametro contiene i nuovi valori.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà delega per il <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
   
  
## Examples  
 La sezione contiene due esempi di codice. Il primo esempio di codice viene illustrato come implementare un tipo che combini tutti i valori di parametro in un oggetto, utilizzando il <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà. Il secondo esempio di codice mostra la pagina Web che utilizza le due classi che vengono utilizzate nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come implementare un tipo che combini tutti i valori di parametro in un oggetto, utilizzando il <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà. Il metodo select del `AggregateData` classe restituisce un <xref:System.Data.DataTable> oggetto con due colonne denominate `Name` e `Number`. Analogamente, il `NewData` classe definisce due proprietà in lettura/scrittura `Name` e `Number`. Il `Insert` metodo per il `AggregateData` classe accetta un parametro di tipo `NewData`. Il `TypeName` proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> è impostata su `AggregateData` e il <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> è impostata su `NewData`.  
  
 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]  
  
 Esempio di codice seguente mostra la pagina Web che utilizza le due classi che vengono utilizzate nell'esempio di codice precedente.  
  
 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue un'operazione di eliminazione chiamando il metodo identificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> con i parametri contenuti nell'insieme <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />.</summary>
        <returns>Valore che rappresenta il numero di righe eliminate dall'archivio dati sottostante, se la proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> dell'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> è impostata nell'evento <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />; in caso contrario, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operazione viene eseguita, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento per esaminare i valori dei parametri ed eseguire alcuna pre-elaborazione prima un <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operazione. Per eseguire un'operazione di eliminazione, il <xref:System.Web.UI.WebControls.ObjectDataSourceView> utilizza la reflection per creare un'istanza dell'oggetto identificato dall'oggetto di <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà. Quindi chiama il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà, usando i relativi <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> proprietà. Se i parametri di eliminazione provengono da un controllo con associazione a dati, il nome dei parametri viene creato in base al <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> proprietà. Dopo il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operazione viene completata, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento per esaminare i valori restituiti, parametri di output e le eccezioni e per eseguire la post-elaborazione.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metodo delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> metodo del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
## <a name="data-bound-controls"></a>Controlli con associazione a dati  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo è associato un controllo associato a dati, ad esempio il <xref:System.Web.UI.WebControls.GridView> (controllo), non è necessario chiamare il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metodo dal codice della pagina. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metodo viene richiamato direttamente dal controllo associato a dati invece.  
  
 Per ulteriori informazioni sull'unione di parametri, durata dell'oggetto e la risoluzione del metodo, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene completata un'operazione <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento per esaminare i valori dei parametri di output o un valore restituito o per determinare se è stata generata un'eccezione dopo un <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operazione è stata completata. Il valore restituito, i parametri di output e le proprietà delle eccezioni sono disponibili dal <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> oggetto associato all'evento.  
  
 È possibile usare il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> per restituire il numero di righe che sono state eliminate dal <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metodo. A tale scopo, impostare il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> proprietà. Se viene restituito il numero di righe eliminate dal metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà, il valore è disponibile la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> oggetto.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Nel secondo esempio di codice il `EmployeeLogic` classe che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Inizialmente, il <xref:System.Web.UI.WebControls.GridView> controllo viene visualizzato un set di tutti i dipendenti, utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà per recuperare i dati dal `EmployeeLogic` oggetto. Poiché il <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> è impostata su `true`, la <xref:System.Web.UI.WebControls.GridView> controllare automaticamente consente di visualizzare un **eliminare** pulsante.  
  
 Se si fa clic il **eliminare** pulsante, l'operazione di eliminazione viene eseguito utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà e i parametri specificati in modo il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme. In questo esempio di codice vengono eseguite anche alcuni passaggi di pre-elaborazione e post-elaborazione. Il `NorthwindEmployeeDeleting` delegato viene chiamato per gestire i <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento prima che l'operazione viene eseguita e il `NorthwindEmployeeDeleted` delegato viene chiamato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento dopo l'operazione è stata completata per eseguire la gestione delle eccezioni. In questo esempio di codice, se un `NorthwindDataException` viene generata un'eccezione, viene gestita dal `NorthwindEmployeeDeleted` metodo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Nell'esempio di codice riportato di seguito viene illustrato il `EmployeeLogic` classe utilizzata nell'esempio di codice precedente.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del metodo o funzione che il controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> richiama per eliminare dati.</summary>
        <value>Stringa che rappresenta il nome del metodo o funzione che l'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> utilizza per eliminare i dati. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si presuppone che l'oggetto business di eliminare un record di dati alla volta, anziché in un batch.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Assicurarsi che i nomi dei parametri è configurato per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllare il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> raccolta corrispondano ai nomi di colonna che vengono restituiti dal metodo di selezione.  
  
## <a name="object-lifetime"></a>Durata dell'oggetto  
 Il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà può essere un metodo di istanza o un `static` (`Shared` in Visual Basic) (metodo). Se è un metodo di istanza, l'oggetto business viene creato e distrutto ogni volta che il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà viene chiamata. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventi da utilizzare con l'oggetto business prima il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà viene chiamata. È anche possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento che viene generato dopo il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà viene chiamata. Se l'oggetto business implementa il <xref:System.IDisposable> interfaccia, il <xref:System.IDisposable.Dispose%2A> metodo viene chiamato prima dell'eliminazione dell'oggetto. Se il metodo è un `static` (`Shared` in Visual Basic) (metodo), l'oggetto business non deve mai venire creato e non sarà possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventi.  
  
## <a name="parameter-merging"></a>Unione di parametri  
 I parametri vengono aggiunti per il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> raccolta da tre origini:  
  
-   Dal controllo associato a dati, in fase di esecuzione.  
  
-   Dal `DeleteParameters` elemento, in modo dichiarativo.  
  
-   Dal `Deleting` (metodo), in modo dichiarativo.  
  
 In primo luogo, vengono aggiunti i parametri generati dai controlli con associazione a dati per il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme. Ad esempio, se il <xref:System.Web.UI.WebControls.ObjectDataSource> associato a un <xref:System.Web.UI.WebControls.GridView> controllo che contiene le colonne `Name` e `Number`, i parametri per `Name` e `Number` vengono aggiunti alla raccolta. Il nome esatto del parametro varia a seconda di <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> proprietà. Il tipo di dati di questi parametri è `string`. Successivamente, i parametri elencati nel `DeleteParameters` elemento vengono aggiunti. Se un parametro nel `DeleteParameters` viene trovato l'elemento con lo stesso nome come parametro che si trova già nella <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> raccolta, il parametro esistente viene modificata affinché corrisponda al parametro specificato nella `DeleteParameters` elemento. In genere, ciò consente di modificare il tipo di dati nel parametro. Infine, è possibile a livello di codice aggiungere e rimuovere i parametri in di <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento che si verifica prima il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> esecuzione del metodo. Il metodo viene risolto dopo i parametri vengono uniti. Metodo risoluzione è illustrata nella sezione successiva.  
  
## <a name="method-resolution"></a>Risoluzione (metodo)  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> viene chiamato, i campi di dati dal controllo associato a dati, i parametri che sono stati creati in modo dichiarativo nel `DeleteParameters` elemento e i parametri che sono stati aggiunti nel <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> gestore dell'evento sono tutti sottoposti a merge. (Per altre informazioni, vedere la sezione precedente). Il <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto tenta quindi di trovare un metodo da chiamare. In primo luogo, la ricerca di uno o più metodi con il nome specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà. Se viene trovata alcuna corrispondenza, un <xref:System.InvalidOperationException> generata un'eccezione. Se viene trovata una corrispondenza, quindi cerca i nomi dei parametri di corrispondenza. Ad esempio, si supponga che il tipo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà dispone di due metodi denominati `DeleteARecord`. Uno `DeleteARecord` dispone di un parametro `ID`e l'altra `DeleteARecord` presenta due parametri `Name` e `Number`. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> raccolta ha solo un parametro denominato `ID`, la `DeleteARecord` metodo con solo il `ID` parametro viene chiamato. Il tipo del parametro non viene verificato nella risoluzione dei metodi. L'ordine dei parametri non è rilevante.  
  
 Se il <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> è impostata, il metodo viene risolto in modo diverso. Il <xref:System.Web.UI.WebControls.ObjectDataSource> esegue la ricerca di un metodo con il nome specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà che accetta un parametro del tipo che viene specificata nel <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà. In questo caso, il nome del parametro non è rilevante.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Nel secondo esempio di codice il `EmployeeLogic` classe che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Inizialmente, il <xref:System.Web.UI.WebControls.GridView> controllo viene visualizzato un set di tutti i dipendenti, utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà per recuperare i dati dal `EmployeeLogic` oggetto. Poiché il <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> è impostata su `true`, la <xref:System.Web.UI.WebControls.GridView> controllare automaticamente consente di visualizzare un **eliminare** pulsante.  
  
 Se si fa clic il **eliminare** pulsante, l'operazione di eliminazione viene eseguito utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà e i parametri specificati in modo il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme. In questo esempio di codice vengono eseguite anche alcuni passaggi di pre-elaborazione e post-elaborazione. Il `NorthwindEmployeeDeleting` delegato viene chiamato per gestire i <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento prima che l'operazione viene eseguita e il `NorthwindEmployeeDeleted` delegato viene chiamato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento dopo l'operazione è stata completata per eseguire la gestione delle eccezioni. In questo esempio, se un `NorthwindDataException` viene generata un'eccezione, viene gestita dal `NorthwindDataException` delegare.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Nell'esempio di codice riportato di seguito viene illustrato il `EmployeeLogic` classe utilizzata nell'esempio di codice precedente.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di parametri contenente i parametri utilizzati dal metodo <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contenente i parametri utilizzati dal metodo <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I nomi e tipi dei parametri contenuti nella <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme deve corrispondere ai nomi e tipi dei parametri in di <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> firma del metodo. I nomi dei parametri sono interessati i <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> proprietà e sono distinzione maiuscole/minuscole. I parametri nella raccolta dipendono dai dati nel controllo associato a dati, i parametri specificati in modo dichiarativo e i parametri che vengono aggiunti a livello di codice. Per altre informazioni, vedere "Unione di parametri" nella <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> e [utilizzo dei parametri con il controllo ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> proprietà recupera il <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> proprietà contenuta la <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Per ulteriori informazioni sull'unione di parametri, durata dell'oggetto e la risoluzione del metodo, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Nel secondo esempio di codice il `EmployeeLogic` classe che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Inizialmente, il <xref:System.Web.UI.WebControls.GridView> controllo viene visualizzato un set di tutti i dipendenti, utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà per recuperare i dati dal `EmployeeLogic` oggetto. Poiché il <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> è impostata su `true`, la <xref:System.Web.UI.WebControls.GridView> controllare automaticamente consente di visualizzare un **eliminare** pulsante.  
  
 Se si sceglie il **eliminare** pulsante, il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventi viene chiamato con due parametri. Un parametro, `EmpID`, proviene dalle <xref:System.Web.UI.WebControls.DataGrid> controllare e si basa sul <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> proprietà. L'altro parametro proviene da dichiarativo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> proprietà. Il `EmployeeLogic` classe overload il `DeleteEmployee` metodo. Un overload accetta un `NorthwindEmployee` parametro e l'altro accetta un <xref:System.Int32> parametro denominato `anID`. Nel <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento, le voci nel <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> proprietà vengono modificate per includere solo un parametro denominato `anID` con il valore di `original_EmpID`. Quando il gestore dell'evento è presente, la corrispondenza `DeleteEmployee` metodo viene chiamato.  
  
 Esempio di codice seguente mostra la pagina Web che consente di visualizzare il <xref:System.Web.UI.WebControls.DataGrid> controllo e gli handle di <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]  
  
 Nell'esempio di codice riportato di seguito viene illustrato il `EmployeeLogic` classe utilizzata nell'esempio di codice precedente.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima di un'operazione <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento per eseguire un'inizializzazione aggiuntiva specifica per l'applicazione, per convalidare i valori dei parametri o per modificare i valori dei parametri prima di <xref:System.Web.UI.WebControls.ObjectDataSource> controllo esegue l'operazione di eliminazione. I parametri sono disponibili come un <xref:System.Collections.IDictionary> insieme a cui accede il <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> oggetto.  
  
 È possibile annullare l'operazione di eliminazione impostando il <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> a `true`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Nel secondo esempio di codice il `EmployeeLogic` classe che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per eliminare i dati. Inizialmente, il <xref:System.Web.UI.WebControls.GridView> controllo viene visualizzato un set di tutti i dipendenti, utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà per recuperare i dati dal `EmployeeLogic` oggetto. Poiché il <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> è impostata su `true`, la <xref:System.Web.UI.WebControls.GridView> controllare automaticamente consente di visualizzare un **eliminare** pulsante.  
  
 Se si fa clic il **eliminare** pulsante, l'operazione di eliminazione viene eseguito utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà e i parametri specificati in modo il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> insieme. In questo esempio di codice vengono eseguite anche alcuni passaggi di pre-elaborazione e post-elaborazione. Il `NorthwindEmployeeDeleting` delegato viene chiamato per gestire i <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento prima che l'operazione viene eseguita e il `NorthwindEmployeeDeleted` delegato viene chiamato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento dopo l'operazione è stata completata per eseguire la gestione delle eccezioni. In questo esempio di codice, se un `NorthwindDataException` viene generata un'eccezione, viene gestita dal `NorthwindEmployeeDeleted` metodo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Nell'esempio di codice riportato di seguito viene illustrato il `EmployeeLogic` classe utilizzata nell'esempio di codice precedente.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se la memorizzazione di dati nella cache è abilitata nel controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>
          <see langword="true" /> se la memorizzazione di dati nella cache è abilitata per il controllo origine dati; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta la memorizzazione nella cache di dati. Mentre viene memorizzato nella cache dei dati, le chiamate ai <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo recuperare i dati dalla cache anziché il <xref:System.Web.UI.WebControls.ObjectDataSource> creando un'istanza dell'oggetto business e la chiamata al metodo di dati. Alla scadenza della cache, il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo recupera i dati dall'oggetto business e li memorizza nella cache i dati.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo memorizza automaticamente i dati quando il <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> è impostata su `true` e il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> proprietà è impostata su un valore maggiore di 0, che indica il numero di secondi che la cache memorizza i dati prima della voce della cache viene eliminato. Un valore pari a 0 indica una cache lunga all'infinito.  
  
   
  
## Examples  
 I tre esempi seguenti mostrano una pagina Web, una classe di pagina code-behind e una classe di accesso ai dati che recuperano record dalla tabella Employees del database Northwind.  
  
 Nel primo esempio viene illustrata una pagina Web contenente due <xref:System.Web.UI.WebControls.ObjectDataSource> controlli, una <xref:System.Web.UI.WebControls.DropDownList> (controllo) e un <xref:System.Web.UI.WebControls.DetailsView> controllo. Il primo <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e il <xref:System.Web.UI.WebControls.DropDownList> controllo vengono utilizzati per recuperare e visualizzare i nomi dei dipendenti dal database. Il secondo <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e il <xref:System.Web.UI.WebControls.DetailsView> controllo vengono utilizzati per recuperare e visualizzare il record employee selezionato dall'utente.  
  
 La memorizzazione nella cache è abilitata per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Pertanto, ogni record viene recuperato dal database di una sola volta. Il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> è impostata su "EmployeeDetails", ma qualsiasi valore stringa può essere usato come chiave. La pagina Web include inoltre un <xref:System.Web.UI.WebControls.Button> controllo che l'utente può fare clic per impostare come scaduti i dati memorizzati nella cache.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 Nel secondo esempio viene illustrato un gestore per il <xref:System.Web.UI.Control.Load> evento e un gestore per il <xref:System.Web.UI.WebControls.Button.Click> evento del <xref:System.Web.UI.WebControls.Button> controllo. Il <xref:System.Web.UI.Control.Load> gestore eventi crea un elemento della cache con una chiave impostata il <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valore. Il <xref:System.Web.UI.WebControls.Button.Click> gestore eventi rimuove l'elemento della cache la cui chiave è uguale al <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valore. Quando viene rimosso l'elemento della cache, tutti i dati memorizzati nella cache dipendente dalla chiave è scaduto.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 Nel terzo esempio viene illustrata la classe di accesso ai dati che interagisce con il database Northwind. La classe Usa LINQ per eseguire una query nella tabella Employees. L'esempio richiede una classe LINQ to SQL che rappresenta il database Northwind e la tabella Employees. Per altre informazioni, vedere [procedura: creare classi LINQ to SQL in un progetto Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> è impostata su <see langword="true" /> quando il metodo specificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> restituisce un oggetto <see cref="T:System.Data.Common.DbDataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore indicante se il controllo origine dati supporta il paging dell'insieme di dati recuperati.</summary>
        <value>
          <see langword="true" />, se il controllo origine dati supporta il paging dei dati recuperati; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il paging dal <xref:System.Web.UI.WebControls.ObjectDataSource> controllo viene gestito impostando la <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> le proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> e la definizione di un metodo di selezione nell'oggetto business con i parametri appropriati. Quando il <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> è impostata su `true`, il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> raccolta include due parametri aggiuntivi per la prima riga che viene richiesto e il numero di righe richieste. Questi due parametri sono denominati come definito per il <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> proprietà. Il `Select` metodo deve restituire il numero richiesto di righe, iniziando in corrispondenza dell'indice specificato. Poiché i dati potrebbero non dividere uniformemente le dimensioni della pagina, l'ultima pagina potrebbe contenere un numero inferiore di righe. Di conseguenza, il numero di righe richieste è effettivamente il numero massimo di righe restituite.  
  
 Quando è abilitato il paging sul controllo associato a dati associato, il controllo associato a dati chiama il `Select` metodo con l'indice iniziale e il numero di righe che sono necessari. Inoltre, se il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> è impostata, il controllo associato a dati chiama il metodo prima del rendering dei controlli pager. Ad esempio, se un <xref:System.Web.UI.WebControls.GridView> controllo paging è abilitato con una dimensione della pagina di 5 e il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà restituisce 20, vengono visualizzate solo 4 pagine su cercapersone.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> proprietà delega per il <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto.  
  
   
  
## Examples  
 I tre esempi seguenti mostrano una pagina Web, una classe di pagina code-behind e una classe di accesso ai dati che consentono all'utente di selezionare il numero di record viene visualizzato nella pagina.  
  
 La pagina Web contiene un' <xref:System.Web.UI.WebControls.ObjectDataSource> controllo cui <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> è impostata su `true`. Il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà è impostata sul nome di un metodo che restituisce il numero totale di record nella query. Il <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> proprietà e il <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> impostata per i nomi dei parametri utilizzati nel metodo Select. La pagina contiene inoltre un <xref:System.Web.UI.WebControls.DropDownList> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Nel secondo esempio viene illustrato un gestore per il <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> evento del <xref:System.Web.UI.WebControls.DropDownList> controllo. Il codice nel gestore imposta la <xref:System.Web.UI.WebControls.GridView.PageSize%2A> proprietà per la selezione dell'utente.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 Nel terzo esempio viene illustrata la classe di accesso ai dati che recupera i dati dalla tabella Customers. Include un metodo denominato `GetSubsetOfEmployees`, che viene assegnato al <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. L'esempio include anche un metodo denominato `GetEmployeeCount`, che viene assegnato al <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. La classe Usa LINQ per eseguire una query della tabella Customers. L'esempio richiede una classe LINQ to SQL che rappresenta il database Northwind e la tabella Customers. Per altre informazioni, vedere [procedura: creare classi LINQ to SQL in un progetto Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'espressione di filtro applicata quando il metodo specificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> viene chiamato.</summary>
        <value>Stringa che rappresenta un'espressione di filtro applicata quando i dati vengono recuperati utilizzando il metodo o la funzione identificati dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta il filtraggio dei dati solo quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo restituisce un <xref:System.Data.DataSet> o <xref:System.Data.DataTable> oggetto.  
  
 La sintassi utilizzata per la <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà è un'espressione di tipo stringa di formato. La sintassi dell'espressione di filtro è la stessa sintassi è accettata dal <xref:System.Data.DataColumn.Expression%2A> proprietà. Se si aggiungono parametri per il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> raccolta, è inoltre possibile includere segnaposto della stringa di formato. Ad esempio, includere `"{0}"` nell'espressione per sostituire i valori dei parametri. I segnaposti vengono sostituiti in base all'indice del parametro nel <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> insieme.  
  
 È possibile includere parametri di <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà. Se il tipo del parametro è di tipo stringa o carattere, racchiudere il parametro tra virgolette singole. Le virgolette non sono necessarie se il parametro è un tipo numerico.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> insieme contiene i parametri che vengono valutati per i segnaposto che si trovano nella <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
> [!NOTE]
>  È necessario convalidare qualsiasi valore di parametro di filtro che riceve dal client. Il runtime semplicemente sostituisce il valore del parametro nell'espressione di filtro e viene applicato per la <xref:System.Data.DataSet> o <xref:System.Data.DataTable> oggetto restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (metodo). Se si utilizza il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà come misura di protezione per limitare il numero di elementi che vengono restituiti, è necessario convalidare i valori dei parametri prima il filtro viene applicato.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come visualizzare i dati filtrati utilizzando un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo da recuperare dati da un oggetto business di livello intermedio e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare i risultati. Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo possibile filtrare i dati solo quando il metodo che recupera i dati di recuperare la classe come un <xref:System.Data.DataSet> o <xref:System.Data.DataTable> oggetto. Per questo motivo, il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà identifica un metodo dell'oggetto business che recupera i dati come un <xref:System.Data.DataSet>.  
  
 L'esempio di codice è costituito un <xref:System.Web.UI.WebControls.TextBox> (controllo), una <xref:System.Web.UI.WebControls.GridView> (controllo), la <xref:System.Web.UI.WebControls.ObjectDataSource> (controllo) e un **Invia** pulsante. Per impostazione predefinita, il <xref:System.Web.UI.WebControls.TextBox> viene popolato con il nome di uno dei dipendenti di Northwind Traders. Il <xref:System.Web.UI.WebControls.GridView> vengono visualizzate informazioni sul dipendente che è identificato dal nome della parentesi di <xref:System.Web.UI.WebControls.TextBox>. Per recuperare i dati in un altro dipendente, immettere il nome completo del dipendente nel <xref:System.Web.UI.WebControls.TextBox>, quindi fare clic sui **Invia** pulsante.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà consente di specificare un'espressione che viene utilizzata per filtrare i dati recuperati dal metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. Utilizza segnaposto di parametri che vengono valutati per i parametri contenuti nella <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> insieme. In questo esempio, il segnaposto per il parametro è racchiuso tra virgolette singole perché il tipo del parametro è un tipo stringa che può contenere spazi. Se il tipo del parametro è un tipo numerico o data, virgolette di delimitazione non sono necessari.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Esempio di codice seguente viene fornito un esempio di un oggetto business di livello intermedio che utilizza l'esempio di codice precedente. L'esempio di codice è costituito da due classi base:  
  
-   Il `EmployeeLogic` (classe), ovvero una classe che incapsula la logica di business.  
  
-   Il `NorthwindEmployee` (classe), ovvero una classe modello che contiene solo la funzionalità di base che è necessario per caricare e mantenere i dati dal livello dati.  
  
 Per semplicità, il `EmployeeLogic` classe crea un set statico di dati, anziché recuperare i dati da un livello dati. È inoltre utile per questo esempio, poiché l'esempio si basa su è possibile fornire il nome completo di un dipendente di Northwind Traders per illustrare il filtro. Per un esempio funzionante completo, è necessario compilare e utilizzare queste classi con gli esempi di codice di Web Form forniti.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> è stata impostata e il metodo <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> non restituisce un oggetto <see cref="T:System.Data.DataSet" /> o <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima di un'operazione di filtro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> evento per eseguire le operazioni di convalida sui valori dei parametri di filtro prima di <xref:System.Web.UI.WebControls.ObjectDataSource> controllo esegue un'operazione di filtro. È possibile annullare l'operazione selezionata impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> a `true`. L'evento viene generato solo se il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> è impostata.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> delegato dell'evento per il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> evento del <xref:System.Web.UI.WebControls.ObjectDataSourceView> associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
> [!IMPORTANT]
>  È necessario convalidare qualsiasi valore di parametro di filtro che riceve dal client. Il runtime semplicemente sostituisce il valore del parametro nell'espressione di filtro e viene applicato per la <xref:System.Data.DataSet> o <xref:System.Data.DataTable> oggetto restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (metodo). Se si utilizza il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà come misura di protezione per limitare il numero di elementi che vengono restituiti, è necessario convalidare i valori dei parametri prima il filtro viene applicato.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di parametri associati ai segnaposto di parametro nella stringa <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contenente un insieme di parametri associato a tutti i segnaposto di parametro presenti nella proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta il filtraggio dei dati solo quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo restituisce un <xref:System.Data.DataSet> o <xref:System.Data.DataTable> oggetto.  
  
 La sintassi utilizzata per il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> è un'espressione di tipo stringa di formato. La sintassi dell'espressione di filtro è la stessa sintassi è accettata dal <xref:System.Data.DataColumn.Expression%2A> proprietà. Se si aggiungono parametri per il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> raccolta, è inoltre possibile includere segnaposto della stringa di formato. Ad esempio, includere `"{0}"` nell'espressione per sostituire i valori dei parametri. I segnaposti vengono sostituiti in base all'indice del parametro nel <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> insieme.  
  
 È possibile includere parametri di <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà. Se il parametro è di tipo stringa o carattere, racchiudere il parametro tra virgolette singole. Le virgolette non sono necessarie se il parametro è un tipo numerico.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> proprietà recupera il <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> proprietà contenuta la <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Il primo esempio di codice viene illustrato come visualizzare i dati filtrati utilizzando un <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto per recuperare dati da un oggetto business di livello intermedio e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare i risultati. Il secondo esempio di codice viene fornito un esempio di un oggetto business di livello intermedio che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice riportato di seguito viene illustrato come visualizzare i dati filtrati utilizzando un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo da recuperare dati da un oggetto business di livello intermedio e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare i risultati. Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo possibile filtrare i dati solo quando il metodo che recupera i dati di recuperare la classe come un <xref:System.Data.DataSet> o <xref:System.Data.DataTable> oggetto. Per questo motivo, il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà identifica un metodo dell'oggetto business che recupera i dati come un <xref:System.Data.DataSet>.  
  
 L'esempio di codice è costituito un <xref:System.Web.UI.WebControls.TextBox> (controllo), una <xref:System.Web.UI.WebControls.GridView> (controllo), la <xref:System.Web.UI.WebControls.ObjectDataSource> (controllo) e un **Invia** pulsante. Per impostazione predefinita, il <xref:System.Web.UI.WebControls.TextBox> viene popolato con il nome di uno dei dipendenti di Northwind Traders. Il <xref:System.Web.UI.WebControls.GridView> vengono visualizzate informazioni sul dipendente che è identificato dal nome della parentesi di <xref:System.Web.UI.WebControls.TextBox>. Per recuperare i dati in un altro dipendente, nelle <xref:System.Web.UI.WebControls.TextBox>, immettere il nome completo del dipendente e quindi fare clic sui **Invia** pulsante.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà consente di specificare un'espressione che viene utilizzata per filtrare i dati recuperati dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. Utilizza segnaposto di parametri che vengono valutati per i parametri contenuti nella <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> insieme. In questo esempio, il segnaposto per il parametro è racchiuso tra virgolette singole perché il tipo del parametro è un tipo stringa che può contenere spazi. Se il tipo del parametro è un tipo numerico o data, virgolette di delimitazione non sono necessari. Il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> insieme contiene un parametro, un <xref:System.Web.UI.WebControls.FormParameter> oggetto a cui è associato il <xref:System.Web.UI.WebControls.TextBox> controllo.  
  
> [!IMPORTANT]
>  È necessario convalidare qualsiasi valore di parametro di filtro che riceve dal client. Il runtime semplicemente sostituisce il valore del parametro nell'espressione di filtro e viene applicato per la <xref:System.Data.DataView> oggetto restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (metodo). Se si utilizza il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà come misura di protezione per limitare il numero di elementi che vengono restituiti, è necessario convalidare i valori dei parametri prima il filtro viene applicato.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Esempio di codice seguente viene fornito un esempio di un oggetto business di livello intermedio che utilizza l'esempio di codice precedente. L'esempio di codice è costituito da due classi base:  
  
-   Il `EmployeeLogic` (classe), ovvero una classe che incapsula la logica di business.  
  
-   Il `NorthwindEmployee` (classe), ovvero una classe modello che contiene solo la funzionalità di base che è necessario per caricare e mantenere i dati dal livello dati.  
  
 Per semplicità, il `EmployeeLogic` classe crea un set statico di dati, anziché recuperare i dati da un livello dati. È inoltre utile per questo esempio, poiché l'esempio si basa su è possibile fornire il nome completo di un dipendente di Northwind Traders per illustrare il filtro. Per un esempio funzionante completo, è necessario compilare e utilizzare queste classi con gli esempi di codice di Web Form forniti.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Viene imposta la proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> e il metodo <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> non restituisce un oggetto <see cref="T:System.Data.DataSet" /> o <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nome della visualizzazione da recuperare. Poiché l'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> supporta una sola visualizzazione, <c>viewName</c> viene ignorato.</param>
        <summary>Recupera la visualizzazione origine dati denominata associata al controllo origine dati.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> denominato <see langword="DefaultView" /> associato all'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta solo una vista origine dati. Come con tutti gli oggetti vista origine dati, il <xref:System.Web.UI.WebControls.ObjectDataSourceView> associato con i dati di controllo del codice sorgente definisce le relative funzionalità, esegue tutte le operazioni necessarie per recuperare dati dalla risorsa di archiviazione dati sottostante, che consente di eseguire operazioni quali ordinamento, inserimento, eliminazione e l'aggiornamento.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> metodo è destinato a essere chiamato dai controlli con associazione a dati, non da codice della pagina.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <paramref name="viewName" /> specificato è <see langword="null" /> o un valore diverso da <see langword="DefaultView" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un insieme di nomi che rappresentano l'elenco di oggetti visualizzazione associati all'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Un insieme <see cref="T:System.Collections.ICollection" /> che contiene i nomi delle visualizzazioni associate all'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta solo una visualizzazione, denominata `DefaultView`, nei relativi dati sottostanti. Il <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> metodo restituisce una raccolta con un singolo elemento con questo nome di una vista.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> metodo è destinato a essere chiamato dai controlli con associazione a dati, non da codice della pagina.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue un'operazione di inserimento chiamando il metodo identificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> e dai parametri nell'insieme <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />.</summary>
        <returns>Valore che rappresenta il numero di righe inserite nell'archivio dati sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operazione viene eseguita, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento per esaminare i valori dei parametri ed eseguire alcuna pre-elaborazione prima un <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operazione. Per eseguire un'operazione di inserimento, il <xref:System.Web.UI.WebControls.ObjectDataSourceView> utilizza la reflection per creare un'istanza dell'oggetto identificato dall'oggetto di <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà. Quindi chiama il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà, usando i relativi <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> proprietà. Dopo il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operazione viene completata, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> evento. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> evento per esaminare i valori restituiti, parametri di output e le eccezioni e per eseguire la post-elaborazione.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metodo delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> metodo per il <xref:System.Web.UI.WebControls.ObjectDataSourceView> associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Per ulteriori informazioni sull'unione di parametri, durata dell'oggetto e la risoluzione del metodo, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
## <a name="data-bound-controls"></a>Controlli con associazione a dati  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto è associato un controllo associato a dati, ad esempio il <xref:System.Web.UI.WebControls.GridView> (controllo), non è necessario chiamare il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metodo dal codice della pagina. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metodo viene richiamato direttamente dal controllo associato a dati invece.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene completata un'operazione <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> evento per esaminare i valori dei parametri di output o un valore restituito o per determinare se è stata generata un'eccezione dopo un <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operazione è stata completata. Il valore restituito, i parametri di output e le proprietà delle eccezioni sono disponibili dal <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> oggetto associato all'evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima di un'operazione <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento per eseguire un'inizializzazione aggiuntiva specifica per l'applicazione, per convalidare i valori dei parametri o per modificare i valori dei parametri prima di <xref:System.Web.UI.WebControls.ObjectDataSource> controllo esegue l'operazione di inserimento. I parametri sono disponibili come un <xref:System.Collections.IDictionary> insieme a cui accede il <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> oggetto.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> con un oggetto business e un <xref:System.Web.UI.WebControls.DetailsView> controllo per inserire i dati. Il secondo esempio di codice viene fornito un esempio dell'oggetto business di livello intermedio che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.DetailsView> controllo per inserire i dati. Inizialmente, il <xref:System.Web.UI.WebControls.DetailsView> Visualizza un nuovo `NorthwindEmployee` record, insieme a generato automaticamente **inserire** pulsante. Dopo avere immesso i dati nei campi del <xref:System.Web.UI.WebControls.DetailsView> controllo, fare clic sui **inserire** pulsante. Il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà identifica il metodo che esegue l'operazione di inserimento.  
  
 In questo esempio, il `UpdateEmployeeInfo` metodo viene utilizzato per eseguire un'istruzione insert; tuttavia, è necessario un `NorthwindEmployee` parametro per inserire i dati. Per questo motivo, la raccolta di stringhe che il <xref:System.Web.UI.WebControls.DetailsView> il controllo passa automaticamente non sono sufficienti. Il `NorthwindEmployeeInserting` delegato è un <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> oggetto che gestisce il <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento e consente di modificare i parametri di input prima di <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operazione procede. Poiché il `UpdateEmployeeInfo` metodo richiede un `NorthwindEmployee` uno viene creato utilizzando la raccolta di stringhe e viene aggiunto a oggetti come un parametro, il <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> insieme utilizzando un nome di parametro (`ne`) previsto dal metodo. È possibile eseguire una procedura simile quando si utilizza un oggetto di livello intermedio esistente come origine dati con i tipi e i metodi che non sono progettati appositamente per l'utilizzo con il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operazione viene eseguita, il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà viene chiamata. Se il `Insert` metodo dell'oggetto ha una firma del metodo che include parametri, il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> raccolta deve contenere un parametro con nomi che corrispondono ai parametri di firma del metodo per il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metodo completato correttamente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 Esempio di codice seguente viene fornito un esempio di un oggetto business di livello intermedio che utilizza l'esempio di codice precedente. L'esempio di codice è costituito da due classi base:  
  
-   Il `EmployeeLogic` (classe), ovvero una classe senza stata che incapsula la logica di business.  
  
-   Il `NorthwindEmployee` (classe), ovvero una classe modello che contiene solo la funzionalità di base che è necessario per caricare e mantenere i dati dal livello dati.  
  
 Un ulteriore `NorthwindDataException` classe viene fornita per praticità. Per un esempio funzionante completo, è necessario compilare e utilizzare queste classi. Il `UpdateEmployeeInfo` (metodo) non è completamente implementato, pertanto non verranno inseriti i dati nel database di Northwind Traders quando si utilizza questo esempio.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del metodo o funzione che il controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> richiama per inserire dati.</summary>
        <value>Stringa che rappresenta il nome del metodo o funzione che l'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> utilizza per inserire i dati. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si presuppone che l'oggetto business di inserire un record di dati alla volta, anziché in un batch.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto.  
  
## <a name="object-lifetime"></a>Durata dell'oggetto  
 Il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà può essere un metodo di istanza o un `static` (`Shared` in Visual Basic) (metodo). Se è un metodo di istanza, l'oggetto business viene creato ed eliminato ogni volta il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà viene chiamata. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventi da utilizzare con l'oggetto business prima il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà viene chiamata. È anche possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento generato dopo il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> proprietà viene chiamata. Se l'oggetto business implementa il <xref:System.IDisposable> interfaccia, il <xref:System.IDisposable.Dispose%2A> metodo viene chiamato prima dell'eliminazione dell'oggetto. Se il metodo `static` (`Shared` in Visual Basic), l'oggetto business non deve mai venire creato e non sarà possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventi.  
  
## <a name="parameter-merging"></a>Unione di parametri  
 I parametri vengono aggiunti per il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> raccolta da tre origini:  
  
-   Dal controllo associato a dati, in fase di esecuzione.  
  
-   Dal `InsertParameters` elemento, in modo dichiarativo.  
  
-   Dal `Inserting` (metodo), a livello di codice.  
  
 In primo luogo, vengono aggiunti i parametri generati dai controlli con associazione a dati per il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> insieme. Ad esempio, se il <xref:System.Web.UI.WebControls.ObjectDataSource> associato a un <xref:System.Web.UI.WebControls.GridView> controllo che contiene le colonne `Name` e `Number`, i parametri per `Name` e `Number` vengono aggiunti alla raccolta. Il tipo di dati di questi parametri è `string`. Successivamente, i parametri elencati nel `InsertParameters` elemento vengono aggiunti. Se un parametro nel `InsertParameters` viene trovato l'elemento con lo stesso nome come parametro che si trova già nella <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> raccolta, il parametro esistente viene modificata affinché corrisponda al parametro specificato nella `InsertParameters` elemento. In genere, ciò consente di modificare il tipo di dati nel parametro. Infine, è possibile a livello di codice aggiungere e rimuovere i parametri in di <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento che si verifica prima il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> esecuzione del metodo. Il metodo viene risolto dopo i parametri vengono uniti. Metodo risoluzione è illustrata nella sezione successiva.  
  
> [!IMPORTANT]
>  È consigliabile convalidare qualsiasi valore del parametro che riceve dal client. Il runtime sostituisce il valore del parametro nel <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà.  
  
## <a name="method-resolution"></a>Risoluzione (metodo)  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> viene chiamato, i campi di dati dal controllo associato a dati, i parametri che sono stati creati in modo dichiarativo nel `InsertParameters` elemento e i parametri che sono stati aggiunti nel <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> gestore dell'evento sono tutti sottoposti a merge. (Per altre informazioni, vedere la sezione precedente). Il <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto tenta quindi di trovare un metodo da chiamare. In primo luogo, la ricerca di uno o più metodi con il nome specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà. Se viene trovata alcuna corrispondenza, un <xref:System.InvalidOperationException> generata un'eccezione. Se viene trovata una corrispondenza, quindi cerca i nomi dei parametri di corrispondenza. Ad esempio, si supponga che un tipo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà dispone di due metodi denominati `InsertARecord`. Uno `InsertARecord` dispone di un parametro `ID`e l'altra `InsertARecord` presenta due parametri `Name` e `Number`. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> raccolta ha solo un parametro denominato `ID`, la `InsertARecord` metodo con solo il `ID` parametro viene chiamato. Il tipo del parametro non viene verificato nella risoluzione dei metodi. L'ordine dei parametri non è rilevante.  
  
 Se il <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> è impostata, il metodo viene risolto in modo diverso. Il <xref:System.Web.UI.WebControls.ObjectDataSource> esegue la ricerca di un metodo con il nome specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà che accetta un parametro del tipo che viene specificata nel <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà. In questo caso, il nome del parametro non è rilevante.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> con un oggetto business e un <xref:System.Web.UI.WebControls.DetailsView> controllo per inserire i dati. Il secondo esempio di codice viene fornito un esempio dell'oggetto business di livello intermedio che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.DetailsView> controllo per inserire i dati. Inizialmente, il <xref:System.Web.UI.WebControls.DetailsView> Visualizza un nuovo `NorthwindEmployee` record, insieme a generato automaticamente **inserire** pulsante. Dopo avere immesso i dati nei campi del <xref:System.Web.UI.WebControls.DetailsView> controllo, fare clic sui **inserire** pulsante. Il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà identifica il metodo che esegue l'operazione di inserimento.  
  
 In questo esempio, il `UpdateEmployeeInfo` metodo viene utilizzato per eseguire un'istruzione insert; tuttavia, è necessario un `NorthwindEmployee` parametro per inserire i dati. Per questo motivo, la raccolta di stringhe che il <xref:System.Web.UI.WebControls.DetailsView> il controllo passa automaticamente non sono sufficienti. Il `NorthwindEmployeeInserting` delegato è un <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> oggetto che gestisce il <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento e consente di modificare i parametri di input prima di <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operazione procede. Poiché il `UpdateEmployeeInfo` metodo richiede un `NorthwindEmployee` uno viene creato utilizzando la raccolta di stringhe e viene aggiunto a oggetti come un parametro, il <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> insieme utilizzando un nome di parametro (`ne`) previsto dal metodo. È possibile eseguire una procedura simile quando si utilizza un oggetto di livello intermedio esistente come origine dati con i tipi e i metodi che non sono progettati appositamente per l'utilizzo con il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operazione viene eseguita, il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà viene chiamata. Se il `Insert` metodo dell'oggetto ha una firma del metodo che include parametri, il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> raccolta deve contenere un parametro con nomi che corrispondono ai parametri di firma del metodo per il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metodo completato correttamente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 Esempio di codice seguente viene fornito un esempio di un oggetto business di livello intermedio che utilizza l'esempio di codice precedente. L'esempio di codice è costituito da due classi base:  
  
-   Il `EmployeeLogic` (classe), ovvero una classe senza stata che incapsula la logica di business.  
  
-   Il `NorthwindEmployee` (classe), ovvero una classe modello che contiene solo la funzionalità di base che è necessario per caricare e mantenere i dati dal livello dati.  
  
 Un ulteriore `NorthwindDataException` classe viene fornita per praticità. Per un esempio funzionante completo, è necessario compilare e utilizzare queste classi. Il `UpdateEmployeeInfo` (metodo) non è completamente implementato, pertanto non verranno inseriti i dati nel database di Northwind Traders quando si utilizza questo esempio.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di parametri contenente i parametri utilizzati dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contenente i parametri utilizzati dal metodo identificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I nomi e tipi dei parametri contenuti nella <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> insieme deve corrispondere ai nomi e tipi dei parametri in di <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> firma della proprietà. I nomi di parametro sono distinzione maiuscole / minuscole. Quando si lavora con i controlli associati a dati che forniscono parametri, ad esempio il <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controlli, la <xref:System.Web.UI.WebControls.ObjectDataSource> controllo unisce automaticamente i parametri specificati in modo esplicito nella raccolta con i parametri fornite dal controllo associato a dati. Questo è importante perché i controlli associati a dati sempre forniscono i relativi parametri come <xref:System.String> i tipi e se la firma del metodo include numerici o tipi di date, è necessario in modo esplicito includono un parametro nel <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> insieme con il tipo corretto. In caso contrario, il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo tenta di eseguire il cast di parametri in base al tipo che è definito dai parametri nella raccolta. Per altre informazioni, vedere [utilizzo dei parametri con il controllo ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> proprietà recupera il <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> proprietà contenuta la <xref:System.Web.UI.WebControls.ObjectDataSourceView> che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Per ulteriori informazioni sull'unione di parametri, durata dell'oggetto e la risoluzione del metodo, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> con un oggetto business e un <xref:System.Web.UI.WebControls.DetailsView> controllo per inserire i dati. Il secondo esempio di codice fornisce un'implementazione di esempio del `Insert` metodo che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.DetailsView> controllo per inserire i dati. Inizialmente, il <xref:System.Web.UI.WebControls.DetailsView> consente di visualizzare le caselle di testo in cui è possibile immettere dati per un nuovo `NorthwindEmployee` record, insieme a generato automaticamente **inserire** pulsante. Dopo avere immesso i dati nei campi del <xref:System.Web.UI.WebControls.DetailsView> controllo, fare clic sui **inserire** pulsante. Il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà identifica il metodo che esegue l'operazione di inserimento.  
  
 Se si fa clic il **inserire** pulsante, l'operazione viene eseguito utilizzando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà e i parametri specificati in modo il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> insieme. In questo esempio di codice, un parametro è specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> insieme che corrisponde all'ID. del Supervisore Infatti, anche se l'ID viene visualizzato nel <xref:System.Web.UI.WebControls.GridView.Rows%2A> raccolta per il <xref:System.Web.UI.WebControls.DetailsView> controllare come una <xref:System.Web.UI.WebControls.BoundField> dell'oggetto, viene passata come stringa il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Aggiungendo l'oggetto in modo esplicito il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> insieme con un <xref:System.Web.UI.WebControls.Parameter.Type%2A> proprietà impostata sul <xref:System.TypeCode.Int32> valore, verrà passato correttamente dal <xref:System.Web.UI.WebControls.ObjectDataSource> al metodo come un <xref:System.Int32>, non come una stringa.  
  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operazione viene eseguita, il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà viene chiamata. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metodo dell'oggetto ha una firma del metodo che include parametri, il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> raccolta deve contenere parametri con nomi che corrispondono ai parametri di firma del metodo per il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metodo completato correttamente.  
  
> [!IMPORTANT]
>  È consigliabile convalidare qualsiasi valore del parametro che riceve dal client. Il runtime sostituisce il valore del parametro nel <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> proprietà.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 Esempio di codice seguente fornisce un esempio di implementazione del `Insert` metodo che usa l'esempio di codice precedente. Il `InsertNewEmployeeWrapper` metodo viene aggiunto al `EmployeeLogic` oggetto di livello intermedio che viene fornito nel <xref:System.Web.UI.WebControls.ObjectDataSource> Cenni preliminari sulla classe per abilitare l'oggetto da utilizzare più facilmente con il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo in scenari Web, senza sostanziali riscritture effettivi logica di business.  
  
 Per eseguire l'esempio, è necessario disporre di `NorthwindEmployee` classe fornita nel <xref:System.Web.UI.WebControls.ObjectDataSource> Cenni preliminari sulla classe. Questo esempio viene illustrato solo per la connessione di <xref:System.Web.UI.WebControls.ObjectDataSource> a un metodo di oggetto business che ottiene i dati per un nuovo record di database utilizzando i parametri. Nell'esempio non vengono aggiunti record nel database, perché il `Save` metodo la `NorthwindEmployee` classe non sia incluso codice per aggiornare il database.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Oggetto contenente i valori dello stato di visualizzazione salvato per il controllo.</param>
        <summary>Carica lo stato di visualizzazione precedentemente salvato del controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato principalmente dall'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice. Tuttavia, gli sviluppatori di controllo possono eseguire l'override questo metodo per specificare come un controllo server personalizzato ripristina lo stato di visualizzazione. Per altre informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Usato in operazioni di paging per rappresentare un pulsante nella riga del pager che esegue il paging.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il <see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> metodo viene usato principalmente dagli sviluppatori di controlli quando si estende il <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> controllo.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome di parametro del metodo di recupero dati dell'oggetto business utilizzato per indicare il numero di record da recuperare per il supporto paging dell'origine dati.</summary>
        <value>Nome del parametro <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> utilizzato per indicare il numero di record da recuperare. Il valore predefinito è <c>"maximumRows"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> proprietà viene utilizzata per supportare il paging dell'origine dati. Per informazioni sul modo in cui è supportato il paging per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
   
  
## Examples  
 I tre esempi seguenti mostrano una pagina Web, una classe di pagina code-behind e una classe di accesso ai dati che consentono all'utente di selezionare il numero di record viene visualizzato nella pagina.  
  
 La pagina Web contiene un' <xref:System.Web.UI.WebControls.ObjectDataSource> controllo cui <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> è impostata su `true`. Il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà è impostata sul nome di un metodo che restituisce il numero totale di record nella query. Il <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> proprietà e il <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> impostata per i nomi dei parametri utilizzati nel metodo Select. La pagina contiene inoltre un <xref:System.Web.UI.WebControls.DropDownList> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Nel secondo esempio viene illustrato un gestore per il <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> evento del <xref:System.Web.UI.WebControls.DropDownList> controllo. Il codice nel gestore imposta la <xref:System.Web.UI.WebControls.GridView.PageSize%2A> proprietà per la selezione dell'utente.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 Nel terzo esempio viene illustrata la classe di accesso ai dati che recupera i dati dalla tabella Customers. Include un metodo denominato `GetSubsetOfEmployees`, che viene assegnato al <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. L'esempio include anche un metodo denominato `GetEmployeeCount`, che viene assegnato al <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. La classe Usa LINQ per eseguire una query della tabella Customers. L'esempio richiede una classe LINQ to SQL che rappresenta il database Northwind e la tabella Customers. Per altre informazioni, vedere [procedura: creare classi LINQ to SQL in un progetto Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo la creazione dell'oggetto identificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> evento chiamare altri metodi per l'oggetto business, impostare le proprietà o eseguire altri inizializzazione specifico nell'oggetto business prima il <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto chiama il metodo di dati oggetto di business per eseguire un'operazione di dati . Un riferimento all'oggetto avviene mediante il <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> oggetto.  
  
 Se il metodo che viene identificato per eseguire l'operazione di dati è `static` (`Shared` in Visual Basic), la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> mai vengono generati eventi.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima della creazione dell'oggetto identificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il metodo che viene identificato per eseguire l'operazione di dati è `static` (`Shared` in Visual Basic), la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> mai vengono generati eventi.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo chiama automaticamente il costruttore predefinito di un oggetto business per creare un'istanza di tramite reflection. Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventi in modo esplicito chiamare a un altro costruttore e impostare l'istanza dell'oggetto risultante per il <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> proprietà dell'oggetto associato <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> oggetto.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare le informazioni. Il secondo esempio di codice fornisce l'oggetto business di livello intermedio che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare le informazioni. Potrebbe funzionare con un oggetto business che è molto costoso da creare (in termini di tempo o sulle risorse) per ogni operazione sui dati che nella pagina Web viene eseguito. Per creare un'istanza a una sola volta e memorizzarlo nella cache per le operazioni successive anziché creazione ed eliminazione per ogni operazione di dati potrebbe essere un modo per lavorare con un oggetto dispendioso.  
  
> [!NOTE]
>  In un'applicazione di produzione, potrebbero verificarsi situazioni più richieste contemporaneamente utilizzando la stessa istanza. Pertanto, l'oggetto deve essere implementata in modo thread-safe.  
  
 Questo esempio di codice viene illustrato questo modello. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventi per controllare la cache per un oggetto prima di tutto, creare solo un'istanza dell'oggetto, se non è già stato memorizzato. Quindi, gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento per memorizzare nella cache l'oggetto di business per utilizzi futuri, anziché eliminarlo. Nell'esempio di codice, il <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> oggetto è impostato su `true` per indicare il <xref:System.Web.UI.WebControls.ObjectDataSource> non chiamare <xref:System.IDisposable.Dispose%2A> metodo sull'oggetto.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 Esempio di codice seguente fornisce l'oggetto business di livello intermedio di esempio che utilizza l'esempio di codice precedente. L'esempio di codice è costituito da un oggetto business di base, definito dal `EmployeeLogic` (classe), ovvero una classe con stata che incapsula la logica di business. Per un esempio funzionante completo, è necessario compilare questo codice sotto forma di libreria e usare queste classi da una pagina ASP.NET (file con estensione aspx).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima dell'eliminazione dell'oggetto identificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento viene generato sempre prima l'istanza dell'oggetto business venga eliminata. Se l'oggetto business implementa il <xref:System.IDisposable> interfaccia, il <xref:System.IDisposable.Dispose%2A> metodo viene chiamato dopo questo evento viene generato.  
  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento chiamare altri metodi sull'oggetto, impostare le proprietà o eseguire la pulitura specifica per l'oggetto prima che l'oggetto viene eliminato. Un riferimento all'oggetto avviene mediante il <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> oggetto.  
  
 Quando si usa un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con una classe LINQ to SQL, è necessario annullare l'eliminazione della classe del contesto dei dati in un gestore per il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento. Questo passaggio è necessario poiché LINQ to SQL supporta l'esecuzione posticipata, mentre il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo tenta di eliminare il contesto dei dati dopo l'operazione Select.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare le informazioni. Il secondo esempio di codice fornisce l'oggetto business di livello intermedio che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare le informazioni. Potrebbe funzionare con un oggetto business che è molto costoso da creare (in termini di tempo o sulle risorse) per ogni operazione sui dati che nella pagina Web viene eseguito. Per creare un'istanza a una sola volta e memorizzarlo nella cache per le operazioni successive anziché creazione ed eliminazione per ogni operazione di dati potrebbe essere un modo per lavorare con un oggetto dispendioso. Questo esempio illustra questo modello. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventi per controllare la cache per un oggetto prima di tutto, creare solo un'istanza, se non è già stato memorizzato. Quindi, gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento per memorizzare nella cache l'oggetto di business per utilizzi futuri, anziché eliminarlo. In questo esempio di codice, il <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> oggetto è impostato su `true` per indicare il <xref:System.Web.UI.WebControls.ObjectDataSource> non chiamare il <xref:System.IDisposable.Dispose%2A> metodo sull'oggetto.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 Esempio di codice seguente fornisce l'oggetto business di livello intermedio di esempio che utilizza l'esempio di codice precedente. L'esempio di codice è costituito da un oggetto business di base, definito dal `EmployeeLogic` (classe), ovvero una classe con stata che incapsula la logica di business. Per un esempio funzionante completo, è necessario compilare questo codice sotto forma di libreria e usare queste classi da una pagina ASP.NET (file con estensione aspx).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 Nell'esempio seguente viene illustrato come gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento quando si utilizza un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con una classe LINQ to SQL.  
  
```vb  
Public Sub ExampleObjectDisposing(ByVal sender As Object, _   
        ByVal e As ObjectDataSourceDisposingEventArgs)  
    e.Cancel = True  
End Sub  
```  
  
```csharp  
public void ExampleObjectDisposing(object sender,   
        ObjectDataSourceDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa di formato da applicare ai nomi dei parametri per i valori originali passati ai metodi <see langword="Delete" /> o <see langword="Update" />.</summary>
        <value>Stringa che rappresenta una stringa di formato applicata ai nomi dei parametri <paramref name="oldValues" /> o parametri chiave passati ai metodi <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> o <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />. Il valore predefinito è <c>"{0}"</c>, ovvero il nome del parametro è il nome del campo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> proprietà viene applicata alle chiavi primarie solo, ad esempio quelle che vengono identificati con il `DataKeyNames` proprietà di un controllo associato a dati o in delete e aggiornare gli scenari in cui il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.CompareAllValues> valore e il set di valori originali vengono passati al metodo di dati corrispondente.  
  
 Di seguito sono due scenari comuni in cui è possibile modificare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> proprietà:  
  
-   È possibile modificare la proprietà per distinguere tra i valori vecchi e nuovi aggiornamenti. Quando il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> è impostata sul <xref:System.Web.UI.ConflictOptions.CompareAllValues> parametri del valore, per entrambi i valori originali e quelli nuovi vengono aggiunti per il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> insieme. Senza la stringa di formattazione, verranno creati due parametri con lo stesso nome per ogni campo dati. Modificando il nome del parametro del valore originale, è possibile confrontare i dati all'origine dati originale per rilevare i conflitti e confrontare i valori di chiave.  
  
-   Alcune finestre di progettazione visiva implementano uno schema di denominazione particolare per le chiavi e i valori originali.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Aggiunge un gestore eventi <see cref="E:System.Web.UI.Page.LoadComplete" /> alla pagina che contiene il controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Il metodo <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> metodo in una classe derivata, assicurarsi di chiamare il <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> metodo per la classe base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto o imposta un valore che indica le informazioni sulle impostazioni cultura utilizzate quando si convertono i valori stringa in tipi di proprietà effettivi per costruire un oggetto del tipo indicato da <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />.</summary>
        <value>Informazioni sulle impostazioni cultura. Il valore predefinito è <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva lo stato del controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Restituisce lo stato di visualizzazione corrente del controllo del server; in caso contrario, restituisce <see langword="null" />, se al controllo non è associato alcuno stato di visualizzazione.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera i dati dall'archivio dati sottostante chiamando il metodo identificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> con i parametri nell'insieme <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />.</summary>
        <returns>Elenco <see cref="T:System.Collections.IEnumerable" /> di righe di dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo specificato potrebbe essere necessario qualsiasi firma del metodo, ma deve restituire o essere derivato da uno dei tipi elencati nella tabella seguente per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo alla chiamata abbia esito positivo.  
  
|Tipo restituito|Operazione|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|Il <xref:System.Collections.IEnumerable> restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.|  
|<xref:System.Data.DataTable>|Un <xref:System.Data.DataView> viene creato utilizzando il <xref:System.Data.DataTable> e restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.|  
|<xref:System.Data.DataView>|Il <xref:System.Data.DataView> restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.|  
|<xref:System.Data.DataSet>|Il primo <xref:System.Data.DataTable> del <xref:System.Data.DataSet> viene estratto e una <xref:System.Data.DataView> viene creata e restituita dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.|  
|<xref:System.Object>|L'oggetto viene inserito in un solo elemento <xref:System.Collections.IEnumerable> insieme e restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.|  
  
 Il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà può essere un metodo di istanza o un `static` (`Shared` in Visual Basic) (metodo). Se è un metodo di istanza, l'oggetto business viene creato ed eliminato ogni volta il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà viene chiamata, ad eccezione del fatto che la stessa istanza viene utilizzata per chiamare il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà e il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo restituisce un <xref:System.Collections.IEnumerable> interfaccia. Tuttavia, per abilitare la memorizzazione nella cache e gli scenari di filtraggio, il valore restituito deve essere un <xref:System.Data.DataSet> oggetto. Mentre il <xref:System.Data.DataSet> la classe non implementa le <xref:System.Collections.IEnumerable> interfaccia, la <xref:System.Web.UI.WebControls.ObjectDataSource> controllo estrae automaticamente il valore predefinito <xref:System.Data.DataView> controllare, che implementa il <xref:System.Collections.IEnumerable>.  
  
 Prima di <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operazione viene eseguita, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento per esaminare i valori dei parametri ed eseguire alcuna pre-elaborazione prima un <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operazione. Per eseguire un'operazione di recupero di dati, il <xref:System.Web.UI.WebControls.ObjectDataSourceView> utilizza la reflection per creare un'istanza dell'oggetto identificato dall'oggetto di <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà. Quindi chiama il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà, usando i relativi <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> proprietà. Dopo il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operazione viene completata, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> evento. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> evento per esaminare i valori restituiti, parametri di output e le eccezioni e per eseguire la post-elaborazione.  
  
 Se il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà restituisce un <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, o <xref:System.Data.DataView> oggetto e la memorizzazione nella cache è abilitata, il <xref:System.Web.UI.WebControls.ObjectDataSource> recupera i dati e Salva i dati nella cache durante il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operazione. La cache viene creata, annullata o aggiornata in base al comportamento di memorizzazione nella cache che viene specificato tramite la combinazione del <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> proprietà.  
  
 Se il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà restituisce un <xref:System.Data.DataSet> o <xref:System.Data.DataTable> oggetto e un <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> proprietà è stata specificata, viene valutato con tutte le proprietà fornite <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> proprietà e il filtro risultante viene applicato all'elenco dei dati durante il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operazione.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> metodo per il <xref:System.Web.UI.WebControls.ObjectDataSourceView> associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Per ulteriori informazioni sull'unione di parametri, durata dell'oggetto e la risoluzione del metodo, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>.  
  
## <a name="data-bound-controls"></a>Controlli con associazione a dati  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo è associato un controllo associato a dati, ad esempio il <xref:System.Web.UI.WebControls.GridView> (controllo), non è necessario chiamare il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo dal codice della pagina. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo viene richiamato direttamente dal controllo associato a dati invece.  
  
   
  
## Examples  
 Per un esempio di codice, vedere <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del metodo o funzione che il controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> richiama per recuperare un numero di righe.</summary>
        <value>Stringa che rappresenta il nome del metodo o funzione che l'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> utilizza per recuperare un numero di righe. Il metodo deve restituire un Integer (<see cref="T:System.Int32" />). Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà identifica un metodo dell'oggetto business che viene utilizzato per recuperare un numero di riga del totale, per supportare il paging dell'origine dati. Il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà viene valutata solo se il <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> è impostata su `true`.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Per informazioni sul modo in cui è supportato il paging per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
   
  
## Examples  
 I tre esempi seguenti mostrano una pagina Web, una classe di pagina code-behind e una classe di accesso ai dati che consentono all'utente di selezionare il numero di record viene visualizzato nella pagina.  
  
 La pagina Web contiene un' <xref:System.Web.UI.WebControls.ObjectDataSource> controllo cui <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> è impostata su `true`. Il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà è impostata sul nome di un metodo che restituisce il numero totale di record nella query. Il <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> proprietà e il <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> impostata per i nomi dei parametri utilizzati nel metodo Select. La pagina contiene inoltre un <xref:System.Web.UI.WebControls.DropDownList> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Nel secondo esempio viene illustrato un gestore per il <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> evento del <xref:System.Web.UI.WebControls.DropDownList> controllo. Il codice nel gestore imposta la <xref:System.Web.UI.WebControls.GridView.PageSize%2A> proprietà per la selezione dell'utente.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 Nel terzo esempio viene illustrata la classe di accesso ai dati che recupera i dati dalla tabella Customers. Include un metodo denominato `GetSubsetOfEmployees`, che viene assegnato al <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. L'esempio include anche un metodo denominato `GetEmployeeCount`, che viene assegnato al <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. La classe Usa LINQ per eseguire una query della tabella Customers. L'esempio richiede una classe LINQ to SQL che rappresenta il database Northwind e la tabella Customers. Per altre informazioni, vedere [procedura: creare classi LINQ to SQL in un progetto Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene completata un'operazione <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> evento per esaminare i valori dei parametri di output o un valore restituito o per determinare se è stata generata un'eccezione dopo un <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operazione è stata completata. Il valore restituito, i parametri di output e le proprietà delle eccezioni sono disponibili dal <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> oggetto associato all'evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 I tre esempi seguenti mostrano una pagina Web, una classe di pagina code-behind e una classe di accesso ai dati che consentire agli utenti di recuperare e aggiornare i record nella tabella Employees del database Northwind.  
  
 Nel primo esempio viene illustrata una pagina Web contenente due <xref:System.Web.UI.WebControls.ObjectDataSource> controlli, una <xref:System.Web.UI.WebControls.DropDownList> (controllo) e un <xref:System.Web.UI.WebControls.DetailsView> controllo. Il primo <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e il <xref:System.Web.UI.WebControls.DropDownList> controllo vengono utilizzati per recuperare e visualizzare i nomi dei dipendenti dal database. Il secondo <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e il <xref:System.Web.UI.WebControls.DetailsView> controllo vengono utilizzati per recuperare, visualizzare e modificare i dati del record employee selezionato dall'utente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Nel secondo esempio vengono illustrati i gestori per il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> e <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventi. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> gestore dell'evento serializza l'oggetto che contiene i dati recuperati dalla tabella Employee. L'oggetto serializzato viene archiviato nello stato di visualizzazione. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> gestore dell'evento deserializza l'oggetto nello stato di visualizzazione che contiene i dati originali del record di dati in fase di aggiornamento. L'oggetto che contiene i dati originali viene passato come parametro al metodo Update. I dati originali devono essere passati al database in modo che può essere utilizzato per verificare se i dati sono stati modificati da un altro processo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 Nel terzo esempio viene illustrata la classe di accesso ai dati che interagisce con il database Northwind. La classe Usa LINQ per eseguire query e aggiornare la tabella Employees. L'esempio richiede una classe LINQ to SQL che rappresenta il database Northwind e la tabella di dipendenti. Per altre informazioni, vedere [procedura: creare classi LINQ to SQL in un progetto Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima di un'operazione <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento per eseguire un'inizializzazione aggiuntiva specifica per l'applicazione, per convalidare i valori dei parametri o per modificare i valori dei parametri prima di <xref:System.Web.UI.WebControls.ObjectDataSource> controllo esegue l'operazione di recupero di dati. I parametri sono disponibili come un <xref:System.Collections.IDictionary> insieme a cui accede il <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> oggetto.  
  
 Questo evento può essere generato due volte per una singola chiamata ai <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo, se il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> è impostata. Il <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> oggetto viene usato per determinare se è stato chiamato select per recuperare dati o recuperare il conteggio.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del metodo o funzione che il controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> richiama per recuperare i dati.</summary>
        <value>Stringa che rappresenta il nome del metodo o funzione che l'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> utilizza per recuperare i dati. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo specificato può avere una firma di metodo, ma deve restituire uno dei tipi presenti nella tabella seguente per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo alla chiamata abbia esito positivo.  
  
|Tipo restituito|Operazione|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|Il <xref:System.Collections.IEnumerable> restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.|  
|<xref:System.Data.DataTable>|Un <xref:System.Data.DataView> viene creato utilizzando il <xref:System.Data.DataTable> e restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.|  
|<xref:System.Data.DataView>|Un <xref:System.Data.DataView> restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.|  
|<xref:System.Data.DataSet>|Il primo <xref:System.Data.DataTable> del <xref:System.Data.DataSet> viene estratto e una <xref:System.Data.DataView> viene creata e restituita dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.|  
|<xref:System.Object>|L'oggetto viene inserito in un solo elemento <xref:System.Collections.IEnumerable> insieme e restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo.|  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Quando si usa il <xref:System.Web.UI.WebControls.ObjectDataSource> classe per eliminare o aggiornare i dati, assicurarsi che i nomi dei parametri è configurato per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> raccolta o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> raccolta corrispondano ai nomi di colonna che vengono restituiti dal metodo di selezione .  
  
## <a name="object-lifetime"></a>Durata dell'oggetto  
 Il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà può essere un metodo di istanza o un `static` (`Shared` in Visual Basic) (metodo). Se è un metodo di istanza, l'oggetto business viene creato ed eliminato ogni volta il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà viene chiamata. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventi da utilizzare con l'oggetto business prima del metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà viene chiamata. È anche possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento generato dopo il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà viene chiamata. Se l'oggetto business implementa il <xref:System.IDisposable> interfaccia, il <xref:System.IDisposable.Dispose%2A> metodo viene chiamato prima dell'eliminazione dell'oggetto. Se il metodo `static` (`Shared` in Visual Basic), l'oggetto business non deve mai venire creato e non sarà possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventi.  
  
## <a name="parameter-merging"></a>Unione di parametri  
 I parametri vengono aggiunti per il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> raccolta da queste origini:  
  
-   In modo dichiarativo dal `SelectParameters` elemento.  
  
-   A livello di codice dal `Selecting` metodo.  
  
 In primo luogo, i parametri elencati nel `SelectParameters` elemento vengono aggiunti. In secondo luogo, i parametri a livello di codice aggiunti e rimossi nel <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento che si verifica prima il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> esecuzione del metodo. Il metodo viene risolto dopo i parametri vengono uniti. Metodo risoluzione è illustrata nella sezione successiva.  
  
> [!IMPORTANT]
>  È consigliabile convalidare qualsiasi valore del parametro che riceve dal client. Il runtime sostituisce il valore del parametro nel <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà.  
  
## <a name="method-resolution"></a>Risoluzione (metodo)  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> viene chiamato, i campi di dati dal controllo associato a dati, i parametri che sono stati creati in modo dichiarativo nel `SelectParameters` elemento e i parametri che sono stati aggiunti nel <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> gestore dell'evento sono tutti sottoposti a merge. (Per altre informazioni, vedere la sezione precedente). Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllare tenta quindi di trovare un metodo da chiamare. In primo luogo, la ricerca di uno o più metodi con il nome specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. Se viene trovata alcuna corrispondenza, un <xref:System.InvalidOperationException> generata un'eccezione. Se viene trovata una corrispondenza, quindi cerca i nomi dei parametri di corrispondenza. Ad esempio, si supponga che un tipo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà dispone di due metodi denominati `SelectARecord`. Uno `SelectARecord` dispone di un parametro `ID`e l'altra `SelectARecord` presenta due parametri `Name` e `Number`. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> raccolta ha solo un parametro denominato `ID`, la `SelectARecord` metodo con solo il `ID` parametro viene chiamato. Il tipo del parametro non viene verificato nella risoluzione dei metodi. L'ordine dei parametri non è rilevante.  
  
 Se il <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> è impostata, il metodo viene risolto in modo diverso. Il <xref:System.Web.UI.WebControls.ObjectDataSource> esegue la ricerca di un metodo con il nome specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà che accetta un parametro del tipo che viene specificata nel <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà. In questo caso, il nome del parametro non è rilevante.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come un <xref:System.Web.UI.WebControls.GridView> controllo può visualizzare i dati utilizzando un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo in una pagina Web Form. Il <xref:System.Web.UI.WebControls.ObjectDataSource> identifica un nome di classe parziale o completo con il relativo <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà e un metodo che viene chiamato per recuperare i dati con relativi <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. In fase di esecuzione, viene creato l'oggetto e il metodo viene chiamato tramite reflection. Il <xref:System.Web.UI.WebControls.GridView> controllo enumera tramite il <xref:System.Collections.IEnumerable> raccolta restituita dal metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà e consente di visualizzare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di parametri utilizzati dal metodo specificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Insieme di parametri utilizzati dal metodo specificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> proprietà ottiene il <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Aggiungere parametri per il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> insieme in modo dichiarativo utilizzando il `SelectParameters` elemento o a livello di codice nel gestore per il <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento. In fase di esecuzione, i parametri elencati nel `SelectParameters` elemento vengono aggiunti alla raccolta prima di tutto. I parametri nella raccolta vengono quindi aggiunti o rimossi dal gestore per il <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento viene generato prima il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> esecuzione del metodo.  
  
 Prima di <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo viene eseguito, i nomi e tipi dei parametri contenuti nel <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> raccolta deve corrispondere alla firma del metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. Se, ad esempio, un metodo select denominato `GetEmployeesByStateAndAge` accetta un `string` e un numero intero come parametri, il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> raccolta deve contenere due parametri. Il primo parametro deve essere risolto in una stringa e il secondo parametro deve essere risolto in un numero intero. Entrambi i parametri possono essere specificati nel markup nel `SelectParameters` elemento. In alternativa, possono essere possono essere aggiunti nel <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> gestore dell'evento o un parametro può essere aggiunti nel markup e l'altro può essere aggiunti a livello di codice.  
  
 Per altre informazioni, vedere [utilizzo dei parametri con il controllo ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) e il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> proprietà.  
  
> [!IMPORTANT]
>  Nel codice per il <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> gestore eventi o nel metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà, che è necessario convalidare qualsiasi valore del parametro che viene ricevuto dal client.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come recuperare un record di dati singoli utilizzando un <xref:System.Web.UI.WebControls.ObjectDataSource> controllare e visualizzarli in un <xref:System.Web.UI.WebControls.DetailsView> controllo. Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo recupera un record dipendente specifico chiamando il `GetEmployee` metodo il `EmployeeLogic` classe. Il `GetEmployee` metodo richiede un parametro di ID dipendente. Il <xref:System.Web.UI.WebControls.ObjectDataSource> controlli utilizza una `QueryStringParameter` elemento nel markup per creare un <xref:System.Web.UI.WebControls.QueryStringParameter> oggetto che recupera il valore di un parametro di stringa di query specificata dall'URL, lo si passa al `GetEmployee` metodo.  
  
 Altre classi di parametro possono essere utilizzate per recuperare valori da altre origini, ad esempio le proprietà del controllo, i campi del form, i cookie, dati di profilo ASP.NET o lo stato della sessione. È anche possibile usare un oggetto parametro definito nel markup per passare un valore a livello di codice al metodo select. Per ulteriori informazioni sulle classi di parametro disponibili, vedere [utilizzando parametri con i controlli origine dati per il filtraggio](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
 Per eseguire questo esempio, è necessario quanto segue:  
  
-   Un sito Web con una stringa di connessione denominata `NorthwindConnection` che si connette al database Northwind Traders. Per altre informazioni, vedere il <xref:System.Web.UI.WebControls.ObjectDataSource> Cenni preliminari sulla classe.  
  
-   Il `EmployeeLogic` classe che viene visualizzato come uno degli esempi di codice per il <xref:System.Web.UI.WebControls.ObjectDataSource> Cenni preliminari sulla classe. Il file di classe deve essere posizionato nella cartella App_Code.  
  
-   Come una pagina aspx, è possibile eseguire il codice di esempio. Se si richiede la pagina senza un parametro di stringa di query, viene visualizzato un messaggio di errore. Se la richiesta di pagina utilizzando una stringa di query, ad esempio `?empid=1` dopo il nome del file con estensione aspx, si vedranno i dettagli per il dipendente richiesto.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'oggetto business utilizzato dal parametro <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> per specificare un'espressione di ordinamento per il supporto di ordinamento dell'origine dati.</summary>
        <value>Nome del parametro del metodo utilizzato per indicare il parametro che viene utilizzato per l'ordinamento dei dati. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> proprietà viene utilizzata per supportare l'ordinamento di origine dei dati. Quando un <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> è impostata sul <xref:System.Web.UI.DataSourceSelectArguments> dell'oggetto e passato al <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo, il <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> valore identifica il nome del parametro del <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> metodo dell'oggetto business in base al quale i dati sono ordinati.  
  
 Se il <xref:System.Web.UI.WebControls.ObjectDataSource> associato a un controllo associato a dati, i valori che vengono passati al parametro utilizzano la forma di valori di campo delimitati da virgola seguita da `"ASC"` o `"DESC"`. Ad esempio, il valore di un ordine crescente nel `Name` sarebbe `"Name ASC"`.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Il primo esempio di codice viene illustrato come implementare un tipo che supporta l'ordinamento. Il secondo esempio di codice viene illustrato come implementare un'espressione di ordinamento.  
  
 Esempio di codice seguente viene illustrato come implementare un tipo che supporta l'ordinamento. Il `SelectMethod` del `SortingData` classe accetta un parametro, `sortExpression`. La stringa che viene passata a `SelectMethod` viene utilizzato per il <xref:System.Data.DataView.Sort%2A> proprietà del <xref:System.Data.DataView> oggetto restituito da `SelectMethod`.  
  
 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]  
  
 Esempio di codice seguente viene illustrato come implementare un'espressione di ordinamento. Il codice della pagina Web crea un'istanza di <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Il <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> è impostata su `SortingData` e il <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> è impostata su `sortExpression`. Il <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> proprietà del <xref:System.Web.UI.WebControls.GridView> NFS è impostata su `true`. Quando l'utente sceglie il **ordinamento** pulsante, il nome del campo `Name` o `Number`, viene passato a `SelectMethod` nel parametro di ordinamento.  
  
 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa delimitata da punti e virgola che indica i database e le tabelle da utilizzare per la dipendenza della cache da Microsoft SQL Server.</summary>
        <value>Stringa che indica i database e le tabelle da utilizzare per la dipendenza della cache da SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo supporta criteri di scadenza facoltativi che si basa sul <xref:System.Web.Caching.SqlCacheDependency> oggetto per la cache di dati (il servizio deve essere configurato per il server di database).  
  
 SQL Server sono supportati due meccanismi per l'invalidamento della cache: polling e notifica. Ogni meccanismo presenta una sintassi diversa per il <xref:System.Web.Caching.SqlCacheDependency> oggetto.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> supporta solo il polling. Il <xref:System.Web.Caching.SqlCacheDependency> stringa viene utilizzata per creare un <xref:System.Data.SqlClient.SqlDependency> oggetto passato per il <xref:System.Data.Common.DbCommand> costruttore prima il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodo viene eseguito. Il <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> stringa identifica i database e tabelle in base allo stesso formato utilizzato dal `@ Page` direttiva, dove la prima parte della stringa è una stringa di connessione a un database di SQL Server, seguita da un delimitatore e infine il nome della tabella di database (ad esempio, `"connectionstring1:table1"`). Se il <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> proprietà dipende da più di una tabella, le coppie di nome tabella e stringa di connessione sono separate da punti e virgola (ad esempio, `"connectionstring1:table1";connectionstring2:table2"`).  
  
 Per supportare la notifica, è necessario scrivere la logica della cache nell'implementazione del <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà e gestire la costruzione del <xref:System.Web.Caching.SqlCacheDependency> oggetto nel codice.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Il primo esempio di codice viene illustrato come creare una dipendenza della cache di SQL Server e impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> proprietà di un <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto. Il secondo esempio di codice viene illustrato come implementare un metodo wrapper che restituisce un <xref:System.Data.DataSet> sull'oggetto per consentire la memorizzazione nella cache e il filtro con un <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto.  
  
 Esempio di codice riportato di seguito viene illustrato come creare una dipendenza della cache di SQL Server e impostare il <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> proprietà di un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. In questo esempio, il database viene eseguito il polling ogni 120 secondi. Se i dati in Northwind Traders Employees tabella vengono modificati nel tempo, tutti i dati memorizzati nella cache il <xref:System.Web.UI.WebControls.ObjectDataSource> controllare e visualizzare il <xref:System.Web.UI.WebControls.GridView> controllo è scaduto e un nuovo set di dati vengono recuperati per la richiesta successiva per la pagina.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato come implementare un metodo wrapper che restituisce un <xref:System.Data.DataSet> sull'oggetto per consentire la memorizzazione nella cache e il filtro con un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. Nell'implementazione di base del `EmployeeLogic` (classe), il `GetAllEmployees` metodo restituisce un <xref:System.Collections.ArrayList> oggetto. Anziché effettuare il refactoring oggetto completamente per funzionare con il <xref:System.Web.UI.WebControls.ObjectDataSource> in una pagina Web Form, un metodo wrapper denominato `GetAllEmployeesAsDataSet` viene aggiunto che restituisce un set di `NorthwindEmployee` i dati come un <xref:System.Data.DataSet>.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome di parametro del metodo di recupero dati utilizzato per indicare il valore dell'identificatore del primo record da recuperare per il supporto paging dell'origine dati.</summary>
        <value>Nome di parametro del metodo dell'oggetto business utilizzato per indicare il primo record da recuperare. Il parametro deve restituire un Integer. Il valore predefinito è <c>"startRowIndex"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> proprietà viene utilizzata per supportare il paging dell'origine dati. Per informazioni sul modo in cui è supportato il paging per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
   
  
## Examples  
 I tre esempi seguenti mostrano una pagina Web, una classe di pagina code-behind e una classe di accesso ai dati che consentono all'utente di selezionare il numero di record viene visualizzato nella pagina.  
  
 La pagina Web contiene un' <xref:System.Web.UI.WebControls.ObjectDataSource> controllo cui <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> è impostata su `true`. Il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà è impostata sul nome di un metodo che restituisce il numero totale di record nella query. Il <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> proprietà e il <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> impostata per i nomi dei parametri utilizzati nel metodo Select. La pagina contiene inoltre un <xref:System.Web.UI.WebControls.DropDownList> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Nel secondo esempio viene illustrato un gestore per il <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> evento del <xref:System.Web.UI.WebControls.DropDownList> controllo. Il codice nel gestore imposta la <xref:System.Web.UI.WebControls.GridView.PageSize%2A> proprietà per la selezione dell'utente.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 Nel terzo esempio viene illustrata la classe di accesso ai dati che recupera i dati dalla tabella Customers. Include un metodo denominato `GetSubsetOfEmployees`, che viene assegnato al <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. L'esempio include anche un metodo denominato `GetEmployeeCount`, che viene assegnato al <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSource> controllo. La classe Usa LINQ per eseguire una query della tabella Customers. L'esempio richiede una classe LINQ to SQL che rappresenta il database Northwind e la tabella Customers. Per altre informazioni, vedere [procedura: creare classi LINQ to SQL in un progetto Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tiene traccia delle modifiche dello stato di visualizzazione apportate al controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> in modo che possano essere memorizzate nell'oggetto <see cref="T:System.Web.UI.StateBag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> metodo viene sottoposto a override per contrassegnare il punto di partenza per iniziare a rilevare e le modifiche al controllo come parte dello stato di visualizzazione per l'oggetto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome della classe rappresentata dall'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Nome di classe parziale o completo che identifica il tipo di oggetto rappresentato dall'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare un'istanza dell'oggetto che il <xref:System.Web.UI.WebControls.ObjectDataSource> associato il controllo, il controllo utilizza la reflection per caricare il tipo identificato dal nome del tipo in fase di esecuzione. Pertanto, il valore della <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà può essere un tipo parziale per il codice che si trova nella directory Bin o App_Code o un nome completo del tipo per il codice che è registrato nella global assembly cache. Se si utilizza la global assembly cache, è necessario aggiungere il riferimento appropriato per il `assemblies` sezione del file Machine. config o Web. config.  
  
 Il tipo deve avere un costruttore predefinito, a meno che non si gestisce il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> creare manualmente un'istanza dell'evento. Viene creata un'istanza del tipo per ogni chiamata ai <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metodi, se i metodi nel tipo di membro sono. Un'istanza non viene creata se i metodi sono `static` (`Shared` in Visual Basic). Se il tipo implementa la <xref:System.IDisposable> interfaccia, il <xref:System.IDisposable.Dispose%2A> metodo viene chiamato prima dell'eliminazione dell'oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come un <xref:System.Web.UI.WebControls.GridView> controllo può visualizzare i dati tramite un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo in una pagina Web Form. Il <xref:System.Web.UI.WebControls.ObjectDataSource> identifica un nome di classe parziale o completo con il relativo <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà e un metodo che viene chiamato per recuperare i dati con relativi <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà. In fase di esecuzione, viene creato l'oggetto e il metodo viene chiamato tramite reflection. Il <xref:System.Web.UI.WebControls.GridView> controllo enumera tramite il <xref:System.Collections.IEnumerable> raccolta restituita dal <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> proprietà e consente di visualizzare i dati.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 Nell'esempio seguente viene illustrata la classe che il <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> valore della proprietà fa riferimento a.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue un'operazione di aggiornamento chiamando il metodo identificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> e dai parametri contenuti nell'insieme <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />.</summary>
        <returns>Valore che rappresenta il numero di righe aggiornate nell'archivio dati sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si presuppone che l'oggetto business di aggiornare i dati un record alla volta, anziché in un batch.  
  
 Prima di <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operazione viene eseguita, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> evento. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> evento per esaminare i valori dei parametri ed eseguire alcuna pre-elaborazione prima un <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operazione. Per eseguire un'operazione di aggiornamento, il <xref:System.Web.UI.WebControls.ObjectDataSourceView> utilizza la reflection per creare un'istanza dell'oggetto identificato dall'oggetto di <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà. Quindi chiama il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà, usando i relativi <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> proprietà. Dopo il <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operazione viene completata, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> evento. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> evento per esaminare i valori restituiti, parametri di output e le eccezioni e per eseguire la post-elaborazione.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> metodo delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> metodo per il <xref:System.Web.UI.WebControls.ObjectDataSourceView> associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Per ulteriori informazioni sull'unione di parametri, durata dell'oggetto e la risoluzione del metodo, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  È consigliabile convalidare qualsiasi valore del parametro che riceve dal client. Il runtime sostituisce il valore del parametro nel <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà.  
  
## <a name="data-bound-controls"></a>Controlli con associazione a dati  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo è associato un controllo associato a dati, ad esempio il <xref:System.Web.UI.WebControls.GridView> (controllo), non è necessario chiamare il <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> metodo dal codice della pagina. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> metodo viene richiamato direttamente dal controllo associato a dati invece.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.DropDownList> (controllo), <xref:System.Web.UI.WebControls.TextBox> controlli e numerosi <xref:System.Web.UI.WebControls.ObjectDataSource> oggetti per aggiornare i dati. Nel secondo esempio di codice il `EmployeeLogic` classe che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.DropDownList> (controllo), <xref:System.Web.UI.WebControls.TextBox> controlli e numerosi <xref:System.Web.UI.WebControls.ObjectDataSource> controlli per aggiornare i dati. Il <xref:System.Web.UI.WebControls.DropDownList> Visualizza il nome di un dipendente di Northwind, mentre il <xref:System.Web.UI.WebControls.TextBox> controlli vengono usati per immettere e aggiornare le informazioni dell'indirizzo. Poiché il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> raccolta contiene un <xref:System.Web.UI.WebControls.ControlParameter> oggetto che è associato il valore selezionato il <xref:System.Web.UI.WebControls.DropDownList>, il pulsante che genera il <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operazione viene abilitata solo dopo la selezione di un dipendente.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 Nell'esempio di codice riportato di seguito viene illustrato il `EmployeeLogic` classe utilizzata nell'esempio di codice precedente.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene completata un'operazione <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> evento per esaminare i valori dei parametri di output o un valore restituito o per determinare se è stata generata un'eccezione dopo un <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operazione è stata completata. Il valore restituito, i parametri di output e le proprietà delle eccezioni sono disponibili dal <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> oggetto associato all'evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del metodo o funzione che il controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> richiama per aggiornare i dati.</summary>
        <value>Stringa che rappresenta il nome del metodo o funzione che l'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> utilizza per aggiornare i dati. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo si presuppone che il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà esegua un aggiornamento alla volta, anziché in un batch.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà delega al <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Assicurarsi che i nomi dei parametri è configurato per il <xref:System.Web.UI.WebControls.ObjectDataSource> controllare il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> raccolta corrispondano ai nomi di colonna che vengono restituiti dal metodo di selezione.  
  
## <a name="object-lifetime"></a>Durata dell'oggetto  
 Il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà può essere un metodo di istanza o un `static` (`Shared` in Visual Basic) (metodo). Se è un metodo di istanza, l'oggetto business viene creato ed eliminato ogni volta il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà viene chiamata. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventi da utilizzare con l'oggetto business prima del metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà viene chiamata. È anche possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento generato dopo il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà viene chiamata. Se l'oggetto business implementa il <xref:System.IDisposable> interfaccia, il <xref:System.IDisposable.Dispose%2A> metodo viene chiamato prima dell'eliminazione dell'oggetto. Se il metodo `static` (`Shared` in Visual Basic), l'oggetto business non deve mai venire creato e non sarà possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventi.  
  
## <a name="parameter-merging"></a>Unione di parametri  
 I parametri vengono aggiunti per il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> raccolta da tre origini:  
  
-   Dal controllo associato a dati, in fase di esecuzione.  
  
-   Dal `UpdateParameters` elemento, in modo dichiarativo.  
  
-   Dal <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> gestore dell'evento, a livello di codice.  
  
 In primo luogo, vengono aggiunti i parametri generati dai controlli con associazione a dati per il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> insieme. Ad esempio, se il <xref:System.Web.UI.WebControls.ObjectDataSource> associato a un <xref:System.Web.UI.WebControls.GridView> controllo che contiene le colonne `Name` e `Number`, i parametri per `Name` e `Number` vengono aggiunti alla raccolta. Il nome esatto del parametro varia a seconda di <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> proprietà. Il tipo di dati di questi parametri è `string`. Successivamente, i parametri elencati nel `UpdateParameters` elemento vengono aggiunti. Se un parametro nel `UpdateParameters` viene trovato l'elemento con lo stesso nome come parametro che si trova già nella <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> raccolta, il parametro esistente viene modificata affinché corrisponda al parametro specificato nella `UpdateParameters` elemento. In genere, ciò consente di modificare il tipo di dati nel parametro. Infine, è possibile a livello di codice aggiungere e rimuovere i parametri in di <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> evento che si verifica prima il <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> esecuzione del metodo. Il metodo viene risolto dopo i parametri vengono uniti. Metodo risoluzione è illustrata nella sezione successiva.  
  
> [!IMPORTANT]
>  È consigliabile convalidare qualsiasi valore del parametro che riceve dal client. Il runtime sostituisce il valore del parametro nel <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà.  
  
## <a name="method-resolution"></a>Risoluzione (metodo)  
 Quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> viene chiamato, i campi di dati dal controllo associato a dati, i parametri che sono stati creati in modo dichiarativo nel `UpdateParameters` elemento e i parametri che sono stati aggiunti nel <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> gestore dell'evento sono tutti sottoposti a merge. (Per altre informazioni, vedere la sezione precedente). Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllare tenta quindi di trovare un metodo da chiamare. In primo luogo, la ricerca di uno o più metodi con il nome specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà. Se viene trovata alcuna corrispondenza, un <xref:System.InvalidOperationException> generata un'eccezione. Se viene trovata una corrispondenza, quindi cerca i nomi dei parametri di corrispondenza. Ad esempio, si supponga che un tipo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> proprietà dispone di due metodi denominati `UpdateARecord`. Uno `UpdateARecord` dispone di un parametro `ID`e l'altra `UpdateARecord` presenta due parametri `Name` e `Number`. Se il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> raccolta ha solo un parametro denominato `ID`, la `UpdateARecord` metodo con solo il `ID` parametro viene chiamato. Il tipo del parametro non viene verificato nella risoluzione dei metodi. L'ordine dei parametri non è rilevante.  
  
 Se il <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> è impostata, il metodo viene risolto in modo diverso. Il <xref:System.Web.UI.WebControls.ObjectDataSource> esegue la ricerca di un metodo con il nome specificato nella <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà che accetta un parametro del tipo che viene specificata nel <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> proprietà. In questo caso, il nome del parametro non è rilevante.  
  
   
  
## Examples  
 I tre esempi seguenti mostrano una pagina Web, una classe di pagina code-behind e una classe di accesso ai dati che consentire agli utenti di recuperare e aggiornare i record nella tabella Employees del database Northwind.  
  
 Nel primo esempio viene illustrata una pagina Web contenente due <xref:System.Web.UI.WebControls.ObjectDataSource> controlli, una <xref:System.Web.UI.WebControls.DropDownList> (controllo) e un <xref:System.Web.UI.WebControls.DetailsView> controllo. Il primo <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e il <xref:System.Web.UI.WebControls.DropDownList> controllo vengono utilizzati per recuperare e visualizzare i nomi dei dipendenti dal database. Il secondo <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e il <xref:System.Web.UI.WebControls.DetailsView> controllo vengono utilizzati per recuperare, visualizzare e modificare i dati del record employee selezionato dall'utente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Nel secondo esempio vengono illustrati i gestori per il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> e <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventi. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> gestore dell'evento serializza l'oggetto che contiene i dati recuperati dalla tabella Employee. L'oggetto serializzato viene archiviato nello stato di visualizzazione. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> gestore dell'evento deserializza l'oggetto nello stato di visualizzazione che contiene i dati originali del record di dati in fase di aggiornamento. L'oggetto che contiene i dati originali viene passato come parametro al metodo Update. I dati originali devono essere passati al database in modo che può essere utilizzato per verificare se i dati sono stati modificati da un altro processo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 Nel terzo esempio viene illustrata la classe di accesso ai dati che interagisce con il database Northwind. La classe Usa LINQ per eseguire query e aggiornare la tabella Employees. L'esempio richiede una classe LINQ to SQL che rappresenta il database Northwind e la tabella di dipendenti. Per altre informazioni, vedere [procedura: creare classi LINQ to SQL in un progetto Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di parametri contenente i parametri utilizzati dal metodo specificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contenente i parametri utilizzati dal metodo specificato dalla proprietà <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I nomi e tipi dei parametri contenuti nella <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> insieme deve corrispondere ai nomi e tipi dei parametri in di <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> firma del metodo. I nomi dei parametri sono interessati i <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> proprietà e sono distinzione maiuscole/minuscole. I parametri nella raccolta dipendono dai dati nel controllo associato a dati, i parametri specificati in modo dichiarativo e i parametri che vengono aggiunti a livello di codice. Per altre informazioni, vedere la sezione "Parametro unione" in <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> e [utilizzo dei parametri con il controllo ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> proprietà recupera il <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> proprietà contenuta la <xref:System.Web.UI.WebControls.ObjectDataSourceView> oggetto che è associato il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo.  
  
 Per ulteriori informazioni sull'unione di parametri, durata dell'oggetto e la risoluzione del metodo, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  È consigliabile convalidare qualsiasi valore del parametro che riceve dal client. Il runtime sostituisce il valore del parametro nel <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> proprietà.  
  
   
  
## Examples  
 In questa sezione contiene due esempi di codice. Nel primo esempio di codice viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.DropDownList> (controllo), <xref:System.Web.UI.WebControls.TextBox> controlli e numerosi <xref:System.Web.UI.WebControls.ObjectDataSource> oggetti per aggiornare i dati. Nel secondo esempio di codice il `EmployeeLogic` classe che viene utilizzato nel primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.DropDownList> (controllo), <xref:System.Web.UI.WebControls.TextBox> controlli e numerosi <xref:System.Web.UI.WebControls.ObjectDataSource> controlli per aggiornare i dati. Il <xref:System.Web.UI.WebControls.DropDownList> Visualizza il nome di un dipendente di Northwind, mentre il <xref:System.Web.UI.WebControls.TextBox> controlli vengono usati per immettere e aggiornare le informazioni dell'indirizzo. Poiché il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> raccolta contiene un <xref:System.Web.UI.WebControls.ControlParameter> associato al valore selezionato del <xref:System.Web.UI.WebControls.DropDownList>, il pulsante che genera il <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operazione viene abilitata solo dopo la selezione di un dipendente.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 Nell'esempio di codice riportato di seguito viene illustrato il `EmployeeLogic` classe utilizzata nell'esempio di codice precedente.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima di un'operazione <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> evento per eseguire un'inizializzazione aggiuntiva specifica per l'applicazione, per convalidare i valori dei parametri o per modificare i valori dei parametri prima di <xref:System.Web.UI.WebControls.ObjectDataSource> controllo esegue l'operazione di aggiornamento. I parametri sono disponibili come un <xref:System.Collections.IDictionary> insieme a cui accede il <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> oggetto.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 I tre esempi seguenti mostrano una pagina Web, una classe di pagina code-behind e una classe di accesso ai dati che consentire agli utenti di recuperare e aggiornare i record nella tabella Employees del database Northwind.  
  
 Nel primo esempio viene illustrata una pagina Web contenente due <xref:System.Web.UI.WebControls.ObjectDataSource> controlli, una <xref:System.Web.UI.WebControls.DropDownList> (controllo) e un <xref:System.Web.UI.WebControls.DetailsView> controllo. Il primo <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e il <xref:System.Web.UI.WebControls.DropDownList> controllo vengono utilizzati per recuperare e visualizzare i nomi dei dipendenti dal database. Il secondo <xref:System.Web.UI.WebControls.ObjectDataSource> controllo e il <xref:System.Web.UI.WebControls.DetailsView> controllo vengono utilizzati per recuperare, visualizzare e modificare i dati del record employee selezionato dall'utente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Nel secondo esempio vengono illustrati i gestori per il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> e <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventi. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> gestore dell'evento serializza l'oggetto che contiene i dati recuperati dalla tabella Employee. L'oggetto serializzato viene archiviato nello stato di visualizzazione. Il <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> gestore dell'evento deserializza l'oggetto nello stato di visualizzazione che contiene i dati originali del record di dati in fase di aggiornamento. L'oggetto che contiene i dati originali viene passato come parametro al metodo Update. I dati originali devono essere passati al database in modo che può essere utilizzato per verificare se i dati sono stati modificati da un altro processo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 Nel terzo esempio viene illustrata la classe di accesso ai dati che interagisce con il database Northwind. La classe Usa LINQ per eseguire query e aggiornare la tabella Employees. L'esempio richiede una classe LINQ to SQL che rappresenta il database Northwind e la tabella di dipendenti. Per altre informazioni, vedere [procedura: creare classi LINQ to SQL in un progetto Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>