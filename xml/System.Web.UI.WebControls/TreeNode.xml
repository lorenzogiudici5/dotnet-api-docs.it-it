<Type Name="TreeNode" FullName="System.Web.UI.WebControls.TreeNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4c8ed5cf2e157b21cbb79ea8e00e4a365559249" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36379114" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeNode : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeNode extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    interface IStateManager&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ChildNodes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un nodo nel controllo <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeView> controllo è costituito da nodi. Ogni voce nella struttura viene definito un nodo e viene rappresentato da un <xref:System.Web.UI.WebControls.TreeNode> oggetto. Un nodo che contiene altri nodi viene chiamato un *nodo padre*. Un nodo in cui è contenuto in un altro nodo viene chiamato un *nodo figlio*. Un nodo che nessun nodo figlio viene chiamato un *nodo foglia*. Un nodo che non è contenuto in qualsiasi altro nodo, ma è il predecessore di tutti gli altri nodi è il *nodo radice*. Un nodo può essere sia un elemento padre e un elemento figlio, ma radice, padre e nodi foglia si escludono a vicenda. Diverse proprietà funzionali e di visual dei nodi sono determinate da indica se un nodo è un *radice*, *padre*, o *foglia* nodo.  
  
 Anche se una struttura ad albero tipico con un solo nodo radice, il <xref:System.Web.UI.WebControls.TreeView> controllo consente di aggiungere più nodi radice alla struttura ad albero. Ciò è utile quando si desidera visualizzare elenchi di elementi senza visualizzare un singolo nodo radice, come in un elenco di categorie di prodotti.  
  
 Un nodo memorizza i dati principalmente in due proprietà, il <xref:System.Web.UI.WebControls.TreeNode.Text%2A> proprietà e il <xref:System.Web.UI.WebControls.TreeNode.Value%2A> proprietà. Il valore della <xref:System.Web.UI.WebControls.TreeNode.Text%2A> proprietà viene visualizzata nella <xref:System.Web.UI.WebControls.TreeView> (controllo) e il <xref:System.Web.UI.WebControls.TreeNode.Value%2A> proprietà viene utilizzata per archiviare eventuali dati aggiuntivi relativi al nodo, ad esempio i dati utilizzati per la gestione degli eventi di postback. Un nodo memorizza inoltre il percorso dal nodo al nodo radice nel <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> proprietà. Il <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> proprietà indica la posizione del nodo relativo al nodo radice.  
  
> [!NOTE]
>  Tutti i nodi dello stesso livello devono essere un valore univoco per il <xref:System.Web.UI.WebControls.TreeNode.Value%2A> proprietà; la <xref:System.Web.UI.WebControls.TreeView> controllo non distingue tra nodi diversi dello stesso livello che hanno lo stesso valore. In questo scenario, se l'utente fa clic su un nodo con un valore duplicato, il nodo che viene visualizzata prima il <xref:System.Web.UI.WebControls.TreeView> controllo è selezionato.  
  
 Oggetto <xref:System.Web.UI.WebControls.TreeNode> oggetto è costituito i seguenti quattro elementi dell'interfaccia utente (UI), che possono essere personalizzati o nascosti:  
  
-   Espansione nodo indicatore icona utilizzata per indicare se il nodo è espanso, compresso o non espandibile.  
  
-   Una casella di controllo facoltativa associata al nodo.  
  
-   Un'immagine di nodo facoltativo.  
  
-   Il testo del nodo.  
  
 È possibile specificare un'immagine personalizzata per gli indicatori di nodi non espandibili espandibili e comprimibili impostando il <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> delle proprietà del <xref:System.Web.UI.WebControls.TreeView> classe. Icone dell'indicatore di nodo espansione possono anche essere nascoste interamente impostando il <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> proprietà del <xref:System.Web.UI.WebControls.TreeView> classe per `false`.  
  
 Per visualizzare una casella di controllo accanto a un nodo, impostare il <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> proprietà del <xref:System.Web.UI.WebControls.TreeView> classe. Quando il <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> proprietà è impostata su un valore diverso da `TreeNodeType.Node`, vengono visualizzate caselle di controllo accanto a tipo di nodo specificato. È possibile ignorare la casella di controllo di un singolo nodo in modo selettivo impostando il nodo <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> proprietà. Quando viene visualizzata una casella di controllo, utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> proprietà per determinare se la casella di controllo è selezionata.  
  
 È possibile visualizzare un'immagine in un nodo impostando il <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> proprietà. Questa immagine viene visualizzata accanto al testo del nodo.  
  
 Il testo di un nodo nel <xref:System.Web.UI.WebControls.TreeView> controllo può essere in uno dei due modalità: modalità di selezione o in modalità di navigazione. Per impostazione predefinita, un nodo è in modalità di selezione. Per inserire un nodo nella modalità di navigazione, impostare il nodo <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> proprietà su un valore diverso da una stringa vuota (""). Per inserire un nodo nella modalità di selezione, impostare il nodo <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> proprietà su una stringa vuota.  
  
> [!NOTE]
>  Alcuni browser Internet hanno una limitazione che può influenzare le prestazioni del <xref:System.Web.UI.WebControls.TreeView> controllo. Ad esempio, Microsoft Internet Explorer 6.0 ha un limite di caratteri 2067 che esegue il postback. Se il numero di caratteri in un URL di un nodo è maggiore di tale numero, espandendo tale nodo avranno esito negativo e viene generata alcuna eccezione.  
  
 Per impostazione predefinita, fare clic su un nodo che si trova in modalità di selezione il postback della pagina al server e genera il <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> evento. È possibile specificare facoltativamente un altro evento per generare impostando il nodo `SelectAction` proprietà. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>. Per determinare quale sia il nodo è stato fatto clic in modalità di selezione, usare il <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> proprietà del <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 Quando un nodo è in modalità di navigazione, tutti gli eventi di selezione sono disabilitati per tale nodo. Facendo clic sul nodo in modalità di navigazione indirizza l'utente all'URL specificato. È possibile impostare facoltativamente il <xref:System.Web.UI.WebControls.TreeNode.Target%2A> proprietà per specificare la finestra o frame in cui si desidera visualizzare il contenuto collegato.  
  
 Il <xref:System.Web.UI.WebControls.TreeNode> classe contiene diverse proprietà che consentono di archiviare lo stato del nodo. Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> proprietà per determinare se è selezionato un nodo. Per determinare se il nodo viene espanso, utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà. Il <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> proprietà viene utilizzata per determinare se un nodo è associato a dati. Quando un nodo è associato a dati, è possibile accedere all'elemento dati sottostante utilizzando il <xref:System.Web.UI.WebControls.TreeNode.DataItem%2A> proprietà.  
  
 La classe fornisce diverse proprietà che consentono di determinare la posizione di un nodo rispetto al altri nodi nell'albero. Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> proprietà per determinare la profondità del nodo. È possibile ottenere l'elenco delimitato di nodi dal nodo corrente al nodo radice utilizzando il <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> proprietà. Per determinare padre del nodo il nodo, usare il <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> proprietà. I nodi figlio sono accessibili tramite il <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> insieme.  
  
 In alcuni casi, è poco pratico in modo statico predefinire la struttura ad albero a causa delle dimensioni dei dati o contenuto personalizzato che dipende dall'input utente. Per questo motivo, il <xref:System.Web.UI.WebControls.TreeView> controllo supporta l'inserimento di nodi dinamica. Un nodo può essere compilato in fase di esecuzione quando viene espanso. Si noti che è possibile ottenere un comportamento imprevisto se si utilizzano nodi creati in modo asincrono. Ad esempio, se si usa un thread di lavoro in background per compilare i nodi in modo asincrono, l'albero del nodo potrebbe non popolato immediatamente se il controllo procede con il resto del ciclo di vita della pagina. Durante il postback, la creazione ritardata dei nodi può causare problemi quando lo stato di visualizzazione del controllo è stato caricato, ma la struttura del nodo non è completamente popolata.  Per ulteriori informazioni sulla compilazione dei nodi dinamica, vedere il <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> proprietà.  
  
 Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.TreeNode>, vedere il <xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A> costruttore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare i frame per l'esempio di codice successiva.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato come utilizzare la sintassi dichiarativa per creare <xref:System.Web.UI.WebControls.TreeNode> gli oggetti di <xref:System.Web.UI.WebControls.TreeView> controllo. Questo esempio viene utilizzato all'interno del set di frame dell'esempio precedente per visualizzare una tabella di contenuti.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNode" /> senza testo o un valore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.TreeNode> classe utilizzando i valori predefiniti.  
  
> [!NOTE]
>  Quando questo costruttore viene utilizzato, tutte le proprietà di <xref:System.Web.UI.WebControls.TreeNode> oggetto sono impostate sui valori predefiniti. Assicurarsi di impostare le proprietà, se necessario, dopo aver creato l'oggetto.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come utilizzare questo costruttore per aggiungere in modo dinamico un nodo per il <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo visualizzato nel controllo <see cref="T:System.Web.UI.WebControls.TreeView" /> per il nodo.</param>
        <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNode" /> con il testo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.TreeNode> classe utilizzando il testo specificato dal `text` parametro.  
  
 Nella tabella seguente mostra il valore di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Valore del parametro `text`.|  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come utilizzare questo costruttore per aggiungere in modo dinamico un nodo per il <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo visualizzato nel controllo <see cref="T:System.Web.UI.WebControls.TreeView" /> per il nodo.</param>
        <param name="value">Dati aggiuntivi associati al nodo, ad esempio i dati utilizzati per la gestione degli eventi di postback.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNode" /> con il testo e il valore specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza della <xref:System.Web.UI.WebControls.TreeNode> classe utilizzando il testo e il valore specificato per il `text` e `value` parametri, rispettivamente.  
  
 La tabella seguente illustra i valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Valore del parametro `text`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Valore del parametro `value`.|  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come utilizzare questo costruttore per aggiungere in modo dinamico un nodo per il <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeView owner, bool isRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (owner As TreeView, isRoot As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; TreeNode(System::Web::UI::WebControls::TreeView ^ owner, bool isRoot);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : System.Web.UI.WebControls.TreeView * bool -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (owner, isRoot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeView" />
        <Parameter Name="isRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="owner">Oggetto <see cref="T:System.Web.UI.WebControls.TreeView" /> che conterrà il nuovo oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="isRoot">
          <see langword="true" /> se <see cref="T:System.Web.UI.WebControls.TreeNode" /> è un nodo radice; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNode" /> utilizzando il proprietario specificato.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo visualizzato nel controllo <see cref="T:System.Web.UI.WebControls.TreeView" /> per il nodo.</param>
        <param name="value">Dati aggiuntivi associati al nodo, ad esempio i dati utilizzati per la gestione degli eventi di postback.</param>
        <param name="imageUrl">URL di un'immagine visualizzata accanto al nodo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNode" /> con il testo, il valore e l'URL dell'immagine specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza della <xref:System.Web.UI.WebControls.TreeNode> classe utilizzando il testo, il valore e l'immagine di URL specificato per il `text`, `value`, e `imageUrl` parametri, rispettivamente.  
  
 La tabella seguente illustra i valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Valore del parametro `text`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Valore del parametro `value`.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Valore del parametro `imageUrl`.|  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come utilizzare questo costruttore per aggiungere in modo dinamico un nodo per il <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String, target As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl, System::String ^ target);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl, navigateUrl, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo visualizzato nel controllo <see cref="T:System.Web.UI.WebControls.TreeView" /> per il nodo.</param>
        <param name="value">Dati aggiuntivi associati al nodo, ad esempio i dati utilizzati per la gestione degli eventi di postback.</param>
        <param name="imageUrl">URL di un'immagine visualizzata accanto al nodo.</param>
        <param name="navigateUrl">L'URL a cui eseguire il collegamento quando si fa clic sul nodo.</param>
        <param name="target">La finestra o il frame di destinazione in cui visualizzare il contenuto della pagina Web cui collegato quando viene fatto clic sul nodo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNode" /> utilizzando il testo, il valore, l'URL dell'immagine, l'URL di navigazione e la destinazione specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza della <xref:System.Web.UI.WebControls.TreeNode> classe con il testo, valore, immagine e l'URL e visualizzare destinazione specificata per il `text`, `value`, `imageUrl`, `navigateUrl`, e `target` i parametri, rispettivamente.  
  
 La tabella seguente illustra i valori di proprietà iniziali per un'istanza di <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Valore del parametro `text`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Valore del parametro `value`.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Valore del parametro `imageUrl`.|  
|<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>|Valore del parametro `navigateUrl`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Target%2A>|Valore del parametro `target`.|  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come utilizzare questo costruttore per aggiungere in modo dinamico un nodo per il <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se è selezionata la casella di controllo del nodo.</summary>
        <value>
          <see langword="true" /> se è selezionata la casella di controllo del nodo; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un nodo viene visualizzata una casella di controllo, il <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> proprietà viene comunemente utilizzata per specificare se la casella di controllo è selezionata. Quando è selezionata la casella di controllo associata a un nodo, il nodo viene aggiunto automaticamente ai <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> insieme il <xref:System.Web.UI.WebControls.TreeView> controllo. Il <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> proprietà può essere utilizzata anche per determinare se la casella di controllo è selezionata.  
  
> [!NOTE]
>  È più comune per determinare quali nodi il <xref:System.Web.UI.WebControls.TreeView> controllo disporre le caselle di controllo selezionate scorrendo la <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> insieme.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> proprietà per specificare se è selezionata la casella di controllo del nodo. Inizializza le caselle di controllo dei nodi con una profondità di uno a uno stato selezionato. Per questo esempio funzioni correttamente, è necessario copiare i dati XML di esempio seguito da un file denominato newsgroup.  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Il codice seguente è dati XML di esempio per l'esempio precedente.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ ChildNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> che contiene i nodi figlio di primo livello del nodo corrente.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> che contiene i nodi figlio di primo livello del nodo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> proprietà da ottenere un <xref:System.Web.UI.WebControls.TreeNodeCollection> raccolta che contiene i nodi figlio di primo livello del nodo corrente. Questo insieme viene comunemente utilizzato per scorrere tutti i nodi figlio di primo livello o a un nodo figlio di primo livello specifici del nodo corrente.  
  
 Il <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> proprietà può inoltre essere utilizzata per gestire a livello di codice i nodi figlio di primo livello nel nodo corrente. È possibile aggiungere, inserire, rimuovere e recuperare <xref:System.Web.UI.WebControls.TreeNode> oggetti dalla raccolta. Eventuali aggiornamenti alla raccolta rifletterà automaticamente nel <xref:System.Web.UI.WebControls.TreeView> controllare al successivo aggiornamento della pagina.  
  
 Per accedere ai nodi figlio verso il basso l'albero, utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> proprietà del nodo figlio di livello successivo per spostarsi verso il basso nei livelli di nodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> proprietà per attraversare l'albero.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.TreeNode" /> con le proprietà dell'istanza <see cref="T:System.Web.UI.WebControls.TreeNode" /> corrente.</summary>
        <returns>Nuova istanza di <see cref="T:System.Web.UI.WebControls.TreeNode" /> con le proprietà dell'istanza <see cref="T:System.Web.UI.WebControls.TreeNode" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di un metodo helper che supporta il <xref:System.ICloneable> interfaccia implementata da <xref:System.Web.UI.WebControls.TreeNode>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ICloneable" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comprime il nodo della struttura ad albero corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> metodo per comprimere il nodo corrente.  
  
> [!NOTE]
>  In alternativa, è inoltre possibile impostare il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà `false`.  
  
 Per comprimere il nodo corrente e tutti i relativi nodi figlio, provare a utilizzare il <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> metodo.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> consentirà di comprimere tutti i nodi l'intero albero.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> metodo a livello di codice comprimere un nodo nel <xref:System.Web.UI.WebControls.TreeView> controllo. Per questo esempio funzioni correttamente, è necessario copiare i dati XML di esempio seguito da un file denominato Book.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Il codice seguente è dati XML di esempio per l'esempio precedente.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeNode.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comprime il nodo corrente e tutti i relativi nodi figlio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> metodo per comprimere il nodo corrente e tutti i relativi nodi figlio.  
  
> [!NOTE]
>  In alternativa, è inoltre possibile impostare il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà del nodo corrente e ciascuno dei relativi nodi figlio a `false`.  
  
 Per comprimere solo il nodo corrente, provare a utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> metodo.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> consentirà di comprimere tutti i nodi l'intero albero.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> metodo a livello di codice comprimere un nodo e tutti i relativi nodi figlio nel <xref:System.Web.UI.WebControls.TreeView> controllo. Per questo esempio funzioni correttamente, è necessario copiare i dati XML di esempio seguito da un file denominato Book.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Il codice seguente è dati XML di esempio per l'esempio precedente.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public bool DataBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DataBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBound : bool" Usage="System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il nodo è stato creato tramite l'associazione dati.</summary>
        <value>
          <see langword="true" /> se il nodo è stata creato tramite associazione dati; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> proprietà viene utilizzata per determinare a livello di codice se il nodo è stato creato tramite l'associazione dati. Poiché il contenuto dinamico e statico non può essere combinato nello stesso nodo, questa proprietà viene comunemente utilizzata durante il popolamento di un <xref:System.Web.UI.WebControls.TreeView> controllo in modo dinamico per determinare se il nodo contiene contenuto statico.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'elemento di dati associato al controllo.</summary>
        <value>Oggetto <see cref="T:System.Object" /> che rappresenta l'elemento di dati associato al controllo. Il valore predefinito è <see langword="null" />, a indicare che il nodo non è associato ad alcun elemento di dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.UI.WebControls.TreeView> controllo è associato a un'origine dati, ad esempio un <xref:System.Web.UI.WebControls.XmlDataSource> dell'oggetto, questa proprietà è impostata per l'elemento di dati che è associato a questo nodo specifico. Questa proprietà viene comunemente utilizzata per accedere ai valori dell'elemento di dati.  
  
> [!NOTE]
>  Questa proprietà è disponibile solo dopo che si è verificato l'associazione dati.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataPath">
      <MemberSignature Language="C#" Value="public string DataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataPath : string" Usage="System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il percorso ai dati associati al nodo.</summary>
        <value>Percorso ai dati associati al nodo. Questo valore proviene dal controllo origine dati gerarchico a cui è associato il controllo <see cref="T:System.Web.UI.WebControls.TreeView" />. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeNode.DataPath%2A> valore della proprietà viene comunemente utilizzato quando si chiama il <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=nameWithType> metodo per fornire il percorso per i dati associati al nodo corrente. Questo metodo restituisce quindi un <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=nameWithType> oggetto che contiene i dati nel percorso specificato.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView(System.String)" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la profondità del nodo.</summary>
        <value>Profondità del nodo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> proprietà per determinare la profondità del nodo. La profondità rappresenta il numero di livelli della gerarchia tra un nodo e il nodo radice. Ad esempio, un nodo radice ha una profondità pari a zero. Un elemento figlio del nodo radice ha una profondità di uno e così via.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> proprietà per determinare la profondità di un nodo. Inizializza tutti i nodi con una profondità di uno a uno stato selezionato. Per questo esempio funzioni correttamente, è necessario copiare i dati XML di esempio seguito da un file denominato newsgroup.  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Il codice seguente è dati XML di esempio per l'esempio precedente.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Espande il nodo della struttura ad albero corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> metodo per espandere il nodo corrente.  
  
> [!NOTE]
>  In alternativa, è inoltre possibile impostare il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà `true`.  
  
 Per espandere il nodo corrente e tutti i relativi nodi figlio, provare a utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> metodo.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> espanderà tutti i nodi l'intero albero.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> metodo a livello di codice espandere un nodo nel <xref:System.Web.UI.WebControls.TreeView> controllo. Per questo esempio funzioni correttamente, è necessario copiare i dati XML di esempio seguito da un file denominato Book.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Il codice seguente è dati XML di esempio per l'esempio precedente.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Espande il nodo corrente e tutti i relativi nodi figlio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> metodo per espandere il nodo corrente e tutti i relativi nodi figlio.  
  
> [!NOTE]
>  In alternativa, è inoltre possibile impostare il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà del nodo corrente e ciascuno dei relativi nodi figlio a `true`.  
  
 Per espandere solo il nodo corrente, provare a utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> metodo.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> espanderà tutti i nodi l'intero albero.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> metodo a livello di codice espandere un nodo e tutti i relativi nodi figlio nel <xref:System.Web.UI.WebControls.TreeView> controllo. Per questo esempio funzioni correttamente, è necessario copiare i dati XML di esempio seguito da un file denominato Book.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Il codice seguente è dati XML di esempio per l'esempio precedente.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Expanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Expanded" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Property Expanded As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Expanded { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Expanded : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il nodo è espanso.</summary>
        <value>
          <see langword="true" /> se il nodo è espanso, <see langword="false" /> se il nodo non è espanso o <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà per specificare o per determinare se il nodo è espanso.  
  
 È possibile espandere e comprimere un nodo chiamando il <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> e <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> metodi, rispettivamente. È anche possibile espandere e comprimere un nodo e tutti i relativi nodi figlio chiamando il <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> e <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> metodi, rispettivamente.  
  
 Poiché il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> è una proprietà di tre stati, il frammento di codice c# seguente viene generato un errore di compilazione:  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 VB.Net esegue il cast in modo implicito il `Boolean` valore per un `NullableBoolean`, c# non lo è. Pertanto, è buona norma controllare in modo esplicito lo stato della proprietà. Ad esempio, gli esempi di codice seguente in Visual Basic e c# testare in modo esplicito il valore di <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà.  
  
 L'esempio di codice Visual Basic seguente controlla in modo esplicito il valore della <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà. Questo esempio viene verificato se il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> è impostata su `True`; pertanto `Nothing` e `False` rientrano il `If` istruzione.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 Questo esempio di codice c# testato in modo esplicito il valore di <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà. Questo esempio viene verificato se il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> è impostata su `True`; pertanto `Null` e `False` rientrano il `If` istruzione.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà a livello di codice espandere un nodo. Inizializza tutti i nodi con una profondità di uno a uno stato espanso. Si noti che quando viene espanso il nodo radice, nodi figlio sono già espanso. Per questo esempio funzioni correttamente, è necessario copiare i dati XML di esempio seguito da un file denominato Book.  
  
 [!code-aspx-csharp[TreeNodeExpanded#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpanded/CS/treenodeexpandedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpanded#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpanded/VB/treenodeexpandedvb.aspx#1)]  
  
 Il codice seguente è dati XML di esempio per l'esempio precedente.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ImageToolTip">
      <MemberSignature Language="C#" Value="public string ImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo della descrizione comandi per l'immagine visualizzata accanto a un nodo.</summary>
        <value>Testo della descrizione comandi per l'immagine visualizzata accanto a un nodo. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene visualizzata un'immagine accanto a un nodo (quando il <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> viene impostata), utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> proprietà per specificare la descrizione comando visualizzata quando l'utente posiziona il puntatore del mouse sull'immagine. Il testo specificato fornisce dispositivi di assistive technology con una descrizione dell'immagine che può essere utilizzato per rendere più facilmente accessibile del controllo.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> proprietà per specificare il testo della descrizione comando per un'immagine visualizzata accanto a un nodo. Per questo esempio funzioni correttamente, è necessario fornire le proprie immagini.  
  
 [!code-aspx-csharp[TreeNodeImageToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeImageToolTip/CS/treenodeimagetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeImageToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeImageToolTip/VB/treenodeimagetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'URL di un'immagine visualizzata accanto al nodo.</summary>
        <value>URL di un'immagine personalizzata visualizzata accanto al nodo. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> proprietà per specificare un'immagine personalizzata per il nodo corrente nel <xref:System.Web.UI.WebControls.TreeView> controllo. Questa immagine viene visualizzata accanto al nodo e può essere in qualsiasi formato di file (con estensione jpg, GIF, bmp e così via), purché il browser del client supporta il formato di.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> proprietà per specificare un'immagine personalizzata per un nodo. Per questo esempio funzioni correttamente, è necessario copiare i dati XML di esempio seguito da un file denominato Book.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 Il codice seguente è dati XML di esempio per l'esempio precedente.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il nodo salva le modifiche apportate al relativo stato di visualizzazione.</summary>
        <value>
          <see langword="true" /> se il controllo è contrassegnato per il salvataggio dello stato; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="treeNode.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Oggetto <see cref="T:System.Object" /> che rappresenta lo stato del nodo.</param>
        <summary>Carica lo stato di visualizzazione del nodo salvato in precedenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.LoadViewState%2A> un metodo helper viene utilizzato per caricare lo stato di visualizzazione precedentemente salvato del nodo  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il riferimento all'URL a cui passare quando si fa clic sul nodo.</summary>
        <value>L'URL a cui spostarsi quando si fa clic sul nodo. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il testo di un nodo può essere in uno dei due modalità: modalità di selezione o in modalità di navigazione. Per impostazione predefinita, un nodo è in modalità di selezione. Per inserire un nodo nella modalità di navigazione, impostare il nodo <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> proprietà su un valore diverso da una stringa vuota.  
  
 Quando un nodo è in modalità di navigazione, tutti gli eventi di selezione sono disabilitati per tale nodo. Facendo clic sul nodo in modalità di navigazione, l'utente collegato all'URL specificato. È possibile impostare facoltativamente il <xref:System.Web.UI.WebControls.TreeNode.Target%2A> proprietà per specificare la finestra o frame in cui si desidera visualizzare il contenuto collegato.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare i frame per l'esempio di codice successiva.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> proprietà per specificare l'URL a cui collegarsi quando viene selezionato il nodo. Questo esempio viene utilizzato all'interno del set di frame dell'esempio precedente per visualizzare una tabella di contenuti.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ Parent { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nodo padre del nodo corrente.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> che rappresenta il nodo padre del nodo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> proprietà restituisce un <xref:System.Web.UI.WebControls.TreeNode> oggetto che rappresenta il nodo padre del nodo corrente. Viene usata in genere per determinare il nodo padre o per accedere alle proprietà del nodo padre.  
  
> [!NOTE]
>  Un nodo radice non dispone di un nodo padre.  
  
 Per accedere ai nodi figlio del nodo corrente, utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> proprietà a cui accedere il <xref:System.Web.UI.WebControls.TreeNode.Text%2A> proprietà del nodo padre del nodo corrente.  
  
 [!code-aspx-csharp[TreeNodeParent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeParent/CS/treenodeparentcs.aspx#1)]
 [!code-aspx-vb[TreeNodeParent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeParent/VB/treenodeparentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="PopulateOnDemand">
      <MemberSignature Language="C#" Value="public bool PopulateOnDemand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateOnDemand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateOnDemand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateOnDemand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateOnDemand : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il nodo è compilato in modo dinamico.</summary>
        <value>
          <see langword="true" /> per compilare il nodo in modo dinamico; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In alcuni casi, è poco pratico in modo statico predefinire la struttura ad albero a causa delle dimensioni dei dati o contenuto personalizzato che dipende dall'input utente. Per questo motivo, il <xref:System.Web.UI.WebControls.TreeView> controllo supporta l'inserimento di nodi dinamica. Quando un nodo <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> è impostata su `true`, il nodo viene compilato in fase di esecuzione tramite un evento di postback quando viene espanso il nodo. Per compilare un nodo in modo dinamico, è necessario definire un metodo di gestione degli eventi che compila il nodo per il <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> evento.  
  
 Browser supportati possono inoltre sfruttare nodi sul lato client. Se abilitata, consente la <xref:System.Web.UI.WebControls.TreeView> controllo compilare in modo dinamico un nodo nel client quando il nodo viene espanso, evitando la necessità di eseguire il postback al server. Per ulteriori informazioni sulla compilazione del nodo lato client, vedere <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> proprietà per indicare che un nodo è stato popolato in modo dinamico.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPostText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPostText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPostText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPostText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">L'oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che rappresenta il flusso di output usato per scrivere contenuto in una pagina Web.</param>
        <summary>Consente agli sviluppatori di controlli di aggiungere ulteriore rendering al nodo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere sottoposto a override dagli sviluppatori di controlli per aggiungere ulteriore rendering dopo il nodo viene eseguito il rendering.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderPreText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPreText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPreText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPreText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPreText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">L'oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che rappresenta il flusso di output usato per scrivere contenuto in una pagina Web.</param>
        <summary>Consente agli sviluppatori di controlli di aggiungere ulteriore rendering al nodo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere sottoposto a override dagli sviluppatori di controlli per aggiungere ulteriore rendering prima del rendering del nodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="treeNode.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva lo stato di visualizzazione corrente del nodo.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> che contiene lo stato salvato del nodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeNode.SaveViewState%2A> è un metodo di supporto chiamato dal nodo per il salvataggio dello stato.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="treeNode.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Seleziona il nodo corrente nel controllo <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Select%2A> per selezionare il nodo corrente nel metodo il <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 **Nota** in alternativa, è anche possibile selezionare il nodo corrente impostando la <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> proprietà `true`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Select%2A> metodo per selezionare un nodo nel <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Selected" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SelectAction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeSelectAction SelectAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectAction As TreeNodeSelectAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeSelectAction SelectAction { System::Web::UI::WebControls::TreeNodeSelectAction get(); void set(System::Web::UI::WebControls::TreeNodeSelectAction value); };" />
      <MemberSignature Language="F#" Value="member this.SelectAction : System.Web.UI.WebControls.TreeNodeSelectAction with get, set" Usage="System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeSelectAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'evento o eventi da generare quando viene selezionato un nodo.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />. Il valore predefinito è <see langword="TreeNodeSelectAction.Select" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il testo di un nodo nel <xref:System.Web.UI.WebControls.TreeView> controllo può essere in uno dei due modalità: modalità di selezione o in modalità di navigazione. Per impostazione predefinita, un nodo è in modalità di selezione. Per inserire un nodo nella modalità di navigazione, impostare il nodo <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> proprietà su un valore diverso da una stringa vuota (""). Per inserire un nodo nella modalità di selezione, impostare il nodo <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> proprietà su una stringa vuota.  
  
> [!NOTE]
>  Quando un nodo è in modalità di navigazione, gli eventi di selezione sono disabilitati per tale nodo. Fare clic su un nodo verrà indirizzato all'utente l'URL specificato, piuttosto che la pagina al server di registrazione e generazione di un evento.  
  
 Quando un nodo è in modalità di selezione, usare il <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> proprietà per specificare gli eventi vengono generati quando si seleziona un nodo. Per determinare quali nodi dispongono di caselle di controllo è selezionata, scorrere i nodi del  insieme.  
  
|È possibile eseguire l'override di  impostazione impostando il  proprietà per ogni nodo.|Descrizione|  
|----------------------|-----------------|  
|`TreeNodeSelectAction.Expand`|Se è necessario fornire il supporto solo a selezione singola, è consigliabile utilizzare il  proprietà. Genera il <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> evento o <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> evento come appropriato.|  
|`TreeNodeSelectAction.None`|Non genera eventi quando si seleziona un nodo.|  
|`TreeNodeSelectAction.Select`|Genera l'evento <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> quando viene selezionato un nodo.|  
|`TreeNodeSelectAction.SelectExpand`|Genera sia la <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> e il <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> eventi quando si seleziona un nodo. Il valore di combinazione bit per bit è compreso nell'intervallo di  enumerazione.|  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> proprietà non è stato eseguito il rendering per un nodo con il relativo <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> impostata su `TreeNodeSelectAction.None`.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> proprietà per specificare l'evento viene generato quando viene selezionato un nodo.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il nodo è selezionato.</summary>
        <value>
          <see langword="true" /> se il nodo è selezionato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> proprietà per specificare o per determinare se è selezionato il nodo.  
  
> [!NOTE]
>  Anche se la proprietà può essere utilizzata per determinare se è selezionato il nodo, è più comune utilizzare il <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> proprietà.  
  
 Essere selezionato solo un nodo in un momento il <xref:System.Web.UI.WebControls.TreeView> controllare quando si utilizza questa proprietà.  
  
> [!NOTE]
>  In alternativa, è anche possibile selezionare il nodo utilizzando il <xref:System.Web.UI.WebControls.TreeNode.Select%2A> metodo.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> proprietà per selezionare un nodo nel <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Select" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBox">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowCheckBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ShowCheckBox" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBox As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; ShowCheckBox { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBox : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se viene visualizzata una casella di controllo accanto al nodo.</summary>
        <value>
          <see langword="true" /> per visualizzare la casella di controllo; in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeView> controllo consente di visualizzare una casella di controllo accanto a un'immagine del nodo. Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> proprietà per visualizzare o nascondere la casella di controllo per il nodo corrente.  
  
 Anche se il <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> proprietà può essere utilizzata per visualizzare le caselle di controllo, è più comune utilizzare il <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> proprietà del <xref:System.Web.UI.WebControls.TreeView> controllo. Il <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> proprietà, tuttavia, influisce su ogni tipo di nodo specificato dalla proprietà; pertanto, il <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A?displayProperty=nameWithType> proprietà viene spesso utilizzata per eseguire l'override dell'impostazione di un singolo nodo.  
  
 Poiché il <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> è una proprietà di tre stati, il frammento di codice c# seguente viene generato un errore di compilazione:  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 VB.Net esegue il cast in modo implicito il `Boolean` valore per un `NullableBoolean`, c# non lo è. Pertanto, è buona norma controllare in modo esplicito lo stato della proprietà. Ad esempio, gli esempi di codice seguente in Visual Basic e c# testare in modo esplicito il valore di <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà.  
  
 L'esempio di codice Visual Basic seguente controlla in modo esplicito il valore della <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà. Questo esempio viene verificato se il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> è impostata su `True`; pertanto `Nothing` e `False` rientrano il `If` istruzione.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 Questo esempio di codice c# testato in modo esplicito il valore di <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà. Questo esempio viene verificato se il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> è impostata su `True`; pertanto `Null` e `False` rientrano il `If` istruzione.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> proprietà per mostrare e nascondere la casella di controllo per un nodo a livello di codice il <xref:System.Web.UI.WebControls.TreeView> controllo. Per questo esempio funzioni correttamente, è necessario copiare i dati XML di esempio seguito da un file denominato Book.  
  
 [!code-aspx-csharp[TreeNodeShowCheckBox#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeShowCheckBox/CS/treenodeshowcheckboxcs.aspx#1)]
 [!code-aspx-vb[TreeNodeShowCheckBox#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeShowCheckBox/VB/treenodeshowcheckboxvb.aspx#1)]  
  
 Il codice seguente è dati XML di esempio per l'esempio precedente.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia dell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> che rappresenta una copia dell'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeNode.System%23ICloneable%23Clone%2A> metodo viene utilizzato il <xref:System.Web.UI.WebControls.TreeNode> classe per creare una copia di se stesso.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value>Un valore che indica se il nodo salva le modifiche apportate al relativo stato di visualizzazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.TreeNode> cast dell'istanza per il <xref:System.Web.UI.IStateManager> interfaccia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Oggetto <see cref="T:System.Object" /> che contiene i valori salvati dello stato di visualizzazione.</param>
        <summary>Carica lo stato di visualizzazione precedentemente salvato del nodo.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva le modifiche apportate allo stato di visualizzazione in un oggetto <see cref="T:System.Object" />.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> contenente le modifiche apportate allo stato di visualizzazione.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica all'oggetto <see cref="T:System.Web.UI.WebControls.TreeNode" /> di tenere traccia delle modifiche apportate allo stato di visualizzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo che questo metodo è stato chiamato su un controllo server, il <xref:System.Web.UI.Control.IsTrackingViewState%2A> restituisce proprietà `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la finestra o il frame di destinazione in cui visualizzare il contenuto della pagina Web associato a un nodo.</summary>
        <value>Finestra o frame di destinazione in cui visualizzare il contenuto della pagina Web collegata. I valori devono iniziare con una lettera compresa tra A e Z, senza distinzione tra maiuscole e minuscole, ad eccezione dei seguenti valori speciali che iniziano con un carattere di sottolineatura come illustrato nella tabella riportata di seguito.  
  
 <list type="table"><listheader><term> Valore di destinazione </term><description> descrizione </description></listheader><item><term><see langword="_blank" /></term><description> esegue il rendering di contenuto in una nuova finestra senza frame.  </description></item><item><term><see langword="_parent" /></term><description> Visualizza il contenuto nell'elemento padre immediato pagina con frame.  </description></item><item><term><see langword="_search" /></term><description> Visualizza il contenuto nel riquadro di ricerca.  </description></item><item><term><see langword="_self" /></term><description> Visualizza il contenuto nel frame con lo stato attivo.  </description></item><item><term><see langword="_top" /></term><description> Visualizza il contenuto nella finestra completo senza frame.  </description></item></list><block subset="none" type="note"><para> Consultare la documentazione del browser per determinare se il <see langword="_search" /> valore è supportato. Ad esempio, Microsoft Internet Explorer 5.0 e versioni successive supportano il <see langword="_search" /> valore di destinazione.  </para></block>  Il valore predefinito è una stringa vuota (""), che consente di aggiornare la finestra o frame attivo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Target%2A> proprietà per specificare la finestra o frame in cui si desidera visualizzare il contenuto Web collegato a un nodo quando viene fatto clic su tale nodo.  
  
> [!NOTE]
>  Impostazione di questa proprietà esegue l'override di <xref:System.Web.UI.WebControls.TreeView.Target%2A> proprietà del <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.TreeNode.Target%2A> proprietà esegue il rendering come un `target` attributo. Il `target` dell'attributo IsDefault sul `anchor` elementi non è consentito nella definizione del tipo di documento XHTML 1.1. Non impostare il <xref:System.Web.UI.WebControls.TreeNode.Target%2A> proprietà se l'output sottoposto a rendering per il <xref:System.Web.UI.WebControls.TreeNode> l'oggetto deve essere conforme a XHTML 1.1. Per altre informazioni, vedere [standard XHTML in Visual Studio e ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  Quando si creano pagine Web, è consigliabile evitare di utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Target%2A> proprietà a un'altra finestra. Per altre informazioni, vedere [NIB: ASP.NET accessibilità](http://msdn.microsoft.com/library/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae).  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare i frame per l'esempio successivo.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Target%2A> proprietà per specificare il frame in cui si desidera visualizzare il contenuto collegato. Questo esempio viene utilizzato all'interno del set di frame dell'esempio precedente per visualizzare una tabella di contenuti.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo visualizzato per il nodo nel controllo <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Testo visualizzato per il nodo nel controllo <see cref="T:System.Web.UI.WebControls.TreeView" />. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Text%2A> proprietà per specificare o per determinare il testo visualizzato per il nodo di <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
> [!NOTE]
>  Se il <xref:System.Web.UI.WebControls.TreeNode.Text%2A> proprietà contiene `null`, la `get` funzione di accesso restituisce il valore della <xref:System.Web.UI.WebControls.TreeNode.Value%2A> proprietà. Se il <xref:System.Web.UI.WebControls.TreeNode.Value%2A> proprietà, a sua volta, contiene `null`, <xref:System.String.Empty> viene restituito.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Text%2A> proprietà per specificare il testo per un nodo.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToggleExpandState">
      <MemberSignature Language="C#" Value="public void ToggleExpandState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToggleExpandState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ToggleExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleExpandState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleExpandState();" />
      <MemberSignature Language="F#" Value="member this.ToggleExpandState : unit -&gt; unit" Usage="treeNode.ToggleExpandState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Passa lo stato del nodo da espanso a compresso e viceversa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> metodo per alternare espanso e compresso per il nodo. Ad esempio, se il nodo è compresso, la chiamata di <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> metodo espande il nodo e viceversa.  
  
> [!NOTE]
>  In alternativa, è possibile impostare il <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> proprietà direttamente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> metodo per alternare espanso e compresso per il nodo radice di un <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 [!code-aspx-csharp[TreeNodeToggleExpandState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToggleExpandState/CS/treenodetoggleexpandstatecs.aspx#1)]
 [!code-aspx-vb[TreeNodeToggleExpandState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToggleExpandState/VB/treenodetoggleexpandstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo della descrizione comandi per il nodo.</summary>
        <value>Testo della descrizione comandi per il nodo. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> proprietà per specificare il testo della descrizione comando per il nodo. Quando si posiziona il puntatore del mouse sul nodo, viene visualizzato il testo della descrizione comando.  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> proprietà per fornire le descrizioni comandi per i nodi di <xref:System.Web.UI.WebControls.TreeView> controllo.  
  
 [!code-aspx-csharp[TreeNodeToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToolTip/CS/treenodetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToolTip/VB/treenodetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackViewState();" />
      <MemberSignature Language="F#" Value="member this.TrackViewState : unit -&gt; unit" Usage="treeNode.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Contrassegna il punto iniziale per la registrazione e il salvataggio delle modifiche dello stato di visualizzazione nel nodo.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore non visualizzato utilizzato per memorizzare dati aggiuntivi relativi al nodo, ad esempio i dati utilizzati per la gestione degli eventi di postback.</summary>
        <value>Dati aggiuntivi relativi al nodo che non vengono visualizzati. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeNode.Value%2A> proprietà viene utilizzata per integrare il <xref:System.Web.UI.WebControls.TreeNode.Text%2A> proprietà archiviando dati aggiuntivi associati al nodo. Questo valore non viene visualizzato nel controllo e viene comunemente utilizzato per archiviare i dati per la gestione degli eventi di postback.  
  
> [!NOTE]
>  Se il <xref:System.Web.UI.WebControls.TreeNode.Value%2A> proprietà contiene `null`, la `get` funzione di accesso restituisce il valore della <xref:System.Web.UI.WebControls.TreeNode.Text%2A> proprietà. Se il <xref:System.Web.UI.WebControls.TreeNode.Text%2A> proprietà, a sua volta, contiene `null`, <xref:System.String.Empty> viene restituito.  
  
> [!NOTE]
>  Tutti i nodi dello stesso livello devono essere un valore univoco per il <xref:System.Web.UI.WebControls.TreeNode.Value%2A> proprietà; la <xref:System.Web.UI.WebControls.TreeView> controllo non distingue tra nodi diversi dello stesso livello che hanno lo stesso valore. In questo scenario, se l'utente fa clic su un nodo con un valore duplicato, il nodo che viene visualizzata prima il <xref:System.Web.UI.WebControls.TreeView> controllo è selezionato.  
  
 Il valore di questa proprietà viene archiviato nello stato di visualizzazione.  
  
 Il valore di questa proprietà, se è impostata, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per altre informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.TreeNode.Value%2A> proprietà per archiviare il campo chiave.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="ValuePath">
      <MemberSignature Language="C#" Value="public string ValuePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValuePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValuePath : string" Usage="System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il percorso dal nodo radice al nodo corrente.</summary>
        <value>Un elenco di valori del nodo separati da delimitatori che formano un percorso dal nodo radice al nodo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> proprietà contiene un elenco delimitato da delimitatore di valori di nodo che formano un percorso dal nodo radice per il nodo corrente. Utilizzare il <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> proprietà per specificare il carattere delimitatore utilizzato per separare i valori del nodo. Questo valore viene comunemente utilizzato per analizzare l'elenco per i singoli valori, o da passare come argomento per il <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> metodo il <xref:System.Web.UI.WebControls.TreeView> classe.  
  
 A seconda del valore visualizzato nel <xref:System.Web.UI.WebControls.TreeView> (controllo), il carattere delimitatore di potrebbe dover essere modificate per evitare conflitti. Ad esempio, se si imposta il carattere delimitatore da una virgola, il valore visualizzato non deve contenere virgole; in caso contrario, non è possibile analizzare in modo accurato il <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> proprietà.  
  
> [!NOTE]
>  Tutti i nodi dello stesso livello devono essere un valore univoco per il <xref:System.Web.UI.WebControls.TreeNode.Value%2A> proprietà; la <xref:System.Web.UI.WebControls.TreeView> controllo non distingue tra nodi diversi dello stesso livello che hanno lo stesso valore. In questo scenario, se l'utente fa clic su un nodo con un valore duplicato, il nodo che viene visualizzata prima il <xref:System.Web.UI.WebControls.TreeView> controllo è selezionato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come analizzare il <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> proprietà.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>