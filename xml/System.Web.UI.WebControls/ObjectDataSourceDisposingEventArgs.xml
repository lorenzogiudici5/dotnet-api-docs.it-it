<Type Name="ObjectDataSourceDisposingEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="573cdb67aae1c948fcc74894505cd1db0c3bc931" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39939078" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceDisposingEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceDisposingEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceDisposingEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceDisposingEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i dati per l'evento <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" /> del controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> classe viene utilizzata nel <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> metodo per fornire l'accesso all'istanza dell'oggetto business dopo qualsiasi operazione dati che utilizzano il <xref:System.Web.UI.WebControls.ObjectDataSource> oggetto controllo e business vengono eseguite, ma prima l'eliminazione di oggetti. L'oggetto business è possibile accedere tramite il <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> proprietà. Tramite l'aggiunta di un delegato per gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento, è possibile accedere ai membri dell'oggetto business esposti pubblicamente per eseguire qualsiasi operazione finale o pulizia.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> metodo non viene chiamato <xref:System.Web.UI.WebControls.ObjectDataSource> il controllo, se il metodo che esegue le operazioni sui dati è un `static` (metodo). Quando il metodo è statico, viene creata alcuna istanza di oggetto business.  
  
 Il <xref:System.Web.UI.WebControls.ObjectDataSource> controllo espone numerosi eventi che è possibile gestire per l'uso con l'oggetto di business sottostante in diversi momenti nel ciclo di vita. Nella tabella seguente elenca gli eventi e associato <xref:System.EventArgs> classi e i delegati dei gestori eventi.  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Si verifica immediatamente prima che venga creata l'istanza dell'oggetto business.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Si verifica immediatamente dopo la creazione dell'istanza dell'oggetto business.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> si verifica prima che i dati vengono recuperati.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> e <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Si verificano prima di un'istruzione insert, update o operazione di eliminazione viene eseguita.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected><br /><br /> Si verifica dopo il recupero dei dati.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> e <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Si verifica dopo aver completato l'operazione di inserimento, update o delete.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Si verifica prima dell'eliminazione di un oggetto business.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 In questa sezione sono riportati due esempi di codice. Il primo esempio di codice viene illustrato come usare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare le informazioni. Nel secondo esempio di codice fornisce l'oggetto business di livello intermedio di esempio che usa il primo esempio di codice.  
  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare le informazioni. È possibile usare un oggetto business che è molto costoso (in termini di tempo o risorse) per creare per ogni operazione dati che esegue la pagina Web. Per creare un'istanza di una volta e memorizzarlo nella cache per le operazioni successive anziché creando ed eliminarlo per ogni operazione sui dati, potrebbe essere un modo per lavorare con un oggetto dispendioso. In questo esempio illustra questo schema. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> innanzitutto nella cache per un oggetto e quindi creare un'istanza, solo se uno non è già memorizzata nella cache dell'evento. Quindi, gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventi per memorizzare nella cache l'oggetto business per un uso futuro, anziché eliminarlo. In questo esempio, il <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> è impostata su `true`, per indirizzare il <xref:System.Web.UI.WebControls.ObjectDataSource> non chiamare il <xref:System.IDisposable.Dispose%2A> metodo sull'istanza.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 Esempio di codice seguente fornisce un oggetto business di livello intermedio di esempio che usa l'esempio di codice precedente. L'esempio di codice è costituito da un oggetto business di base, definito dal `EmployeeLogic` (classe), che è una classe che mantiene informazioni sullo stato e incapsula la logica di business. Per un esempio funzionante completo, è necessario compilare questo codice sotto forma di libreria e quindi usare queste classi da una pagina ASP.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceDisposingEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceDisposingEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">Oggetto business con cui il controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> interagisce per eseguire le operazioni sui dati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> utilizzando l'oggetto specificato.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto che rappresenta l'oggetto business con cui il controllo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> esegue le operazioni sui dati.</summary>
        <value>Oggetto business utilizzato dall'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> per le operazioni sui dati; in caso contrario, <see langword="null" /> se <see langword="null" /> viene passato all'oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se i metodi di operazione dati (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) sono metodi di istanza, un'istanza dell'azienda dell'oggetto viene creato prima dell'esecuzione del metodo. È possibile impedire la creazione per ogni chiamata salvando l'oggetto nell'oggetto business le <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> proprietà nel <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> gestore dell'evento. Nelle successive <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> gli eventi, è possibile recuperare l'oggetto business dal <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.ObjectDataSource> controllo con un oggetto business e un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare le informazioni. È possibile usare un oggetto business che è molto costoso (in termini di tempo o risorse) per creare per ogni operazione dati che esegue la pagina Web. Per creare un'istanza di una volta e memorizzarlo nella cache per le operazioni successive anziché creando ed eliminarlo per ogni operazione sui dati, potrebbe essere un modo per lavorare con un oggetto dispendioso. In questo esempio illustra questo schema. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> innanzitutto nella cache per un oggetto e quindi creare un'istanza, solo se uno non è già memorizzata nella cache dell'evento. Quindi, gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventi per memorizzare nella cache l'oggetto business per un uso futuro, anziché eliminarlo. In questo esempio, il <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> classe è impostata su `true`, per indirizzare il <xref:System.Web.UI.WebControls.ObjectDataSource> non chiamare <xref:System.IDisposable.Dispose%2A> nell'istanza.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      </Docs>
    </Member>
  </Members>
</Type>