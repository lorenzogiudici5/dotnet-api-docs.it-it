<Type Name="Label" FullName="System.Web.UI.WebControls.Label">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4562b511c58de9daf20be1c2f7dc531c1c66b424" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599325" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Label : System.Web.UI.WebControls.WebControl, System.Web.UI.ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Label extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Label" />
  <TypeSignature Language="VB.NET" Value="Public Class Label&#xA;Inherits WebControl&#xA;Implements ITextControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Label : System::Web::UI::WebControls::WebControl, System::Web::UI::ITextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LabelDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.LabelControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Label runat="server" Text="Label"&gt;&lt;/{0}:Label&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un controllo etichetta, che visualizza il testo su una pagina Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo argomento  
  
-   [Introduzione](#introduction)  
  
-   [Accessibilità](#accessibility)  
  
-   [Sintassi dichiarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduzione  
 Utilizzare il <xref:System.Web.UI.WebControls.Label> controllo per visualizzare il testo in una posizione nella pagina. A differenza del testo statico, è possibile personalizzare il testo visualizzato tramite il <xref:System.Web.UI.WebControls.Label.Text%2A> proprietà.  
  
 È inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.Literal> e <xref:System.Web.UI.WebControls.PlaceHolder> controlli per visualizzare il testo della pagina Web Form. Tuttavia, a differenza di <xref:System.Web.UI.WebControls.Label> , questi controlli non eseguire il rendering dei tag aggiuntivi.  
  
> [!IMPORTANT]
>  Il controllo può essere usato per visualizzare l'input utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Accessibilità  
 Per informazioni su come configurare il controllo in modo che generi codice conforme agli standard di accessibilità, vedere [accessibilità in Visual Studio e ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) e [controlli ASP.NET e l'accessibilità](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintassi dichiarativa  
  
```  
<asp:Label  
    AccessKey="string"  
    AssociatedControlID="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Web.UI.WebControls.Label> controllo in una pagina Web.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice delle pagine Web ASP.NET, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic Label Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Label Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Label Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Label Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Label.Text" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Label.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Label();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.Label" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare e inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.Label> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare e inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.Label> controllo.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic Label.Label Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Label.Label Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Label.Label Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Label.Label Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Label.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che rappresenta il flusso di output per il rendering del contenuto HTML nel client.</param>
        <summary>Aggiunge gli attributi e gli stili HTML di un controllo <see cref="T:System.Web.UI.WebControls.Label" /> di cui eseguire il rendering nel flusso di output specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Label.AddAttributesToRender%2A> metodo viene usata principalmente dagli sviluppatori di controlli per inserire gli attributi aggiuntivi e gli stili per il <xref:System.Web.UI.HtmlTextWriter> il flusso di output per un <xref:System.Web.UI.WebControls.Label> controllo.  
  
 Il <xref:System.Web.UI.WebControls.Label.AddAttributesToRender%2A> metodo per un <xref:System.Web.UI.WebControls.Label> controllo determina se il `for` attributo deve essere aggiunti con la <xref:System.Web.UI.WebControls.Label.AssociatedControlID%2A> valore, e se deve essere applicato lo stile di blocco in linea per visualizzare lo stile del bordo e larghezza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Impossibile trovare il controllo specificato nella proprietà <see cref="P:System.Web.UI.WebControls.Label.AssociatedControlID" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Label.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto che rappresenta l'elemento sottoposto ad analisi.</param>
        <summary>Notifica al controllo che è stato analizzato un elemento e aggiunge l'elemento al controllo <see cref="T:System.Web.UI.WebControls.Label" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Label.AddParsedSubObject%2A> metodo viene usato principalmente dagli sviluppatori di controlli per la derivazione di un controllo personalizzato dalla <xref:System.Web.UI.WebControls.Label> classe.  
  
 Se l'oggetto di input è un <xref:System.Web.UI.LiteralControl>e <xref:System.Web.UI.WebControls.Label> controllo non ha controlli figlio, l'oggetto di input utilizzato per impostare il <xref:System.Web.UI.WebControls.Label.Text%2A> proprietà del <xref:System.Web.UI.WebControls.Label> controllo. In caso contrario, il <xref:System.Web.UI.Control.AddParsedSubObject%2A> metodo della base <xref:System.Web.UI.Control> classe viene chiamata e l'oggetto specificato viene aggiunto per il <xref:System.Web.UI.Control.Controls%2A> insieme.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come eseguire l'override di <xref:System.Web.UI.WebControls.Label.AddParsedSubObject%2A> metodo in un oggetto personalizzato <xref:System.Web.UI.WebControls.Label> server il controllo in modo che venga sempre impostata la proprietà text del testo dell'oggetto analizzato, se l'oggetto analizzato è una <xref:System.Web.UI.WebControls.Literal>e a una stringa vuota in caso contrario.  
  
 [!code-aspx-csharp[CustomLabelAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLabelAddParsedSubObject/CS/custom_label_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomLabelAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLabelAddParsedSubObject/VB/custom_label_addparsedsubobjectvb.aspx#1)]  
[!code-csharp[CustomLabelAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLabelAddParsedSubObject/CS/custom_label_addparsedsubobject.cs#2)]
[!code-vb[CustomLabelAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLabelAddParsedSubObject/VB/custom_label_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedControlID">
      <MemberSignature Language="C#" Value="public virtual string AssociatedControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssociatedControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Label.AssociatedControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AssociatedControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AssociatedControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.AssociatedControlConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'identificatore di un controllo server a cui è associato il controllo <see cref="T:System.Web.UI.WebControls.Label" />.</summary>
        <value>Valore di stringa corrispondente alla proprietà <see cref="P:System.Web.UI.Control.ID" /> di un controllo server nel Web Form. Il valore predefinito è una stringa vuota (""), a indicare che il controllo <see cref="T:System.Web.UI.WebControls.Label" /> non è associato a un altro controllo server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.Label.AssociatedControlID%2A> proprietà per associare un <xref:System.Web.UI.WebControls.Label> controllo con un altro controllo del server in un Web form. Quando un <xref:System.Web.UI.WebControls.Label> controllo è associato a un altro controllo server, i relativi attributi possono essere utilizzati per estendere le funzionalità del controllo associato. È possibile utilizzare il <xref:System.Web.UI.WebControls.Label> controllare come una didascalia per un altro controllo, oppure è possibile impostare l'indice di tabulazione o un tasto di scelta rapida per un controllo associato.  
  
 Quando il <xref:System.Web.UI.WebControls.Label.AssociatedControlID%2A> è impostata, il <xref:System.Web.UI.WebControls.Label> controllo esegue il rendering come HTML `label` elemento, con la `for` attributo impostato sul <xref:System.Web.UI.Control.ID%2A> proprietà del controllo associato. È possibile impostare altri attributi del `label` elemento utilizzando il <xref:System.Web.UI.WebControls.Label> proprietà. Ad esempio, è possibile utilizzare il <xref:System.Web.UI.WebControls.Label.Text%2A> e <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> proprietà per fornire la didascalia e il tasto di scelta rapida per un controllo associato.  
  
 Questa proprietà non può essere impostata da temi oppure temi di fogli di stile. Per ulteriori informazioni, vedere <xref:System.Web.UI.ThemeableAttribute> e [ASP.NET temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.AccessKey" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Label.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Oggetto contenente i valori dello stato di visualizzazione salvato per il controllo.</param>
        <summary>Carica lo stato precedentemente salvato del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato principalmente dall'infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice. Tuttavia, gli sviluppatori di controlli possono eseguire l'override questo metodo per specificare come un controllo server personalizzato ripristina lo stato di visualizzazione. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Il <xref:System.Web.UI.WebControls.Label.LoadViewState%2A> metodo ripristina le informazioni sullo stato di visualizzazione per il <xref:System.Web.UI.WebControls.Label> controllo da una richiesta di pagina precedente salvata dal <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Label.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Flusso di output che esegue il rendering del contenuto HTML nel client.</param>
        <summary>Esegue il rendering del contenuto del controllo <see cref="T:System.Web.UI.WebControls.Label" /> nel writer specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come eseguire l'override di <xref:System.Web.UI.WebControls.Label.RenderContents%2A> metodo in un server personalizzato controllare in modo che venga aggiunto testo per il <xref:System.Web.UI.WebControls.Label>.  
  
 [!code-aspx-csharp[CustomLabelRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLabelRenderContents/CS/custom_label_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomLabelRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLabelRenderContents/VB/custom_label_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomLabelRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLabelRenderContents/CS/custom_label_rendercontents.cs#2)]
[!code-vb[CustomLabelRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLabelRenderContents/VB/custom_label_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Label.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il controllo deve impostare l'attributo <see langword="disabled" /> dell'elemento HTML di cui è stato eseguito il rendering su "disabilitato" quando la proprietà <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> del controllo è <see langword="false" />.</summary>
        <value>
          <see langword="true" /> Se il <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> proprietà indica una versione ASP.NET precedente alla <c>4.0</c>; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà indica come ASP.NET deve eseguire il rendering HTML per un controllo quando il controllo è disabilitato. Se questa proprietà è `true`, ASP.NET esegue il rendering un `disabled` attributo quando un controllo è disabilitato. Se questa proprietà è `false`, ASP.NET esegue il rendering un `class` attributo quando un controllo è disabilitato. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Label.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tag HTML utilizzato per il rendering del controllo <see cref="T:System.Web.UI.WebControls.Label" />.</summary>
        <value>Valore <see cref="T:System.Web.UI.HtmlTextWriterTag" /> utilizzato per il rendering del controllo <see cref="T:System.Web.UI.WebControls.Label" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.Label.TagKey%2A> proprietà per determinare il <xref:System.Web.UI.HtmlTextWriterTag> valore a cui è associato un <xref:System.Web.UI.WebControls.Label> controllo. Il <xref:System.Web.UI.WebControls.Label.TagKey%2A> proprietà viene usata principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Label.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto del testo del controllo <see cref="T:System.Web.UI.WebControls.Label" />.</summary>
        <value>Contenuto di testo del controllo. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.Label.Text%2A> proprietà per specificare o determinare il contenuto di testo il <xref:System.Web.UI.WebControls.Label> controllo. Questa proprietà viene comunemente utilizzata per personalizzare a livello di codice il testo visualizzato nel <xref:System.Web.UI.WebControls.Label> controllo.  
  
 Il <xref:System.Web.UI.WebControls.Label.Text%2A> proprietà può includere HTML. In caso affermativo, il codice HTML verrà passato invariato al browser, dove è possibile che venga interpretato come markup e non come testo. Se si desidera che il browser per visualizzare i tag HTML come testo normale, è possibile utilizzare il <xref:System.Web.HttpServerUtility.HtmlEncode%2A> (metodo), come illustrato nell'esempio per la panoramica della classe. È inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.Literal> controllo anziché il <xref:System.Web.UI.WebControls.Label> e impostare il <xref:System.Web.UI.WebControls.Literal.Mode%2A> proprietà <xref:System.Web.UI.WebControls.LiteralMode.Encode>.  
  
> [!NOTE]
>  L'impostazione di <xref:System.Web.UI.WebControls.Label.Text%2A> proprietà eliminerà tutti i controlli contenuti nel <xref:System.Web.UI.WebControls.Label> controllo.  
  
> [!IMPORTANT]
>  Il controllo può essere usato per visualizzare l'input utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 Il valore di questa proprietà, se impostato, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per ulteriori informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute> e [globalizzazione e localizzazione ASP.NET](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 Questa proprietà è la proprietà predefinita che un <xref:System.Web.UI.WebControls.ControlParameter> viene associato a in fase di esecuzione. Per ulteriori informazioni, vedere <xref:System.Web.UI.ControlValuePropertyAttribute>, <xref:System.Web.UI.WebControls.ControlParameter>, e [utilizzo dei parametri con i controlli origine dati per il filtraggio](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare una nuova istanza del <xref:System.Web.UI.WebControls.Label> controllo e impostare il relativo <xref:System.Web.UI.WebControls.Label.Text%2A> proprietà.  
  
> [!NOTE]
>  Esempio di codice seguente viene utilizzato il modello di codice a file singolo e potrebbe non funzionare correttamente se viene copiato direttamente in un file code-behind. In questo esempio di codice deve essere copiato in un file di testo vuoto con estensione aspx. Per ulteriori informazioni sul modello di codice Web Form, vedere [modello di codice ASP.NET Web Forms pagina](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic Label.Text Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Label.Text Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Label.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Label.Text Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>