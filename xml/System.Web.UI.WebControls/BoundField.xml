<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="febef3b6b22dc335f026ab3492f6e9dcd75639d8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36583959" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a field that is displayed as text in a data-bound control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField> classe viene utilizzata da tutti i controlli associati a dati (ad esempio <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>) per visualizzare il valore di un campo come testo. Il <xref:System.Web.UI.WebControls.BoundField> oggetto viene visualizzato in modo diverso a seconda del controllo associato a dati in cui viene utilizzato. Ad esempio, il <xref:System.Web.UI.WebControls.GridView> controllo viene visualizzata una <xref:System.Web.UI.WebControls.BoundField> oggetto come una colonna, mentre il <xref:System.Web.UI.WebControls.DetailsView> controllo lo visualizza in una riga.  
  
 Per specificare il campo da visualizzare in un <xref:System.Web.UI.WebControls.BoundField> dell'oggetto, impostare il <xref:System.Web.UI.WebControls.BoundField.DataField%2A> proprietà per il nome del campo. Il valore del campo può essere codificata in formato HTML prima che venga visualizzato impostando il <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> proprietà `true`. È possibile applicare una stringa di formattazione personalizzata per il valore del campo impostando il <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> proprietà. Quando il <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> proprietà `true`, il valore di stringa codificata del campo è utilizzato nella stringa di formato personalizzata. Per impostazione predefinita, la stringa di formattazione viene applicata ai valori di campo solo quando il controllo associato a dati è in modalità sola lettura. Per applicare la stringa di formattazione per i valori visualizzati quando il controllo associato a dati è in modalità di modifica, impostare il <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> proprietà `true`. Se il valore del campo è null, è possibile visualizzare una didascalia personalizzata impostando il <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> proprietà. Il <xref:System.Web.UI.WebControls.BoundField> oggetto automaticamente anche possibile convertire una stringa vuota ("") campo valori in valori null impostando il <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> proprietà `true`.  
  
 È possibile nascondere una <xref:System.Web.UI.WebControls.BoundField> oggetto in un controllo associato a dati impostando il <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> proprietà `false`. Per impedire che il valore di un campo da modificare in modalità di modifica, impostare il <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> proprietà `true`. In associazione a dati controlli che supportano l'inserimento di record (ad esempio il <xref:System.Web.UI.WebControls.DetailsView> controllo), è possibile nascondere un <xref:System.Web.UI.WebControls.BoundField> oggetto impostando il <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> proprietà `false`. Questa operazione viene in genere eseguita quando si desidera nascondere un campo chiave generato automaticamente in modalità di inserimento.  
  
 È possibile personalizzare le sezioni di intestazione e piè di pagina di un <xref:System.Web.UI.WebControls.BoundField> oggetto. Per visualizzare una didascalia in sezioni di intestazione o piè di pagina, impostare il <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> o <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> proprietà, rispettivamente. Anziché visualizzare il testo nella sezione di intestazione, è possibile visualizzare un'immagine impostando il <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> proprietà. La sezione di intestazione può essere nascosti nel <xref:System.Web.UI.WebControls.BoundField> oggetto impostando il <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> proprietà `false`.  
  
> [!NOTE]
>  Alcuni controlli associati a dati (ad esempio il <xref:System.Web.UI.WebControls.GridView> controllo) possono visualizzare o nascondere solo l'intera sezione di intestazione del controllo. Questi controlli associati a dati non supportano il <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> proprietà per un singolo campo associato. Per mostrare o nascondere l'intera sezione di intestazione di un controllo associato a dati (se disponibile), utilizzare il controllo `ShowHeader` proprietà.  
  
 È anche possibile personalizzare l'aspetto del <xref:System.Web.UI.WebControls.BoundField> oggetto (colore carattere, colore di sfondo e così via) impostando le proprietà di stile per le diverse parti del campo. Nella tabella seguente sono elencate le proprietà di stile diverso.  
  
|Proprietà di stile|Descrizione|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Le impostazioni di stile per i controlli server Web figlio del <xref:System.Web.UI.WebControls.BoundField> oggetto.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Le impostazioni di stile per la sezione di piè di pagina del <xref:System.Web.UI.WebControls.BoundField> oggetto.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Le impostazioni di stile per la sezione dell'intestazione di <xref:System.Web.UI.WebControls.BoundField> oggetto.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Le impostazioni di stile per gli elementi di dati di <xref:System.Web.UI.WebControls.BoundField> oggetto.|  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Web.UI.WebControls.BoundField> oggetto per visualizzare i valori di un campo in un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.BoundField" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.BoundField> classe. Questo costruttore viene comunemente utilizzato quando si aggiungono campi a un controllo associato a dati creato dinamicamente.  
  
 Aggiungere in modo dinamico un <xref:System.Web.UI.WebControls.BoundField> dell'oggetto a un controllo associato a dati, creare un nuovo <xref:System.Web.UI.WebControls.BoundField> dell'oggetto, impostarne le proprietà e quindi aggiungerlo alla raccolta di campi del controllo associato a dati. Ad esempio, se si utilizza il <xref:System.Web.UI.WebControls.GridView> di controllo, aggiungere il <xref:System.Web.UI.WebControls.BoundField> dell'oggetto per il <xref:System.Web.UI.WebControls.GridView.Columns%2A> insieme.  
  
> [!NOTE]
>  Anche se è possibile aggiungere campi in modo dinamico a un controllo associato a dati, è consigliabile che i campi in modo statico dichiarati e quindi nascondere o visualizzare, a seconda dei casi. Dichiarazione di tutti i campi in modo statico riduce le dimensioni dello stato di visualizzazione per il controllo associato a dati padre.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come utilizzare il costruttore per aggiungere in modo dinamico un <xref:System.Web.UI.WebControls.BoundField> dell'oggetto a un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the formatting string specified by the <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> property is applied to field values when the data-bound control that contains the <see cref="T:System.Web.UI.WebControls.BoundField" /> object is in edit mode.</summary>
        <value>
          <see langword="true" /> Per applicare la stringa di formattazione per i valori dei campi in modalità di modifica; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlli con associazione a dati (ad esempio <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, e <xref:System.Web.UI.WebControls.GridView>) sono diverse modalità di visualizzazione che consentono all'utente di leggere, modificare o inserire i record. Per impostazione predefinita, la stringa di formattazione specificata per il <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> proprietà viene applicata ai valori di campo solo quando il controllo associato a dati è in modalità sola lettura. Per applicare la stringa di formattazione per i valori visualizzati quando il controllo associato a dati è in modalità di modifica, impostare il <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> proprietà `true`.  
  
> [!NOTE]
>  Oggetto <xref:System.Web.UI.WebControls.BoundField> oggetto non rimuove automaticamente la formattazione quando il campo viene aggiornato nell'origine dati. Se non si desidera la formattazione come parte del valore archiviato, è necessario rimuovere la formattazione a livello di codice.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> proprietà a cui applicare la formattazione di stringhe per i valori dei campi durante una <xref:System.Web.UI.WebControls.GridView> controllo si trova nella modalità di modifica. La formattazione è a livello di codice rimosse prima che il valore viene aggiornato nell'origine dati.  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</summary>
        <value>
          <see langword="true" /> Per convertire automaticamente i valori di stringa vuota in valori null. in caso contrario, il <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In alcuni casi l'utente potrebbe immettere una stringa vuota per un valore del campo durante l'aggiornamento o inserimento di record. Utilizzare il <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> proprietà per specificare se un valore stringa vuota viene convertito automaticamente su null quando il campo dei dati viene aggiornato nell'origine dati.  
  
> [!NOTE]
>  Per impostazione predefinita, un <xref:System.Web.UI.WebControls.BoundField> oggetto visualizza i valori null come stringhe vuote. Per visualizzare un valore diverso, impostare il <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> proprietà per specificare che una stringa vuota ("") valore di campo automaticamente deve essere convertito in null.  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">The <see cref="T:System.Web.UI.WebControls.DataControlField" /> to copy the properties of the current <see cref="T:System.Web.UI.WebControls.BoundField" /> to.</param>
        <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.BoundField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> è un metodo helper utilizzato il <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> metodo per copiare le proprietà dell'oggetto corrente <xref:System.Web.UI.WebControls.BoundField> dell'oggetto per il <xref:System.Web.UI.WebControls.DataControlField> oggetto creato dal metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an empty <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <returns>An empty <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> è un metodo helper utilizzato dal <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> metodo per creare un oggetto vuoto <xref:System.Web.UI.WebControls.BoundField> oggetto per copiare le proprietà dell'oggetto corrente <xref:System.Web.UI.WebControls.BoundField> oggetto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the data field to bind to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <value>Il nome del campo dati da associare il <see cref="T:System.Web.UI.WebControls.BoundField" />. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.BoundField.DataField%2A> proprietà per specificare il nome del campo dati da associare il <xref:System.Web.UI.WebControls.BoundField> oggetto. I valori del campo specificato vengono visualizzati nel <xref:System.Web.UI.WebControls.BoundField> oggetto come testo. È facoltativamente possibile formattare il testo visualizzato impostando il <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> proprietà.  
  
> [!NOTE]
>  Se il valore del campo è null, una stringa vuota ("") viene visualizzato per il valore per impostazione predefinita. Per specificare una didascalia alternativa, impostare il <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.BoundField.DataField%2A> proprietà per specificare il campo da visualizzare un <xref:System.Web.UI.WebControls.BoundField> nella colonna campo di un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string that specifies the display format for the value of the field.</summary>
        <value>Stringa di formattazione che specifica il formato di visualizzazione per il valore del campo. Il valore predefinito è una stringa vuota (""), a indicare che al valore di campo non è stata applicata alcuna formattazione speciale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> proprietà per specificare un formato di visualizzazione personalizzato per i valori che vengono visualizzati nel <xref:System.Web.UI.WebControls.BoundField> oggetto. Se il <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> non è impostata, il valore del campo viene visualizzato senza alcuna formattazione speciale.  
  
> [!NOTE]
>  Nelle versioni di ASP.NET precedenti a 3.5, è necessario impostare il <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> proprietà `false` per formattare i campi stringa non i tipi di dati. In caso contrario, il valore del campo viene convertito in una stringa dal metodo di conversione predefinita prima la stringa di formato archiviato nel <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> proprietà viene applicata.  
  
 Per impostazione predefinita, la stringa di formattazione viene applicata al valore di campo solo quando il controllo associato a dati che contiene il <xref:System.Web.UI.WebControls.BoundField> oggetto si trova in modalità sola lettura. Per applicare la stringa di formattazione per i valori dei campi nella modalità di modifica, impostare il <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> proprietà `true`.  
  
 La stringa di formattazione può essere qualsiasi valore letterale stringa e in genere include un segnaposto per il valore del campo. Ad esempio, nella stringa di formattazione `Item Value: {0}`, il valore del campo verrà sostituito con il {0} segnaposto quando la stringa viene visualizzata nel <xref:System.Web.UI.WebControls.BoundField> oggetto. Il resto della stringa di formattazione viene visualizzato come testo letterale.  
  
 Se la stringa di formattazione non include un segnaposto, solo la stringa di formattazione se stessa è incluso nel testo visualizzato finale (il valore del campo dall'origine dati non è incluso). Se il segnaposto è 0 (zero) racchiuso tra parentesi graffe, come illustrato nell'esempio precedente, il valore del campo viene convertito in una stringa per il metodo predefinito. Per lo zero è possibile aggiungere una stringa che specifica come deve essere formattato il valore del campo. Ad esempio, il segnaposto `{0:C}` per un campo numerico specifica che valore del campo deve essere convertito in un formato di valuta.  
  
 Viene applicata la formattazione utilizzando il <xref:System.String.Format%2A> metodo. Il numero che segue la parentesi graffa di sinistra è parte della sintassi utilizzata dal metodo e indica quello di una serie di valori che deve utilizzare il segnaposto. Essendo presente un solo valore di campo in ogni cella, il numero che segue la parentesi graffa può essere impostato solo su 0.  
  
 Nella tabella seguente vengono elencati i caratteri di formato standard per i campi numerici. I caratteri di formato non fanno distinzione maiuscole/minuscole, ad eccezione di `X`, che consente di visualizzare caratteri esadecimali nel caso in cui è specificato. È possibile aggiungere un numero per la maggior parte dei caratteri di formato per specificare il numero di cifre significative o posizioni decimali da visualizzare.  
  
> [!NOTE]
>  Nella maggior parte dei casi, la formattazione varia in base all'impostazione del server delle impostazioni cultura. Gli esempi sono per le impostazioni cultura di `en-US`.  
  
|Formato carattere|Descrizione|Esempio|  
|----------------------|-----------------|-------------|  
|`C` o `c`|Visualizza i valori numerici in formato di valuta. È possibile specificare il numero di posizioni decimali.|Formato: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Formato: `{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` o `d`|Consente di visualizzare i valori interi in formato decimale. È possibile specificare il numero di cifre. (Anche se il tipo è detta "decimale", i numeri vengono formattati come numeri interi.)|Formato: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Formato: `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` o `e`|Consente di visualizzare i valori numerici in formato scientifico (esponenziale). È possibile specificare il numero di posizioni decimali.|Formato: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> Formato: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|  
|`F` o `f`|Visualizza i valori numerici in formato fisso. È possibile specificare il numero di posizioni decimali.|Formato: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Formato: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` o `g`|Consente di visualizzare i valori numerici in formato generale (nel formato più compatto di notazione a virgola fissa o scientifica). È possibile specificare il numero di cifre significative.|Formato: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Formato: `{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` o `n`|Visualizza i valori numerici in formato numerico (inclusi i separatori di gruppi e di segno negativo facoltativo). È possibile specificare il numero di posizioni decimali.|Formato: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Formato: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` o `p`|Visualizza i valori numerici in formato percentuale. È possibile specificare il numero di posizioni decimali.|Formato: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Formato: `{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` o `r`|Consente di visualizzare <xref:System.Single>, <xref:System.Double>, o `BigInteger` i valori in formato round trip.|Formato: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` o `x`|Consente di visualizzare i valori interi in formato esadecimale. È possibile specificare il numero di cifre.|Formato: `{0:X}`<br /><br /> 255 -> FF<br /><br /> Formato: `{0:x4}`<br /><br /> 255  -> 00ff|  
  
 Per ulteriori informazioni ed esempi che mostrano la formattazione per gli altri valori delle impostazioni cultura, vedere [stringhe di formato numerico Standard](~/docs/standard/base-types/standard-numeric-format-strings.md). È inoltre possibile creare stringhe di formato numerico personalizzate. Per altre informazioni, vedere [Stringhe di formato numerico personalizzato](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
 Nella tabella seguente sono elencati i caratteri di formato per <xref:System.DateTime> campi. La maggior parte di queste specifiche di formattazione produce un output diverso a seconda delle impostazioni cultura. Gli esempi sono per un <xref:System.DateTime> pari a 15/6/2009 1:45: 30 PM con le impostazioni cultura di `en-US`.  
  
|Formato carattere|Descrizione|Esempio|  
|----------------------|-----------------|-------------|  
|`d`|Schema di data breve.|Formato: `{0:d}`<br /><br /> 6/15/2009 1:45: 30 PM -&GT; 15/6/2009|  
|`D`|Schema di data estesa.|Formato: `{0:D}`<br /><br /> 6/15/2009 1:45: 30 PM -> lunedì, 15 giugno 2009|  
|`f`|Schema di data/ora completa (ora breve).|Formato: `{0:f}`<br /><br /> 6/15/2009 1:45: 30 PM -> lunedì, 15 giugno 2009 1:45 PM|  
|`F`|Schema di data/ora completa (ora estesa).|Formato: `{0:F}`<br /><br /> 6/15/2009 1:45: 30 PM -> lunedì, 15 giugno 2009 1:45: 30 PM|  
|`g`|Schema di data/ora generale (ora breve).|Formato: `{0:g}`<br /><br /> 6/15/2009 1:45: 30 PM -&GT; 15/6/2009 1:45 PM|  
|`G`|Schema di data/ora generale (ora estesa).|Formato: `{0:G}`<br /><br /> 6/15/2009 1:45: 30 PM -&GT; 15/6/2009 1:45: 30 PM|  
|`M` o `m`|Schema di mese/giorno.|Formato: `{0:M}`<br /><br /> 6/15/2009 1:45: 30 PM -> 15 giugno|  
|`O` o `o`|Schema di data/ora di round trip.|Formato: `{0:o}`<br /><br /> 15/06/2009 13.45.30 -> 2009-06-15T13.45.30.0900000|  
|`R` o `r`|Schema RFC1123 (per informazioni, vedere <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>).|Formato: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|Schema di data/ora ordinabile.|Formato: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|Schema di ora breve.|Formato: `{0:t}`<br /><br /> 6/15/2009 1:45: 30 PM -&GT; 1:45 PM|  
|`T`|Schema di ora estesa.|Formato: `{0:T}`<br /><br /> 6/15/2009 1:45: 30 PM -&GT; 1:45:30 PM|  
|`u`|Schema di data/ora ordinabile universale.|Formato: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|Schema di data/ora completa universale.|Formato: `{0:U}`<br /><br /> 6/15/2009 1:45: 30 PM -> lunedì, 15 giugno 2009:45:30 alle 20.00|  
|`Y` o `y`|Schema di mese e anno.|Formato: `{0:Y}`<br /><br /> 6/15/2009 1:45: 30 PM -> giugno 2009|  
  
 Per ulteriori informazioni ed esempi che mostrano la formattazione per gli altri valori delle impostazioni cultura, vedere [stringhe di formato di ora e data Standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md). È anche possibile creare stringhe di formato di ora e data personalizzato. Per altre informazioni, vedere [stringhe di formato di ora e Data personalizzata](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
   
  
## Examples  
 Un progetto di sito Web di Visual Studio con codice sorgente è disponibile complemento a questo argomento: [scaricare](http://go.microsoft.com/fwlink/?LinkId=191889).  
  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> proprietà per specificare un formato di visualizzazione personalizzato per i valori di un campo.  
  
  
  
 Nell'esempio seguente mostra una riga dell'output che viene generato da questo esempio.  
  
|ProductID|Nome|ProductNumber|ListPrice|Spessore|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">A <see cref="T:System.Collections.IDictionary" /> used to store the values of the specified cell.</param>
        <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell" /> that contains the values to retrieve.</param>
        <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</param>
        <param name="includeReadOnly">
          <see langword="true" /> to include the values of read-only fields; otherwise, <see langword="false" />.</param>
        <summary>Fills the specified <see cref="T:System.Collections.IDictionary" /> object with the values from the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> metodo è fornito come un modo pratico per recuperare i valori dei campi dall'entità specificata <xref:System.Web.UI.WebControls.TableCell> oggetto un <xref:System.Web.UI.WebControls.BoundField> oggetto.  
  
> [!NOTE]
>  Questo metodo viene usato principalmente dagli sviluppatori di controlli.  
  
 Questo metodo non dispone di un valore restituito. I valori dei campi vengono invece restituiti per riferimento tramite il <xref:System.Collections.IDictionary?displayProperty=nameWithType> oggetto passato per il `dictionary` parametro. Dopo il metodo è stato chiamato, scorrere il <xref:System.Collections.IDictionary?displayProperty=nameWithType> oggetto per accedere ai valori di campo.  
  
> [!NOTE]
>  Se il <xref:System.Web.UI.WebControls.TableCell> oggetto contiene i valori dei campi di sola lettura, è necessario passare `true` per il `includeReadOnly` parametro per includere tali valori.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">The field value to format.</param>
        <param name="encode">
          <see langword="true" /> to encode the value; otherwise, <see langword="false" />.</param>
        <summary>Formats the specified field value for a cell in the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <returns>The field value converted to the format specified by <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> è un metodo di supporto utilizzato per trasformare un valore di formato specificato dal campo di <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> proprietà. Se un valore del campo è null, il valore di <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> proprietà viene restituita.  
  
> [!NOTE]
>  Questo metodo viene usato principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), è possibile eseguire l'override questo metodo per eseguire una routine personalizzata.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the value used for a field's value when rendering the <see cref="T:System.Web.UI.WebControls.BoundField" /> object in a designer.</summary>
        <returns>The value to display in the designer as the field's value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> è un metodo di supporto utilizzato per determinare il valore da visualizzare per un campo per il rendering di <xref:System.Web.UI.WebControls.BoundField> oggetto in una finestra di progettazione. Se dati reali non possono essere recuperati dall'origine dati in fase di progettazione, viene visualizzato invece il valore restituito da questo metodo.  
  
> [!NOTE]
>  Questo metodo viene usato principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), è possibile eseguire l'override questo metodo per restituire un valore diverso da visualizzare per il campo in una finestra di progettazione.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">The container for the field value.</param>
        <summary>Retrieves the value of the field bound to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <returns>The value of the field bound to the <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> è un metodo helper utilizzato per determinare il valore di un campo. Se il <xref:System.Web.UI.WebControls.BoundField> oggetto viene visualizzato in una finestra di progettazione e il valore del campo non è possibile determinare in fase di progettazione, il valore restituito dal <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> metodo viene restituito anziché il valore del campo effettivo.  
  
> [!NOTE]
>  Questo metodo viene usato principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The container specified by the <paramref name="controlContainer" /> parameter is <see langword="null" />.  \- or -  The container specified by the <paramref name="controlContainer" /> parameter does not have a data item.  \- or -  The data field was not found.</exception>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), è possibile eseguire l'override del metodo per fornire una routine personalizzata per determinare il valore del campo.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text that is displayed in the header of a data control.</summary>
        <value>Il testo visualizzato nell'intestazione di un controllo dati. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> proprietà per identificare un campo in un controllo dati con un nome descrittivo. L'applicazione più comune del <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> proprietà consiste nello specificare nomi di colonna significativi ai campi associati a dati in un <xref:System.Web.UI.WebControls.GridView> o <xref:System.Web.UI.WebControls.DetailsView> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether field values are HTML-encoded before they are displayed in a <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <value>
          <see langword="true" /> Se i valori di campo sono codificati in HTML prima che vengano visualizzati un <see cref="T:System.Web.UI.WebControls.BoundField" /> dell'oggetto; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> proprietà per specificare se i valori dei campi sono codificati in HTML per le rispettive rappresentazioni di stringa prima che vengano visualizzati un <xref:System.Web.UI.WebControls.BoundField> oggetto. Se, ad esempio, questa proprietà è `true`, un valore stringa "\<script >" verranno visualizzati come "&lt;script&gt;". Se questa proprietà è `false`, verrebbe eseguita la stringa subisce modifiche.  
  
> [!NOTE]
>  La codifica HTML campo valori consentono di impedire attacchi di script tra siti e contenuto dannoso venga visualizzata nuovamente. Questa proprietà deve essere abilitata quando possibile.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> proprietà per impedire che i valori dei campi codificata in formato HTML prima di essere visualizzato un <xref:System.Web.UI.WebControls.BoundField> oggetto.  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether text that is created by applying the <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> property to the <see cref="T:System.Web.UI.WebControls.BoundField" /> value should be HTML encoded when it is displayed.</summary>
        <value>
          <see langword="true" /> Se il testo deve essere codificato in formato HTML. in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori con codifica HTML possono aiutare a evitare attacchi cross-site scripting e contenuto dannoso venga visualizzata nuovamente. La codifica HTML è utile anche quando si desidera visualizzare il codice HTML nel browser, ad esempio la visualizzazione della stringa "\<br / >" invece di inserire un'interruzione di riga (`<br/>` elemento) nella pagina.  
  
> [!NOTE]
>  Questa proprietà è stato introdotta in ASP.NET 3.5. Impostando questa proprietà su `false` consente di ripristinare il comportamento predefinito del <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> proprietà nelle versioni di ASP.NET precedenti a 3.5. Per altre informazioni, vedere la proprietà <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting">
          <see langword="true" /> if sorting is supported; otherwise, <see langword="false" />.</param>
        <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.BoundField" />.</param>
        <summary>Initializes the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <returns>
          <see langword="false" /> in all cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> viene chiamato dal controllo dei dati con cui il <xref:System.Web.UI.WebControls.BoundField> oggetto è associato per eseguire l'inizializzazione dell'oggetto di base per le istanze del campo, prima che il campo venga aggiunto a una raccolta di righe. Controlli dati quali <xref:System.Web.UI.WebControls.DetailsView> e <xref:System.Web.UI.WebControls.GridView> chiamare il <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> metodo nella loro `CreateChildControls` metodi prima degli altri metodi, ad esempio `CreateRow` vengono chiamati per creare righe specifiche con i dati.  
  
 Chiamare questo metodo quando si scrive un'associazione a dati personalizzato controllo che utilizza <xref:System.Web.UI.WebControls.TableCell> oggetti per eseguire l'inizializzazione di base per un <xref:System.Web.UI.WebControls.BoundField> oggetto. Implementare questo metodo se il <xref:System.Web.UI.WebControls.BoundField>-tipo derivato richiede qualsiasi inizializzazione dell'oggetto prima di compilare <xref:System.Web.UI.WebControls.TableCell> gli oggetti con i dati o controlli il <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to initialize.</param>
        <param name="cellType">One of the <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> values.</param>
        <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</param>
        <param name="rowIndex">The zero-based index of the row.</param>
        <summary>Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object to the specified row state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> metodo è implementato dal <xref:System.Web.UI.WebControls.BoundField>-derivati di tipi per aggiungere testo e controlli di un <xref:System.Web.UI.WebControls.TableCell> oggetto di un controllo di dati che utilizza le tabelle per visualizzare un'interfaccia utente (UI). Questi controlli dati creano la tabella completa struttura row-by-row quando il controllo `CreateChildControls` metodo viene chiamato. Il <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> metodo viene chiamato dal `InitializeRow` metodo dei dati consente di controllare, ad esempio <xref:System.Web.UI.WebControls.DetailsView> e <xref:System.Web.UI.WebControls.GridView>.  
  
 Chiamare questo metodo quando si scrive un'associazione a dati personalizzato controllo che utilizza <xref:System.Web.UI.WebControls.TableCell> oggetti per inizializzare le celle della struttura di tabella con dati o controlli. Implementare questo metodo quando si scrive un <xref:System.Web.UI.WebControls.BoundField>-classe derivata.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to initialize.</param>
        <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</param>
        <summary>Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object to the specified row state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> è un metodo di supporto consente di inizializzare una cella di <xref:System.Web.UI.WebControls.BoundField> oggetto.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), è possibile eseguire l'override questo metodo per eseguire una routine di inizializzazione personalizzati.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Represents the control state to be restored.</param>
        <summary>Restores the previously stored view-state information for this field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the caption displayed for a field when the field's value is null.</summary>
        <value>La didascalia visualizzata per un campo quando il valore del campo è null. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Talvolta un campo, viene archiviato come null nell'origine dati. È possibile specificare una didascalia personalizzata per visualizzare i campi che dispongono di un valore null impostando il <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> proprietà. Se questa proprietà non è impostata, i valori dei campi null vengono visualizzati come stringhe vuote (""). Quando un record è aggiornati o inseriti in un controllo associato a dati, se l'utente immette il valore specificato da questa proprietà (diverso da una stringa vuota) per un campo in un controllo associato a dati, che valore viene convertito automaticamente su null nell'origine dati.  
  
> [!NOTE]
>  Per convertire un valore del campo stringa vuota in un valore null, impostare il <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> proprietà `true`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> proprietà per specificare una didascalia personalizzata per visualizzare i valori dei campi null.  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The source of the event.</param>
        <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        <summary>Binds the value of a field to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> è un metodo di supporto usato per associare il valore di un campo nell'origine dati a una cella corrispondente nel <xref:System.Web.UI.WebControls.BoundField> oggetto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The control to which the field value is bound is not a <see cref="T:System.Web.UI.WebControls.TextBox" /> or a <see cref="T:System.Web.UI.WebControls.TableCell" />.</exception>
        <block subset="none" type="overrides">
          <para>Quando si estende il <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), è possibile eseguire l'override questo metodo per eseguire una routine di associazione personalizzato.</para>
        </block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the value of the field can be modified in edit mode.</summary>
        <value>
          <see langword="true" /> Per impedire che il valore del campo da modificare in modalità di modifica; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> proprietà per impedire che i valori visualizzati un <xref:System.Web.UI.WebControls.BoundField> oggetto venga modificato. Quando un controllo associato a dati è in modalità di modifica, i campi che sono di sola lettura vengono visualizzati come testo normale, senza controlli di modifica.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> proprietà si applica solo alla modalità di modifica. Per impedire che i campi visualizzati in modalità di inserimento, utilizzare il <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> proprietà per impedire che i valori del campo chiave visualizzati in un <xref:System.Web.UI.WebControls.BoundField> oggetto vengano modificati in modalità di modifica.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether HTML encoding is supported by a <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <value>Restituisce sempre <see langword="true" /> per indicare che la codifica HTML sia supportata da un <see cref="T:System.Web.UI.WebControls.BoundField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> è una proprietà di supporto utilizzata per la <xref:System.Web.UI.WebControls.BoundField> classe e le classi derivate per determinare se la codifica HTML è supportata dalla classe.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si deriva dal <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), è possibile ignorare questa proprietà per indicare se la codifica HTML è supportata dalla classe.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the "this" expression.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo campo viene usato per indicare che il <xref:System.Web.UI.WebControls.BoundField> deve associare l'oggetto rispetto all'origine dati, piuttosto che un campo dell'origine dati. In di questo caso, l'oggetto `ToString` valore verrà visualizzato nel campo.  
  
 Questo campo viene usato principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether the control validates client input or not.</summary>
        <value>Un valore che determina se il controllo convalida input per il client oppure No. Il valore predefinito è <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines whether the controls contained in a <see cref="T:System.Web.UI.WebControls.BoundField" /> object support callbacks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> è un metodo di supporto usato per determinare se i controlli contenuti in un <xref:System.Web.UI.WebControls.BoundField> supportano i callback dell'oggetto. Questo metodo è stato implementato come un metodo vuoto (un metodo che non contiene alcun codice) per indicare che sono supportati i callback.  
  
> [!NOTE]
>  Questo metodo viene usato principalmente dagli sviluppatori di controlli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le classi che derivano dal <see cref="T:System.Web.UI.WebControls.BoundField" /> classe può eseguire l'override di questo metodo per indicare se i controlli contenuto il campo supportano i callback. Per indicare che sono supportati i callback, implementare questo metodo come metodo vuoto che non viene generata un'eccezione; in caso contrario, generare un'eccezione con un messaggio utile che descrive perché i callback non sono supportati.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>