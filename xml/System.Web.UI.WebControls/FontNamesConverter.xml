<Type Name="FontNamesConverter" FullName="System.Web.UI.WebControls.FontNamesConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75056282fb57a24caf5b54882a18df6d9457b6d0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36582295" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontNamesConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontNamesConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontNamesConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontNamesConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontNamesConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type FontNamesConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Converte una stringa contenente un elenco dei tipi di carattere in una matrice di stringhe che rappresentano i singoli tipi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> metodo di questa classe per convertire una stringa contenente un elenco di tipi di carattere in una matrice di stringhe contenente i nomi singoli. Ogni nome di carattere nella stringa deve essere separati da una virgola. Ad esempio, la stringa "arial, volte verdana roman, nuovo", viene convertito in una matrice che contiene le stringhe "arial", "times new roman" e "verdana". Notare che le virgole vengono rimosse insieme a qualsiasi spazio vuoto all'inizio o alla fine del nome del tipo di carattere. Spazi vuoti all'interno di un nome di carattere non viene rimosso.  
  
 Il <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> metodo esegue l'operazione inversa. Converte una matrice di stringhe contenente i nomi di singoli tipi di carattere a una singola stringa contenente un elenco dei nomi. Ad esempio, una matrice che contiene le stringhe "arial", "times new roman" e "verdana" converte la stringa "arial, volte nuovo roman, verdana". Si noti che le virgole vengono inserite automaticamente tra i nomi di caratteri senza spazi vuoti.  
  
 Chiamare il <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> metodo per verificare che la conversione può essere eseguita prima di chiamare il <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FontNamesConverter> (classe) per convertire una stringa con un elenco di nomi di carattere in una matrice di stringhe contenente i nomi singoli. La matrice di stringhe viene quindi riconvertita in un'unica stringa e visualizzata.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNamesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNamesConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.FontNamesConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario accedere direttamente un convertitore di tipi. In alternativa, chiamare il convertitore appropriato tramite un <xref:System.ComponentModel.TypeDescriptor> oggetto. Per altre informazioni, vedere gli esempi in <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontNamesConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce informazioni sul contesto di un convertitore di tipi. È possibile passare facoltativamente un valore <see langword="null" /> per questo parametro.</param>
        <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati dal quale eseguire la conversione.</param>
        <summary>Determina se il convertitore in uso è in grado di convertire un oggetto del tipo di dati specificato in una matrice di stringhe contenente i singoli tipi di carattere.</summary>
        <returns>
          <see langword="true" /> se il tipo può essere convertito, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> metodo per determinare se il tipo di dati specificato può essere convertito in una matrice di stringhe contenente i nomi dei singoli tipi di carattere.  
  
> [!NOTE]
>  Questo convertitore può convertire solo da un `string` tipo di dati. Il `sourceType` parametro deve essere di tipo <xref:System.String>. In caso contrario, questo metodo restituisce `false` per indicare che il tipo di dati specificato non può essere convertito.  
  
 Può passare facoltativamente `null` per il `context` parametro.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>. Nell'esempio si determina se il tipo di dati specificato può essere convertito in una matrice di stringhe contenente i nomi di singoli tipi di carattere prima di eseguire la conversione.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="fontNamesConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce informazioni sul contesto di un convertitore di tipi. Questo parametro non è utilizzato in questo metodo, ma verrà implementato nelle versioni successive del metodo. È possibile passare facoltativamente un valore <see langword="null" /> per questo parametro.</param>
        <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta informazioni sulle impostazioni cultura, quali lingua, sistema del calendario e così via. Questo parametro non è utilizzato in questo metodo, ma verrà implementato nelle versioni successive del metodo. È possibile passare facoltativamente un valore <see langword="null" /> per questo parametro.</param>
        <param name="value">Istanza <see cref="T:System.Object" /> che rappresenta la stringa di origine da cui eseguire la conversione.</param>
        <summary>Converte una stringa che rappresenta un elenco dei tipi di carattere in una matrice di stringhe contenente i singoli tipi.</summary>
        <returns>Istanza <see cref="T:System.Object" /> che rappresenta la matrice di stringhe contenente i singoli tipi di carattere.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> metodo per convertire una stringa contenente un elenco di tipi di carattere in una matrice di stringhe contenente i nomi singoli. Ogni nome di carattere nella stringa deve essere separati da una virgola. Ad esempio, la stringa "arial, volte verdana roman, nuovo", viene convertito in una matrice che contiene le stringhe "arial", "times new roman" e "verdana". Si noti che le virgole vengono rimosse insieme a qualsiasi spazio vuoto all'inizio o alla fine del nome del tipo di carattere. Spazi vuoti all'interno di un nome di carattere non viene rimosso.  
  
> [!NOTE]
>  Il `context` e `culture` parametri non vengono utilizzati in questa versione del metodo; sono riservate per le future versioni del metodo. Può passare facoltativamente `null` per questi parametri.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> metodo per convertire una stringa con un elenco di nomi di carattere in una matrice di stringhe contenente i nomi singoli.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <paramref name="value" /> non è di tipo <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="fontNamesConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce informazioni sul contesto di un convertitore di tipi. Questo parametro non è utilizzato in questo metodo, ma verrà implementato nelle versioni successive del metodo. È possibile passare facoltativamente un valore <see langword="null" /> per questo parametro.</param>
        <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta informazioni sulle impostazioni cultura, quali lingua, sistema del calendario e così via. Questo parametro non è utilizzato in questo metodo, ma verrà implementato nelle versioni successive del metodo. È possibile passare facoltativamente un valore <see langword="null" /> per questo parametro.</param>
        <param name="value">Oggetto che rappresenta la matrice di origine delle stringhe da cui eseguire la conversione.</param>
        <param name="destinationType">Oggetto dell'istanza <see cref="T:System.Object" /> che rappresenta il tipo di dati nel quale eseguire la conversione. Questo parametro deve essere di tipo <see cref="T:System.String" />.</param>
        <summary>Crea una stringa che rappresenta un elenco dei tipi di carattere da una matrice di stringhe contenente i singoli tipi.</summary>
        <returns>Istanza <see cref="T:System.Object" /> che rappresenta una stringa contenente un elenco dei tipi di carattere.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> metodo per convertire una matrice di stringhe contenente i nomi di singoli tipi di carattere a una singola stringa contenente un elenco dei nomi. Ad esempio, una matrice che contiene le stringhe "arial", "times new roman" e "verdana" converte la stringa "arial, volte nuovo roman, verdana". Si noti che le virgole vengono inserite automaticamente tra i nomi di caratteri senza spazi vuoti.  
  
> [!NOTE]
>  Questo convertitore può convertire solo a un `string` tipo di dati. Il `destinationType` parametro deve essere di tipo <xref:System.String>.  
  
> [!NOTE]
>  Il `context` e `culture` parametri non vengono utilizzati in questa versione del metodo; sono riservate per le future versioni del metodo. Può passare facoltativamente `null` per questi parametri.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> metodo per convertire una matrice di stringhe contenente i singoli nomi in una stringa che contiene un elenco di nomi di carattere.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <paramref name="destinationType" /> non è di tipo <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>