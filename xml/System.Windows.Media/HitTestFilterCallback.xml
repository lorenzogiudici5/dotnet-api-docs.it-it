<Type Name="HitTestFilterCallback" FullName="System.Windows.Media.HitTestFilterCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0e53ad2f1fd1bdc6d1c1436c38e5eabcee4c8677" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30666445" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate System.Windows.Media.HitTestFilterBehavior HitTestFilterCallback(DependencyObject potentialHitTestTarget);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HitTestFilterCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.HitTestFilterCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function HitTestFilterCallback(potentialHitTestTarget As DependencyObject) As HitTestFilterBehavior " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Windows::Media::HitTestFilterBehavior HitTestFilterCallback(DependencyObject ^ potentialHitTestTarget);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="potentialHitTestTarget" Type="System.Windows.DependencyObject" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Windows.Media.HitTestFilterBehavior</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="potentialHitTestTarget">Oggetto visivo per l'hit test.</param>
    <summary>Rappresenta il metodo di callback che specifica le parti della struttura ad albero visuale da omettere dall'elaborazione dell'hit test.</summary>
    <returns>Oggetto <see cref="T:System.Windows.Media.HitTestFilterBehavior" /> che rappresenta l'azione risultante dell'hit test.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per tutti gli oggetti visivi che eseguono il mapping ai criteri dell'hit test, a partire dall'oggetto visivo specificato e decrescente tramite il ramo dell'albero visuale, viene richiamato il metodo di callback del filtro dell'hit test. È possibile tuttavia decidere di ignorare determinate parti della struttura ad albero visuale che non si desidera elaborare nella funzione di callback dei risultati dell'hit test. Il valore restituito dalla funzione di callback del filtro dell'hit test determina il tipo di azione che deve essere eseguita dall'enumerazione degli oggetti visivi. Se viene restituito il valore, ad esempio <xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren>, è possibile rimuovere l'oggetto visivo corrente e dei relativi discendenti dall'enumerazione dei risultati dell'hit test. Ciò significa che il metodo di callback dei risultati dell'hit test non visualizzeranno questi oggetti nell'enumerazione.  
  
> [!NOTE]
>  L'eliminazione di oggetti dalla struttura ad albero visuale consente di ridurre la quantità di elaborazione durante la fase di enumerazione dei risultati dell'hit test.  
  
 ![Eliminazione di un struttura ad albero visuale con un filtro hit test](~/add/media/filteredvisualtree-01.png "l'eliminazione di un struttura ad albero visuale con un filtro hit test")  
Eliminazione di una struttura ad albero visuale  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come richiamare <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> utilizzando un <xref:System.Windows.Media.HitTestFilterCallback> valore. Viene definito anche il metodo di callback dell'hit test corrispondente.  
  
 [!code-csharp[HitTestingOverview#104](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#104)]
 [!code-vb[HitTestingOverview#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#104)]  
  
 Nell'esempio seguente viene illustrato come restituire un <xref:System.Windows.Media.HitTestFilterBehavior> valore da un metodo di callback del filtro dell'hit test.  
  
 [!code-csharp[HitTestingOverview#106](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#106)]
 [!code-vb[HitTestingOverview#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)" />
  </Docs>
</Type>