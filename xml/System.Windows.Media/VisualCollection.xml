<Type Name="VisualCollection" FullName="System.Windows.Media.VisualCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19eeb062536a84069070c205aaddc936c33cd61d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VisualCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0d77a-101">Rappresenta una raccolta ordinata di oggetti <see cref="T:System.Windows.Media.Visual" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d77a-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Visual" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-102">Oggetto <xref:System.Windows.Media.VisualCollection> presenta un'affinità di contesto implicita.</span><span class="sxs-lookup"><span data-stu-id="0d77a-102">A <xref:System.Windows.Media.VisualCollection> has implied context affinity.</span></span> <span data-ttu-id="0d77a-103">Se una stored procedure tenta di accedere il <xref:System.Windows.Media.VisualCollection> da un contesto diverso rispetto al contesto dell'oggetto proprietario <xref:System.Windows.Media.ContainerVisual>, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="0d77a-103">If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d77a-104">Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Media.VisualCollection> e aggiungervi i membri.</span><span class="sxs-lookup"><span data-stu-id="0d77a-104">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="0d77a-105">Per l'esempio completo, vedere [Hit Test mediante DrawingVisuals](http://go.microsoft.com/fwlink/?LinkID=159994).</span><span class="sxs-lookup"><span data-stu-id="0d77a-105">For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualCollection (System.Windows.Media.Visual parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualCollection(System::Windows::Media::Visual ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="0d77a-106">Oggetto visivo padre di cui viene restituito l'oggetto <see cref="T:System.Windows.Media.VisualCollection" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-106">The parent visual object whose <see cref="T:System.Windows.Media.VisualCollection" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-107">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-107">Initializes a new instance of the <see cref="T:System.Windows.Media.VisualCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="0d77a-108">Oggetto <see cref="T:System.Windows.Media.Visual" /> da aggiungere all'insieme <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-108">The <see cref="T:System.Windows.Media.Visual" /> to append to the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-109">Accoda un oggetto <see cref="T:System.Windows.Media.Visual" /> alla fine dell'oggetto <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-109">Appends a <see cref="T:System.Windows.Media.Visual" /> to the end of the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d77a-110">Indice nell'insieme in corrispondenza del quale è stato aggiunto il parametro <paramref name="visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-110">The index in the collection at which <paramref name="visual" /> was added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-111">Aggiunta di un <xref:System.Windows.Media.Visual> il cui valore è `null` è consentita e non genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="0d77a-111">Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception.</span></span>  
  
 <span data-ttu-id="0d77a-112">Il <xref:System.Windows.Media.VisualCollection.Add%2A> metodo imposta inoltre una relazione padre-figlio tra l'elemento padre visuale, che è il proprietario del <xref:System.Windows.Media.VisualCollection>e il figlio `visual`.</span><span class="sxs-lookup"><span data-stu-id="0d77a-112">The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="0d77a-113">Se è necessario un maggiore controllo di basso livello sull'implementazione di archiviazione sottostante degli oggetti visivi figlio di una classe personalizzata, è consigliabile utilizzare il <xref:System.Windows.Media.Visual.AddVisualChild%2A> e <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="0d77a-113">If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="0d77a-114">Quando si utilizzano questi metodi, è necessario definire la propria implementazione di archiviazione e non utilizzare <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-114">When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d77a-115">Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Media.VisualCollection> e aggiungervi i membri.</span><span class="sxs-lookup"><span data-stu-id="0d77a-115">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="0d77a-116">Per l'esempio completo, vedere [Hit Test mediante DrawingVisuals](http://go.microsoft.com/fwlink/?LinkID=159994).</span><span class="sxs-lookup"><span data-stu-id="0d77a-116">For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d77a-117">Viene generato un oggetto <see cref="T:System.ArgumentException" /> se l'oggetto <see cref="T:System.Windows.Media.Visual" /> è un elemento radice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-117">An <see cref="T:System.ArgumentException" /> is thrown if the <see cref="T:System.Windows.Media.Visual" /> is a root element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d77a-118">Ottiene o imposta il numero di elementi che <see cref="T:System.Windows.Media.VisualCollection" /> può contenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-118">Gets or sets the number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d77a-119">Numero degli elementi che <see cref="T:System.Windows.Media.VisualCollection" /> può contenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-119">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-120">Il valore di <xref:System.Windows.Media.VisualCollection.Capacity%2A> è il numero di elementi che la <xref:System.Windows.Media.VisualCollection> è in grado di archiviare.</span><span class="sxs-lookup"><span data-stu-id="0d77a-120">The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span> <span data-ttu-id="0d77a-121"><xref:System.Windows.Media.VisualCollection.Count%2A> è il numero di oggetti visivi che sono in realtà il <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-121"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="0d77a-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> è sempre maggiore di o uguale a <xref:System.Windows.Media.VisualCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>.</span></span> <span data-ttu-id="0d77a-123">Se <xref:System.Windows.Media.VisualCollection.Count%2A> supera <xref:System.Windows.Media.VisualCollection.Capacity%2A> durante l'aggiunta di elementi, la capacità del <xref:System.Windows.Media.VisualCollection> è aumentato.</span><span class="sxs-lookup"><span data-stu-id="0d77a-123">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased.</span></span> <span data-ttu-id="0d77a-124">Per impostazione predefinita <xref:System.Windows.Media.VisualCollection.Capacity%2A> è zero.</span><span class="sxs-lookup"><span data-stu-id="0d77a-124">By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d77a-125">L'oggetto <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> è impostato su un valore minore di <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-125">
              <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> is set to a value that is less than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d77a-126">Rimuove tutti gli elementi da <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-126">Removes all elements from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-127">Il <xref:System.Windows.Media.VisualCollection.Count%2A> viene reimpostato su zero.</span><span class="sxs-lookup"><span data-stu-id="0d77a-127">The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero.</span></span> <span data-ttu-id="0d77a-128">Il valore di <xref:System.Windows.Media.VisualCollection.Capacity%2A> non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="0d77a-128">The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="0d77a-129">Per reimpostare la capacità del <xref:System.Windows.Media.VisualCollection>, impostare il <xref:System.Windows.Media.VisualCollection.Capacity%2A> proprietà per le dimensioni desiderate.</span><span class="sxs-lookup"><span data-stu-id="0d77a-129">To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="0d77a-130">Oggetto <see cref="T:System.Windows.Media.Visual" /> da cercare nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-130">The <see cref="T:System.Windows.Media.Visual" /> to search for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-131">Restituisce un valore <see cref="T:System.Boolean" /> che indica se l'oggetto <see cref="T:System.Windows.Media.Visual" /> specificato è incluso o meno nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-131">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified <see cref="T:System.Windows.Media.Visual" /> is contained in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d77a-132">
            <see langword="true" /> se <paramref name="visual" /> è contenuto nell'insieme; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-132">
              <see langword="true" /> if <paramref name="visual" /> is contained in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-133">Lo scenario peggiore fase di esecuzione di questa funzione è `O(n)`, dove `n` è il numero di elementi di <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-133">The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d77a-134">Copia l'insieme corrente nella matrice passata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-134">Copies the current collection into the passed array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0d77a-135">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-135">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements that are copied from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0d77a-136">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-136">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-137">Copia gli elementi dell'insieme in una matrice, a partire da un indice di matrice specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-137">Copies the items in the collection to an array, starting at a specific array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Visual[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Visual[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Visual(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Visual ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Visual[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0d77a-138">Matrice degli oggetti <see cref="T:System.Windows.Media.Visual" /> che deve presentare indicizzazione in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-138">An array of <see cref="T:System.Windows.Media.Visual" /> objects (which must have zero-based indexing).</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0d77a-139">Indice a partire dal quale iniziare la copia all'interno di <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-139">The index to start copying from within <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-140">Copia l'insieme corrente nella matrice <see cref="T:System.Windows.Media.Visual" /> passata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-140">Copies the current collection into the passed <see cref="T:System.Windows.Media.Visual" /> array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d77a-141">Ottiene il numero di elementi nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-141">Gets the number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d77a-142">Numero di elementi contenuti nell'oggetto <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-142">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> contains.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-143"><xref:System.Windows.Media.VisualCollection.Count%2A> è il numero di elementi effettivamente contenuti nella <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-143"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="0d77a-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> è il numero di elementi che la <xref:System.Windows.Media.VisualCollection> è in grado di archiviare.</span><span class="sxs-lookup"><span data-stu-id="0d77a-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span>  
  
 <span data-ttu-id="0d77a-145"><xref:System.Windows.Media.VisualCollection.Count%2A> è sempre minore o uguale a <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-145"><xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span></span> <span data-ttu-id="0d77a-146">Se <xref:System.Windows.Media.VisualCollection.Count%2A> supera <xref:System.Windows.Media.VisualCollection.Capacity%2A> durante l'aggiunta di elementi, la capacità dell'elenco viene raddoppiata automaticamente mediante la riallocazione della matrice interna prima di copiare gli elementi e aggiunta di nuovi elementi.</span><span class="sxs-lookup"><span data-stu-id="0d77a-146">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.VisualCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As VisualCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualCollection::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d77a-147">Recupera un enumeratore in grado di scorrere l'oggetto <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-147">Retrieves an enumerator that can iterate through the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d77a-148">Enumeratore che può essere usato per scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-148">An enumerator that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="0d77a-149">Oggetto <see cref="T:System.Windows.Media.Visual" /> da individuare in <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-149">The <see cref="T:System.Windows.Media.Visual" /> to locate in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-150">Restituisce l'indice in base zero dell'oggetto <see cref="T:System.Windows.Media.Visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-150">Returns the zero-based index of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d77a-151">Indice dell'oggetto <see cref="T:System.Windows.Media.Visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-151">The index of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-152">Se il <xref:System.Windows.Media.Visual> non si trova nel <xref:System.Windows.Media.VisualCollection>, viene restituito -1.</span><span class="sxs-lookup"><span data-stu-id="0d77a-152">If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned.</span></span> <span data-ttu-id="0d77a-153">Se `null` viene passato al metodo, l'indice della prima voce con `null` viene restituito.</span><span class="sxs-lookup"><span data-stu-id="0d77a-153">If `null` is passed to the method, the index of the first entry that has `null` is returned.</span></span> <span data-ttu-id="0d77a-154">Se è presente alcuna voce null, viene restituito -1.</span><span class="sxs-lookup"><span data-stu-id="0d77a-154">If there is no null entry, -1 is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0d77a-155">Indice in base zero in corrispondenza del quale deve essere inserito il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-155">The zero-based index at which the value should be inserted.</span>
          </span>
        </param>
        <param name="visual">
          <span data-ttu-id="0d77a-156">
            <see cref="T:System.Windows.Media.Visual" /> da inserire in <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-156">The <see cref="T:System.Windows.Media.Visual" /> to insert into the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-157">Inserisce un elemento in <see cref="T:System.Windows.Media.VisualCollection" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-157">Inserts an element into the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-158">Se <xref:System.Windows.Media.VisualCollection.Count%2A> è già uguale <xref:System.Windows.Media.VisualCollection.Capacity%2A>, la capacità del <xref:System.Windows.Media.VisualCollection> viene aumentato prima che il nuovo <xref:System.Windows.Media.Visual> viene inserito.</span><span class="sxs-lookup"><span data-stu-id="0d77a-158">If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted.</span></span> <span data-ttu-id="0d77a-159">Se `index` è uguale a <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` viene aggiunto alla fine di <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-159">If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="0d77a-160">Qualsiasi esistenti gli oggetti visivi maggiore o uguale a `index` vengono spostate per adattare il nuovo <xref:System.Windows.Media.Visual>, e i relativi valori di indice vengono aggiornati.</span><span class="sxs-lookup"><span data-stu-id="0d77a-160">Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.</span></span>  
  
 <span data-ttu-id="0d77a-161">Il <xref:System.Windows.Media.VisualCollection.Insert%2A> metodo imposta inoltre una relazione padre-figlio tra l'elemento padre visuale, che è il proprietario del <xref:System.Windows.Media.VisualCollection>e il figlio `visual`.</span><span class="sxs-lookup"><span data-stu-id="0d77a-161">The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="0d77a-162">Se è necessario maggiore controllo di basso livello sull'implementazione di archiviazione sottostante degli oggetti visivi figlio, è consigliabile utilizzare il <xref:System.Windows.Media.Visual.AddVisualChild%2A> e <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="0d77a-162">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="0d77a-163">Quando si utilizzano questi metodi, si definisce la propria implementazione di archiviazione e non utilizzare <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-163">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d77a-164">
            <paramref name="index" /> è minore di zero o maggiore di <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-164">
              <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d77a-165">Ottiene un valore che indica se <see cref="T:System.Windows.Media.VisualCollection" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-165">Gets a value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d77a-166">Valore che indica se l'oggetto <see cref="T:System.Windows.Media.VisualCollection" /> è di sola lettura o meno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-166">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-167">Questa proprietà è sempre `false` per tutti i <xref:System.Windows.Media.VisualCollection> oggetti.</span><span class="sxs-lookup"><span data-stu-id="0d77a-167">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d77a-168">Ottiene un valore che indica se l'accesso a <see cref="T:System.Windows.Media.VisualCollection" /> è sincronizzato (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-168">Gets a value that indicates whether access to the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d77a-169">Valore che indica se l'oggetto <see cref="T:System.Windows.Media.VisualCollection" /> è sincronizzato, ovvero thread-safe, o meno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-169">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-170">Questa proprietà è sempre `false` per tutti i <xref:System.Windows.Media.VisualCollection> oggetti.</span><span class="sxs-lookup"><span data-stu-id="0d77a-170">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ default[int] { System::Windows::Media::Visual ^ get(int index); void set(int index, System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0d77a-171">Indice in base zero dell'oggetto <see cref="T:System.Windows.Media.VisualCollection" /> in base al quale ottenere o impostare l'oggetto <see cref="T:System.Windows.Media.Visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-171">The zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" /> from which to get or set the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-172">Ottiene o imposta l'oggetto <see cref="T:System.Windows.Media.Visual" /> archiviato in base all'indice in base zero dell'oggetto <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-172">Gets or sets the <see cref="T:System.Windows.Media.Visual" /> that is stored at the zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d77a-173">Oggetto <see cref="T:System.Windows.Media.Visual" /> archiviato in corrispondenza del parametro <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-173">The <see cref="T:System.Windows.Media.Visual" /> that is stored at <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-174">Questa proprietà consente di accedere a un oggetto <xref:System.Windows.Media.Visual> nel <xref:System.Windows.Media.VisualCollection> utilizzando un indice.</span><span class="sxs-lookup"><span data-stu-id="0d77a-174">This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d77a-175">
            <paramref name="index" /> è minore di zero oppure <paramref name="index" /> è maggiore o uguale a <see cref="P:System.Windows.Media.VisualCollection.Count" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-175">
              <paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d77a-176">Il nuovo elemento figlio dispone già di un elemento padre oppure il valore in base all'indice specificato è diverso da <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-176">The new child element already has a parent, or the value at the specified index is not <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="0d77a-177">Oggetto <see cref="T:System.Windows.Media.Visual" /> da rimuovere da <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-177">The <see cref="T:System.Windows.Media.Visual" /> to remove from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-178">Rimuove l'oggetto <see cref="T:System.Windows.Media.Visual" /> specificato dall'oggetto <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-178">Removes the specified <see cref="T:System.Windows.Media.Visual" /> object from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-179">Gli oggetti visivi che seguono l'oggetto rimosso vengono spostati per occupare la posizione rimasta vuota e i relativi valori di indice vengono aggiornati.</span><span class="sxs-lookup"><span data-stu-id="0d77a-179">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span> <span data-ttu-id="0d77a-180">Se `visual` è `null`, il primo `null` voce viene rimossa.</span><span class="sxs-lookup"><span data-stu-id="0d77a-180">If `visual` is `null`, the first `null` entry is removed.</span></span> <span data-ttu-id="0d77a-181">La rimozione di un `null` voce è lineare delle dimensioni della raccolta.</span><span class="sxs-lookup"><span data-stu-id="0d77a-181">Note that removing a `null` entry is linear in the size of the collection.</span></span>  
  
 <span data-ttu-id="0d77a-182">Il <xref:System.Windows.Media.VisualCollection.Remove%2A> metodo rimuove anche la relazione padre-figlio tra l'elemento padre visuale, ovvero il proprietario del <xref:System.Windows.Media.VisualCollection>e il figlio `visual`.</span><span class="sxs-lookup"><span data-stu-id="0d77a-182">The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="0d77a-183">Se è necessario maggiore controllo di basso livello sull'implementazione di archiviazione sottostante degli oggetti visivi figlio, è consigliabile utilizzare il <xref:System.Windows.Media.Visual.AddVisualChild%2A> e <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="0d77a-183">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="0d77a-184">Quando si utilizzano questi metodi, si definisce la propria implementazione di archiviazione e non utilizzare <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-184">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0d77a-185">Indice in base zero dell'oggetto visivo da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-185">The zero-based index of the visual to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-186">Rimuove dall'oggetto <see cref="T:System.Windows.Media.VisualCollection" /> l'oggetto visivo in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-186">Removes the visual object at the specified index in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-187">Gli oggetti visivi che seguono l'oggetto rimosso vengono spostati per occupare la posizione rimasta vuota e i relativi valori di indice vengono aggiornati.</span><span class="sxs-lookup"><span data-stu-id="0d77a-187">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span>  
  
 <span data-ttu-id="0d77a-188">Il <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> metodo rimuove anche la relazione padre-figlio tra l'elemento padre visuale, ovvero il proprietario del <xref:System.Windows.Media.VisualCollection>e il figlio `visual`.</span><span class="sxs-lookup"><span data-stu-id="0d77a-188">The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="0d77a-189">Se è necessario maggiore controllo di basso livello sull'implementazione di archiviazione sottostante degli oggetti visivi figlio, è consigliabile utilizzare il <xref:System.Windows.Media.Visual.AddVisualChild%2A> e <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="0d77a-189">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="0d77a-190">Quando si utilizzano questi metodi, si definisce la propria implementazione di archiviazione e non utilizzare <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-190">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d77a-191">
            <paramref name="index" /> è minore di zero oppure <paramref name="index" /> è maggiore o uguale a <see cref="P:System.Windows.Media.VisualCollection.Count" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-191">
              <paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0d77a-192">Indice in base zero dell'intervallo di elementi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-192">The zero-based index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0d77a-193">Numero di elementi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-193">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d77a-194">Rimuove un intervallo di oggetti visivi dall'oggetto <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-194">Removes a range of visual objects from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d77a-195">Gli oggetti visivi che seguono l'oggetto rimosso vengono spostati in modo da occupare le posizioni liberate e relativi valori di indice vengono aggiornati.</span><span class="sxs-lookup"><span data-stu-id="0d77a-195">The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</span></span>  
  
 <span data-ttu-id="0d77a-196">Il <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> metodo rimuove anche le relazioni padre-figlio tra l'elemento padre visuale, che è il proprietario del <xref:System.Windows.Media.VisualCollection>e l'intervallo di elementi visivi figlio.</span><span class="sxs-lookup"><span data-stu-id="0d77a-196">The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.</span></span>  
  
 <span data-ttu-id="0d77a-197">Se è necessario maggiore controllo di basso livello sull'implementazione di archiviazione sottostante degli oggetti visivi figlio, è consigliabile utilizzare il <xref:System.Windows.Media.Visual.AddVisualChild%2A> e <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="0d77a-197">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="0d77a-198">Quando si utilizzano questi metodi, si definisce la propria implementazione di archiviazione e non utilizzare <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0d77a-198">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d77a-199">
            <paramref name="index" /> è minore di zero oppure <paramref name="count" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-199">
              <paramref name="index" /> is less than zero or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d77a-200">
            <paramref name="index" /> e <paramref name="count" /> non fanno riferimento a un intervallo valido di elementi contenuti nell'oggetto <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-200">
              <paramref name="index" /> and <paramref name="count" /> do not refer to a valid range of elements in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d77a-201">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-201">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d77a-202">Valore di tipo <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-202">A value of type <see cref="T:System.Object" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d77a-203">Questo membro supporta l'infrastruttura di [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] e non deve essere usato direttamente dal codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-203">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="0d77a-204">Per una descrizione di questo membro, vedere <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-204">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d77a-205">Oggetto che può essere usato per scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d77a-205">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>