<Type Name="DoubleCollection" FullName="System.Windows.Media.DoubleCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1ae724548f6987e963a6ed3ae229c8298973dac" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52239689" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DoubleCollection : System.Windows.Freezable, IFormattable, System.Collections.Generic.ICollection&lt;double&gt;, System.Collections.Generic.IEnumerable&lt;double&gt;, System.Collections.Generic.IList&lt;double&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DoubleCollection extends System.Windows.Freezable implements class System.Collections.Generic.ICollection`1&lt;float64&gt;, class System.Collections.Generic.IEnumerable`1&lt;float64&gt;, class System.Collections.Generic.IList`1&lt;float64&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DoubleCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DoubleCollection&#xA;Inherits Freezable&#xA;Implements ICollection(Of Double), IEnumerable(Of Double), IFormattable, IList, IList(Of Double)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DoubleCollection sealed : System::Windows::Freezable, IFormattable, System::Collections::Generic::ICollection&lt;double&gt;, System::Collections::Generic::IEnumerable&lt;double&gt;, System::Collections::Generic::IList&lt;double&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type DoubleCollection = class&#xA;    inherit Freezable&#xA;    interface IFormattable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&lt;double&gt;&#xA;    interface ICollection&lt;double&gt;&#xA;    interface seq&lt;double&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.DoubleCollectionConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.DoubleCollectionValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="64149-101">Rappresenta una raccolta ordinata di valori <see cref="T:System.Double" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64149-101">Represents an ordered collection of <see cref="T:System.Double" /> values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-102">I membri di questa classe si comportano esattamente come descritto dal <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.ICollection%601>, e <xref:System.Collections.Generic.IEnumerable%601> documentazione, ad eccezione del fatto che questa implementazione genera un' <xref:System.ArgumentException> se si prova a inserire `null` nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="64149-102">Members of this class behave exactly as described by the <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.ICollection%601>, and <xref:System.Collections.Generic.IEnumerable%601> documentation, except that this implementation throws an <xref:System.ArgumentException> if you attempt to insert `null` into the collection.</span></span>  
  
 <span data-ttu-id="64149-103">**Funzionalità di Freezable:** perché eredita dal <xref:System.Windows.Freezable> (classe), il <xref:System.Windows.Media.DoubleCollection> classe fornisce diverse funzionalità speciali: <xref:System.Windows.Media.DoubleCollection> gli oggetti possono essere dichiarati come, condivisi tra più oggetti, sola lettura per migliorare le prestazioni, clonati e resi thread-safe.</span><span class="sxs-lookup"><span data-stu-id="64149-103">**Freezable Features:** Because it inherits from the <xref:System.Windows.Freezable> class, the <xref:System.Windows.Media.DoubleCollection> class provides several special features: <xref:System.Windows.Media.DoubleCollection> objects can be declared as , shared among multiple objects, made read-only to improve performance, cloned, and made thread-safe.</span></span> <span data-ttu-id="64149-104">Per altre informazioni sulle diverse funzionalità fornita da <xref:System.Windows.Freezable> oggetti, vedere la [Cenni preliminari sugli oggetti Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="64149-104">For more information about the different features provided by <xref:System.Windows.Freezable> objects, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_DoubleCollection"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="64149-105">Uso della sintassi XAML per gli attributi</span><span class="sxs-lookup"><span data-stu-id="64149-105">XAML Attribute Usage</span></span>  
  
```  
<object property="oneOrMoreDoubleValues"/>  
```  
  
<a name="xamlValues_DoubleCollection"></a>   
## <a name="xaml-values"></a><span data-ttu-id="64149-106">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="64149-106">XAML Values</span></span>  
 <span data-ttu-id="64149-107">*oneOrMoreDoubleValues*</span><span class="sxs-lookup"><span data-stu-id="64149-107">*oneOrMoreDoubleValues*</span></span>  
 <span data-ttu-id="64149-108">Uno o più <xref:System.Double> valori, con ogni coppia delimitate da una singola virgola e/o di uno o più spazi:</span><span class="sxs-lookup"><span data-stu-id="64149-108">One or more <xref:System.Double> values, with each pair delimited by a single comma and/or one or more spaces:</span></span>  
  
 <span data-ttu-id="64149-109"><xref:System.Double> *[delimitatore* <xref:System.Double> *]\**</span><span class="sxs-lookup"><span data-stu-id="64149-109"><xref:System.Double> *[delimeter* <xref:System.Double> *]\**</span></span>  
  
 <span data-ttu-id="64149-110">Ad esempio, `"0.5 1.0 43"` e `"0.5,1.0,43"` sono entrambi validi.</span><span class="sxs-lookup"><span data-stu-id="64149-110">For example, `"0.5 1.0 43"` and `"0.5,1.0,43"` are both valid.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IList`1" />
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64149-111">Inizializza una nuova istanza di un oggetto <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-111">Initializes a new instance of a <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DoubleCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DoubleCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64149-112">Inizializza una nuova istanza di un oggetto <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-112">Initializes a new instance of a <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DoubleCollection (System.Collections.Generic.IEnumerable&lt;double&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;float64&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.#ctor(System.Collections.Generic.IEnumerable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of Double))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DoubleCollection(System::Collections::Generic::IEnumerable&lt;double&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.DoubleCollection : seq&lt;double&gt; -&gt; System.Windows.Media.DoubleCollection" Usage="new System.Windows.Media.DoubleCollection collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="64149-113">Insieme di valori <see cref="T:System.Double" /> che costituiscono <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-113">The collection of <see cref="T:System.Double" /> values that make up the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-114">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.DoubleCollection" /> con l'insieme specificato di valori <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-114">Initializes a new instance of the <see cref="T:System.Windows.Media.DoubleCollection" /> class with the specified collection of <see cref="T:System.Double" /> values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64149-115">
            <paramref name="collection" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-115">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DoubleCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DoubleCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.DoubleCollection : int -&gt; System.Windows.Media.DoubleCollection" Usage="new System.Windows.Media.DoubleCollection capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="64149-116">Numero di valori <see cref="T:System.Double" /> che l'insieme è inizialmente in grado di archiviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-116">The number of <see cref="T:System.Double" /> values that the collection is initially capable of storing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-117">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.DoubleCollection" /> con la capacità specificata o il numero di valori <see cref="T:System.Double" /> che l'insieme è inizialmente in grado di archiviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-117">Initializes a new instance of the <see cref="T:System.Windows.Media.DoubleCollection" /> class with the specified capacity, or the number of <see cref="T:System.Double" /> values the collection is initially capable of storing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.Add(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(double value);" />
      <MemberSignature Language="F#" Value="abstract member Add : double -&gt; unit&#xA;override this.Add : double -&gt; unit" Usage="doubleCollection.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64149-118">Elemento da aggiungere alla fine dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-118">The item to add to the end of this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-119">Aggiunge <see cref="T:System.Double" /> alla fine di <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-119">Adds a <see cref="T:System.Double" /> to the end of this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64149-120">La classe <see cref="T:System.Windows.Media.DoubleCollection" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-120">The <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="64149-121">\- oppure -</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-121">\- or -</span>
          </span>
          <span data-ttu-id="64149-122">Le dimensioni dell'oggetto <see cref="T:System.Windows.Media.DoubleCollection" /> sono fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-122">The <see cref="T:System.Windows.Media.DoubleCollection" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="doubleCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64149-123">Rimuove tutti gli elementi dall'oggetto <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-123">Removes all the items from this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-124">Questo metodo non modificare la capacità del <xref:System.Windows.Media.DoubleCollection>.</span><span class="sxs-lookup"><span data-stu-id="64149-124">This method does not change the capacity of the <xref:System.Windows.Media.DoubleCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64149-125">La classe <see cref="T:System.Windows.Media.DoubleCollection" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-125">The <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.ICollection`1.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DoubleCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DoubleCollection ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Media.DoubleCollection" Usage="doubleCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64149-126">Crea un clone modificabile di questo oggetto <see cref="T:System.Windows.Media.DoubleCollection" />, eseguendo copie complete dei valori dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-126">Creates a modifiable clone of this <see cref="T:System.Windows.Media.DoubleCollection" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="64149-127">Durante la copia delle proprietà di dipendenza, questo metodo copia i riferimenti alle risorse e i data binding (che potrebbero non essere più risolti), ma non le animazioni né i relativi valori correnti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-127">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-128">Clone modificabile dell'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-128">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="64149-129">La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true." />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-129">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-130">Questo metodo viene utilizzato per generare copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto).</span><span class="sxs-lookup"><span data-stu-id="64149-130">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="64149-131">Per praticità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.</span><span class="sxs-lookup"><span data-stu-id="64149-131">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="64149-132">Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="64149-132">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="doubleCollection.CloneCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DoubleCollection CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DoubleCollection ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Media.DoubleCollection" Usage="doubleCollection.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64149-133">Crea un clone modificabile dell'oggetto <see cref="T:System.Windows.Media.DoubleCollection" />, eseguendo copie complete dei valori correnti di tale oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-133">Creates a modifiable clone of this <see cref="T:System.Windows.Media.DoubleCollection" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="64149-134">I riferimenti alle risorse, i data binding e le animazioni non vengono copiati, ma vengono copiati i relativi valori correnti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-134">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-135">Clone modificabile dell'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-135">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="64149-136">La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-136">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-137">Questo metodo viene utilizzato per generare copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto).</span><span class="sxs-lookup"><span data-stu-id="64149-137">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="64149-138">Per praticità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.</span><span class="sxs-lookup"><span data-stu-id="64149-138">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="64149-139">Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="64149-139">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="doubleCollection.CloneCurrentValueCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.Contains(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(double value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : double -&gt; bool&#xA;override this.Contains : double -&gt; bool" Usage="doubleCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64149-140">Elemento da individuare nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-140">The item to locate in this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-141">Determina se <see cref="T:System.Double" /> si trova in <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-141">Determines whether a <see cref="T:System.Double" /> is in this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-142">
            <see langword="true" /> se <paramref name="value" />, l'oggetto <see cref="T:System.Double" /> specificato, si trova in <see cref="T:System.Windows.Media.DoubleCollection" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-142">
              <see langword="true" /> if <paramref name="value" />, the specified <see cref="T:System.Double" />, is in this <see cref="T:System.Windows.Media.DoubleCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.Generic.ICollection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (double[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(float64[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.CopyTo(System.Double[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Double(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;double&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : double[] * int -&gt; unit&#xA;override this.CopyTo : double[] * int -&gt; unit" Usage="doubleCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Double[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64149-143">Matrice che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-143">The array that is the destination of the items copied from this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64149-144">Indice da cui iniziare la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-144">The index at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-145">Copia gli elementi di <see cref="T:System.Windows.Media.DoubleCollection" />, a partire dall'indice specificato, in una matrice di valori <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-145">Copies the items of this <see cref="T:System.Windows.Media.DoubleCollection" />, starting with the specified index, into an array of  <see cref="T:System.Double" /> values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64149-146">
            <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-146">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64149-147">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-147">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64149-148">
            <paramref name="array" /> è multidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-148">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="64149-149">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-149">-or-</span>
          </span>
          <span data-ttu-id="64149-150">Il numero degli elementi nell'oggetto <see cref="T:System.Windows.Media.DoubleCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-150">The number of items in the source <see cref="T:System.Windows.Media.DoubleCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DoubleCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.DoubleCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64149-151">Ottiene il numero di valori double contenuti in <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-151">Gets the number of doubles contained in the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64149-152">Numero di valori double contenuti in <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-152">The number of doubles contained in the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="doubleCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="doubleCollection.GetAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="doubleCollection.GetCurrentValueAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.DoubleCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As DoubleCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DoubleCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.Media.DoubleCollection.Enumerator" Usage="doubleCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64149-153">Restituisce un enumeratore in grado di eseguire l'iterazione nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-153">Returns an enumerator that can iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-154">Oggetto <see cref="T:System.Windows.Media.DoubleCollection.Enumerator" /> in grado di eseguire l'iterazione nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-154">An <see cref="T:System.Windows.Media.DoubleCollection.Enumerator" /> that can iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-155">Gli enumeratori consentono solo la lettura dei dati nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="64149-155">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="64149-156">E non possono essere utilizzati per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="64149-156">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="64149-157">Inizialmente, l'enumeratore è posizionato prima del primo elemento nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="64149-157">Initially, the enumerator is positioned before the first item in the collection.</span></span> <span data-ttu-id="64149-158">In questa posizione, la chiamata a <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="64149-158">At this position, calling <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="64149-159">Pertanto, è necessario chiamare <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="64149-159">Therefore, you must call <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> to advance the enumerator to the first item of the collection before reading the value of <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="64149-160"><xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> o <xref:System.Windows.Media.DoubleCollection.Enumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="64149-160"><xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> returns the same object until either <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> or <xref:System.Windows.Media.DoubleCollection.Enumerator.Reset%2A> is called.</span></span> <span data-ttu-id="64149-161"><xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> imposta <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> all'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="64149-161"><xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> sets <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> to the next item.</span></span>  
  
 <span data-ttu-id="64149-162">Una volta raggiunta la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e la chiamata <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="64149-162">After the end of the collection is passed, the enumerator is positioned after the last item in the collection, and calling <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="64149-163">Se l'ultima chiamata a <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> restituite `false`, la chiamata <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="64149-163">If the last call to <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> returned `false`, calling <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="64149-164">Per impostare <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> sul primo elemento della raccolta anche in questo caso, è possibile chiamare <xref:System.Windows.Media.DoubleCollection.Enumerator.Reset%2A> seguita da <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="64149-164">To set <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> to the first item of the collection again, you can call <xref:System.Windows.Media.DoubleCollection.Enumerator.Reset%2A> followed by <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="64149-165">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="64149-165">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="64149-166">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato e alla successiva chiamata a <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> oppure <xref:System.Windows.Media.DoubleCollection.Enumerator.Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="64149-166">If changes are made to the collection, such as adding, modifying or deleting items, the enumerator is irrecoverably invalidated and the next call to <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> or <xref:System.Windows.Media.DoubleCollection.Enumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="64149-167">Se la raccolta viene modificata tra <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> e <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A>, <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> restituirà l'elemento su cui è stata impostata, anche se l'enumeratore risulta già invalidato.</span><span class="sxs-lookup"><span data-stu-id="64149-167">If the collection is modified between <xref:System.Windows.Media.DoubleCollection.Enumerator.MoveNext%2A> and <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A>, <xref:System.Windows.Media.DoubleCollection.Enumerator.Current%2A> will return the item that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="64149-168">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="64149-168">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="64149-169">Anche se una raccolta è sincronizzata, altri thread è stato ancora modificare la raccolta, che fa sì che l'enumeratore generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="64149-169">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="64149-170">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="64149-170">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.IndexOf(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(double value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : double -&gt; int&#xA;override this.IndexOf : double -&gt; int" Usage="doubleCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64149-171">Oggetto <see cref="T:System.Double" /> da individuare in <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-171">The <see cref="T:System.Double" /> to locate in the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-172">Ottiene l'indice della prima occorrenza dell'oggetto <see cref="T:System.Double" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-172">Gets the index of the first occurrence of the specified <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-173">L'indice di <paramref name="value" /> si trova nella classe <see cref="T:System.Windows.Media.DoubleCollection" />; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-173">The index of <paramref name="value" /> if found in the <see cref="T:System.Windows.Media.DoubleCollection" />; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.Generic.IList`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.Insert(System.Int32,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, double value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * double -&gt; unit&#xA;override this.Insert : int * double -&gt; unit" Usage="doubleCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="64149-174">Posizione di indice in corrispondenza della quale inserire <paramref name="value" />, l'oggetto <see cref="T:System.Double" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-174">The index at which to insert <paramref name="value" />, the specified <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64149-175">Elemento da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-175">The item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-176">Inserisce un oggetto <see cref="T:System.Double" /> in <see cref="T:System.Windows.Media.DoubleCollection" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-176">Inserts a <see cref="T:System.Double" /> into this <see cref="T:System.Windows.Media.DoubleCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-177">A differenza della modalità di implementazione tipiche <xref:System.Collections.Generic.IList%601.Insert%2A?displayProperty=nameWithType>, questa implementazione genera un' <xref:System.ArgumentException> se si prova a inserire una **null** (**Nothing**) riferimento.</span><span class="sxs-lookup"><span data-stu-id="64149-177">Unlike typical implementations of <xref:System.Collections.Generic.IList%601.Insert%2A?displayProperty=nameWithType>, this implementation throws an <xref:System.ArgumentException> if you attempt to insert a **null** (**Nothing**) reference.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64149-178">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-178">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64149-179">
            <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-179">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64149-180">La classe <see cref="T:System.Windows.Media.DoubleCollection" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-180">The <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="64149-181">\- oppure -</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-181">\- or -</span>
          </span>
          <span data-ttu-id="64149-182">Le dimensioni dell'oggetto <see cref="T:System.Windows.Media.DoubleCollection" /> sono fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-182">The <see cref="T:System.Windows.Media.DoubleCollection" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public double this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DoubleCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double default[int] { double get(int index); void set(int index, double value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : double with get, set" Usage="System.Windows.Media.DoubleCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="64149-183">Indice in base zero del valore <see cref="T:System.Double" /> da ottenere o impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-183">The zero-based index of the <see cref="T:System.Double" /> value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-184">Ottiene o imposta l’oggetto <see cref="T:System.Double" /> in corrispondenza dell'indice in base zero specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-184">Gets or sets the <see cref="T:System.Double" /> at the specified zero-based index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64149-185">
            <see cref="T:System.Double" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-185">The <see cref="T:System.Double" /> at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64149-186">
            <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-186">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64149-187">La classe <see cref="T:System.Windows.Media.DoubleCollection" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-187">The <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="64149-188">\- oppure -</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-188">\- or -</span>
          </span>
          <span data-ttu-id="64149-189">Le dimensioni dell'oggetto <see cref="T:System.Windows.Media.DoubleCollection" /> sono fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-189">The <see cref="T:System.Windows.Media.DoubleCollection" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.IList`1.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DoubleCollection Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.DoubleCollection Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::DoubleCollection ^ Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Media.DoubleCollection" Usage="System.Windows.Media.DoubleCollection.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="64149-190">Rappresentazione di <see cref="T:System.String" /> dell'insieme di valori double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-190">The <see cref="T:System.String" /> representation of the collection of doubles.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-191">Converte una rappresentazione di <see cref="T:System.String" /> di un insieme di valori double in un oggetto <see cref="T:System.Windows.Media.DoubleCollection" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-191">Converts a <see cref="T:System.String" /> representation of a collection of doubles into an equivalent <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-192">Restituisce l'oggetto <see cref="T:System.Windows.Media.DoubleCollection" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-192">Returns the equivalent <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.Remove(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(double value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : double -&gt; bool&#xA;override this.Remove : double -&gt; bool" Usage="doubleCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64149-193">Elemento da rimuovere dall'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-193">The item to remove from this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-194">Rimuove la prima occorrenza dell'oggetto<see cref="T:System.Double" /> specificato da <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-194">Removes the first occurrence of the specified <see cref="T:System.Double" /> from this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-195">
            <see langword="true" /> se <paramref name="value" /> è stato rimosso da <see cref="T:System.Windows.Media.DoubleCollection" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-195">
              <see langword="true" /> if <paramref name="value" /> was removed from the <see cref="T:System.Windows.Media.DoubleCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64149-196">La classe <see cref="T:System.Windows.Media.DoubleCollection" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-196">The <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="64149-197">\- oppure -</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-197">\- or -</span>
          </span>
          <span data-ttu-id="64149-198">Le dimensioni dell'oggetto <see cref="T:System.Windows.Media.DoubleCollection" /> sono fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-198">The <see cref="T:System.Windows.Media.DoubleCollection" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.ICollection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="doubleCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="64149-199">Indice dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-199">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-200">Rimuove <see cref="T:System.Double" /> da <see cref="T:System.Windows.Media.DoubleCollection" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-200">Removes the <see cref="T:System.Double" /> at the specified index from this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Double&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Double&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Double&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DoubleCollection.System#Collections#Generic#ICollection&lt;System#Double&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of Double).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Double&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Double&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64149-201">Per una descrizione di questo membro, vedere <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-201">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64149-202">
            <see langword="true" /> se <see cref="T:System.Windows.Media.DoubleCollection" /> è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-202">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-203">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-204">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="64149-204">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Double&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;double&gt; IEnumerable&lt;double&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;float64&gt; System.Collections.Generic.IEnumerable&lt;System.Double&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.System#Collections#Generic#IEnumerable&lt;System#Double&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Double) Implements IEnumerable(Of Double).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;double&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Double&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;double&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64149-205">Per una descrizione di questo membro, vedere <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-205">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-206">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-206">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-207">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-207">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-208">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="64149-208">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64149-209">
            <see cref="T:System.Array" /> in base zero che riceve gli elementi copiati dalla classe <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-209">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64149-210">Prima posizione dell'oggetto <see cref="T:System.Array" /> specificato che riceverà il contenuto copiato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-210">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-211">Per una descrizione di questo membro, vedere <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-211">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-212">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-212">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-213">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="64149-213">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DoubleCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64149-214">Per una descrizione di questo membro, vedere <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-214">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64149-215">
            <see langword="true" /> se l'accesso a <see cref="T:System.Windows.Media.DoubleCollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-215">
              <see langword="true" /> if access to the <see cref="T:System.Windows.Media.DoubleCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-216">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-216">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-217">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="64149-217">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DoubleCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64149-218">Per una descrizione di questo membro, vedere <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-218">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64149-219">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-219">An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-220">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-220">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-221">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="64149-221">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64149-222">Per una descrizione di questo membro, vedere <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-222">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-223">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-223">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-224">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-224">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-225">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="64149-225">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64149-226">Oggetto <see cref="T:System.Object" /> da aggiungere a <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-226">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-227">Per una descrizione di questo membro, vedere <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-227">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-228">Posizione in cui è stato inserito il nuovo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-228">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-229">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-229">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-230">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="64149-230">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64149-231">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-231">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-232">Per una descrizione di questo membro, vedere <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-232">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-233">
            <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> si trova in <see cref="T:System.Windows.Media.DoubleCollection" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-233">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.DoubleCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-234">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-234">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-235">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="64149-235">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64149-236">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-236">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-237">Per una descrizione di questo membro, vedere <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-237">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-238">Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-238">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-239">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-239">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-240">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="64149-240">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="64149-241">Indice in base zero in corrispondenza del quale inserire l'oggetto <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-241">The zero-based index at which to insert the <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64149-242">Oggetto <see cref="T:System.Object" /> da inserire in <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-242">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-243">Per una descrizione di questo membro, vedere <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-243">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-244">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-244">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-245">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="64149-245">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DoubleCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64149-246">Per una descrizione di questo membro, vedere <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-246">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64149-247">
            <see langword="true" /> se <see cref="T:System.Windows.Media.DoubleCollection" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-247">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.DoubleCollection" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-248">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-248">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-249">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="64149-249">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DoubleCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64149-250">Per una descrizione di questo membro, vedere <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-250">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64149-251">
            <see langword="true" /> se <see cref="T:System.Windows.Media.DoubleCollection" /> è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-251">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-252">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-252">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-253">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="64149-253">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DoubleCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="64149-254">Indice in base zero dell'elemento da ottenere o impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-254">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-255">Per una descrizione di questo membro, vedere <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-255">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64149-256">Elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-256">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-257">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-258">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="64149-258">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64149-259">Oggetto <see cref="T:System.Object" /> da rimuovere da <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-259">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-260">Per una descrizione di questo membro, vedere <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-260">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-261">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-261">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-262">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="64149-262">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="64149-263">Oggetto <see cref="T:System.String" /> che specifica il formato da utilizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-263">The <see cref="T:System.String" /> specifying the format to use.</span>
          </span>
          <span data-ttu-id="64149-264">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-264">-or-</span>
          </span>
          <span data-ttu-id="64149-265">
            <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) per utilizzare il formato predefinito specificato per il tipo di implementazione di <see cref="T:System.IFormattable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-265">
              <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="64149-266">Interfaccia <see cref="T:System.IFormatProvider" /> da utilizzare per formattare il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-266">The <see cref="T:System.IFormatProvider" /> to use to format the value.</span>
          </span>
          <span data-ttu-id="64149-267">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-267">-or-</span>
          </span>
          <span data-ttu-id="64149-268">
            <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-268">
              <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-269">Per una descrizione di questo membro, vedere <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-269">For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-270">Oggetto <see cref="T:System.String" /> contenente il valore dell'istanza corrente nel formato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-270">A <see cref="T:System.String" /> containing the value of the current instance in the specified format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64149-271">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="64149-271">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64149-272">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Media.DoubleCollection> a un'interfaccia <xref:System.IFormattable>.</span><span class="sxs-lookup"><span data-stu-id="64149-272">It can be used only when the <xref:System.Windows.Media.DoubleCollection> instance is cast to an <xref:System.IFormattable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64149-273">Crea una rappresentazione <see cref="T:System.String" /> di <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-273">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="doubleCollection.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64149-274">Crea una rappresentazione <see cref="T:System.String" /> di <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-274">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-275">Restituisce un oggetto <see cref="T:System.String" /> contenente i valori di <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-275">Returns a <see cref="T:System.String" /> containing the values of this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DoubleCollection.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.ToString : IFormatProvider -&gt; string" Usage="doubleCollection.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="64149-276">Informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-276">Culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64149-277">Crea una rappresentazione <see cref="T:System.String" /> di <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-277">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64149-278">Restituisce un oggetto <see cref="T:System.String" /> contenente i valori di <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64149-278">Returns a <see cref="T:System.String" /> containing the values of this <see cref="T:System.Windows.Media.DoubleCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>