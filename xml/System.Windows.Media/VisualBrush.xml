<Type Name="VisualBrush" FullName="System.Windows.Media.VisualBrush">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fb6b6f556ecaad7c7e56b2204108667f2e58bb8e" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51933155" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VisualBrush : System.Windows.Media.TileBrush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VisualBrush extends System.Windows.Media.TileBrush" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualBrush&#xA;Inherits TileBrush" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualBrush sealed : System::Windows::Media::TileBrush" />
  <TypeSignature Language="F#" Value="type VisualBrush = class&#xA;    inherit TileBrush" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.TileBrush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Disegna un'area con un <see cref="P:System.Windows.Media.VisualBrush.Visual" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esistono due modi per specificare il <xref:System.Windows.Media.VisualBrush.Visual%2A> contenuto di un <xref:System.Windows.Media.VisualBrush>.  
  
-   Creare una nuova <xref:System.Windows.Media.Visual> e usarlo per impostare il <xref:System.Windows.Media.VisualBrush.Visual%2A> proprietà del <xref:System.Windows.Media.VisualBrush>.  
  
-   Usare un oggetto esistente <xref:System.Windows.Media.Visual>, che consente di creare un'immagine duplicata della destinazione <xref:System.Windows.Media.Visual>. È quindi possibile usare il <xref:System.Windows.Media.VisualBrush> per creare effetti interessanti, ad esempio reflection e ingrandimento.  
  
 Quando si definisce una nuova <xref:System.Windows.Media.VisualBrush.Visual%2A> per un <xref:System.Windows.Media.VisualBrush> e che <xref:System.Windows.Media.Visual> è un <xref:System.Windows.UIElement> (ad esempio un pannello o un controllo), viene eseguito il sistema di layout nel <xref:System.Windows.UIElement> e i relativi elementi figlio quando il <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> è impostata su `true`. Tuttavia, la radice <xref:System.Windows.UIElement> viene essenzialmente isolato dal resto del sistema; gli storyboard gli stili e layout esterno non può superare questo limite. Pertanto, è necessario specificare in modo esplicito le dimensioni della radice <xref:System.Windows.UIElement>, in quanto il suo unico elemento padre è il <xref:System.Windows.Media.VisualBrush> e pertanto non può essere ridimensionato automaticamente se stesso per l'area da disegnare. Per altre informazioni sul layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], vedere [Layout](~/docs/framework/wpf/advanced/layout.md).  
  
 Gli aggiornamenti per la struttura ad albero visuale di un <xref:System.Windows.Media.VisualBrush> non verranno propagati se un <xref:System.Windows.Media.Effects.BitmapEffect> nella catena padre del pennello. È possibile risolvere questa limitazione forzando un aggiornamento della scena sull'oggetto sopra l'effetto. È possibile chiamare <xref:System.Windows.UIElement.InvalidateVisual%2A> o includere un'animazione per forzare un aggiornamento di scena.  
  
 **Funzionalità di Freezable:** perché eredita dal <xref:System.Windows.Freezable> (classe), il <xref:System.Windows.Media.VisualBrush> classe fornisce diverse funzionalità speciali: <xref:System.Windows.Media.VisualBrush> gli oggetti possono essere dichiarati come e condivisi tra più oggetti. Per altre informazioni sulle diverse funzionalità fornita da <xref:System.Windows.Freezable> oggetti, vedere la [Cenni preliminari sugli oggetti Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
> [!NOTE]
>  Oggetto <xref:System.Windows.Media.VisualBrush> non può essere in sola lettura (bloccato) quando il <xref:System.Windows.Media.VisualBrush.Visual%2A> proprietà è impostata su qualsiasi valore diverso da `null.`  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160049">Esempio VisualBrush</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.VisualBrush" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBrush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBrush();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.VisualBrush" />.</summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160049">Esempio VisualBrush</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBrush (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBrush(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.VisualBrush : System.Windows.Media.Visual -&gt; System.Windows.Media.VisualBrush" Usage="new System.Windows.Media.VisualBrush visual" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">Contenuto del nuovo <see cref="T:System.Windows.Media.VisualBrush" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.VisualBrush" /> che contiene l'oggetto <see cref="P:System.Windows.Media.VisualBrush.Visual" /> specificato.</summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160049">Esempio VisualBrush</related>
      </Docs>
    </Member>
    <Member MemberName="AutoLayoutContent">
      <MemberSignature Language="C#" Value="public bool AutoLayoutContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLayoutContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualBrush.AutoLayoutContent" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLayoutContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLayoutContent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoLayoutContent : bool with get, set" Usage="System.Windows.Media.VisualBrush.AutoLayoutContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se l'oggetto <see cref="T:System.Windows.Media.VisualBrush" /> eseguirà il layout del proprio oggetto <see cref="P:System.Windows.Media.VisualBrush.Visual" />.</summary>
        <value>
          <see langword="true" /> se il pennello deve eseguire il layout sul proprio oggetto <see cref="P:System.Windows.Media.VisualBrush.Visual" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostando questa proprietà su `true` ha effetto solo quando questo pennello <xref:System.Windows.Media.VisualBrush.Visual%2A> è un elemento <xref:System.Windows.UIElement>.  
  
<a name="dependencyPropertyInfo_AutoLayoutContent"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Media.VisualBrush.AutoLayoutContentProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
   
  
## Examples  
 Nell'esempio seguente vengono illustrati gli effetti del <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> proprietà su un elemento <xref:System.Windows.UIElement>.  
  
 [!code-csharp[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/csharp/VS_Snippets_Wpf/visualbrush_markup_snip/CSharp/AutoLayoutContentExample.cs#autolayoutcontentnonparenteduielementexample)]
 [!code-vb[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/visualbrush_markup_snip/visualbasic/autolayoutcontentexample.vb#autolayoutcontentnonparenteduielementexample)]
 [!code-xaml[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/xaml/VS_Snippets_Wpf/visualbrush_markup_snip/XAML/AutoLayoutContentExample.xaml#autolayoutcontentnonparenteduielementexample)]  
  
 La figura seguente mostra l'output dell'esempio:  
  
 ![AutoLayoutContent con un non&#45;definito come padre UIElement](~/add/media/graphicsmm-visualbrush-autolayoutcontentproperty-nonparented.png "AutoLayoutContent con un elemento UIElement senza padre")  
  
 L'esempio seguente vengono illustrati gli effetti del <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> proprietà su un padre <xref:System.Windows.UIElement>.  
  
 [!code-csharp[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/csharp/VS_Snippets_Wpf/visualbrush_markup_snip/CSharp/AutoLayoutContentExample.cs#autolayoutcontentparenteduielementexample)]
 [!code-vb[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/visualbrush_markup_snip/visualbasic/autolayoutcontentexample.vb#autolayoutcontentparenteduielementexample)]
 [!code-xaml[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/xaml/VS_Snippets_Wpf/visualbrush_markup_snip/XAML/AutoLayoutContentExample.xaml#autolayoutcontentparenteduielementexample)]  
  
 La figura seguente mostra l'output dell'esempio:  
  
 ![AutoLayoutContent con un oggetto padre UIElement](~/add/media/graphicsmm-visualbrush-autolayoutcontentproperty-parented.png "AutoLayoutContent con un oggetto UIElement padre")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoLayoutContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoLayoutContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoLayoutContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.VisualBrush.AutoLayoutContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoLayoutContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoLayoutContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoLayoutContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.VisualBrush.AutoLayoutContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Media.VisualBrush.AutoLayoutContent" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualBrush Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.VisualBrush Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As VisualBrush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualBrush ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.VisualBrush" Usage="visualBrush.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualBrush</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clone modificabile di questo oggetto <see cref="T:System.Windows.Media.VisualBrush" />, eseguendo copie complete dei valori dell'oggetto.</summary>
        <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato è <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true." />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per generare copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per praticità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.  
  
 Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 Durante la copia delle proprietà di dipendenza, questo metodo copia i riferimenti alle risorse e i data binding (che potrebbero non essere più risolti), ma non le animazioni né i relativi valori correnti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualBrush CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.VisualBrush CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As VisualBrush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualBrush ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.VisualBrush" Usage="visualBrush.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualBrush</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clone modificabile dell'oggetto <see cref="T:System.Windows.Media.VisualBrush" />, eseguendo copie complete dei valori correnti di tale oggetto. I riferimenti alle risorse, i data binding e le animazioni non vengono copiati, ma vengono copiati i relativi valori correnti.</summary>
        <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per generare copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per praticità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.  
  
 Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="visualBrush.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="protected override void GetContentBounds (out System.Windows.Rect contentBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetContentBounds([out] valuetype System.Windows.Rect&amp; contentBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.GetContentBounds(System.Windows.Rect@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetContentBounds (ByRef contentBounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetContentBounds([Runtime::InteropServices::Out] System::Windows::Rect % contentBounds);" />
      <MemberSignature Language="F#" Value="override this.GetContentBounds :  -&gt; unit" Usage="visualBrush.GetContentBounds contentBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentBounds" Type="System.Windows.Rect" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contentBounds">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="visualBrush.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visual">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual Visual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Visual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualBrush.Visual" />
      <MemberSignature Language="VB.NET" Value="Public Property Visual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ Visual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Visual : System.Windows.Media.Visual with get, set" Usage="System.Windows.Media.VisualBrush.Visual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto del pennello.</summary>
        <value>Contenuto del pennello. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esistono due modi per specificare il <xref:System.Windows.Media.VisualBrush.Visual%2A> contenuto di un <xref:System.Windows.Media.VisualBrush>.  
  
-   Creare una nuova <xref:System.Windows.Media.Visual> e usarlo per impostare il <xref:System.Windows.Media.VisualBrush.Visual%2A> proprietà del <xref:System.Windows.Media.VisualBrush>.  
  
-   Usare un oggetto esistente <xref:System.Windows.Media.Visual>, che consente di creare un'immagine duplicata della destinazione <xref:System.Windows.Media.Visual>. È quindi possibile usare il <xref:System.Windows.Media.VisualBrush> per creare effetti interessanti, ad esempio reflection e ingrandimento.  
  
 <xref:System.Windows.Media.Visual> è piuttosto in alto nella gerarchia delle classi WPF complessiva, in modo che un numero molto elevato di oggetti eventualmente può essere utilizzato come oggetto visivo usato per un <xref:System.Windows.Media.VisualBrush>; l'intero elenco non può essere illustrato di seguito. Vedere <xref:System.Windows.Media.Visual>; vedere la sezione "Gerarchia di ereditarietà", che consente di visualizzare le classi derivate immediatamente. È quindi possibile fare clic su classi derivate immediatamente e attraversare le gerarchie per farsi un'idea di tutta la gamma di possibilità. A un livello superiore, le due categorie più comuni degli oggetti è possibile usare per un <xref:System.Windows.Media.VisualBrush> vengono <xref:System.Windows.UIElement> o <xref:System.Windows.Media.ContainerVisual>. <xref:System.Windows.UIElement> comprende praticamente tutti gli elementi dell'interfaccia utente che possono partecipare in caso contrario, nell'interfaccia utente per un'applicazione WPF. <xref:System.Windows.Media.ContainerVisual> contiene un <xref:System.Windows.Media.DrawingGroup> che include uno o più <xref:System.Windows.Media.Drawing>-oggetti derivati.  
  
 Quando si definisce una nuova <xref:System.Windows.Media.VisualBrush.Visual%2A> per un <xref:System.Windows.Media.VisualBrush> e che <xref:System.Windows.Media.Visual> è un <xref:System.Windows.UIElement> (ad esempio un pannello o un controllo), viene eseguito il sistema di layout nel <xref:System.Windows.UIElement> e i relativi elementi figlio quando il <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> è impostata su `true`. Tuttavia, la radice <xref:System.Windows.UIElement> viene essenzialmente isolato dal resto del sistema; gli stili, gli storyboard e il layout esterno dipende dall'elemento padre in cui viene applicato il pennello non possono superare questo limite. Pertanto, è necessario specificare in modo esplicito le dimensioni della radice <xref:System.Windows.UIElement>, in quanto il suo unico elemento padre è il <xref:System.Windows.Media.VisualBrush> e pertanto non può essere ridimensionato automaticamente se stesso per l'area da disegnare. Per altre informazioni sul layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], vedere [Layout](~/docs/framework/wpf/advanced/layout.md).  
  
 Gli aggiornamenti per la struttura ad albero visuale di un <xref:System.Windows.Media.VisualBrush> non verranno propagati se un <xref:System.Windows.Media.Effects.BitmapEffect> nella catena padre del pennello. È possibile risolvere questa limitazione forzando un aggiornamento della scena sull'oggetto sopra l'effetto. È possibile chiamare <xref:System.Windows.UIElement.InvalidateVisual%2A> o includere un'animazione per forzare un aggiornamento di scena.  
  
> [!NOTE]
>  Oggetto <xref:System.Windows.Media.VisualBrush> non può essere in sola lettura (bloccato) quando il <xref:System.Windows.Media.VisualBrush.Visual%2A> proprietà è impostata su qualsiasi valore diverso da `null.`  
  
<a name="xamlPropertyElementUsage_Visual"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.Visual>  
    singleVisualRoot  
  </object.Visual>  
</object>  
```  
  
<a name="xamlAttributeUsage_Visual"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
 <*oggetto* `Visual`= "{*bindingExpression*}" / >  
  
 \- oppure -  
  
 <*oggetto* `Visual`= "{*il parametro resourceExpression*}" / >  
  
<a name="xamlValues_Visual"></a>   
## <a name="xaml-values"></a>Valori XAML  
 `singleVisualRoot`  
 Un elemento singolo oggetto che definisce un nuovo elemento visivo per il pennello. Deve trattarsi di un oggetto che deriva da <xref:System.Windows.Media.Visual>. Vedere la sezione Osservazioni.  
  
 `bindingExpression`  
 Oggetto che restituisce un oggetto esistente <xref:System.Windows.Media.Visual> istanza.  
  
 `resourceExpression`  
 Oggetto `StaticResource` oppure `DynamicResource` che restituisce un oggetto esistente <xref:System.Windows.Media.Visual> istanza. Vedere [risorse XAML](~/docs/framework/wpf/advanced/xaml-resources.md)  
  
<a name="dependencyPropertyInfo_Visual"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Media.VisualBrush.VisualProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisualProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisualProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.VisualBrush.VisualProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisualProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisualProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.VisualBrush.VisualProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Media.VisualBrush.Visual" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>