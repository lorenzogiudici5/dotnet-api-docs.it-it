<Type Name="RenderCapability" FullName="System.Windows.Media.RenderCapability">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d40dab78feef1b2fc25bd266a83388ede7db977" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36466533" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class RenderCapability" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RenderCapability extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.RenderCapability" />
  <TypeSignature Language="VB.NET" Value="Public Class RenderCapability" />
  <TypeSignature Language="C++ CLI" Value="public ref class RenderCapability abstract sealed" />
  <TypeSignature Language="F#" Value="type RenderCapability = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Consente alle applicazioni WPF di eseguire una query per il livello di rendering corrente dell'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato e di effettuare la registrazione per la notifica delle modifiche.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un livello di rendering definisce un livello di prestazioni e funzionalità hardware grafiche per un dispositivo che esegue un'applicazione [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Le funzionalità dell'hardware grafico che influiscono maggiormente sui livelli di rendering sono i seguenti:  
  
-   RAM video: La quantità di memoria video l'hardware grafico determina le dimensioni e il numero di buffer che può essere usato per la composizione della grafica.  
  
-   Pixel Shader: Un pixel shader è una funzione che calcola gli effetti sulla base di ogni pixel di elaborazione grafica. A seconda della risoluzione della grafica visualizzata, potrebbe essere necessario elaborare diversi milioni di pixel per ogni fotogramma visualizzato.  
  
-   Vertex Shader: Un vertex shader è una funzione che esegue operazioni matematiche sui dati di vertici dell'oggetto di elaborazione grafica.  
  
-   Supporto multitrama: Supporto multitrama si intende la possibilità di applicare due o più trame distinte durante un'operazione con sfumatura su un oggetto grafico 3D. Il grado di supporto per più trame è determinato dal numero di unità a più trame nell'hardware grafico.  
  
 Il pixel shader, shader vertex e funzionalità multitrama vengono utilizzate per definire specifici [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] livelli di versione, che a sua volta, vengono usati per definire i diversi livelli di rendering in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Per una descrizione completa dei livelli di rendering, vedere [livelli di Rendering della grafica](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.RenderOptions" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
  <Members>
    <Member MemberName="IsPixelShaderVersionSupported">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupported (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupported(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupported (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupported(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member IsPixelShaderVersionSupported : int16 * int16 -&gt; bool" Usage="System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">Numero della versione principale di pixel shader.</param>
        <param name="minorVersionRequested">Numero della versione secondaria di pixel shader.</param>
        <summary>Ottiene un valore che indica se è supportata la versione di pixel shader specificata.</summary>
        <returns>
          <see langword="true" /> se la versione di pixel shader è supportata dalla versione corrente di WPF. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported%2A> metodo restituisce `true` se la versione del pixel shader è supportata dalla versione corrente di WPF e un <xref:System.Windows.Media.Effects.Effect> utilizzando la versione principale/secondaria specificata può eseguire sul GPU.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsPixelShaderVersionSupportedInSoftware">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupportedInSoftware (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupportedInSoftware(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupportedInSoftware (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupportedInSoftware(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member IsPixelShaderVersionSupportedInSoftware : int16 * int16 -&gt; bool" Usage="System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">Numero della versione principale di pixel shader.</param>
        <param name="minorVersionRequested">Numero della versione secondaria di pixel shader.</param>
        <summary>Ottiene un valore che indica se è possibile eseguire il rendering della versione del pixel shader specificata in software del sistema corrente.</summary>
        <returns>
          <see langword="true" /> se è possibile eseguire il rendering del pixel shader nel software del sistema corrente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il rendering software è supportato solo per Pixel Shader 2.0.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsShaderEffectSoftwareRenderingSupported">
      <MemberSignature Language="C#" Value="public static bool IsShaderEffectSoftwareRenderingSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsShaderEffectSoftwareRenderingSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsShaderEffectSoftwareRenderingSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShaderEffectSoftwareRenderingSupported : bool" Usage="System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("IsShaderEffectSoftwareRenderingSupported property is deprecated.  Use IsPixelShaderVersionSupportedInSoftware static method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il sistema è in grado di eseguire il rendering degli effetti bitmap nel software.</summary>
        <value>
          <see langword="true" /> se il sistema è in grado di eseguire il rendering degli effetti bitmap nel software. In caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="MaxHardwareTextureSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Size MaxHardwareTextureSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Size MaxHardwareTextureSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxHardwareTextureSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Size MaxHardwareTextureSize { System::Windows::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxHardwareTextureSize : System.Windows.Size" Usage="System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la larghezza e l'altezza massime per creazione di bitmap del dispositivo hardware sottostante.</summary>
        <value>Oggetto <see cref="T:System.Windows.Size" /> che rappresenta la larghezza e l'altezza massime per creazione di bitmap hardware.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se sono presenti più dispositivi, <xref:System.Windows.Media.RenderCapability.MaxHardwareTextureSize%2A> restituisce le dimensioni minime tra di esse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.BitmapCache" />
      </Docs>
    </Member>
    <Member MemberName="MaxPixelShaderInstructionSlots">
      <MemberSignature Language="C#" Value="public static int MaxPixelShaderInstructionSlots (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MaxPixelShaderInstructionSlots(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxPixelShaderInstructionSlots (majorVersionRequested As Short, minorVersionRequested As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MaxPixelShaderInstructionSlots(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member MaxPixelShaderInstructionSlots : int16 * int16 -&gt; int" Usage="System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">Numero della versione principale di pixel shader.</param>
        <param name="minorVersionRequested">Numero della versione secondaria di pixel shader.</param>
        <summary>Ottiene il numero massimo di slot di istruzioni supportati dalla versione del pixel shader specificata.</summary>
        <returns>96 per Pixel Shader 2.0, 512 o un valore maggiore per Pixel Shader 3.0 oppure 0 per qualsiasi altra versione di Pixel Shader.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il numero di slot (istruzione) supportato dal Pixel Shader 3.0 varia, ma è sempre maggiore o uguale a 512.  
  
 Sono supportati solo Pixel Shader 2.0 e 3.0.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="Tier">
      <MemberSignature Language="C#" Value="public static int Tier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Tier" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.Tier" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Tier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Tier { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Tier : int" Usage="System.Windows.Media.RenderCapability.Tier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica il livello di rendering per il thread corrente.</summary>
        <value>Valore <see cref="T:System.Int32" /> la cui word più significativa corrisponde al livello di rendering per il thread corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  A partire da .NET Framework 4, il livello di rendering 1 è stato ridefinito per includere solo hardware grafico che supporta [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 9.0 o versione successiva. L'hardware grafico che supporta [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 7 o 8 ora è definito come livello di rendering 0.  
  
 Il valore restituito è uno dei tre valori possibili:  
  
|Valore restituito|Il rendering di livello|Note|  
|------------------|--------------------|-----------|  
|0x00000000|0|Alcuna accelerazione hardware grafico non è disponibile per l'applicazione nel dispositivo. Tutte le funzionalità grafiche usano l'accelerazione software. Il livello della versione di [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] è inferiore alla versione 9.0.|  
|0x00010000|1|La maggior parte delle funzionalità grafiche di [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] utilizzerà l'accelerazione hardware se le risorse di sistema necessarie sono disponibili e non sono state esaurite. La versione di [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] corrispondente è superiore o uguale alla 9.0.|  
|0x00020000|2|La maggior parte delle funzionalità grafiche di [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] utilizzerà l'accelerazione hardware purché le risorse di sistema necessarie non siano esaurite. La versione di [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] corrispondente è superiore o uguale alla 9.0.|  
  
 La tabella seguente illustra le differenze dei requisiti di hardware grafico tra il livello di rendering 1 e livello di rendering 2:  
  
|Funzionalità|Livello 1|Livello 2|  
|-------------|------------|------------|  
|Versione di [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)]|Deve essere superiore o uguale alla 9.0.|Deve essere superiore o uguale alla 9.0.|  
|RAM video|Deve essere superiore o uguale a 60 MB.|Deve essere superiore o uguale a 120 MB.|  
|Pixel shader|Il livello della versione deve essere superiore o uguale alla 2.0.|Il livello della versione deve essere superiore o uguale alla 2.0.|  
|Vertex shader|Nessun requisito.|Il livello della versione deve essere superiore o uguale alla 2.0.|  
|Unità a più trame|Nessun requisito.|Il numero di unità deve essere superiore o uguale a 4.|  
  
 Per ulteriori informazioni sulle definizioni per i livelli di rendering, vedere [livelli di Rendering della grafica](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md).  
  
 Se il thread corrente non dispone di un oggetto associato <xref:System.Windows.Threading.Dispatcher> dell'oggetto, ne viene creata automaticamente.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come restituire il livello di rendering per il thread corrente.  
  
 [!code-csharp[RenderOptions#RenderCapability1](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#rendercapability1)]
 [!code-vb[RenderOptions#RenderCapability1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#rendercapability1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TierChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TierChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TierChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.RenderCapability.TierChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TierChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TierChanged;" />
      <MemberSignature Language="F#" Value="member this.TierChanged : EventHandler " Usage="member this.TierChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il livello di rendering per l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> del thread corrente è stato modificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il thread corrente non dispone di un oggetto associato <xref:System.Windows.Threading.Dispatcher> dell'oggetto, ne viene creata automaticamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>