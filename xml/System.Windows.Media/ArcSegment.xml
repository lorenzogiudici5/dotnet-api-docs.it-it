<Type Name="ArcSegment" FullName="System.Windows.Media.ArcSegment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ea813a0debea0d5d584dbffe701f14ae99e44bf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30669245" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ArcSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ArcSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.ArcSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ArcSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArcSegment sealed : System::Windows::Media::PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un arco ellittico tra due punti.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare un <xref:System.Windows.Media.PathFigure> oggetto usato per archiviare <xref:System.Windows.Media.ArcSegment> oggetti e altri segmenti.  
  
 Un arco ellittico è definito dal relativo punti iniziale e finale, raggi x e y-, asse x fattore di rotazione, un valore che indica se l'arco deve essere maggiore di 180 gradi e un valore che descrive la direzione in cui viene disegnata l'arco. La <xref:System.Windows.Media.ArcSegment> classe non contiene una proprietà per il punto iniziale dell'arco, ma definisce il punto di destinazione dell'arco che rappresenta. Il punto iniziale dell'arco è il punto corrente del <xref:System.Windows.Media.PathFigure> a cui il <xref:System.Windows.Media.ArcSegment> viene aggiunto.  
  
 Nelle figure seguenti illustrano il punto finale differente, <xref:System.Windows.Media.ArcSegment.Size%2A>, e <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> impostazioni.  
  
 ![ArcSegment con impostazioni Point differenti](~/add/media/arcsegment-point.png "ArcSegment con impostazioni Point differenti")  
  
 ![ArcSegment con impostazioni Size differenti](~/add/media/arcsegment-size.png "ArcSegment con impostazioni Size differenti")  
  
 ![ArcSegment con impostazioni RotationAngle differenti](~/add/media/arcsegment-rotationangle.png "ArcSegment con impostazioni RotationAngle differenti")  
  
## <a name="islargearc-and-sweepdirection"></a>IsLargeArc e SweepDirection  
 Per gli archi la maggior parte di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> proprietà indicano quale arco utilizzare.  
  
 Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> è **true**, uno dei due angoli più grande è selezionato; in caso contrario, se è **false**, uno di più piccoli viene scelto sweep. I due candidati rimanenti vengono disegnati in un'altra direzione: <xref:System.Windows.Media.SweepDirection.Counterclockwise> o <xref:System.Windows.Media.SweepDirection.Clockwise>. Il <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> proprietà specifica quale utilizzare.  
  
 Le illustrazioni seguenti mostrano diverse <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> impostazioni.  
  
 ![ArcSegment con impostazioni IsLargeArc differenti](~/add/media/arcsegment-islargearc.png "ArcSegment con impostazioni IsLargeArc differenti")  
Oggetti ArcSegment con impostazioni IsLargeArc differenti  
  
 ![ArcSegment con impostazioni SweepDirection differenti](~/add/media/arcsegment-sweepdirection.png "ArcSegment con impostazioni SweepDirection differenti")  
Oggetti ArcSegment con impostazioni SweepDirection differenti  
  
## <a name="freezable-features"></a>Funzionalità di Freezable  
 Un <xref:System.Windows.Media.ArcSegment> è un tipo di <xref:System.Windows.Freezable> oggetto. Per informazioni su <xref:System.Windows.Freezable> funzionalità, ad esempio il blocco e la clonazione, vedere il [panoramica sugli oggetti Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.ArcSegment> classe definisce solo il punto di destinazione dell'arco che rappresenta, il punto iniziale dell'arco è il punto corrente del <xref:System.Windows.Media.PathFigure>, a cui il <xref:System.Windows.Media.ArcSegment> viene aggiunto.  
  
 Per gli archi ellittici più di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il `largeArc` e `sweepDirection` indicano quale arco da utilizzare.  
  
 Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se `largeArc` è **true**, uno dei due angoli più grande è selezionato; in caso contrario, se `largeArc` è **false**, uno di più piccoli viene scelto sweep.  
  
 Se `sweepDirection` è <xref:System.Windows.Media.SweepDirection.Clockwise>, l'arco viene disegnato nella direzione di un angolo positivo. Se `sweepDirection` è <xref:System.Windows.Media.SweepDirection.Counterclockwise>, l'arco viene disegnato nella direzione di un angolo negativo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.ArcSegment> classe definisce solo il punto di destinazione dell'arco che rappresenta, il punto iniziale dell'arco è il punto corrente del <xref:System.Windows.Media.PathFigure>, a cui il <xref:System.Windows.Media.ArcSegment> viene aggiunto.  
  
 Per gli archi ellittici più di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il `largeArc` e `sweepDirection` indicano quale arco da utilizzare.  
  
 Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se `largeArc` è **true**, uno dei due angoli più grande è selezionato; in caso contrario, se `largeArc` è **false**, uno di più piccoli viene scelto sweep.  
  
 Se `sweepDirection` è <xref:System.Windows.Media.SweepDirection.Clockwise>, l'arco viene disegnato nella direzione di un angolo positivo. Se `sweepDirection` è <xref:System.Windows.Media.SweepDirection.Counterclockwise>, l'arco viene disegnato nella direzione di un angolo negativo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">Punto di destinazione dell'arco; il punto iniziale dell'arco viene definito come il punto corrente dell'oggetto <see cref="T:System.Windows.Media.PathFigure" />, in corrispondenza del quale viene aggiunto l'oggetto <see cref="T:System.Windows.Media.ArcSegment" />.</param>
        <param name="size">Raggio x e raggio y dell'arco. Il raggio x viene specificato dalla proprietà <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Width" /> e il raggio y viene specificato dalla proprietà <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Height" />.</param>
        <param name="rotationAngle">Rotazione sull'asse x dell'ellisse.</param>
        <param name="isLargeArc">Indica se l'arco deve essere maggiore di 180 gradi.</param>
        <param name="sweepDirection">Impostare su <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> per disegnare l'arco nella direzione di un angolo positivo, impostare su <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> per disegnare l'arco nella direzione di un angolo negativo.</param>
        <param name="isStroked">Impostare su <c>true</c> per tracciare l'arco quando viene usata una classe <see cref="T:System.Windows.Media.Pen" /> per eseguire il rendering del segmento. In caso contrario, impostare su <c>false</c>.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.ArcSegment> classe definisce solo il punto di destinazione dell'arco che rappresenta, il punto iniziale dell'arco è il punto corrente del <xref:System.Windows.Media.PathFigure>, a cui il <xref:System.Windows.Media.ArcSegment> viene aggiunto.  
  
 Per gli archi ellittici più di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il `largeArc` e `sweepDirection` indicano quale arco da utilizzare.  
  
 Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se `largeArc` è **true**, uno dei due angoli più grande è selezionato; in caso contrario, se `largeArc` è **false**, uno di più piccoli viene scelto sweep.  
  
 Se `sweepDirection` è <xref:System.Windows.Media.SweepDirection.Clockwise>, l'arco viene disegnato nella direzione di un angolo positivo. Se `sweepDirection` è <xref:System.Windows.Media.SweepDirection.Counterclockwise>, l'arco viene disegnato nella direzione di un angolo negativo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clone modificabile di questo oggetto <see cref="T:System.Windows.Media.ArcSegment" />, eseguendo copie complete dei valori dell'oggetto. Durante la copia delle proprietà di dipendenza, questo metodo copia i riferimenti alle risorse e i data binding (che potrebbero non essere più risolti), ma non le animazioni né i relativi valori correnti.</summary>
        <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true." />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per comodità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.  
  
 Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clone modificabile dell'oggetto <see cref="T:System.Windows.Media.ArcSegment" />, eseguendo copie complete dei valori correnti di tale oggetto. I riferimenti alle risorse, i data binding e le animazioni non vengono copiati, ma vengono copiati i relativi valori correnti.</summary>
        <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per comodità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.  
  
 Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArc">
      <MemberSignature Language="C#" Value="public bool IsLargeArc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLargeArc" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.IsLargeArc" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLargeArc As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLargeArc { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica l'arco deve essere maggiore di 180 gradi.</summary>
        <value>**true** se l'arco deve essere maggiore di 180 gradi; in caso contrario, **false**. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per gli archi la maggior parte di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> proprietà indicano quale arco utilizzare.  
  
 Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> è **true**, uno dei due angoli più grande è selezionato; in caso contrario, se è **false**, uno di più piccoli viene scelto sweep. I due candidati rimanenti vengono disegnati in un'altra direzione: <xref:System.Windows.Media.SweepDirection.Counterclockwise> o <xref:System.Windows.Media.SweepDirection.Clockwise>. Il <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> proprietà specifica quale utilizzare.  
  
 La figura seguente mostra due archi ellittici che sono identici ad eccezione dei loro <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> impostazioni.  
  
 ![ArcSegment con impostazioni IsLargeArc differenti](~/add/media/arcsegment-islargearc.png "ArcSegment con impostazioni IsLargeArc differenti")  
Oggetti ArcSegment con impostazioni IsLargeArc differenti  
  
<a name="dependencyPropertyInfo_IsLargeArc"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|  
|Impostare le proprietà dei metadati su **true**|nessuno|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArcProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLargeArcProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLargeArcProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.IsLargeArcProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsLargeArcProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsLargeArcProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Point" />
      <MemberSignature Language="VB.NET" Value="Public Property Point As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'endpoint dell'arco ellittico.</summary>
        <value>Punto verso cui viene disegnata l'arco. Il valore predefinito è (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.ArcSegment> classe definisce solo il punto di destinazione dell'arco che rappresenta, il punto iniziale dell'arco è il punto corrente del <xref:System.Windows.Media.PathFigure> a cui il <xref:System.Windows.Media.ArcSegment> viene aggiunto.  
  
 Se il segmento di arco punto iniziale e finale sono uguali, viene disegnato alcun arco.  
  
 Per gli archi la maggior parte di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> proprietà indicano quale arco utilizzare.  
  
 Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> è **true**, uno dei due angoli più grande è selezionato; in caso contrario, se è **false**, uno di più piccoli viene scelto sweep. I due candidati rimanenti vengono disegnati in un'altra direzione: <xref:System.Windows.Media.SweepDirection.Counterclockwise> o <xref:System.Windows.Media.SweepDirection.Clockwise>. Il <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> proprietà specifica quale utilizzare.  
  
 La figura seguente mostra diversi archi ellittici identici tranne che per i relativi <xref:System.Windows.Media.ArcSegment.Point%2A> impostazioni.  
  
 ![ArcSegment con impostazioni Point differenti](~/add/media/arcsegment-point.png "ArcSegment con impostazioni Point differenti")  
Diversi oggetti ArcSegment con impostazioni Point differenti  
  
<a name="dependencyPropertyInfo_Point"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Media.ArcSegment.PointProperty>|  
|Impostare le proprietà dei metadati su **true**|nessuno|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.PointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PointProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PointProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Media.ArcSegment.Point" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngle">
      <MemberSignature Language="C#" Value="public double RotationAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RotationAngle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.RotationAngle" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationAngle As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RotationAngle { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la quantità, in gradi, di rotazione dell'ellisse lungo l'asse x.</summary>
        <value>Quantità, in gradi, di rotazione dell'ellisse lungo l'asse x. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La figura seguente mostra diversi archi ellittici identici tranne che per i relativi <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> impostazioni.  
  
 ![ArcSegment con impostazioni RotationAngle differenti](~/add/media/arcsegment-rotationangle.png "ArcSegment con impostazioni RotationAngle differenti")  
Diversi oggetti ArcSegment con impostazioni RotationAngle differenti  
  
 Si noti che, se l'arco larghezza e altezza sono uguali, impostazione di questa proprietà non ha alcun effetto.  
  
<a name="dependencyPropertyInfo_RotationAngle"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|  
|Impostare le proprietà dei metadati su **true**|nessuno|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RotationAngleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RotationAngleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.RotationAngleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RotationAngleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RotationAngleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i raggi x e y dell'arco come struttura <see cref="T:System.Windows.Size" />.</summary>
        <value>Oggetto <see cref="T:System.Windows.Size" /> struttura che descrive i raggi x e y dell'arco ellittico. Il <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Width" /> proprietà specifica raggio x dell'arco; relativo <see cref="P:System.Windows.Size.Height" /> proprietà specifica raggio y dell'arco. Il valore predefinito è 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La figura seguente mostra diversi archi ellittici identici tranne che per i relativi <xref:System.Windows.Media.ArcSegment.Size%2A> impostazioni.  
  
 ![ArcSegment con impostazioni Size differenti](~/add/media/arcsegment-size.png "ArcSegment con impostazioni Size differenti")  
Diversi oggetti ArcSegment con impostazioni Size differenti  
  
<a name="dependencyPropertyInfo_Size"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Media.ArcSegment.SizeProperty>|  
|Impostare le proprietà dei metadati su **true**|nessuno|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Media.ArcSegment.Size" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Media.SweepDirection SweepDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.SweepDirection SweepDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.SweepDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property SweepDirection As SweepDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::SweepDirection SweepDirection { System::Windows::Media::SweepDirection get(); void set(System::Windows::Media::SweepDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.SweepDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se l'arco viene disegnato in senso <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> o <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</summary>
        <value>Valore che specifica la direzione di disegno dell'arco. Il valore predefinito è <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un <xref:System.Windows.Media.ArcSegment> con un determinato <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>, punto di inizio e fine <xref:System.Windows.Media.ArcSegment.Point%2A>, sono possibili quattro archi diversi. Specifica il <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> proprietà riduce il numero di possibili archi a due: un arco disegnato dal punto di inizio alla fine <xref:System.Windows.Media.ArcSegment.Point%2A> in un <xref:System.Windows.Media.SweepDirection.Clockwise> direzione e un arco disegnato dal punto di inizio per il punto finale in un <xref:System.Windows.Media.SweepDirection.Counterclockwise> direzione.  
  
 La figura seguente mostra due archi ellittici che sono identici ad eccezione dei loro <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> impostazioni.  
  
 ![ArcSegment con impostazioni SweepDirection differenti](~/add/media/arcsegment-sweepdirection.png "ArcSegment con impostazioni SweepDirection differenti")  
Oggetti ArcSegment con impostazioni SweepDirection differenti  
  
<a name="dependencyPropertyInfo_SweepDirection"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|  
|Impostare le proprietà dei metadati su **true**|nessuno|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SweepDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SweepDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SweepDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SweepDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SweepDirectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>