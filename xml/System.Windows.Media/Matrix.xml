<Type Name="Matrix" FullName="System.Windows.Media.Matrix">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e94d4f8f681fbdb4a65983e657c03fb75efbf212" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39985301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Matrix : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Matrix extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public Structure Matrix&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Matrix : IFormattable" />
  <TypeSignature Language="F#" Value="type Matrix = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.MatrixConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.MatrixValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una matrice di trasformazione affine 3x3 usata per le trasformazioni nello spazio 2D.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una 3x3 matrice viene usata per le trasformazioni in un [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] piano x-y. Matrici di trasformazione affine possono essere moltiplicate per formare un numero qualsiasi di trasformazioni lineare, ad esempio la rotazione e inclinazione (taglio), seguito dalla traslazione. Una matrice di trasformazione affine ha la colonna finale è uguale a (0, 0, 1), in modo che solo i membri nelle prime due colonne devono essere specificati.  Si noti che i vettori sono espressi come vettori di riga, anziché come vettori di colonna.  
  
 Oggetto [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> viene archiviata utilizzando l'ordine di riga e presenta la struttura seguente:  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|  
  
 Nell'ultima riga, i membri <xref:System.Windows.Media.Matrix.OffsetX%2A> e <xref:System.Windows.Media.Matrix.OffsetY%2A>, rappresentano i valori di conversione.  
  
 Nei metodi e proprietà, la matrice di trasformazione è in genere specificata come un vettore con solo sei membri, come indicato di seguito:  
  
 (<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)  
  
 Sebbene sia possibile usare una <xref:System.Windows.Media.Matrix> struttura direttamente per convertire i punti di singole, o con un <xref:System.Windows.Media.MatrixTransform> trasformare oggetti, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] fornisce inoltre un set di classi che consentono di trasformare gli oggetti senza utilizzare direttamente le matrici: <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, e <xref:System.Windows.Media.TranslateTransform>.  
  
<a name="xamlAttributeUsage_Matrix"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="m11, m12, m21, m22, offsetX, offsetY"/>  
- or -  
<object property="Identity"/>  
```  
  
<a name="xamlValues_Matrix"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *m11*  
 <xref:System.Double?displayProperty=nameWithType>  
  
 Il valore nella prima riga e nella prima colonna della struttura <xref:System.Windows.Media.Matrix>. Per altre informazioni, vedere la proprietà <xref:System.Windows.Media.Matrix.M11%2A>.  
  
 *m12*  
 <xref:System.Double?displayProperty=nameWithType>  
  
 Il valore nella prima riga e della seconda colonna. Per altre informazioni, vedere la proprietà <xref:System.Windows.Media.Matrix.M12%2A>.  
  
 *m21*  
 <xref:System.Double?displayProperty=nameWithType>  
  
 Il valore nella seconda riga e della prima colonna. Per altre informazioni, vedere la proprietà <xref:System.Windows.Media.Matrix.M21%2A>.  
  
 *m22*  
 <xref:System.Double?displayProperty=nameWithType>  
  
 Il valore nella seconda riga e della seconda colonna. Per altre informazioni, vedere la proprietà <xref:System.Windows.Media.Matrix.M22%2A>.  
  
 *offsetX*  
 <xref:System.Double?displayProperty=nameWithType>  
  
 Il valore nella terza riga e nella prima colonna. Per altre informazioni, vedere la proprietà <xref:System.Windows.Media.Matrix.OffsetX%2A>.  
  
 *offsetY*  
 <xref:System.Double?displayProperty=nameWithType>  
  
 Il valore nella terza riga e della seconda colonna. Per altre informazioni, vedere la proprietà <xref:System.Windows.Media.Matrix.OffsetY%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 m11, float64 m12, float64 m21, float64 m22, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Double, m12 As Double, m21 As Double, m22 As Double, offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Matrix : double * double * double * double * double * double -&gt; System.Windows.Media.Matrix" Usage="new System.Windows.Media.Matrix (m11, m12, m21, m22, offsetX, offsetY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Double" />
        <Parameter Name="m12" Type="System.Double" />
        <Parameter Name="m21" Type="System.Double" />
        <Parameter Name="m22" Type="System.Double" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m11">Coefficiente <see cref="T:System.Windows.Media.Matrix" /> della nuova struttura <see cref="P:System.Windows.Media.Matrix.M11" />.</param>
        <param name="m12">Coefficiente <see cref="T:System.Windows.Media.Matrix" /> della nuova struttura <see cref="P:System.Windows.Media.Matrix.M12" />.</param>
        <param name="m21">Coefficiente <see cref="T:System.Windows.Media.Matrix" /> della nuova struttura <see cref="P:System.Windows.Media.Matrix.M21" />.</param>
        <param name="m22">Coefficiente <see cref="T:System.Windows.Media.Matrix" /> della nuova struttura <see cref="P:System.Windows.Media.Matrix.M22" />.</param>
        <param name="offsetX">Coefficiente <see cref="T:System.Windows.Media.Matrix" /> della nuova struttura <see cref="P:System.Windows.Media.Matrix.OffsetX" />.</param>
        <param name="offsetY">Coefficiente <see cref="T:System.Windows.Media.Matrix" /> della nuova struttura <see cref="P:System.Windows.Media.Matrix.OffsetY" />.</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Windows.Media.Matrix -&gt; unit" Usage="matrix.Append matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">Struttura <see cref="T:System.Windows.Media.Matrix" /> da accodare alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</param>
        <summary>Accoda la struttura <see cref="T:System.Windows.Media.Matrix" /> specificata alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione equivale moltiplicando ciò <xref:System.Windows.Media.Matrix> struttura dal parametro `matrix`.  Moltiplicazione di matrici non è commutativa, tuttavia, in modo che questa operazione non è lo stesso come moltiplicando il parametro `matrix` da questo <xref:System.Windows.Media.Matrix> struttura; vale a dire, (in questo * `matrix`) non è uguale (`matrix` * questo).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come aggiungere un <xref:System.Windows.Media.Matrix> a un'altra struttura <xref:System.Windows.Media.Matrix> struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Determinant">
      <MemberSignature Language="C#" Value="public double Determinant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Determinant" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Determinant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Determinant As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Determinant { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Determinant : double" Usage="System.Windows.Media.Matrix.Determinant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il determinante della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <value>Determinante della struttura <see cref="T:System.Windows.Media.Matrix" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 In questo esempio viene illustrato come ottenere il determinante di un <xref:System.Windows.Media.Matrix>.  
  
 [!code-csharp[MatrixExamples_snip#MatrixDeterminantExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixdeterminantexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se le due strutture <see cref="T:System.Windows.Media.Matrix" /> specificate presentano o meno gli stessi valori.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Oggetto <xref:System.Windows.Media.Matrix> archivia i valori come valori Double. Poiché il valore di una <xref:System.Double> possibile perdita di precisione durante operazioni aritmetiche vengono eseguite su di esso, un confronto tra due <xref:System.Double> strutture logicamente equivalenti potrebbero non riuscire.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come controllare due <xref:System.Windows.Media.Matrix> strutture per verificarne l'uguaglianza.  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Oggetto <see cref="T:System.Object" /> da confrontare.</param>
        <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è o meno una struttura <see cref="T:System.Windows.Media.Matrix" /> identica alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <paramref name="o" /> è una struttura <see cref="T:System.Windows.Media.Matrix" /> identica a questa struttura <see cref="T:System.Windows.Media.Matrix" />, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Oggetto <xref:System.Windows.Media.Matrix> archivia i valori come valori Double. Poiché il valore di una <xref:System.Double> possibile perdita di precisione durante operazioni aritmetiche vengono eseguite su di esso, un confronto tra due <xref:System.Double> strutture logicamente equivalenti potrebbero non riuscire.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come controllare due <xref:System.Windows.Media.Matrix> strutture per verificarne l'uguaglianza.  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Matrix value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Media.Matrix value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Media::Matrix value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.Matrix -&gt; bool" Usage="matrix.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="value">Istanza della struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare con questa istanza.</param>
        <summary>Determina se la struttura <see cref="T:System.Windows.Media.Matrix" /> specificata è uguale o meno a questa istanza.</summary>
        <returns>
          <see langword="true" /> se le istanze sono uguali, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Oggetto <xref:System.Windows.Media.Matrix> archivia i valori come valori Double. Poiché il valore di una <xref:System.Double> possibile perdita di precisione durante operazioni aritmetiche vengono eseguite su di esso, un confronto tra due <xref:System.Double> strutture logicamente equivalenti potrebbero non riuscire.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come controllare due <xref:System.Windows.Media.Matrix> strutture per verificarne l'uguaglianza.  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="System.Windows.Media.Matrix.Equals (matrix1, matrix2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
        <param name="matrix2">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
        <summary>Determina se le due strutture <see cref="T:System.Windows.Media.Matrix" /> specificate sono identiche.</summary>
        <returns>
          <see langword="true" /> se le matrici <paramref name="matrix1" /> e <paramref name="matrix2" /> sono identiche, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Oggetto <xref:System.Windows.Media.Matrix> archivia i valori come valori Double. Poiché il valore di una <xref:System.Double> possibile perdita di precisione durante operazioni aritmetiche vengono eseguite su di esso, un confronto tra due <xref:System.Double> strutture logicamente equivalenti potrebbero non riuscire.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash di questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <returns>Codice hash per l'istanza.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInverse">
      <MemberSignature Language="C#" Value="public bool HasInverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.HasInverse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasInverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasInverse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasInverse : bool" Usage="System.Windows.Media.Matrix.HasInverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se questa struttura <see cref="T:System.Windows.Media.Matrix" /> è invertibile o meno.</summary>
        <value>
          <see langword="true" /> se la struttura <see cref="T:System.Windows.Media.Matrix" /> dispone di un inverso, altrimenti <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene controllato se un <xref:System.Windows.Media.Matrix> è invertibile. Se è invertibile o meno, il <xref:System.Windows.Media.Matrix> viene invertita.  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Matrix Identity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Identity As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Matrix Identity { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una struttura <see cref="T:System.Windows.Media.Matrix" /> di identità.</summary>
        <value>Matrice di identità.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una matrice di identità ha un valore pari a 1 nei coefficienti [1,1], [2,2], [3,3] e il valore 0 per il resto dei coefficienti. Tale nome è correlato all'impostazione <xref:System.Windows.Media.Matrix.M11%2A> e <xref:System.Windows.Media.Matrix.M22%2A> su 1 e <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, e <xref:System.Windows.Media.Matrix.OffsetY%2A> su 0. In una matrice affine, ovvero l'implementazione che [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] viene utilizzato per il <xref:System.Windows.Media.Matrix>, struttura, i coefficienti [3,1], [3,2], [3.3] sono implicite avere sempre i valori 0, 0,1 rispettivamente.  
  
||||  
|-|-|-|  
|1|0|0|  
|0|1|0|  
|0|0|1|  
  
 Per una matrice di identità, il <xref:System.Windows.Media.Matrix.ToString%2A> metodo restituisce la stringa "Identity" anziché i coefficienti del <xref:System.Windows.Media.Matrix>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare il <xref:System.Windows.Media.Matrix.Identity%2A> matrice.  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inverte la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente controlla se un <xref:System.Windows.Media.Matrix> struttura è invertibile. Se è invertibile o meno, il <xref:System.Windows.Media.Matrix> struttura viene invertita.  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La struttura <see cref="T:System.Windows.Media.Matrix" /> non è invertibile.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Windows.Media.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la struttura <see cref="T:System.Windows.Media.Matrix" /> è una matrice di identità o meno.</summary>
        <value>
          <see langword="true" /> se la struttura <see cref="T:System.Windows.Media.Matrix" /> è una matrice di identità, altrimenti <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una matrice di identità ha un valore pari a 1 nei coefficienti [1,1], [2,2], [3,3] e il valore 0 per il resto dei coefficienti. Tale nome è correlato all'impostazione <xref:System.Windows.Media.Matrix.M11%2A> e <xref:System.Windows.Media.Matrix.M22%2A> su 1 e <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, e <xref:System.Windows.Media.Matrix.OffsetY%2A> su 0. In una matrice affine, ovvero l'implementazione che [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] viene utilizzato per il <xref:System.Windows.Media.Matrix> struttura, i coefficienti [3,1], [3,2], [3.3] sono implicite avere sempre i valori 0, 0,1 rispettivamente.  
  
||||  
|-|-|-|  
|1|0|0|  
|0|1|0|  
|0|0|1|  
  
 Per una matrice di identità, il <xref:System.Windows.Media.Matrix.ToString%2A> metodo restituisce la stringa "Identità", anziché i coefficienti del <xref:System.Windows.Media.Matrix>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
      </Docs>
    </Member>
    <Member MemberName="M11">
      <MemberSignature Language="C#" Value="public double M11 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M11" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M11" />
      <MemberSignature Language="VB.NET" Value="Public Property M11 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M11 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M11 : double with get, set" Usage="System.Windows.Media.Matrix.M11" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della prima riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <value>Valore della prima riga e della prima colonna di questa struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente mostra come moltiplicare due <xref:System.Windows.Media.Matrix> strutture e come assegnare i valori per un <xref:System.Windows.Media.Matrix> quando viene dichiarata e dopo la dichiarazione di struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M12">
      <MemberSignature Language="C#" Value="public double M12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M12" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M12" />
      <MemberSignature Language="VB.NET" Value="Public Property M12 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M12 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M12 : double with get, set" Usage="System.Windows.Media.Matrix.M12" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della prima riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <value>Valore della prima riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente viene mostrato il layout di un <xref:System.Windows.Media.Matrix>.  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|  
  
   
  
## Examples  
 Nell'esempio seguente mostra come moltiplicare due <xref:System.Windows.Media.Matrix> strutture e come assegnare i valori per un <xref:System.Windows.Media.Matrix> quando viene dichiarata e dopo la dichiarazione di struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M21">
      <MemberSignature Language="C#" Value="public double M21 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M21" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M21" />
      <MemberSignature Language="VB.NET" Value="Public Property M21 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M21 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M21 : double with get, set" Usage="System.Windows.Media.Matrix.M21" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della seconda riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <value>Valore della prima seconda riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente viene mostrato il layout di un <xref:System.Windows.Media.Matrix>.  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|  
  
   
  
## Examples  
 Nell'esempio seguente mostra come moltiplicare due <xref:System.Windows.Media.Matrix> strutture e come assegnare i valori per un <xref:System.Windows.Media.Matrix> quando viene dichiarata e dopo la dichiarazione di struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M22">
      <MemberSignature Language="C#" Value="public double M22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M22" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M22" />
      <MemberSignature Language="VB.NET" Value="Public Property M22 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M22 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M22 : double with get, set" Usage="System.Windows.Media.Matrix.M22" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della seconda riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <value>Valore della seconda riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente viene mostrato il layout di un <xref:System.Windows.Media.Matrix> struttura.  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|  
  
   
  
## Examples  
 Nell'esempio seguente mostra come moltiplicare due <xref:System.Windows.Media.Matrix> strutture e come assegnare i valori per un <xref:System.Windows.Media.Matrix> quando viene dichiarata e dopo la dichiarazione di struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Multiply(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Multiply (trans1, trans2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
        <param name="trans2">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
        <summary>Moltiplica una struttura <see cref="T:System.Windows.Media.Matrix" /> per un'altra struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <returns>Risultato della moltiplicazione di <paramref name="trans1" /> per <paramref name="trans2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moltiplicazione di matrici non è commutativa. Moltiplicando `trans1` dal `trans2` non è uguale alla moltiplicazione `trans2` da `trans1`.  
  
   
  
## Examples  
 Nell'esempio seguente mostra come moltiplicare due <xref:System.Windows.Media.Matrix> strutture.  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public double OffsetX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : double with get, set" Usage="System.Windows.Media.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della terza riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <value>Valore della terza riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.Matrix.OffsetX%2A> proprietà è così chiamata perché specifica la quantità per convertire lo spazio delle coordinate lungo l'asse x.  
  
 Nella tabella seguente viene mostrato il layout di un <xref:System.Windows.Media.Matrix>.  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public double OffsetY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : double with get, set" Usage="System.Windows.Media.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della terza riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <value>Valore della terza riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.Matrix.OffsetY%2A> proprietà è così chiamata perché specifica la quantità per convertire lo spazio delle coordinate lungo l'asse y.  
  
 Nella tabella seguente viene mostrato il layout di un <xref:System.Windows.Media.Matrix>.  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="matrix1 = matrix2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
        <param name="matrix2">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
        <summary>Determina se le due strutture <see cref="T:System.Windows.Media.Matrix" /> specificate sono identiche.</summary>
        <returns>
          <see langword="true" /> se le matrici <paramref name="matrix1" /> e <paramref name="matrix2" /> sono identiche, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Oggetto <xref:System.Windows.Media.Matrix> archivia i valori come valori Double. Poiché il valore di una <xref:System.Double> possibile perdita di precisione durante operazioni aritmetiche vengono eseguite su di esso, un confronto tra due <xref:System.Double> strutture logicamente equivalenti potrebbero non riuscire.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come controllare due <xref:System.Windows.Media.Matrix> strutture per verificarne l'uguaglianza.  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Media.Matrix.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="System.Windows.Media.Matrix.op_Inequality (matrix1, matrix2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
        <param name="matrix2">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
        <summary>Determina se le due strutture <see cref="T:System.Windows.Media.Matrix" /> specificate non sono identiche.</summary>
        <returns>
          <see langword="true" /> se le matrici <paramref name="matrix1" /> e <paramref name="matrix2" /> non sono identiche, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Oggetto <xref:System.Windows.Media.Matrix> archivia i valori come valori Double. Poiché il valore di una <xref:System.Double> possibile perdita di precisione durante operazioni aritmetiche vengono eseguite su di esso, un confronto tra due <xref:System.Double> strutture logicamente equivalenti potrebbero non riuscire.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come controllare due <xref:System.Windows.Media.Matrix> strutture per verificarne l'uguaglianza.  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix operator * (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Matrix op_Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix operator *(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; System.Windows.Media.Matrix" Usage="trans1 * trans2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
        <param name="trans2">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
        <summary>Moltiplica una struttura <see cref="T:System.Windows.Media.Matrix" /> per un'altra struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <returns>Risultato della moltiplicazione di <paramref name="trans1" /> per <paramref name="trans2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moltiplicazione di matrici non è commutativa. Moltiplicando `trans1` dal `trans2` non è uguale alla moltiplicazione `trans2` da `trans1`.  
  
   
  
## Examples  
 Nell'esempio seguente mostra come moltiplicare due <xref:System.Windows.Media.Matrix> strutture.  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Rappresentazione <see cref="T:System.String" /> della matrice.</param>
        <summary>Converte una rappresentazione <see cref="T:System.String" /> di una matrice nella struttura <see cref="T:System.Windows.Media.Matrix" /> equivalente.</summary>
        <returns>Struttura <see cref="T:System.Windows.Media.Matrix" /> equivalente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come convertire una rappresentazione di stringa di una matrice in un <xref:System.Windows.Media.Matrix> struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixParseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixparseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public void Prepend (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Prepend(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepend(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Prepend : System.Windows.Media.Matrix -&gt; unit" Usage="matrix.Prepend matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">Struttura <see cref="T:System.Windows.Media.Matrix" /> da anteporre alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</param>
        <summary>Antepone la struttura <see cref="T:System.Windows.Media.Matrix" /> specificata alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione equivale moltiplicando il parametro `matrix` da questo <xref:System.Windows.Media.Matrix> struttura. Moltiplicazione di matrici non è commutativa, tuttavia, in modo che questa operazione non è uguale alla moltiplicazione di questa <xref:System.Windows.Media.Matrix> struttura dal parametro `matrix`, vale a dire `matrix` * questa non è lo stesso di questa * `matrix`.  
  
 In una trasformazione composita, è importante l'ordine delle trasformazioni singoli. Ad esempio, se si prima di tutto ruota, quindi scalare, traslare, si ottiene un risultato diverso che se innanzitutto traslare, ruotare, quindi ridimensionare. Uno dei motivi ordine è significativo è che le trasformazioni, ad esempio la rotazione e ridimensionamento vengono eseguite rispetto all'origine del sistema di coordinate. Ridimensionamento di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso rispetto al ridimensionamento di un oggetto che è stato spostato lontano dall'origine. Analogamente, la rotazione di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso da ruotare un oggetto che è stato spostato lontano dall'origine.  
  
   
  
## Examples  
 Nell'esempio seguente viene mostrato come anteporre una <xref:System.Windows.Media.Matrix> sopra un altro <xref:System.Windows.Media.Matrix>.  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : double -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">Angolo di rotazione.</param>
        <summary>Applica una rotazione dell'angolo specificato intorno all'origine della struttura <see cref="T:System.Windows.Media.Matrix" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente illustra come ruotare un <xref:System.Windows.Media.Matrix>.  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : double * double * double -&gt; unit" Usage="matrix.RotateAt (angle, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">Angolo, espresso in gradi, in base al quale ruotare la matrice.</param>
        <param name="centerX">Coordinata x del punto intorno al quale ruotare la matrice.</param>
        <param name="centerY">Coordinata y del punto intorno al quale ruotare la matrice.</param>
        <summary>Ruota la matrice intorno al punto specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente illustra come ruotare un <xref:System.Windows.Media.Matrix> su un punto specificato.  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAtPrepend">
      <MemberSignature Language="C#" Value="public void RotateAtPrepend (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAtPrepend(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAtPrepend (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAtPrepend(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.RotateAtPrepend : double * double * double -&gt; unit" Usage="matrix.RotateAtPrepend (angle, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">Angolo di rotazione espresso in gradi.</param>
        <param name="centerX">Coordinata x del centro di rotazione.</param>
        <param name="centerY">Coordinata y del centro di rotazione.</param>
        <summary>Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> una rotazione dell'angolo specificato intorno al punto definito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In una trasformazione composita, è importante l'ordine delle trasformazioni singoli. Ad esempio, se si prima di tutto ruota, quindi scalare, traslare, si ottiene un risultato diverso che se innanzitutto traslare, ruotare, quindi ridimensionare. Uno dei motivi ordine è significativo è che le trasformazioni, ad esempio la rotazione e ridimensionamento vengono eseguite rispetto all'origine del sistema di coordinate. Ridimensionamento di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso rispetto al ridimensionamento di un oggetto che è stato spostato lontano dall'origine. Analogamente, la rotazione di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso da ruotare un oggetto che è stato spostato lontano dall'origine.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come una rotazione da anteporre un <xref:System.Windows.Media.Matrix>.  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatePrepend">
      <MemberSignature Language="C#" Value="public void RotatePrepend (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotatePrepend(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotatePrepend (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotatePrepend(double angle);" />
      <MemberSignature Language="F#" Value="member this.RotatePrepend : double -&gt; unit" Usage="matrix.RotatePrepend angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">Angolo di rotazione da anteporre.</param>
        <summary>Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> una rotazione dell'angolo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In una trasformazione composita, è importante l'ordine delle trasformazioni singoli. Ad esempio, se si prima di tutto ruota, quindi scalare, traslare, si ottiene un risultato diverso che se innanzitutto traslare, ruotare, quindi ridimensionare. Uno dei motivi ordine è significativo è che le trasformazioni, ad esempio la rotazione e ridimensionamento vengono eseguite rispetto all'origine del sistema di coordinate. Ridimensionamento di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso rispetto al ridimensionamento di un oggetto che è stato spostato lontano dall'origine. Analogamente, la rotazione di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso da ruotare un oggetto che è stato spostato lontano dall'origine.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come una rotazione da anteporre un <xref:System.Windows.Media.Matrix>.  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
        <param name="scaleY">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
        <summary>Accoda il vettore di ridimensionamento specificato alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come scalare un <xref:System.Windows.Media.Matrix> struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleAt">
      <MemberSignature Language="C#" Value="public void ScaleAt (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAt(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAt (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAt(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.ScaleAt : double * double * double * double -&gt; unit" Usage="matrix.ScaleAt (scaleX, scaleY, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
        <param name="scaleY">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
        <param name="centerX">Coordinata x del punto centrale dell'operazione di ridimensionamento.</param>
        <param name="centerY">Coordinata y del punto centrale dell'operazione di ridimensionamento.</param>
        <summary>Ridimensiona la struttura <see cref="T:System.Windows.Media.Matrix" /> rispetto al punto specificato in base al valore definito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come scalare un <xref:System.Windows.Media.Matrix> struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleAtPrepend">
      <MemberSignature Language="C#" Value="public void ScaleAtPrepend (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAtPrepend(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAtPrepend (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAtPrepend(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.ScaleAtPrepend : double * double * double * double -&gt; unit" Usage="matrix.ScaleAtPrepend (scaleX, scaleY, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">Fattore di scala dell'asse x.</param>
        <param name="scaleY">Fattore di scala dell'asse y.</param>
        <param name="centerX">Coordinata x del punto rispetto al quale viene eseguita l'operazione di ridimensionamento.</param>
        <param name="centerY">Coordinata y del punto rispetto al quale viene eseguita l'operazione di ridimensionamento.</param>
        <summary>Antepone il ridimensionamento specificato rispetto al punto definito di questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In una trasformazione composita, è importante l'ordine delle trasformazioni singoli. Ad esempio, se si prima di tutto ruota, quindi scalare, traslare, si ottiene un risultato diverso che se innanzitutto traslare, ruotare, quindi ridimensionare. Uno dei motivi ordine è significativo è che le trasformazioni, ad esempio la rotazione e ridimensionamento vengono eseguite rispetto all'origine del sistema di coordinate. Ridimensionamento di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso rispetto al ridimensionamento di un oggetto che è stato spostato lontano dall'origine. Analogamente, la rotazione di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso da ruotare un oggetto che è stato spostato lontano dall'origine.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come anteporre una scala a un <xref:System.Windows.Media.Matrix>.  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalePrepend">
      <MemberSignature Language="C#" Value="public void ScalePrepend (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScalePrepend(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScalePrepend (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScalePrepend(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.ScalePrepend : double * double -&gt; unit" Usage="matrix.ScalePrepend (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
        <param name="scaleY">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
        <summary>Antepone il vettore di ridimensionamento specificato alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In una trasformazione composita, è importante l'ordine delle trasformazioni singoli. Ad esempio, se si prima di tutto ruota, quindi scalare, traslare, si ottiene un risultato diverso che se innanzitutto traslare, ruotare, quindi ridimensionare. Uno dei motivi ordine è significativo è che le trasformazioni, ad esempio la rotazione e ridimensionamento vengono eseguite rispetto all'origine del sistema di coordinate. Ridimensionamento di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso rispetto al ridimensionamento di un oggetto che è stato spostato lontano dall'origine. Analogamente, la rotazione di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso da ruotare un oggetto che è stato spostato lontano dall'origine.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come anteporre una scala a un <xref:System.Windows.Media.Matrix> struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SetIdentity">
      <MemberSignature Language="C#" Value="public void SetIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SetIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIdentity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIdentity();" />
      <MemberSignature Language="F#" Value="member this.SetIdentity : unit -&gt; unit" Usage="matrix.SetIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cambia la struttura <see cref="T:System.Windows.Media.Matrix" /> in una matrice di identità.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una matrice di identità ha un valore pari a 1 nei coefficienti [1,1], [2,2], [3,3] e il valore 0 per il resto dei coefficienti. Tale nome è correlato all'impostazione <xref:System.Windows.Media.Matrix.M11%2A> e <xref:System.Windows.Media.Matrix.M22%2A> su 1 e <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, e <xref:System.Windows.Media.Matrix.OffsetY%2A> su 0. In una matrice affine, ovvero l'implementazione che [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] viene utilizzato per il <xref:System.Windows.Media.Matrix> struttura, i coefficienti [3,1], [3,2], [3.3] sono implicite avere sempre i valori 0, 0,1 rispettivamente.  
  
||||  
|-|-|-|  
|1|0|0|  
|0|1|0|  
|0|0|1|  
  
 Per una matrice di identità, il <xref:System.Windows.Media.Matrix.ToString%2A> metodo restituisce la stringa "Identità", anziché i coefficienti del <xref:System.Windows.Media.Matrix>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come trasformare un <xref:System.Windows.Media.Matrix> struttura in una matrice di identità.  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Skew">
      <MemberSignature Language="C#" Value="public void Skew (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Skew(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Skew (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Skew(double skewX, double skewY);" />
      <MemberSignature Language="F#" Value="member this.Skew : double * double -&gt; unit" Usage="matrix.Skew (skewX, skewY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX">Angolo nella dimensione x in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
        <param name="skewY">Angolo nella dimensione y in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
        <summary>Accoda alla struttura <see cref="T:System.Windows.Media.Matrix" /> un'inclinazione di gradi specificati nelle dimensioni x e y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Questo esempio viene illustrato come inclinare un <xref:System.Windows.Media.Matrix> struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SkewPrepend">
      <MemberSignature Language="C#" Value="public void SkewPrepend (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkewPrepend(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkewPrepend (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkewPrepend(double skewX, double skewY);" />
      <MemberSignature Language="F#" Value="member this.SkewPrepend : double * double -&gt; unit" Usage="matrix.SkewPrepend (skewX, skewY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX">Angolo nella dimensione x in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
        <param name="skewY">Angolo nella dimensione y in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
        <summary>Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> un'inclinazione di gradi specificati nelle dimensioni x e y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In una trasformazione composita, è importante l'ordine delle trasformazioni singoli. Ad esempio, se si prima di tutto ruota, quindi scalare, traslare, si ottiene un risultato diverso che se innanzitutto traslare, ruotare, quindi ridimensionare. Uno dei motivi ordine è significativo è che le trasformazioni, ad esempio la rotazione e ridimensionamento vengono eseguite rispetto all'origine del sistema di coordinate. Ridimensionamento di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso rispetto al ridimensionamento di un oggetto che è stato spostato lontano dall'origine. Analogamente, la rotazione di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso da ruotare un oggetto che è stato spostato lontano dall'origine.  
  
   
  
## Examples  
 Questo esempio viene illustrato come anteporre l'inclinazione di un <xref:System.Windows.Media.Matrix> struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">Formato da usare.  
  
oppure 
Riferimento Null (<see langword="Nothing" /> in Visual Basic) per utilizzare il formato definito per il tipo di implementazione di <see cref="T:System.IFormattable" />.</param>
        <param name="provider">Provider da usare per formattare il valore.  
  
oppure 
Riferimento Null (<see langword="Nothing" /> in Visual Basic) per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</param>
        <summary>Formatta il valore dell'istanza corrente usando il formato specificato.</summary>
        <returns>Valore dell'istanza corrente nel formato specificato.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una rappresentazione <see cref="T:System.String" /> di questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'oggetto <xref:System.Windows.Media.Matrix> struttura è una matrice di identità, viene restituita la stringa "Identity".  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="matrix.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una rappresentazione <see cref="T:System.String" /> di questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <returns>Oggetto <see cref="T:System.String" /> contenente i membri <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" /> e <see cref="P:System.Windows.Media.Matrix.OffsetX" /> nonché i valori <see cref="P:System.Windows.Media.Matrix.OffsetY" /> della struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'oggetto <xref:System.Windows.Media.Matrix> è un <xref:System.Windows.Media.Matrix.Identity%2A> matrice, la stringa "Identity" viene restituito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="matrix.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Informazioni di formattazione specifiche delle impostazioni cultura.</param>
        <summary>Crea una rappresentazione <see cref="T:System.String" /> della struttura <see cref="T:System.Windows.Media.Matrix" /> con le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
        <returns>Oggetto <see cref="T:System.String" /> contenente i membri <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" /> e <see cref="P:System.Windows.Media.Matrix.OffsetX" /> nonché i valori <see cref="P:System.Windows.Media.Matrix.OffsetY" /> della struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'oggetto <xref:System.Windows.Media.Matrix> struttura è una matrice di identità, viene restituita la stringa "Identity".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Trasforma la matrice di punti, il punto, la matrice di vettori o il vettore specificato mediante questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Media.Matrix> trasformare punti e vettori.  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Point Transform (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point Transform(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point Transform(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Point -&gt; System.Windows.Point" Usage="matrix.Transform point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">Il punto da trasformare.</param>
        <summary>Trasforma il punto specificato mediante la struttura <see cref="T:System.Windows.Media.Matrix" /> e restituisce il risultato.</summary>
        <returns>Risultato della trasformazione di <paramref name="point" /> mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Media.Matrix> trasformare punti e vettori.  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Point[] -&gt; unit" Usage="matrix.Transform points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">Punti da trasformare. I punti originali nella matrice vengono sostituiti dai valori trasformati.</param>
        <summary>Trasforma i punti specificati mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Media.Matrix> trasformare punti e vettori.  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Transform (System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Vector Transform(valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Vector Transform(System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Vector -&gt; System.Windows.Vector" Usage="matrix.Transform vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector">Vettore da trasformare.</param>
        <summary>Trasforma il vettore specificato mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <returns>Risultato della trasformazione di <paramref name="vector" /> mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Media.Matrix> trasformare punti e vettori.  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Vector[] vectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Vector[] vectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (vectors As Vector())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Vector&gt; ^ vectors);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Vector[] -&gt; unit" Usage="matrix.Transform vectors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vectors" Type="System.Windows.Vector[]" />
      </Parameters>
      <Docs>
        <param name="vectors">Vettori da trasformare. I vettori originali nella matrice vengono sostituiti dai valori trasformati.</param>
        <summary>Trasforma i vettori specificati mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Media.Matrix> trasformare punti e vettori.  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : double * double -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
        <param name="offsetY">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
        <summary>Accoda alla struttura <see cref="T:System.Windows.Media.Matrix" /> una traslazione degli offset specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente illustra come aggiunta una traduzione in un <xref:System.Windows.Media.Matrix> struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="TranslatePrepend">
      <MemberSignature Language="C#" Value="public void TranslatePrepend (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslatePrepend(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslatePrepend (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslatePrepend(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.TranslatePrepend : double * double -&gt; unit" Usage="matrix.TranslatePrepend (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
        <param name="offsetY">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
        <summary>Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> una traslazione degli offset specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In una trasformazione composita, è importante l'ordine delle trasformazioni singoli. Ad esempio, se si prima di tutto ruota, quindi scalare, traslare, si ottiene un risultato diverso che se innanzitutto traslare, ruotare, quindi ridimensionare. Uno dei motivi ordine è significativo è che le trasformazioni, ad esempio la rotazione e ridimensionamento vengono eseguite rispetto all'origine del sistema di coordinate. Ridimensionamento di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso rispetto al ridimensionamento di un oggetto che è stato spostato lontano dall'origine. Analogamente, la rotazione di un oggetto che viene centrato in corrispondenza dell'origine produce un risultato diverso da ruotare un oggetto che è stato spostato lontano dall'origine.  
  
   
  
## Examples  
 L'esempio seguente mostra come anteporre una traslazione a un <xref:System.Windows.Media.Matrix> struttura.  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslatePrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>