<Type Name="FontFamily" FullName="System.Windows.Media.FontFamily">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="062cc53ff87a1d35e62b8befa19d63e124dd6efb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36468853" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontFamily" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontFamily extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FontFamily" />
  <TypeSignature Language="VB.NET" Value="Public Class FontFamily" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontFamily" />
  <TypeSignature Language="F#" Value="type FontFamily = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.FontFamilyConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.FontFamilyValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a family of related fonts.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una famiglia di caratteri è un set di caratteri tipografici che condividono lo stesso nome di famiglia, ad esempio "Times New Roman", ma che differiscono in funzionalità. Queste differenze includono <xref:System.Windows.Media.Typeface.Style%2A>, ad esempio, corsivo e <xref:System.Windows.Media.Typeface.Weight%2A>, ad esempio grassetto.  
  
 ![I tipi di carattere](~/add/media/fonts.PNG "i tipi di carattere")  
Esempio di caratteri tipografici che sono membri della famiglia di caratteri "Times New Roman"  
  
 La maggior parte degli [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementi, ad esempio <xref:System.Windows.Controls.Button> e <xref:System.Windows.Controls.TextBlock>, fornire un <xref:System.Windows.Controls.Control.FontFamily%2A> proprietà che può essere usato per specificare un tipo di carattere per il contenuto di un controllo testo. È possibile definire il tipo di carattere impostando la proprietà con un <xref:System.Windows.Media.FontFamily> valore. Negli esempi seguenti viene illustrato come fare riferimento a un tipo di carattere [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] e nel codice.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet3)]
 [!code-vb[FontSnippets#FontFallbackSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet3)]
 [!code-xaml[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet3)]  
  
 Nell'esempio precedente, il tipo di carattere a cui viene fatto riferimento, "Comic Sans MS," riferimento al relativo *soprannome*. Inoltre, in questo esempio il tipo di carattere viene considerato nella raccolta del tipo di carattere di sistema.  
  
## <a name="specifying-fonts-in-alternate-directories"></a>Specifica i tipi di carattere nelle directory alternativa  
 Oggetto [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] applicazione può specificare una directory diversa da quella che contiene l'insieme di caratteri di sistema per la risoluzione dei riferimenti del tipo di carattere. Il nome descrittivo del tipo di carattere specificabile assoluto [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] valore per risolvere il riferimento del tipo di carattere, come illustrato nell'esempio seguente [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] ed esempi di codice.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet6)]
 [!code-vb[FontSnippets#FontPackageSnippet6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet6)]
 [!code-xaml[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet6)]  
  
 Può inoltre specificare un nome descrittivo del tipo di carattere [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore, che richiede una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] per risolvere il riferimento al tipo di carattere. Il <xref:System.Windows.Media.FontFamily.BaseUri%2A> proprietà del <xref:System.Windows.Media.FontFamily> oggetto corrisponde alla base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore. Esempio di codice seguente viene illustrato come creare un riferimento al tipo di carattere che è costituito da una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore e un valore relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet7)]
 [!code-vb[FontSnippets#FontPackageSnippet7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet7)]  
  
 È possibile usare una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore quando si fa riferimento a un tipo di carattere viene assemblato come parte dell'applicazione. Ad esempio, la base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore può essere "//applicazione" [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], che consente di fare riferimento ai tipi di carattere vengono impacchettati come risorse dell'applicazione. Esempio di codice seguente viene mostrato un riferimento di tipo di carattere che è costituito da una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore e un valore relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 Quando un <xref:System.Windows.Media.FontFamily> viene specificato come un attributo nel markup, la base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore è sempre implicito, ovvero il relativo valore è il [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] pagina. La base implicita [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore viene usato con le coordinate [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore nella stringa del nome descrittivo per ottenere la posizione del carattere. Nell'esempio seguente [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] esempio, si noti che il relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore viene utilizzato il ". /" notazione, il che significa "nella cartella corrente" della base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore.  
  
 [!code-xaml[FontSnippets#FontPackageSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet1)]  
  
 Oggetto [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applicazione possibile creare un pacchetto dei tipi di carattere come un elemento di contenuto, un elemento di risorsa o un elemento di risorsa della libreria. Per altre informazioni, vedere [Includere i tipi di carattere nel pacchetto delle applicazioni](~/docs/framework/wpf/advanced/packaging-fonts-with-applications.md).  
  
## <a name="font-fallback"></a>Il Fallback  
 Il fallback si riferisce alla sostituzione automatica di un tipo di carattere diverso dal tipo di carattere che è selezionata per l'applicazione client. Esistono due motivi principali per cui viene richiamato il fallback:  
  
-   Il tipo di carattere specificato dall'applicazione client non esiste nel sistema.  
  
-   Il tipo di carattere specificato dall'applicazione client non contiene le icone necessarie per il rendering del testo.  
  
 In[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], il meccanismo di fallback del tipo di carattere viene utilizzata la famiglia di caratteri di fallback predefinito, "Global User Interface", come il tipo di carattere sostitutivo. Questo tipo di carattere viene definito come un tipo di carattere composito, il cui nome è "GlobalUserInterface". Per ulteriori informazioni sui tipi di carattere compositi, vedere la sezione tipi di carattere compositi in questo argomento.  
  
 Il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] meccanismo di fallback del tipo di carattere sostituisce precedente [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] tecnologie di sostituzione del tipo di carattere.  
  
## <a name="defining-a-font-fallback-sequence-in-code"></a>Definizione di una sequenza di Fallback del tipo di carattere nel codice  
 È possibile definire una sequenza di fallback del tipo di carattere nel codice, che consente di definire un tipo di carattere alternativo. Quando si crea un <xref:System.Windows.Media.FontFamily> dell'oggetto, fornire più tipi di carattere nomi famiglia, separati da virgole, per il <xref:System.String> parametro, ad esempio "Comic Sans MS, Verdana". In questo caso, se i glifi da carattere tipografico "Riflesse nello" non sono disponibili, vengono utilizzati i glifi da carattere tipografico "Verdana". Se "Riflesse nello" né "Verdana" dispone di glifi necessari, la famiglia di caratteri di fallback del carattere tipografico viene utilizzata, ovvero "Global User Interface" per impostazione predefinita.  
  
 Negli esempi seguenti viene illustrato come definire una sequenza di fallback del tipo di carattere, [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] e nel codice.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet1)]
 [!code-vb[FontSnippets#FontFallbackSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet1)]
 [!code-xaml[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet1)]  
  
 Uno dei tipi di carattere nella sequenza di fallback è possibile specificare posizioni del carattere. Negli esempi seguenti, "Pericles Light" viene fatto riferimento come una risorsa dell'applicazione, e "Verdana" come un membro della raccolta del tipo di carattere del sistema.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet2)]
 [!code-vb[FontSnippets#FontFallbackSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet2)]
 [!code-xaml[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet2)]  
  
## <a name="composite-fonts"></a>Tipi di carattere compositi  
 Il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] piattaforma fornisce una funzionalità per consentire la costruzione dell'intera gamma di tipi di carattere multilingue e per evitare la visualizzazione di glifi mancanti. Tipi di carattere compositi sostituire il [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] il collegamento, il fallback, associazione di tipo di carattere, associazione tipo di carattere e meccanismi di caratteri definiti dall'utente finale (EUDC).  
  
 Una famiglia di caratteri composito è disponibile per le applicazioni tramite il <xref:System.Windows.Media.FontFamily> e <xref:System.Windows.Media.Typeface> costruttori esattamente come qualsiasi altra famiglia. Ogni famiglia di caratteri composito denominato e, come con altri tipi di carattere può fornire varianti localizzate del nome in più lingue.  
  
 Nell'esempio di codice seguente viene illustrato come una famiglia di caratteri composito possa essere definita un file su disco. Questo file può essere archiviato nel valore predefinito [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] directory carattere come con qualsiasi altro tipo di carattere installati o possibile farvi riferimento in qualsiasi posizione con l'inclusione relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] quando si fa riferimento la famiglia di base al nome.  
  
 Nell'esempio seguente viene illustrato il markup della famiglia del tipo di carattere in un ". File CompositeFont".  
  
 [!code-xaml[CompositeFontMarkup#CF](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositeFontMarkup/CS/comp.xaml#cf)]  
  
 I seguenti quattro tipi di carattere compositi vengono visualizzati nella directory di tipo di carattere predefinito Windows come parte dell'installazione di WPF.  
  
|Tipo di carattere|Note|  
|----------|-----------|  
|GlobalMonospace.CompositeFont|Esegue il rendering di testo usando un tipo di carattere a spaziatura fissa, ad esempio, "Courier New" per i caratteri latini.|  
|GlobalSanSerif.CompositeFont|Esegue il rendering di testo usando un tipo di carattere sans serif, ad esempio, "Arial" per i caratteri latini.|  
|GlobalSerif.CompositeFont|Esegue il rendering di testo con un carattere serif, ad esempio "Times New Roman" per i caratteri latini.|  
|GlobalUserInterface.CompositeFont|Esegue il rendering di testo usando un tipo di carattere predefinito, ad esempio "Times New Roman" per i caratteri latini.|  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object FontFamily="fontFamilyName"/>  
- or -  
<object FontFamily="fontFamilyNamesList"/>  
- or -  
<object FontFamily="fontFamilyFolderReference"/>  
- or -  
<object FontFamily="fontFamilyUriReference"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *fontFamilyName*  
 Stringa che specifica un nome di famiglia del tipo di carattere.  Ad esempio, `"Arial"` o `"Century Gothic"`.  
  
 *fontFamilyNamesList*  
 Stringa che specifica più nomi di famiglia, separati da una virgola (gli spazi vuoti che seguono la virgola viene ignorato).  Il primo carattere specificato viene utilizzato come la famiglia di caratteri primario; famiglie di caratteri successivi fungono da famiglie di fallback da usare nei casi in cui la famiglia di caratteri primario non disponibile o non applicabile.  Ad esempio, `"Arial, Century Gothic"` specifica Arial come la famiglia di caratteri primario con secolo la famiglia di caratteri di fallback.  
  
 *fontFamilyFolderReference*  
 Stringa che specifica una cartella contenente il tipo di carattere, insieme a un nome di famiglia del tipo di carattere.  La cartella e il nome della famiglia sono delimitate da un carattere #.  Il riferimento folder può essere assoluto o relativo.  Ad esempio `"Custom Fonts\#My Custom Font"`.  
  
 *fontFamilyUriReference*  
 Stringa che specifica un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] per il tipo di carattere, insieme a un nome di famiglia del tipo di carattere.  Il [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] e il nome della famiglia sono delimitate da un carattere #.  Ad esempio `"http://MyFontServer/Fonts/#My Custom Font"`.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Fonts" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of an anonymous <see cref="T:System.Windows.Media.FontFamily" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore predefinito quando si desidera creare un tipo di carattere composito a livello di codice. Ciò significa che non è necessario specificare un nome di famiglia del tipo di carattere per il costruttore, ma è necessario popolare gli insiemi di <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> e <xref:System.Windows.Media.FontFamily.FamilyNames%2A> raccolte prima di utilizzare l'istanza costruita.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily familyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="familyName">The family name or names that comprise the new <see cref="T:System.Windows.Media.FontFamily" />. Multiple family names should be separated by commas.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class from the specified font family name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni nome di famiglia specificato nella `familyName` parametro può essere preceduto da un riferimento al percorso a una directory o un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]. Il riferimento al percorso è separato dal nome della famiglia da un segno di cancelletto (`#`) caratteri. Più nomi specificati nel `familyName` parametro deve essere separato da virgole.  
  
 Ogni gruppo può essere un tipo di carattere reale direttamente rappresenta un set di file del tipo di carattere che condividono lo stesso nome di famiglia, o può essere un riferimento a un nome di famiglia definito in un file di tipo di carattere composito.  
  
 Quando vengono rilevati più gruppi, la seconda e le famiglie fungono da famiglie di fallback, gestione di punti di codice che non sono supportati dalla famiglia prima. Per ogni punto di codice che non è supportato dal primo famiglia di caratteri, ogni famiglia successivo viene controllata.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#103](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#103)]
 [!code-vb[FontSnippets#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="familyName" /> cannot be <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (Uri baseUri, string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(Uri ^ baseUri, System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : Uri * string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily (baseUri, familyName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">Specifies the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] that is used to resolve <c>familyName</c>.</param>
        <param name="familyName">The family name or names that comprise the new <see cref="T:System.Windows.Media.FontFamily" />. Multiple family names should be separated by commas.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class from the specified font family name and an optional base [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `familyName` può specificare un valore [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore, che richiede una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] per risolvere il riferimento al tipo di carattere. Il `baseUri` valore può essere `null`.  
  
   
  
## Examples  
 Il codice seguente viene mostrato un riferimento di tipo di carattere che è costituito da una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore e un valore relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double with get, set" Usage="System.Windows.Media.FontFamily.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the distance between the baseline and the character cell top.</summary>
        <value>Oggetto <see cref="T:System.Double" /> che indica la distanza tra la linea di base e la parte superiore della cella del carattere, espresso come frazione delle dimensioni em del carattere.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Windows.Media.FontFamily.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the base [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] that is used to resolve a font family name.</summary>
        <value>Valore di tipo <see cref="T:System.Uri" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito sarà `null` se il nome della famiglia non si basa su una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] per risolvere il riferimento al tipo di carattere. Per recuperare il nome di famiglia del tipo di carattere utilizzato per costruire il <xref:System.Windows.Media.FontFamily> dell'oggetto, utilizzare il <xref:System.Windows.Media.FontFamily.Source%2A> proprietà.  
  
   
  
## Examples  
 L'esempio seguente mostra i risultati di recupero il <xref:System.Windows.Media.FontFamily.BaseUri%2A> proprietà da un <xref:System.Windows.Media.FontFamily> oggetto.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet9)]
 [!code-vb[FontSnippets#FontPackageSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fontFamily.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The <see cref="T:System.Windows.Media.FontFamily" /> object to compare.</param>
        <summary>Gets a value that indicates whether the current font family object and the specified font family object are the same.</summary>
        <returns>
          <see langword="true" /> if <paramref name="o" /> is equal to the current <see cref="T:System.Windows.Media.FontFamily" /> object; otherwise, <see langword="false" />. If <paramref name="o" /> is not a <see cref="T:System.Windows.Media.FontFamily" /> object, <see langword="false" /> is returned.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyMaps">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamilyMapCollection FamilyMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamilyMapCollection FamilyMaps" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyMaps As FontFamilyMapCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamilyMapCollection ^ FamilyMaps { System::Windows::Media::FontFamilyMapCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyMaps : System.Windows.Media.FontFamilyMapCollection" Usage="System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamilyMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of <see cref="T:System.Windows.Media.FontFamilyMap" /> objects.</summary>
        <value>Oggetto <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> contenente oggetti <see cref="T:System.Windows.Media.FontFamilyMap" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per <xref:System.Windows.Media.FontFamily> gli oggetti creati utilizzando un nome di famiglia del tipo di carattere, il <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> proprietà restituisce una raccolta vuota, di sola lettura.  
  
 Il <xref:System.Windows.Media.FontFamilyMap> oggetto definisce quale tipo di carattere da utilizzare per visualizzare un set specificato di caratteri Unicode di impostazioni cultura specificate.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyNames">
      <MemberSignature Language="C#" Value="public System.Windows.Media.LanguageSpecificStringDictionary FamilyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.LanguageSpecificStringDictionary FamilyNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyNames As LanguageSpecificStringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::LanguageSpecificStringDictionary ^ FamilyNames { System::Windows::Media::LanguageSpecificStringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyNames : System.Windows.Media.LanguageSpecificStringDictionary" Usage="System.Windows.Media.FontFamily.FamilyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.LanguageSpecificStringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of strings and <see cref="T:System.Globalization.CultureInfo" /> values that represent the font family names of the <see cref="T:System.Windows.Media.FontFamily" /> object.</summary>
        <value>Oggetto <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> che rappresenta i nomi della famiglia di caratteri.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#106](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#106)]
 [!code-vb[FontSnippets#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyTypefaces">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyTypefaces As FamilyTypefaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FamilyTypefaceCollection ^ FamilyTypefaces { System::Windows::Media::FamilyTypefaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyTypefaces : System.Windows.Media.FamilyTypefaceCollection" Usage="System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FamilyTypefaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of typefaces for the <see cref="T:System.Windows.Media.FontFamily" /> object.</summary>
        <value>Un <see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> che rappresenta un insieme di caratteri tipografici per il <see cref="T:System.Windows.Media.FontFamily" /> oggetto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_FamilyTypefaces"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.FamilyTypefaces>  
    <OneOrMoreFontFamilyTypefaces/>  
  </object.FamilyTypefaces>  
</object>  
```  
  
<a name="xamlValues_FamilyTypefaces"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *OneOrMoreFontFamilyTypefaces*  
 Uno o più caratteri tipografici per il <xref:System.Windows.Media.FontFamily> oggetto.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#107](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#107)]
 [!code-vb[FontSnippets#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fontFamily.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serves as a hash function for <see cref="T:System.Windows.Media.FontFamily" />. It is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
        <returns>An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypefaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt; GetTypefaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Typeface&gt; GetTypefaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypefaces () As ICollection(Of Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Windows::Media::Typeface ^&gt; ^ GetTypefaces();" />
      <MemberSignature Language="F#" Value="member this.GetTypefaces : unit -&gt; System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;" Usage="fontFamily.GetTypefaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a collection of <see cref="T:System.Windows.Media.Typeface" /> objects that represent the type faces in the default system font location.</summary>
        <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.Typeface" /> objects.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#104](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#104)]
 [!code-vb[FontSnippets#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineSpacing">
      <MemberSignature Language="C#" Value="public double LineSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.LineSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property LineSpacing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineSpacing { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineSpacing : double with get, set" Usage="System.Windows.Media.FontFamily.LineSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the line spacing value for the <see cref="T:System.Windows.Media.FontFamily" /> object. The line spacing is the recommended baseline-to-baseline distance for the text in this font relative to the em size.</summary>
        <value>Un <see cref="T:System.Double" /> che rappresenta l'interlinea per il <see cref="T:System.Windows.Media.FontFamily" /> oggetto.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Windows.Media.FontFamily.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font family name that is used to construct the <see cref="T:System.Windows.Media.FontFamily" /> object.</summary>
        <value>Il nome della famiglia del <see cref="T:System.Windows.Media.FontFamily" /> oggetto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per restituire la base [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] valore di un <xref:System.Windows.Media.FontFamily> oggetto, usare il <xref:System.Windows.Media.FontFamily.BaseUri%2A>.  
  
 Se il <xref:System.Windows.Media.FontFamily> oggetto è stato creato senza specificare un nome di famiglia del tipo di carattere, il valore restituito è <xref:System.String.Empty>.  
  
   
  
## Examples  
 L'esempio seguente mostra i risultati di recupero il <xref:System.Windows.Media.FontFamily.BaseUri%2A> e <xref:System.Windows.Media.FontFamily.Source%2A> i valori delle proprietà da un <xref:System.Windows.Media.FontFamily> oggetto.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet10)]
 [!code-vb[FontSnippets#FontPackageSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fontFamily.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of the <see cref="P:System.Windows.Media.FontFamily.Source" /> property.</summary>
        <returns>The source location of the <see cref="T:System.Windows.Media.FontFamily" /> object, including the directory or [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] location reference.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Media.FontFamily> oggetto è stato creato senza specificare un nome di famiglia del tipo di carattere, il valore restituito è <xref:System.String.Empty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>