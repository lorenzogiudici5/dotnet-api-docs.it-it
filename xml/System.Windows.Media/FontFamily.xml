<Type Name="FontFamily" FullName="System.Windows.Media.FontFamily">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce7f9027ef5ed0710529422d84b839faf4770608" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="it-IT" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53225450" /></Metadata><TypeSignature Language="C#" Value="public class FontFamily" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontFamily extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FontFamily" />
  <TypeSignature Language="VB.NET" Value="Public Class FontFamily" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontFamily" />
  <TypeSignature Language="F#" Value="type FontFamily = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.FontFamilyConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.FontFamilyValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una famiglia di tipi di carattere correlati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una famiglia di caratteri è un set di caratteri tipografici che condividono lo stesso nome di famiglia, ad esempio "Times New Roman", ma che differiscono solo in funzionalità. Queste funzionalità vengono illustrate le differenze <xref:System.Windows.Media.Typeface.Style%2A>, ad esempio corsivo, e <xref:System.Windows.Media.Typeface.Weight%2A>, ad esempio grassetto.  
  
 ![I tipi di carattere](~/add/media/fonts.PNG "i tipi di carattere")  
Esempio di caratteri tipografici che sono membri della famiglia di caratteri "Times New Roman"  
  
 La maggior parte degli [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementi, ad esempio <xref:System.Windows.Controls.Button> e <xref:System.Windows.Controls.TextBlock>, fornire un <xref:System.Windows.Controls.Control.FontFamily%2A> proprietà che può essere usata per specificare un tipo di carattere per il contenuto di testo di un controllo. È possibile definire il tipo di carattere impostando la proprietà con un <xref:System.Windows.Media.FontFamily> valore. Gli esempi seguenti illustrano come fare riferimento a un tipo di carattere [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] e nel codice.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet3)]
 [!code-vb[FontSnippets#FontFallbackSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet3)]
 [!code-xaml[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet3)]  
  
 Nell'esempio precedente, il tipo di carattere a cui viene fatto riferimento, "Sans fumetti MS," fa relativi *soprannome*. Inoltre, in questo esempio il tipo di carattere si presuppone che sia nella raccolta del tipo di carattere del sistema.  
  
## <a name="specifying-fonts-in-alternate-directories"></a>Specifica i tipi di carattere nelle directory alternativa  
 Oggetto [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] applicazione può specificare una directory, diversa dalla directory che contiene l'insieme di caratteri di sistema per risolvere i riferimenti del tipo di carattere. Il nome descrittivo del tipo di carattere è possibile specificare un oggetto assoluto [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] valore per risolvere il riferimento al tipo di carattere, come illustrato nell'esempio seguente [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] ed esempi di codice.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet6)]
 [!code-vb[FontSnippets#FontPackageSnippet6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet6)]
 [!code-xaml[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet6)]  
  
 Il nome descrittivo del tipo di carattere può anche specificare un valore relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore, che richiede una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] per risolvere il riferimento al tipo di carattere. Il <xref:System.Windows.Media.FontFamily.BaseUri%2A> proprietà del <xref:System.Windows.Media.FontFamily> oggetto corrisponde alla base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore. Esempio di codice seguente viene illustrato come creare un riferimento al tipo di carattere che è costituito da una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore e un valore relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet7)]
 [!code-vb[FontSnippets#FontPackageSnippet7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet7)]  
  
 È possibile usare una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore quando si fa riferimento a un tipo di carattere viene incluso come parte dell'applicazione. Ad esempio, la base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore può essere una "//Application" [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], che consente di fare riferimento ai tipi di carattere vengono impacchettati come risorse dell'applicazione. Esempio di codice seguente illustra un riferimento di tipo di carattere che è costituito da una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore e un valore relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 Quando un <xref:System.Windows.Media.FontFamily> viene specificato come un attributo nel markup di base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore è sempre implicito: il valore è la [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] pagina. La base implicita [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore viene usato con il relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore nella stringa del nome descrittivo per ottenere la posizione del carattere. Nell'esempio seguente [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] esempio, si noti che il relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore viene utilizzato il ". /" notazione scientifica, il che significa "nella cartella corrente" della base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore.  
  
 [!code-xaml[FontSnippets#FontPackageSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet1)]  
  
 Oggetto [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applicazione possibile comprimere i tipi di carattere come un elemento di contenuto, un elemento di risorsa o un elemento di risorsa di libreria. Per altre informazioni, vedere [Includere i tipi di carattere nel pacchetto delle applicazioni](~/docs/framework/wpf/advanced/packaging-fonts-with-applications.md).  
  
## <a name="font-fallback"></a>Il Fallback  
 Il fallback si riferisce alla sostituzione automatica di un tipo di carattere diverso dal tipo di carattere selezionato dall'applicazione client. Esistono due motivi principali per cui viene richiamato il fallback:  
  
-   Il tipo di carattere specificato dall'applicazione client non esiste nel sistema.  
  
-   Il tipo di carattere specificato dall'applicazione client non contiene i glifi necessari per il rendering del testo.  
  
 In[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], il meccanismo di fallback del tipo di carattere viene utilizzata la famiglia di caratteri di fallback predefinito, "Interfaccia utente globale", come il carattere di sostituzione. Questo tipo di carattere è definito come un tipo di carattere composito, il cui nome è "GlobalUserInterface". Per altre informazioni sui tipi di carattere compositi, vedere la sezione tipi di carattere compositi in questo argomento.  
  
 Il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] meccanismo di fallback del tipo di carattere sostituisce precedente [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] tecnologie di sostituzione del tipo di carattere.  
  
## <a name="defining-a-font-fallback-sequence-in-code"></a>Definizione di una sequenza di Fallback del tipo di carattere nel codice  
 È possibile definire una sequenza di fallback del tipo di carattere nel codice, che consente di definire un tipo di carattere alternativo. Quando si crea una <xref:System.Windows.Media.FontFamily> dell'oggetto, specificare più tipi di carattere della famiglia nomi, separati da virgole, per il <xref:System.String> parametro, ad esempio "Fumetti Sans MS, Verdana". In questo caso, se i glifi di carattere tipografico "Riflesse nello" non sono disponibili, vengono usati i glifi di carattere tipografico "Verdana". Se "Riflesse nello" né "Verdana" dispone di glifi necessari, la famiglia di caratteri di fallback del carattere tipografico viene utilizzata, ovvero "Interfaccia utente globale" per impostazione predefinita.  
  
 Gli esempi seguenti illustrano come definire una sequenza di fallback del tipo di carattere, in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] e nel codice.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet1)]
 [!code-vb[FontSnippets#FontFallbackSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet1)]
 [!code-xaml[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet1)]  
  
 Uno dei tipi di carattere nella sequenza di fallback è possibile specificare posizioni di carattere. Negli esempi seguenti, "Pericles leggero" viene fatto riferimento come una risorsa dell'applicazione e "Verdana" viene fatto riferimento come un membro della raccolta del tipo di carattere del sistema.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet2)]
 [!code-vb[FontSnippets#FontFallbackSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet2)]
 [!code-xaml[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet2)]  
  
## <a name="composite-fonts"></a>Tipi di carattere compositi  
 Il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] piattaforma di fornisce una funzionalità di tipo di carattere composito per consentire la costruzione dell'intera gamma di tipi di carattere multilingue ed evitare la visualizzazione di glifi mancanti. Tipi di carattere compositi sostituire il [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] il collegamento del tipo di carattere, il fallback, associazione tipo di carattere, associazione tipo di carattere e meccanismi di caratteri finali definiti dall'utente (finale EUDC).  
  
 Una famiglia di caratteri composito è disponibile per le applicazioni tramite il <xref:System.Windows.Media.FontFamily> e <xref:System.Windows.Media.Typeface> costruttori esattamente come qualsiasi altra famiglia. Ogni famiglia del tipo di carattere composito denominato e, come con altri tipi di carattere, può fornire varianti localizzate del nome in più lingue.  
  
 Il markup seguente illustra come una famiglia di caratteri compositi può essere definita come un file su disco. Questo file può essere archiviato nell'impostazione predefinita [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] directory di caratteri come con qualsiasi altro tipo di carattere installati oppure è reperibile in qualsiasi posizione, includendo il [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] quando si fa riferimento la famiglia in base al nome.  
  
 L'esempio seguente illustra il markup della famiglia del tipo di carattere in un ". File CompositeFont".  
  
 [!code-xaml[CompositeFontMarkup#CF](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositeFontMarkup/CS/comp.xaml#cf)]  
  
 I seguenti quattro tipi di carattere compositi vengono visualizzati nella directory del tipo di carattere Windows predefinita come parte dell'installazione di WPF.  
  
|Tipo di carattere|Note|  
|----------|-----------|  
|GlobalMonospace.CompositeFont|Esegue il rendering di testo utilizzando un tipo di carattere a spaziatura fissa, ad esempio "Courier New" per i caratteri latini.|  
|GlobalSanSerif.CompositeFont|Esegue il rendering di testo utilizzando un tipo di carattere sans serif, ad esempio, "Arial" per i caratteri latini.|  
|GlobalSerif.CompositeFont|Esegue il rendering di testo utilizzando un tipo di carattere serif, ad esempio, "Times New Roman" per i caratteri latini.|  
|GlobalUserInterface.CompositeFont|Esegue il rendering di testo utilizzando un tipo di carattere predefinito, ad esempio, "Times New Roman" per i caratteri latini.|  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object FontFamily="fontFamilyName"/>  
- or -  
<object FontFamily="fontFamilyNamesList"/>  
- or -  
<object FontFamily="fontFamilyFolderReference"/>  
- or -  
<object FontFamily="fontFamilyUriReference"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *fontFamilyName*  
 Stringa che specifica un nome di famiglia del tipo di carattere.  Ad esempio, `"Arial"` o `"Century Gothic"`.  
  
 *fontFamilyNamesList*  
 Stringa che specifica più nomi di famiglia, separati da una virgola (gli spazi vuoti dopo una virgola viene ignorato).  Il primo famiglia di caratteri specificata viene usato come famiglia di caratteri primaria; famiglie di caratteri successivi di fungono da famiglie di fallback da usare nei casi in cui la famiglia di caratteri primario non disponibile o non applicabile.  Ad esempio, `"Arial, Century Gothic"` specifica Arial come la famiglia di caratteri primaria con secolo Gothic è la famiglia di caratteri di fallback.  
  
 *fontFamilyFolderReference*  
 Stringa che specifica una cartella contenente il tipo di carattere, insieme a un nome di famiglia del tipo di carattere.  La cartella e il nome della famiglia sono delimitate da un carattere #.  Il riferimento folder può essere assoluto o relativo.  Ad esempio `"Custom Fonts\#My Custom Font"`.  
  
 *fontFamilyUriReference*  
 Stringa che specifica un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] per il tipo di carattere, insieme a un nome di famiglia del tipo di carattere.  Il [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] e il nome della famiglia sono delimitate da un carattere #.  Ad esempio `"http://MyFontServer/Fonts/#My Custom Font"`.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Fonts" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.FontFamily" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza di una classe <see cref="T:System.Windows.Media.FontFamily" /> anonima.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore predefinito quando si vuole creare a livello di codice un tipo di carattere composito. Ciò significa che non è necessario specificare un nome di famiglia del tipo di carattere per il costruttore, ma è necessario popolare le raccolte presenti il <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> e <xref:System.Windows.Media.FontFamily.FamilyNames%2A> raccolte prima di utilizzare l'istanza costruita.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily familyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="familyName">Nome o nomi di famiglia di caratteri che includono il nuovo oggetto <see cref="T:System.Windows.Media.FontFamily" />. Più nomi devono essere separati da virgole.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.FontFamily" /> in base al nome di famiglia di caratteri specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni nome di famiglia specificato nella `familyName` parametro può essere preceduto da un riferimento di percorso a una directory o un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]. Il riferimento di percorso è separato dal nome della famiglia da un cancelletto (`#`) caratteri. Più nomi specificati nel `familyName` parametro deve essere separato da virgole.  
  
 Ogni gruppo può essere un tipo di carattere reale direttamente rappresenta un set di file di caratteri che condividono lo stesso nome di famiglia, o può essere un riferimento a un nome di famiglia definito in un file di tipo di carattere composito.  
  
 Quando vengono individuati più gruppi, la seconda e le famiglie di fungono da fallback gruppi di gestione di punti di codice che non sono supportati per la famiglia di caratteri prima. Per ogni punto di codice che non è supportato dal primo famiglia di caratteri, ogni famiglia successivo viene verificata a sua volta.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#103](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#103)]
 [!code-vb[FontSnippets#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="familyName" /> non può essere <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (Uri baseUri, string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(Uri ^ baseUri, System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : Uri * string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily (baseUri, familyName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">Specifica l'oggetto [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] di base usato per risolvere <paramref name="familyName" />.</param>
        <param name="familyName">Nome o nomi di famiglia di caratteri che includono il nuovo oggetto <see cref="T:System.Windows.Media.FontFamily" />. Più nomi devono essere separati da virgole.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.FontFamily" /> in base al nome di famiglia di caratteri specificato e a un valore [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] di base facoltativo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `familyName` può specificare un valore [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore, che richiede una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] per risolvere il riferimento al tipo di carattere. Il `baseUri` valore può essere `null`.  
  
   
  
## Examples  
 Il codice seguente illustra un riferimento di tipo di carattere che è costituito da una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore e un valore relativo [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valore.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double with get, set" Usage="System.Windows.Media.FontFamily.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la distanza tra la linea di base e la parte superiore della cella del carattere.</summary>
        <value>Oggetto <see cref="T:System.Double" /> che indica la distanza tra la linea di base e la parte superiore della cella del carattere, espressa come frazione della misura em del tipo di carattere.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Windows.Media.FontFamily.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] di base utilizzato per risolvere un nome di famiglia di caratteri.</summary>
        <value>Valore di tipo <see cref="T:System.Uri" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito sarà `null` se il nome della famiglia non si basa su una base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] per risolvere il riferimento al tipo di carattere. Per recuperare il nome della famiglia che viene usato per costruire il <xref:System.Windows.Media.FontFamily> dell'oggetto, usare il <xref:System.Windows.Media.FontFamily.Source%2A> proprietà.  
  
   
  
## Examples  
 L'esempio seguente mostra i risultati di recupero il <xref:System.Windows.Media.FontFamily.BaseUri%2A> proprietà da un <xref:System.Windows.Media.FontFamily> oggetto.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet9)]
 [!code-vb[FontSnippets#FontPackageSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fontFamily.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Oggetto <see cref="T:System.Windows.Media.FontFamily" /> da confrontare.</param>
        <summary>Ottiene un valore che indica se la famiglia di caratteri corrente e la famiglia di caratteri specificata sono equivalenti o meno.</summary>
        <returns><see langword="true" /> se <paramref name="o" /> è uguale all'oggetto <see cref="T:System.Windows.Media.FontFamily" /> corrente; in caso contrario, <see langword="false" />. Se <paramref name="o" /> non è un oggetto <see cref="T:System.Windows.Media.FontFamily" />, viene restituito il valore <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyMaps">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamilyMapCollection FamilyMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamilyMapCollection FamilyMaps" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyMaps As FontFamilyMapCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamilyMapCollection ^ FamilyMaps { System::Windows::Media::FontFamilyMapCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyMaps : System.Windows.Media.FontFamilyMapCollection" Usage="System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamilyMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la raccolta di oggetti <see cref="T:System.Windows.Media.FontFamilyMap" />.</summary>
        <value>Oggetto <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> contenente oggetti <see cref="T:System.Windows.Media.FontFamilyMap" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per la <xref:System.Windows.Media.FontFamily> gli oggetti creati usando un nome di famiglia del tipo di carattere, il <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> proprietà restituisce una raccolta vuota, di sola lettura.  
  
 Il <xref:System.Windows.Media.FontFamilyMap> oggetto definisce quale tipo di carattere da utilizzare per visualizzare un set specificato di caratteri Unicode di una cultura specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyNames">
      <MemberSignature Language="C#" Value="public System.Windows.Media.LanguageSpecificStringDictionary FamilyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.LanguageSpecificStringDictionary FamilyNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyNames As LanguageSpecificStringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::LanguageSpecificStringDictionary ^ FamilyNames { System::Windows::Media::LanguageSpecificStringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyNames : System.Windows.Media.LanguageSpecificStringDictionary" Usage="System.Windows.Media.FontFamily.FamilyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.LanguageSpecificStringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di stringhe e di valori <see cref="T:System.Globalization.CultureInfo" /> che rappresentano i nomi di famiglia di caratteri dell'oggetto <see cref="T:System.Windows.Media.FontFamily" />.</summary>
        <value>Oggetto <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> che rappresenta i nomi delle famiglie di caratteri.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#106](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#106)]
 [!code-vb[FontSnippets#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyTypefaces">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyTypefaces As FamilyTypefaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FamilyTypefaceCollection ^ FamilyTypefaces { System::Windows::Media::FamilyTypefaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyTypefaces : System.Windows.Media.FamilyTypefaceCollection" Usage="System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FamilyTypefaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di caratteri tipografici per l'oggetto <see cref="T:System.Windows.Media.FontFamily" />.</summary>
        <value>Oggetto <see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> che rappresenta un insieme di caratteri tipografici per l'oggetto <see cref="T:System.Windows.Media.FontFamily" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_FamilyTypefaces"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.FamilyTypefaces>  
    <OneOrMoreFontFamilyTypefaces/>  
  </object.FamilyTypefaces>  
</object>  
```  
  
<a name="xamlValues_FamilyTypefaces"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *OneOrMoreFontFamilyTypefaces*  
 Uno o più dei caratteri tipografici per il <xref:System.Windows.Media.FontFamily> oggetto.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#107](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#107)]
 [!code-vb[FontSnippets#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fontFamily.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usato come funzione hash per <see cref="T:System.Windows.Media.FontFamily" />. Adatto per l'uso in algoritmi hash e in strutture dei dati, ad esempio una tabella hash.</summary>
        <returns>Valore <see cref="T:System.Int32" /> che rappresenta il codice hash dell'oggetto corrente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypefaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt; GetTypefaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Typeface&gt; GetTypefaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypefaces () As ICollection(Of Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Windows::Media::Typeface ^&gt; ^ GetTypefaces();" />
      <MemberSignature Language="F#" Value="member this.GetTypefaces : unit -&gt; System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;" Usage="fontFamily.GetTypefaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un insieme di oggetti <see cref="T:System.Windows.Media.Typeface" /> che rappresentano i caratteri tipografici nel percorso del carattere di sistema predefinito.</summary>
        <returns>Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di oggetti <see cref="T:System.Windows.Media.Typeface" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#104](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#104)]
 [!code-vb[FontSnippets#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineSpacing">
      <MemberSignature Language="C#" Value="public double LineSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.LineSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property LineSpacing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineSpacing { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineSpacing : double with get, set" Usage="System.Windows.Media.FontFamily.LineSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore di interlinea per l'oggetto <see cref="T:System.Windows.Media.FontFamily" />. L'interlinea è la distanza indicata tra una linea di base e l'altra per il testo in questo tipo di carattere, relativa alla dimensione em.</summary>
        <value>Oggetto <see cref="T:System.Double" /> che rappresenta l'interlinea relativa all'oggetto <see cref="T:System.Windows.Media.FontFamily" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Windows.Media.FontFamily.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome della famiglia di caratteri utilizzato per costruire l'oggetto <see cref="T:System.Windows.Media.FontFamily" />.</summary>
        <value>Nome della famiglia di caratteri dell'oggetto <see cref="T:System.Windows.Media.FontFamily" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per restituire la base [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] valore di una <xref:System.Windows.Media.FontFamily> dell'oggetto, usare il <xref:System.Windows.Media.FontFamily.BaseUri%2A>.  
  
 Se il <xref:System.Windows.Media.FontFamily> oggetto è stato creato senza specificare un nome di famiglia del tipo di carattere, il valore restituito è <xref:System.String.Empty>.  
  
   
  
## Examples  
 L'esempio seguente mostra i risultati di recupero il <xref:System.Windows.Media.FontFamily.BaseUri%2A> e <xref:System.Windows.Media.FontFamily.Source%2A> i valori delle proprietà da un <xref:System.Windows.Media.FontFamily> oggetto.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet10)]
 [!code-vb[FontSnippets#FontPackageSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fontFamily.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il valore della proprietà <see cref="P:System.Windows.Media.FontFamily.Source" />.</summary>
        <returns>Percorso di origine dell'oggetto <see cref="T:System.Windows.Media.FontFamily" />, incluso il riferimento di percorso [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] o la directory.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Media.FontFamily> oggetto è stato creato senza specificare un nome di famiglia del tipo di carattere, il valore restituito è <xref:System.String.Empty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>