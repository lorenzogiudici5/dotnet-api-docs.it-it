<Type Name="FormattedText" FullName="System.Windows.Media.FormattedText">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="880b22032e1dd133002a0a35c9f123b14d69482d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30670175" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormattedText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormattedText extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FormattedText" />
  <TypeSignature Language="VB.NET" Value="Public Class FormattedText" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormattedText" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifica il controllo di basso livello per la creazione di testo nelle applicazioni Windows Presentation Foundation (WPF).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.FormattedText> oggetto consente di disegnare testo su più righe in cui ogni carattere del testo può essere formattato singolarmente. L'esempio seguente mostra un testo a cui sono stati applicati diversi formati.  
  
 ![Testo visualizzato usando l'oggetto FormattedText](~/add/media/formattedtext01.jpg "testo visualizzato usando l'oggetto FormattedText")  
Esempio di una stringa di testo formattato  
  
 In termini di funzioni di testo nei [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], <xref:System.Windows.Media.FormattedText> è considerata "di basso livello" poiché l'elaborazione di testo come elementi grafici. Altri aspetti di testo in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] di gestire il testo nel contesto di controlli che sono dedicati al testo (<xref:System.Windows.Controls.TextBlock>, <xref:System.Windows.Controls.TextBox>), implementare il modello di documento dinamico (vedere [Cenni preliminari sul documento flusso](~/docs/framework/wpf/advanced/flow-document-overview.md)), o supporta il [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] modello di documento (vedere [documenti in WPF](~/docs/framework/wpf/advanced/documents-in-wpf.md)).  
  
 Molti dei metodi setter <xref:System.Windows.Media.FormattedText> presentano analogie con le proprietà associate che sono supportate da <xref:System.Windows.Documents.TextElement>, ma la <xref:System.Windows.Documents.TextElement> si applicano le proprietà associate al testo di livello superiore il supporto di tipo dinamico o [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)].  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.Media.FormattedText> dell'oggetto e quindi applica diversi stili di formattazione al testo.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.GlyphRun" />
    <altmember cref="T:System.Windows.Media.DrawingContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Testo da visualizzare.</param>
        <param name="culture">Impostazioni cultura specifiche del testo.</param>
        <param name="flowDirection">Direzione di lettura del testo.</param>
        <param name="typeface">Famiglia di caratteri, spessore, stile ed estensione del carattere con cui deve essere formattato il testo.</param>
        <param name="emSize">Dimensioni del carattere in base a cui formattare il testo.</param>
        <param name="foreground">Pennello usato per disegnare ogni glifo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.FormattedText" /> con il testo, le impostazioni cultura, la direzione di flusso, il carattere tipografico, le dimensioni del carattere e il pennello specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, double pixelsPerDip);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Testo da visualizzare.</param>
        <param name="culture">Impostazioni cultura specifiche del testo.</param>
        <param name="flowDirection">Direzione di lettura del testo.</param>
        <param name="typeface">Famiglia di caratteri, spessore, stile ed estensione del carattere con cui deve essere formattato il testo.</param>
        <param name="emSize">Dimensione del carattere per la misura em del testo, specificata in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">Pennello usato per disegnare ogni glifo.</param>
        <param name="pixelsPerDip">Valore di pixel per DIP (Density Independent Pixel), equivalente al fattore di scala. Ad esempio, se il valore DPI di uno schermo è 120 (o 1,25 perché 120/96 = 1,25), vengono tracciati 1,25 pixel per DIP. DIP è l'unità di misura usata da WPF come unità indipendente dalla risoluzione e dal valore DPI del dispositivo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.FormattedText" /> con il testo, le impostazioni cultura, la direzione di flusso, il carattere tipografico, la dimensione del carattere, il pennello in primo piano e il valore di pixel per DIP specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Testo da visualizzare.</param>
        <param name="culture">Impostazioni cultura specifiche del testo.</param>
        <param name="flowDirection">Direzione di lettura del testo.</param>
        <param name="typeface">Famiglia di caratteri, spessore, stile ed estensione del carattere con cui deve essere formattato il testo.</param>
        <param name="emSize">Dimensione del carattere per la misura em del testo, specificata in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">Pennello usato per disegnare ogni glifo.</param>
        <param name="numberSubstitution">Comportamento di sostituzione numerica da applicare al testo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.FormattedText" /> con il testo, le impostazioni cultura, la direzione di flusso, il carattere tipografico, le dimensioni del carattere, il pennello e il comportamento di sostituzione numerica specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, double pixelsPerDip);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Testo da visualizzare.</param>
        <param name="culture">Impostazioni cultura specifiche del testo.</param>
        <param name="flowDirection">Direzione di lettura del testo.</param>
        <param name="typeface">Famiglia di caratteri, spessore, stile ed estensione del carattere con cui deve essere formattato il testo.</param>
        <param name="emSize">Dimensione del carattere per la misura em del testo, specificata in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">Pennello usato per disegnare ogni glifo.</param>
        <param name="numberSubstitution">Specifica la modalità di visualizzazione dei numeri nel testo, in base a <see cref="T:System.Windows.Media.NumberSubstitution" />. Il valore può essere <see langword="null" />.</param>
        <param name="pixelsPerDip">Valore di pixel per DIP (Density Independent Pixel), equivalente al fattore di scala. Ad esempio, se il valore DPI di uno schermo è 120 (o 1,25 perché 120/96 = 1,25), vengono tracciati 1,25 pixel per DIP. DIP è l'unità di misura usata da WPF come unità indipendente dalla risoluzione e dal valore DPI del dispositivo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.FormattedText" /> con il testo, le impostazioni cultura, la direzione di flusso, il carattere tipografico, la dimensione del carattere, il pennello in primo piano, il comportamento della sostituzione dei numeri e il valore di pixel per DIP specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, System.Windows.Media.TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, valuetype System.Windows.Media.TextFormattingMode textFormattingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, System::Windows::Media::TextFormattingMode textFormattingMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Testo da visualizzare.</param>
        <param name="culture">Impostazioni cultura specifiche del testo.</param>
        <param name="flowDirection">Direzione di lettura del testo.</param>
        <param name="typeface">Famiglia di caratteri, spessore, stile ed estensione del carattere con cui deve essere formattato il testo.</param>
        <param name="emSize">Dimensione del carattere per la misura em del testo, specificata in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">Pennello usato per disegnare ogni glifo.</param>
        <param name="numberSubstitution">Comportamento di sostituzione numerica da applicare al testo.</param>
        <param name="textFormattingMode">Struttura <see cref="T:System.Windows.Media.TextFormattingMode" /> da applicare al testo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.FormattedText" /> con il testo, le impostazioni cultura, la direzione di flusso, il carattere tipografico, le dimensioni del carattere, il pennello, il comportamento di sostituzione numerica e la modalità di formattazione del testo specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, System.Windows.Media.TextFormattingMode textFormattingMode, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, valuetype System.Windows.Media.TextFormattingMode textFormattingMode, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, System::Windows::Media::TextFormattingMode textFormattingMode, double pixelsPerDip);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Testo da visualizzare.</param>
        <param name="culture">Impostazioni cultura specifiche del testo.</param>
        <param name="flowDirection">Direzione di lettura del testo.</param>
        <param name="typeface">Famiglia di caratteri, spessore, stile ed estensione del carattere con cui deve essere formattato il testo.</param>
        <param name="emSize">Dimensione del carattere per la misura em del testo, specificata in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">Pennello usato per disegnare ogni glifo.</param>
        <param name="numberSubstitution">Specifica la modalità di visualizzazione dei numeri nel testo, in base a <see cref="T:System.Windows.Media.NumberSubstitution" />. Il valore può essere <see langword="null" />.</param>
        <param name="textFormattingMode">La modalità di formattazione che influisce sulla modalità di visualizzazione testo in WPF.</param>
        <param name="pixelsPerDip">Valore di pixel per DIP (Density Independent Pixel), equivalente al fattore di scala. Ad esempio, se il valore DPI di uno schermo è 120 (o 1,25 perché 120/96 = 1,25), vengono tracciati 1,25 pixel per DIP. DIP è l'unità di misura usata da WPF come unità indipendente dalla risoluzione e dal valore DPI del dispositivo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.FormattedText" /> con il testo, le impostazioni cultura, la direzione di flusso, il carattere tipografico, la dimensione del carattere, il pennello in primo piano, il comportamento della sostituzione dei numeri e il valore di pixel per DIP specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza tra l'inizio della prima riga e la linea di base della prima riga di un oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <value>Distanza tra l'inizio della prima riga e la linea di base della prima riga, espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildGeometry (System.Windows.Point origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildGeometry(valuetype System.Windows.Point origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildGeometry(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildGeometry (origin As Point) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildGeometry(System::Windows::Point origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="origin">Origine superiore sinistra della geometria risultante.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Windows.Media.Geometry" /> che rappresenta il testo formattato, inclusi tutti i glifi e le decorazioni di testo.</summary>
        <returns>Rappresentazione dell'oggetto <see cref="T:System.Windows.Media.Geometry" /> del testo formattato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il testo viene convertito in un <xref:System.Windows.Media.Geometry> dell'oggetto, non è più un insieme di caratteri, non è possibile modificare i caratteri nella stringa di testo. Tuttavia, è possibile intervenire sull'aspetto del testo convertito modificandone le proprietà del tratto e del riempimento.  
  
 Gli esempi seguenti illustrano alcuni modi per creare effetti visivi modificando il tratto e riempimento del testo convertito.  
  
 ![Testo con colori diversi per tratto e riempimento](~/add/media/outlinedtext03.jpg "testo con colori diversi per tratto e riempimento")  
Esempio di impostazione di tratto e riempimento in colori diversi  
  
 ![Testo con tratto con immagine applicato alla traccia](~/add/media/outlinedtext04.jpg "testo con tratto con immagine applicato alla traccia")  
Esempio di un pennello immagine applicato al tratto  
  
 Testo che viene convertito in e sottoposto a rendering come un <xref:System.Windows.Media.Geometry> oggetto potrebbe non essere lo stesso come testo eseguito direttamente il rendering:  
  
-   Testo convertito in un <xref:System.Windows.Media.Geometry> oggetto non viene eseguito utilizzando ClearType. Inoltre, la linea di base del testo convertito non viene bloccata per un intero pixel visualizzato.  
  
-   Caratteri piccoli, ad esempio quelle usate nel corpo del testo, potrebbero perdere la leggibilità, apparire confusi e variare nell'aspetto in.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Media.FormattedText> oggetto e recuperare le geometrie del testo formattato e il rettangolo di selezione.  
  
 [!code-csharp[OutlineTextControlViewer#CreateText](~/samples/snippets/csharp/VS_Snippets_Wpf/OutlineTextControlViewer/CSharp/OutlineTextControl.cs#createtext)]
 [!code-vb[OutlineTextControlViewer#CreateText](~/samples/snippets/visualbasic/VS_Snippets_Wpf/OutlineTextControlViewer/visualbasic/outlinetextcontrol.vb#createtext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BuildHighlightGeometry">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Windows.Media.Geometry" /> che rappresenta il riquadro delimitatore di evidenziazione del testo formattato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BuildHighlightGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildHighlightGeometry (System.Windows.Point origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildHighlightGeometry(valuetype System.Windows.Point origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildHighlightGeometry (origin As Point) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildHighlightGeometry(System::Windows::Point origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="origin">Origine dell'area di evidenziazione.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Windows.Media.Geometry" /> che rappresenta il riquadro delimitatore di evidenziazione del testo formattato.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Media.Geometry" /> che rappresenta il riquadro delimitatore di evidenziazione del testo formattato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'area di delimitazione contiene l'area di testo formattato intero a partire dal punto specificato da `origin`. L'oggetto restituito <xref:System.Windows.Media.Geometry> l'oggetto contiene solo il rettangolo di selezione del testo evidenziato e non contiene il testo viene eseguito il rendering.  
  
 Nell'esempio seguente viene illustrata una modalità di creazione di effetti visivi modificando il tratto e l'evidenziazione del testo convertito.  
  
 ![Testo con tratto con immagine applicato alla traccia](~/add/media/outlinedtext05.jpg "testo con tratto con immagine applicato alla traccia")  
Esempio di un pennello immagine applicato al tratto ed evidenziazione  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Media.FormattedText> oggetto e recuperare le geometrie del testo formattato e il rettangolo di selezione.  
  
 [!code-csharp[OutlineTextControlViewer#CreateText](~/samples/snippets/csharp/VS_Snippets_Wpf/OutlineTextControlViewer/CSharp/OutlineTextControl.cs#createtext)]
 [!code-vb[OutlineTextControlViewer#CreateText](~/samples/snippets/visualbasic/VS_Snippets_Wpf/OutlineTextControlViewer/visualbasic/outlinetextcontrol.vb#createtext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildHighlightGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildHighlightGeometry (System.Windows.Point origin, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildHighlightGeometry(valuetype System.Windows.Point origin, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildHighlightGeometry (origin As Point, startIndex As Integer, count As Integer) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildHighlightGeometry(System::Windows::Point origin, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="origin">Origine dell'area di evidenziazione.</param>
        <param name="startIndex">Indice del carattere iniziale per il quale devono essere ottenuti i limiti dell'evidenziazione.</param>
        <param name="count">Numero di caratteri che devono essere inclusi entro i limiti dell'evidenziazione.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Windows.Media.Geometry" /> che rappresenta il riquadro delimitatore di evidenziazione per una sottostringa specificata del testo formattato.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Media.Geometry" /> che rappresenta il riquadro delimitatore di evidenziazione della sottostringa del testo formattato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto restituito <xref:System.Windows.Media.Geometry> l'oggetto contiene solo il rettangolo di selezione del testo evidenziato e non contiene il testo viene eseguito il rendering.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extent">
      <MemberSignature Language="C#" Value="public double Extent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Extent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Extent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extent As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Extent { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza tra il pixel iniziale della prima riga e quello finale dell'ultima riga.</summary>
        <value>Distanza tra il pixel iniziale della prima riga e quello finale dell'ultima riga espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Extent incorpora tutti gli elementi grafici che potrebbero essere presenti in un glifo, inclusi gli elementi decorativi che potrebbero oltrepassare l'altezza della riga, una linea di base o sporgenze. Questo valore dipende caratteri visualizzati sulla riga e pertanto non viene utilizzato (e non deve essere usato) per ottenere l'interlinea. Può tuttavia essere utilizzata per allineare la parte superiore o inferiore dei paragrafi con elementi grafici o per l'hit test.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'enumerazione <see cref="T:System.Windows.FlowDirection" /> per un oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <value>Enumerazione <see cref="T:System.Windows.FlowDirection" /> del testo formattato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxTextWidths">
      <MemberSignature Language="C#" Value="public double[] GetMaxTextWidths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] GetMaxTextWidths() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.GetMaxTextWidths" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMaxTextWidths () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetMaxTextWidths();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una matrice delle larghezze testo. Ogni elemento della matrice rappresenta la larghezza di testo massima delle righe di testo sequenziali.</summary>
        <returns>Matrice delle larghezze di testo massime, ognuna delle quali espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se le righe di testo superano il numero di elementi nella matrice, il valore dell'ultimo elemento viene utilizzato per le righe rimanenti. Se non è la matrice delle lunghezze `null`, i valori della matrice di <xref:System.Windows.Media.FormattedText.GetMaxTextWidths%2A> vengono utilizzati invece del <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> valore della proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza tra l'inizio della prima riga e la fine dell'ultima riga dell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <value>Distanza tra l'inizio della prima riga e la fine dell'ultima riga espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'altezza di riga o interlinea tra le righe di testo.</summary>
        <value>Interlinea tra le righe di testo espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'altezza della riga predefinito viene calcolato automaticamente e si basa sul valore di carattere che viene passato come parametro per il <xref:System.Windows.Media.FormattedText.%23ctor%2A> costruttore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLineCount">
      <MemberSignature Language="C#" Value="public int MaxLineCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxLineCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLineCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero massimo di righe da visualizzare. Il testo che supera il valore <see cref="P:System.Windows.Media.FormattedText.MaxLineCount" /> non verrà visualizzato.</summary>
        <value>Numero massimo di righe da visualizzare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Media.FormattedText.Trimming%2A> proprietà per controllare come viene omesso il testo viene rappresentata quando il testo supera la <xref:System.Windows.Media.FormattedText.MaxLineCount%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTextHeight">
      <MemberSignature Language="C#" Value="public double MaxTextHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTextHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxTextHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTextHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxTextHeight { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'altezza massima di una colonna di testo.</summary>
        <value>Altezza massima di una colonna di testo espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'ultima riga del testo visualizzato è l'ultima riga intera che rientra nel <xref:System.Windows.Media.FormattedText.MaxTextHeight%2A> limite o il numero di riga che non superi il <xref:System.Windows.Media.FormattedText.MaxLineCount%2A> proprietà, a seconda del valore si verifica per primo.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.Media.FormattedText> dell'oggetto e quindi applica diversi stili di formattazione al testo, tra cui <xref:System.Windows.Media.FormattedText.MaxTextHeight%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTextWidth">
      <MemberSignature Language="C#" Value="public double MaxTextWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTextWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxTextWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTextWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxTextWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la larghezza (lunghezza) di testo massima per una riga di testo.</summary>
        <value>Larghezza di testo massima per una riga di testo espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verrà eseguito il wrapping di testo per evitare il superamento di <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> limite.  
  
 I bordi di allineamento glifi devono essere mantenuti entro i limiti di numero di riga. Poiché molti tipi di carattere contengono glifi che fuoriescono leggermente dai relativi bordi di allineamento, consentire a margine di almeno 1/6 em (dimensioni del carattere) oltre il conteggio delle righe richiesto, per lasciare spazio a tali sporgenze.  
  
 Un valore zero per il numero di riga viene considerato un numero di righe infinito.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.Media.FormattedText> dell'oggetto e quindi applica diversi stili di formattazione al testo, tra cui <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public double MinWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la larghezza di testo minima che può includere completamente il contenuto del testo specificato.</summary>
        <value>Larghezza minima del testo di origine espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il testo illustrato di seguito viene utilizzata la larghezza minima del testo di origine, che consente di visualizzare più righe. Larghezza minima corrisponde alla parola che presenta la larghezza massima, in questo caso, la parola "passato". Si noti che più parole possono essere inclusi nella stessa riga, a condizione che la larghezza totale non superi la larghezza minima.  
  
 ![Formattatore di testo utilizzando la larghezza minima di paragrafo](~/add/media/textformatter03.png "formattatore di testo utilizzando la larghezza minima di paragrafo")  
Larghezza minima  
  
 Se il valore passato a <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> è maggiore o uguale al valore di <xref:System.Windows.Media.FormattedText.MinWidth%2A>, il testo viene formattato senza caratteri di puntini di sospensione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Media.FormattedText.MinWidth%2A> proprietà per generare la larghezza minima per le righe di testo formattate.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets3)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangAfter">
      <MemberSignature Language="C#" Value="public double OverhangAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangAfter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangAfter As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangAfter { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza tra la fine dell'ultima riga di testo e il pixel finale.</summary>
        <value>Distanza tra la fine dell'ultima riga e il pixel finale espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore è positivo, il pixel finale scende sotto la linea basso, se è negativo se si trova all'interno (su o versione successiva) della riga.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangLeading">
      <MemberSignature Language="C#" Value="public double OverhangLeading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangLeading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangLeading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangLeading As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangLeading { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza massima tra il punto di allineamento iniziale e il pixel iniziale di una riga.</summary>
        <value>Distanza massima tra il punto di allineamento iniziale e il pixel iniziale di una riga, espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il punto di allineamento iniziale precede il pixel iniziale, il valore è negativo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangTrailing">
      <MemberSignature Language="C#" Value="public double OverhangTrailing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangTrailing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangTrailing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangTrailing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangTrailing { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza massima tra il pixel finale e il punto di allineamento finale di una riga.</summary>
        <value>Distanza tra il pixel finale e il punto di allineamento finale di una riga, espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Media.FormattedText.OverhangTrailing%2A> valore sarà positivo quando il pixel finale precede il punto di allineamento finale.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della proprietà PixelsPerDip in base al quale deve essere eseguito il rendering del testo.</summary>
        <value>Valore corrente della proprietà <see cref="P:System.Windows.Media.FormattedText.PixelsPerDip" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCulture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta l'oggetto <see cref="T:System.Globalization.CultureInfo" /> per il testo formattato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCulture">
      <MemberSignature Language="C#" Value="public void SetCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCulture (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da utilizzare per la formattazione del testo.</param>
        <summary>Imposta l'oggetto <see cref="T:System.Globalization.CultureInfo" /> per l'intero set di caratteri nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Globalization.CultureInfo> classe contiene le informazioni specifiche delle impostazioni cultura, ad esempio la lingua associata, varietà di lingua, paese/area geografica, calendario e le convenzioni culturali. Questa classe fornisce inoltre l'accesso alle impostazioni cultura specifiche istanze di <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, e <xref:System.Globalization.TextInfo>. Questi oggetti contengono le informazioni necessarie per operazioni specifiche delle impostazioni cultura, ad esempio maiuscole e minuscole, la formattazione di date e numeri e il confronto di stringhe.  
  
 Questo metodo imposta il valore di informazioni delle impostazioni cultura per l'intera stringa di testo. Per impostare il valore di informazioni delle impostazioni cultura per un subset della stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetCulture%28System.Globalization.CultureInfo%2CSystem.Int32%2CSystem.Int32%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCulture">
      <MemberSignature Language="C#" Value="public void SetCulture (System.Globalization.CultureInfo culture, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCulture(class System.Globalization.CultureInfo culture, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCulture (culture As CultureInfo, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCulture(System::Globalization::CultureInfo ^ culture, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da utilizzare per la formattazione del testo.</param>
        <param name="startIndex">Indice di inizio del carattere iniziale al quale applicare la modifica.</param>
        <param name="count">Numero di caratteri ai quali deve essere applicata la modifica.</param>
        <summary>Imposta l'oggetto <see cref="T:System.Globalization.CultureInfo" /> per un subset di caratteri specificato nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Globalization.CultureInfo> classe contiene le informazioni specifiche delle impostazioni cultura, ad esempio la lingua associata, varietà di lingua, paese/area geografica, calendario e le convenzioni culturali. Questa classe fornisce inoltre l'accesso alle impostazioni cultura specifiche istanze di <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, e <xref:System.Globalization.TextInfo>. Questi oggetti contengono le informazioni necessarie per operazioni specifiche delle impostazioni cultura, ad esempio maiuscole e minuscole, la formattazione di date e numeri e il confronto di stringhe.  
  
 Per impostare il valore di informazioni delle impostazioni cultura per l'intera stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetCulture%28System.Globalization.CultureInfo%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontFamily">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta la famiglia di caratteri per l'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (string fontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(string fontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontFamily (fontFamily As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::String ^ fontFamily);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fontFamily">Stringa che costruisce l'oggetto <see cref="T:System.Windows.Media.FontFamily" /> da utilizzare per la formattazione del testo. I fallback sono consentiti. Per informazioni dettagliate, vedere <see cref="T:System.Windows.Media.FontFamily" />.</param>
        <summary>Imposta la famiglia di caratteri per l'intero set di caratteri nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo imposta il valore della famiglia di caratteri per l'intera stringa di testo. Per impostare il valore della famiglia di caratteri per un subset della stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontFamily%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (System.Windows.Media.FontFamily fontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(class System.Windows.Media.FontFamily fontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::Windows::Media::FontFamily ^ fontFamily);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
      </Parameters>
      <Docs>
        <param name="fontFamily">Oggetto <see cref="T:System.Windows.Media.FontFamily" /> da utilizzare per la formattazione del testo.</param>
        <summary>Imposta la famiglia di caratteri per un oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo imposta il valore della famiglia di caratteri per l'intera stringa di testo. Per impostare il valore della famiglia di caratteri per un subset della stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontFamily%2A> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (string fontFamily, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(string fontFamily, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontFamily (fontFamily As String, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::String ^ fontFamily, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fontFamily">Stringa che costruisce l'oggetto <see cref="T:System.Windows.Media.FontFamily" /> da utilizzare per la formattazione del testo. I fallback sono consentiti. Per informazioni dettagliate, vedere <see cref="T:System.Windows.Media.FontFamily" />.</param>
        <param name="startIndex">Indice iniziale del carattere iniziale al quale applicare la modifica relativa alla famiglia di caratteri.</param>
        <param name="count">Numero di caratteri ai quali deve essere applicata la modifica.</param>
        <summary>Imposta la famiglia di caratteri per un subset di caratteri specificato nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostare il valore della famiglia di caratteri per l'intera stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontFamily%2A> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (System.Windows.Media.FontFamily fontFamily, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(class System.Windows.Media.FontFamily fontFamily, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::Windows::Media::FontFamily ^ fontFamily, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fontFamily">Oggetto <see cref="T:System.Windows.Media.FontFamily" /> da utilizzare per la formattazione del testo.</param>
        <param name="startIndex">Indice iniziale del carattere iniziale al quale applicare la modifica relativa alla famiglia di caratteri.</param>
        <param name="count">Numero di caratteri ai quali deve essere applicata la modifica.</param>
        <summary>Imposta la famiglia di caratteri per un subset di caratteri specificato nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostare il valore della famiglia di caratteri per l'intera stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontFamily%2A> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontSize">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta le dimensioni del carattere.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontSize">
      <MemberSignature Language="C#" Value="public void SetFontSize (double emSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontSize(float64 emSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontSize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontSize (emSize As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontSize(double emSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emSize" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="emSize">Dimensione della misura 'em' del tipo di carattere espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <summary>Imposta le dimensioni del carattere per l'intero set di caratteri nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo imposta il valore delle dimensioni del carattere per l'intera stringa di testo. Per impostare il valore delle dimensioni del carattere per un subset della stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontSize%2A> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontSize">
      <MemberSignature Language="C#" Value="public void SetFontSize (double emSize, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontSize(float64 emSize, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontSize(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontSize (emSize As Double, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontSize(double emSize, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="emSize">Dimensione della misura 'em' del tipo di carattere espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="startIndex">Indice di inizio del carattere iniziale al quale applicare le dimensioni del carattere.</param>
        <param name="count">Numero di caratteri ai quali applicare le dimensioni del carattere.</param>
        <summary>Imposta le dimensioni del carattere per un subset di caratteri specificato nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostare il valore delle dimensioni del carattere per l'intera stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontSize%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.Media.FormattedText> dell'oggetto e quindi applica diversi stili di formattazione al testo, tra cui <xref:System.Windows.Media.FormattedText.SetFontSize%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontStretch">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta il valore relativo all'estensione del carattere per l'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontStretch">
      <MemberSignature Language="C#" Value="public void SetFontStretch (System.Windows.FontStretch stretch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStretch(valuetype System.Windows.FontStretch stretch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStretch (stretch As FontStretch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStretch(System::Windows::FontStretch stretch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
      </Parameters>
      <Docs>
        <param name="stretch">Valore <see cref="T:System.Windows.FontStretch" /> desiderato da utilizzare per la formattazione del testo.</param>
        <summary>Imposta il valore relativo all'estensione del carattere per l'intero set di caratteri nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di estensione del tipo di carattere si intende il grado in cui un tipo di carattere sullo schermo. <xref:System.Windows.FontStretch> supporta il tipo di comportamento di conversione di tali che i valori statici del <xref:System.Windows.FontStretches> classe può essere utilizzata per inizializzare <xref:System.Windows.FontStretch> e compilare i parametri di tipo <xref:System.Windows.FontStretch>. È inoltre possibile chiamare <xref:System.Windows.FontStretch.FromOpenTypeStretch%2A> per creare un oggetto inizializzato correttamente <xref:System.Windows.FontStretch>.  
  
 Questo metodo imposta il valore di estensione del tipo di carattere per l'intera stringa di testo. Per impostare il valore di estensione del tipo di carattere per un subset della stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontStretch%28System.Windows.FontStretch%2CSystem.Int32%2CSystem.Int32%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontStretch">
      <MemberSignature Language="C#" Value="public void SetFontStretch (System.Windows.FontStretch stretch, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStretch(valuetype System.Windows.FontStretch stretch, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStretch (stretch As FontStretch, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStretch(System::Windows::FontStretch stretch, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stretch">Valore <see cref="T:System.Windows.FontStretch" /> desiderato da utilizzare per la formattazione del testo.</param>
        <param name="startIndex">Indice di inizio del carattere iniziale al quale applicare l'estensione del carattere.</param>
        <param name="count">Numero di caratteri ai quali applicare l'estensione del carattere.</param>
        <summary>Imposta il valore di estensione carattere per un subset specificato di caratteri nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di estensione del tipo di carattere si intende il grado in cui un tipo di carattere sullo schermo.  
  
 <xref:System.Windows.FontStretch> supporta il tipo di comportamento di conversione di tali che i valori statici del <xref:System.Windows.FontStretches> classe può essere utilizzata per inizializzare <xref:System.Windows.FontStretch> e compilare i parametri di tipo <xref:System.Windows.FontStretch>. È inoltre possibile chiamare <xref:System.Windows.FontStretch.FromOpenTypeStretch%2A> per creare un oggetto inizializzato correttamente <xref:System.Windows.FontStretch>.  
  
 Per impostare il valore di estensione del tipo di carattere per l'intera stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontStretch%28System.Windows.FontStretch%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontStyle">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta lo stile del carattere per l'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontStyle">
      <MemberSignature Language="C#" Value="public void SetFontStyle (System.Windows.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStyle(valuetype System.Windows.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStyle (style As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStyle(System::Windows::FontStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">Valore <see cref="T:System.Windows.FontStyle" /> da utilizzare per la formattazione del testo.</param>
        <summary>Imposta lo stile del carattere per l'intero set di caratteri nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontStyle> supporta il tipo di comportamento di conversione di tali che i valori statici del <xref:System.Windows.FontStyles> classe può essere utilizzata per inizializzare <xref:System.Windows.FontStyle> e compilare i parametri di tipo <xref:System.Windows.FontStyle>.  
  
 Questo metodo imposta lo stile del carattere per l'intera stringa di testo. Per impostare lo stile del carattere per un subset della stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontStyle%28System.Windows.FontStyle%2CSystem.Int32%2CSystem.Int32%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontStyle">
      <MemberSignature Language="C#" Value="public void SetFontStyle (System.Windows.FontStyle style, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStyle(valuetype System.Windows.FontStyle style, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStyle (style As FontStyle, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStyle(System::Windows::FontStyle style, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Windows.FontStyle" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="style">Valore <see cref="T:System.Windows.FontStyle" /> da utilizzare per la formattazione del testo.</param>
        <param name="startIndex">Indice di inizio del carattere iniziale al quale applicare lo stile del carattere.</param>
        <param name="count">Numero di caratteri ai quali applicare lo stile del carattere.</param>
        <summary>Imposta lo stile del carattere per un subset di caratteri specificato nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontStyle> supporta il tipo di comportamento di conversione di tali che i valori statici del <xref:System.Windows.FontStyles> classe può essere utilizzata per inizializzare <xref:System.Windows.FontStyle> e compilare i parametri di tipo <xref:System.Windows.FontStyle>.  
  
 Per impostare lo stile del carattere per l'intera stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontStyle%28System.Windows.FontStyle%29> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.Media.FormattedText> dell'oggetto e quindi applica diversi stili di formattazione al testo, tra cui <xref:System.Windows.Media.FormattedText.SetFontStyle%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontTypeface">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta il carattere tipografico del tipo di carattere per l'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontTypeface">
      <MemberSignature Language="C#" Value="public void SetFontTypeface (System.Windows.Media.Typeface typeface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontTypeface(class System.Windows.Media.Typeface typeface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontTypeface(System::Windows::Media::Typeface ^ typeface);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
      </Parameters>
      <Docs>
        <param name="typeface">Oggetto <see cref="T:System.Windows.Media.Typeface" /> da utilizzare per la formattazione del testo.</param>
        <summary>Imposta il carattere tipografico del tipo di carattere per l'intero set di caratteri nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Typeface> rappresenta una combinazione di <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, e <xref:System.Windows.FontStretch>. <xref:System.Windows.Media.Typeface> supporta più costruttori, uno dei quali costrutti in base a un tipo di carattere i valori nome, un'altra viene discreta per <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, e <xref:System.Windows.FontStretch>.  
  
 Questo metodo imposta il carattere tipografico per l'intera stringa di testo. Per impostare il carattere tipografico per un subset della stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontTypeface%28System.Windows.Media.Typeface%2CSystem.Int32%2CSystem.Int32%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontTypeface">
      <MemberSignature Language="C#" Value="public void SetFontTypeface (System.Windows.Media.Typeface typeface, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontTypeface(class System.Windows.Media.Typeface typeface, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontTypeface(System::Windows::Media::Typeface ^ typeface, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeface">Oggetto <see cref="T:System.Windows.Media.Typeface" /> da utilizzare per la formattazione del testo.</param>
        <param name="startIndex">Indice di inizio del carattere iniziale al quale applicare il carattere tipografico.</param>
        <param name="count">Numero di caratteri ai quali applicare il carattere tipografico.</param>
        <summary>Imposta il carattere tipografico del tipo di carattere per un subset di caratteri specificato nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Typeface> rappresenta una combinazione di <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, e <xref:System.Windows.FontStretch>. <xref:System.Windows.Media.Typeface> supporta più costruttori, uno dei quali costrutti in base a un tipo di carattere i valori nome, un'altra viene discreta per <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, e <xref:System.Windows.FontStretch>.  
  
 Per impostare il carattere tipografico per l'intera stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetFontTypeface%28System.Windows.Media.Typeface%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontWeight">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta lo spessore del carattere per l'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontWeight">
      <MemberSignature Language="C#" Value="public void SetFontWeight (System.Windows.FontWeight weight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontWeight(valuetype System.Windows.FontWeight weight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontWeight (weight As FontWeight)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontWeight(System::Windows::FontWeight weight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
      </Parameters>
      <Docs>
        <param name="weight">Oggetto <see cref="T:System.Windows.FontWeight" /> da utilizzare per la formattazione del testo.</param>
        <summary>Imposta lo spessore del carattere per l'intero set di caratteri nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontWeight> supporta il tipo di comportamento di conversione di tali che i valori statici del <xref:System.Windows.FontWeights> classe può essere utilizzata per inizializzare <xref:System.Windows.FontWeight> e compilare i parametri di tipo <xref:System.Windows.FontWeight>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontWeight">
      <MemberSignature Language="C#" Value="public void SetFontWeight (System.Windows.FontWeight weight, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontWeight(valuetype System.Windows.FontWeight weight, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontWeight (weight As FontWeight, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontWeight(System::Windows::FontWeight weight, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="weight">Spessore del carattere da utilizzare per la formattazione del testo.</param>
        <param name="startIndex">Indice di inizio del carattere iniziale al quale applicare lo spessore del carattere.</param>
        <param name="count">Numero di caratteri ai quali applicare lo spessore del carattere.</param>
        <summary>Modifica l'oggetto <see cref="T:System.Windows.FontWeight" /> per il testo specificato all'interno di un oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontWeight> supporta il tipo di comportamento di conversione di tali che i valori statici del <xref:System.Windows.FontWeights> classe può essere utilizzata per inizializzare <xref:System.Windows.FontWeight> e compilare i parametri di tipo <xref:System.Windows.FontWeight>.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.Media.FormattedText> dell'oggetto e quindi applica diversi stili di formattazione al testo, tra cui <xref:System.Windows.Media.FormattedText.SetFontWeight%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetForegroundBrush">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Modifica il pennello in primo piano utilizzato per disegnare il testo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetForegroundBrush">
      <MemberSignature Language="C#" Value="public void SetForegroundBrush (System.Windows.Media.Brush foregroundBrush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForegroundBrush(class System.Windows.Media.Brush foregroundBrush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetForegroundBrush (foregroundBrush As Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetForegroundBrush(System::Windows::Media::Brush ^ foregroundBrush);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foregroundBrush" Type="System.Windows.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="foregroundBrush">Pennello da utilizzare in primo piano per il testo.</param>
        <summary>Modifica l'oggetto <see cref="T:System.Windows.Media.Brush" /> in primo piano per un intero oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo imposta il pennello di primo piano per l'intera stringa di testo. Per impostare il pennello di primo piano per un subset della stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetForegroundBrush%28System.Windows.Media.Brush%2CSystem.Int32%2CSystem.Int32%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetForegroundBrush">
      <MemberSignature Language="C#" Value="public void SetForegroundBrush (System.Windows.Media.Brush foregroundBrush, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForegroundBrush(class System.Windows.Media.Brush foregroundBrush, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetForegroundBrush (foregroundBrush As Brush, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetForegroundBrush(System::Windows::Media::Brush ^ foregroundBrush, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foregroundBrush" Type="System.Windows.Media.Brush" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="foregroundBrush">Pennello da utilizzare in primo piano per il testo.</param>
        <param name="startIndex">Indice di inizio del carattere iniziale al quale applicare il pennello in primo piano.</param>
        <param name="count">Numero di caratteri ai quali applicare il pennello in primo piano.</param>
        <summary>Modifica l'oggetto <see cref="T:System.Windows.Media.Brush" /> in primo piano per il testo specificato all'interno di un oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostare il pennello di primo piano per l'intera stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.Media.FormattedText> dell'oggetto e quindi applica diversi stili di formattazione al testo, tra cui <xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxTextWidths">
      <MemberSignature Language="C#" Value="public void SetMaxTextWidths (double[] maxTextWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMaxTextWidths(float64[] maxTextWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetMaxTextWidths(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMaxTextWidths (maxTextWidths As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMaxTextWidths(cli::array &lt;double&gt; ^ maxTextWidths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxTextWidths" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="maxTextWidths">Matrice delle larghezze di testo massime, ognuna delle quali espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <summary>Imposta una matrice di larghezze di testo massime all'interno dell'oggetto <see cref="T:System.Windows.Media.FormattedText" /> sulla base di ogni singola riga. Ogni elemento della matrice rappresenta la larghezza di testo massima delle righe di testo sequenziali.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se le righe di testo superano il numero di elementi nella matrice, l'ultimo valore nella matrice viene utilizzato per le righe rimanenti. Fornendo una matrice valida <xref:System.Windows.Media.FormattedText.SetMaxTextWidths%2A> ignorerà qualsiasi valore fornito per il <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNumberSubstitution">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta il comportamento di sostituzione numerica per l'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNumberSubstitution">
      <MemberSignature Language="C#" Value="public void SetNumberSubstitution (System.Windows.Media.NumberSubstitution numberSubstitution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNumberSubstitution(class System.Windows.Media.NumberSubstitution numberSubstitution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNumberSubstitution(System::Windows::Media::NumberSubstitution ^ numberSubstitution);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
      </Parameters>
      <Docs>
        <param name="numberSubstitution">Comportamento di sostituzione numerica da applicare al testo. Può presentare valore <see langword="null" />. In tal caso, viene utilizzato il metodo di sostituzione numerica predefinito per le impostazioni cultura del testo.</param>
        <summary>Imposta il comportamento di sostituzione numerica per l'intero set di caratteri nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Media.NumberSubstitution> classe specifica la modalità dei numeri nel testo da visualizzare. Questo metodo imposta il comportamento di sostituzione numerica per l'intera stringa di testo. Per impostare il comportamento di sostituzione per un subset della stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetNumberSubstitution%28System.Windows.Media.NumberSubstitution%2CSystem.Int32%2CSystem.Int32%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNumberSubstitution">
      <MemberSignature Language="C#" Value="public void SetNumberSubstitution (System.Windows.Media.NumberSubstitution numberSubstitution, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNumberSubstitution(class System.Windows.Media.NumberSubstitution numberSubstitution, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNumberSubstitution(System::Windows::Media::NumberSubstitution ^ numberSubstitution, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberSubstitution">Comportamento di sostituzione numerica da applicare al testo. Può presentare valore <see langword="null" />. In tal caso, viene utilizzato il metodo di sostituzione numerica predefinito per le impostazioni cultura del testo.</param>
        <param name="startIndex">Indice di inizio del carattere iniziale al quale applicare la modifica.</param>
        <param name="count">Numero di caratteri ai quali deve essere applicata la modifica.</param>
        <summary>Imposta il comportamento di sostituzione numerica per il testo specificato all'interno di un oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Media.NumberSubstitution> classe specifica la modalità dei numeri nel testo da visualizzare. Per impostare il comportamento di sostituzione numerica per l'intera stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetNumberSubstitution%28System.Windows.Media.NumberSubstitution%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetTextDecorations">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta l'oggetto <see cref="T:System.Windows.TextDecorationCollection" /> per l'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetTextDecorations">
      <MemberSignature Language="C#" Value="public void SetTextDecorations (System.Windows.TextDecorationCollection textDecorations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextDecorations(class System.Windows.TextDecorationCollection textDecorations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTextDecorations (textDecorations As TextDecorationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTextDecorations(System::Windows::TextDecorationCollection ^ textDecorations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Windows.TextDecorationCollection" />
      </Parameters>
      <Docs>
        <param name="textDecorations">Struttura <see cref="T:System.Windows.TextDecorationCollection" /> da applicare al testo.</param>
        <summary>Imposta l'oggetto <see cref="T:System.Windows.TextDecorationCollection" /> per l'intero set di caratteri nell'oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.TextDecorationCollection> classe specifica i tipi di effetti del testo da applicare al testo. Sono disponibili quattro tipi di effetti del testo: sottolineato, linea di base, barrato e linea sopra. Questi elementi sono descritti come <xref:System.Windows.TextDecorationLocation> valori impostati su ogni elemento di <xref:System.Windows.TextDecorationCollection>. Viene in genere che il <xref:System.Windows.TextDecorationCollection> insieme contiene solo un effetto, ma la proprietà utilizza la raccolta per fornire più avanzati effetti di decorazione applicando più decorazioni allo stesso testo.  
  
 Nella figura seguente mostra la posizione delle decorazioni di testo rispetto al testo.  
  
 ![Diagramma di posizione delle decorazioni di testo](~/add/media/textdecoration01.gif "diagramma di posizione delle decorazioni di testo")  
Esempio di tipi di effetti di testo  
  
 Questo metodo imposta il <xref:System.Windows.TextDecorationCollection> per l'intera stringa di testo. Per impostare il <xref:System.Windows.TextDecorationCollection> per un subset della stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetTextDecorations%28System.Windows.TextDecorationCollection%2CSystem.Int32%2CSystem.Int32%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextDecorations">
      <MemberSignature Language="C#" Value="public void SetTextDecorations (System.Windows.TextDecorationCollection textDecorations, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextDecorations(class System.Windows.TextDecorationCollection textDecorations, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTextDecorations (textDecorations As TextDecorationCollection, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTextDecorations(System::Windows::TextDecorationCollection ^ textDecorations, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Windows.TextDecorationCollection" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textDecorations">Struttura <see cref="T:System.Windows.TextDecorationCollection" /> da applicare al testo.</param>
        <param name="startIndex">Indice di inizio del carattere iniziale al quale applicare le decorazioni di testo.</param>
        <param name="count">Numero di caratteri ai quali applicare le decorazioni di testo.</param>
        <summary>Imposta l'oggetto <see cref="T:System.Windows.TextDecorationCollection" /> per il testo specificato all'interno di un oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.TextDecorationCollection> classe specifica i tipi di effetti del testo da applicare al testo. Sono disponibili quattro tipi di effetti del testo: sottolineato, linea di base, barrato e linea sopra. Questi elementi sono descritti come <xref:System.Windows.TextDecorationLocation> valori impostati su ogni elemento di <xref:System.Windows.TextDecorationCollection>. Viene in genere che il <xref:System.Windows.TextDecorationCollection> insieme contiene solo un effetto, ma la proprietà utilizza la raccolta per fornire più avanzati effetti di decorazione applicando più decorazioni allo stesso testo.  
  
 Nella figura seguente mostra la posizione delle decorazioni di testo rispetto al testo.  
  
 ![Diagramma di posizione delle decorazioni di testo](~/add/media/textdecoration01.gif "diagramma di posizione delle decorazioni di testo")  
Esempio di tipi di effetti di testo  
  
 Per impostare il <xref:System.Windows.TextDecorationCollection> per l'intera stringa di testo, utilizzare il <xref:System.Windows.Media.FormattedText.SetTextDecorations%28System.Windows.TextDecorationCollection%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la stringa di testo da visualizzare.</summary>
        <value>Stringa di testo da visualizzare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è possibile impostare su un oggetto costruito <xref:System.Windows.Media.FormattedText> oggetto. È necessario creare un nuovo <xref:System.Windows.Media.FormattedText> per impostare un altro testo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'allineamento del testo all'interno di un oggetto <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.TextAlignment" /> che specifica l'allineamento del testo all'interno di un oggetto <see cref="T:System.Windows.Media.FormattedText" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trimming">
      <MemberSignature Language="C#" Value="public System.Windows.TextTrimming Trimming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextTrimming Trimming" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Trimming" />
      <MemberSignature Language="VB.NET" Value="Public Property Trimming As TextTrimming" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextTrimming Trimming { System::Windows::TextTrimming get(); void set(System::Windows::TextTrimming value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextTrimming</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i mezzi attraverso i quali viene indicata l'omissione del testo.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.TextTrimming" /> che specifica il modo in cui viene indicata l'omissione del testo. Il valore predefinito è <see cref="F:System.Windows.TextTrimming.WordEllipsis" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza tra il punto di allineamento iniziale e quello finale di una riga, esclusi tutti gli eventuali spazi vuoti finali.</summary>
        <value>Distanza tra il punto di allineamento iniziale e quello finale di un riga, esclusi tutti gli eventuali spazi vuoti finali. Viene espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Testo su più righe, la riga più lunga è utilizzata per il <xref:System.Windows.Media.FormattedText.Width%2A> valore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthIncludingTrailingWhitespace">
      <MemberSignature Language="C#" Value="public double WidthIncludingTrailingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WidthIncludingTrailingWhitespace As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WidthIncludingTrailingWhitespace { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la distanza tra il punto di allineamento iniziale e quello finale di una riga, inclusi tutti gli eventuali spazi vuoti finali.</summary>
        <value>Distanza tra il punto di allineamento iniziale e quello finale di una riga, inclusi tutti gli eventuali spazi vuoti finali. Viene espressa in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Testo su più righe, la riga più lunga è utilizzata per il <xref:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace%2A> valore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>