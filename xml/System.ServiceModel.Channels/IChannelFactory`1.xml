<Type Name="IChannelFactory&lt;TChannel&gt;" FullName="System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b39e073cd6f08ee6106122c6825c711a8413026c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36525944" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelFactory&lt;TChannel&gt; : System.ServiceModel.Channels.IChannelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelFactory`1&lt;TChannel&gt; implements class System.ServiceModel.Channels.IChannelFactory, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelFactory(Of TChannel)&#xA;Implements IChannelFactory" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TChannel&gt;&#xA;public interface class IChannelFactory : System::ServiceModel::Channels::IChannelFactory" />
  <TypeSignature Language="F#" Value="type IChannelFactory&lt;'Channel&gt; = interface&#xA;    interface IChannelFactory&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TChannel">Tipo di canale creato dalla channel factory.</typeparam>
    <summary>Definisce l'interfaccia che deve essere implementata dalle channel factory per creare canali di tipo specifico.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione del contratto <xref:System.ServiceModel.Channels.IChannelFactory%601> consente agli utenti di creare più canali di un determinato tipo senza dovere specificare ogni volta il tipo di canale. In altre parole, la definizione del tipo di canale come parametro generico per la channel factory che implementa l'interfaccia <xref:System.ServiceModel.Channels.IChannelFactory%601> significa che non è necessario passare il tipo nei metodi <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A>. Se gli utenti desiderano creare tipi di canale diversi, possono creare channel factory aggiuntive per ogni tipo di canale richiesto. L'overload <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> consente di distinguere l'indirizzo al quale il messaggio viene inizialmente inviato, dalla destinazione finale. Per una discussione sull'indirizzamento, vedere la [indirizzi](~/docs/framework/wcf/feature-details/endpoint-addresses.md) argomento.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Consente di creare un canale di un determinato tipo relativo all'indirizzo endpoint specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si desidera eseguire il routing manuale, utilizzare l'overload del metodo <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> per distinguere dalla destinazione finale l'indirizzo a cui il messaggio viene inviato inizialmente. Si noti che qualsiasi canale creato da questa channel factory viene chiuso una volta chiusa la channel factory. Per una discussione sull'indirizzamento, vedere la [indirizzi](~/docs/framework/wcf/feature-details/endpoint-addresses.md) argomento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.EndpointAddress to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannel (to As EndpointAddress) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannel(System::ServiceModel::EndpointAddress ^ to);" />
      <MemberSignature Language="F#" Value="abstract member CreateChannel : System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="iChannelFactory.CreateChannel to" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="to">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> che fornisce la posizione del servizio.</param>
        <summary>Consente di creare un canale di un determinato tipo relativo all'indirizzo endpoint specificato.</summary>
        <returns>Canale di tipo <paramref name="TChannel" /> nell'indirizzo endpoint specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si desidera eseguire il routing manuale, utilizzare l'overload del metodo <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> per distinguere dalla destinazione finale l'indirizzo a cui il messaggio viene inviato inizialmente. Si noti che qualsiasi canale creato da questa channel factory viene chiuso una volta chiusa la channel factory.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.EndpointAddress to, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress to, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannel (to As EndpointAddress, via As Uri) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannel(System::ServiceModel::EndpointAddress ^ to, Uri ^ via);" />
      <MemberSignature Language="F#" Value="abstract member CreateChannel : System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="iChannelFactory.CreateChannel (to, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="to">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> che fornisce la posizione del servizio.</param>
        <param name="via">Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui viene inviato il messaggio.</param>
        <summary>Crea un canale del tipo specificato in un indirizzo endpoint specificato e un indirizzo di trasporto al quale vengono inviati i messaggi.</summary>
        <returns>Canale di tipo <paramref name="TChannel" /> nell'indirizzo endpoint e nell'indirizzo di trasporto specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'indirizzo di trasporto specificato da `via` è il percorso al quale un messaggio deve essere inviato inizialmente prima di giungere a un altro indirizzo remoto specificato da `to` in cui si trova il servizio. Nella maggior parte degli scenari Internet, l'URI `via` corrisponde a <xref:System.ServiceModel.EndpointAddress.Uri%2A> dell'indirizzo `to` finale del servizio. La distinzione tra questi due indirizzi è richiesta solo quando si desidera eseguire un qualche tipo di routing manuale. Si noti che qualsiasi canale creato da questa channel factory viene chiuso una volta chiusa la channel factory. Per una discussione sull'indirizzamento, vedere la [indirizzi](~/docs/framework/wcf/feature-details/endpoint-addresses.md) argomento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>