<Type Name="BindingElement" FullName="System.ServiceModel.Channels.BindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1749dbf87f2b625d2e6e7b2eb37c26010aa2f67" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37622246" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingElement abstract" />
  <TypeSignature Language="F#" Value="type BindingElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="19875-101">Elementi delle associazioni che compilano le channel factory e i listener di canale per vari tipi di canali usati per elaborare messaggi in uscita e in arrivo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19875-101">The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19875-102">Un'associazione è costituita da un set ordinato di elementi di associazione che ereditano da questa classe di base astratta.</span><span class="sxs-lookup"><span data-stu-id="19875-102">A binding consists of an ordered set of binding elements that inherit from this abstract base class.</span></span>  <span data-ttu-id="19875-103">La classe <xref:System.ServiceModel.Channels.TransportBindingElement> eredita dalla classe <xref:System.ServiceModel.Channels.BindingElement>.</span><span class="sxs-lookup"><span data-stu-id="19875-103">The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.</span></span>  
  
 <span data-ttu-id="19875-104">La creazione di un'associazione e di un elemento di associazione per il trasporto è facoltativa se si utilizza soltanto il modello del canale.</span><span class="sxs-lookup"><span data-stu-id="19875-104">Creating a binding and binding element for your transport is optional if you are just using the channel model.</span></span> <span data-ttu-id="19875-105">È possibile eseguire tutte le operazioni necessarie tramite la channel factory e il listener del canale purché questi siano resi pubblici.</span><span class="sxs-lookup"><span data-stu-id="19875-105">It is possible to do everything you need through the channel factory and listener as long as they are made public.</span></span>  
  
 <span data-ttu-id="19875-106">Il modello di servizio Windows Communication Foundation (WCF) utilizza un modello factory in cui l'associazione viene utilizzata per creare lo stack dei canali.</span><span class="sxs-lookup"><span data-stu-id="19875-106">The Windows Communication Foundation (WCF) service model uses a factory pattern where the binding is used to create the channel stack.</span></span> <span data-ttu-id="19875-107">Se si desidera utilizzare il modello di servizio WCF, quindi utilizzo un elemento di associazione di trasporto è obbligatorio.</span><span class="sxs-lookup"><span data-stu-id="19875-107">If you want to use the WCF service model, then using a transport binding element is required.</span></span> <span data-ttu-id="19875-108">L'inserimento di questo elemento di associazione in un'associazione ha il vantaggio di esonerare gli utenti dall'obbligo di creare un'associazione personalizzata per il trasporto.</span><span class="sxs-lookup"><span data-stu-id="19875-108">Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</span></span> <span data-ttu-id="19875-109">È preferibile creare sia un'associazione che un elemento di associazione e nascondere la channel factory e il listener del canale all'interno dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="19875-109">It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</span></span>  
  
 <span data-ttu-id="19875-110">Sul lato di invio, viene utilizzata un'associazione per compilare una classe <xref:System.ServiceModel.Channels.IChannelFactory> che a sua volta compila uno stack di canali e restituisce un riferimento al canale superiore nello stack.</span><span class="sxs-lookup"><span data-stu-id="19875-110">On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</span></span> <span data-ttu-id="19875-111">L'applicazione può quindi utilizzare questo canale per inviare i messaggi.</span><span class="sxs-lookup"><span data-stu-id="19875-111">The application can then use this channel to send messages.</span></span>  
  
 <span data-ttu-id="19875-112">Analogamente, sul lato di ricezione viene utilizzata un'associazione per compilare un'interfaccia <xref:System.ServiceModel.Channels.IChannelListener> che rimane in ascolto dei messaggi in arrivo.</span><span class="sxs-lookup"><span data-stu-id="19875-112">Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages.</span></span> <span data-ttu-id="19875-113">L'interfaccia <xref:System.ServiceModel.Channels.IChannelListener> fornisce messaggi all'applicazione in attesa creando stack di canale e passando all'applicazione un riferimento al canale superiore.</span><span class="sxs-lookup"><span data-stu-id="19875-113">The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</span></span> <span data-ttu-id="19875-114">L'applicazione utilizza quindi questo canale per ricevere i messaggi in ingresso.</span><span class="sxs-lookup"><span data-stu-id="19875-114">The application then uses this channel to receive incoming messages.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19875-115">Se vengono aggiunte intestazioni di messaggio che devono essere crittografate, è necessario restituire un'istanza <xref:System.ServiceModel.Security.ChannelProtectionRequirements> dal metodo  <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> con i requisiti specifici quando viene richiesto <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span><span class="sxs-lookup"><span data-stu-id="19875-115">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19875-116">Nell'esempio seguente viene illustrato come aggiungere un elemento di associazione di trasporto a un'associazione personalizzata e compilare quindi un listener del canale in grado di accettare messaggi in arrivo.</span><span class="sxs-lookup"><span data-stu-id="19875-116">The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</span></span>  
  
 [!code-csharp[S_UEChannels#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#1)]
 [!code-vb[S_UEChannels#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uechannels/vb/servicesnippets.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19875-117">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19875-118">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement (System.ServiceModel.Channels.BindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.BindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement(System::ServiceModel::Channels::BindingElement ^ elementToBeCloned);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.BindingElement : System.ServiceModel.Channels.BindingElement -&gt; System.ServiceModel.Channels.BindingElement" Usage="new System.ServiceModel.Channels.BindingElement elementToBeCloned" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned">
          <span data-ttu-id="19875-119">Costruttore <see cref="T:System.ServiceModel.Channels.BindingElement" /> da duplicare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-119">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19875-120">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElement" /> da un elemento di associazione specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-120">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class from a specified binding element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;&#xA;override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="bindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="19875-121">Tipo di canale compilato dalla factory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-121">The type of channel the factory builds.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="19875-122">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> che fornisce il contesto per l'elemento di associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-122">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19875-123">Inizializza una channel factory per la creazione di canali di un tipo specificato dal contesto dell'associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-123">Initializes a channel factory for producing channels of a specified type from the binding context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19875-124">Interfaccia <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> inizializzata da <paramref name="context" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-124">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from the <paramref name="context" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19875-125">
            <paramref name="context" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-125">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="bindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="19875-126">Tipo di canale accettato dal listener del canale che viene creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-126">The type of channel the listener is built to accept.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="19875-127">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> che fornisce il contesto per l'elemento di associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-127">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19875-128">Inizializza un listener del canale per accettare canali di un tipo specificato dal contesto dell'associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-128">Initializes a channel listener to accept channels of a specified type from the binding context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19875-129">Interfaccia <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> di tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> inizializzata da <paramref name="context" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-129">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19875-130">
            <paramref name="context" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-130">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool&#xA;override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="bindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="19875-131">Tipo di canale prodotto dalla channel factory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-131">The type of channel the channel factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="19875-132">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> che fornisce il contesto per l'elemento di associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-132">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19875-133">Restituisce un valore che indica se l'elemento di associazione può compilare una channel factory per un tipo di canale specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-133">Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19875-134">
            <see langword="true" /> se l'interfaccia <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> può essere compilata dall'elemento di associazione. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-134">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19875-135">Utilizzare questo metodo se si desidera verificare che la channel factory per i canali di tipo `TChannel` possa essere compilata per l'oggetto `context` fornito prima del tentativo di compilare la factory.</span><span class="sxs-lookup"><span data-stu-id="19875-135">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory.</span></span> <span data-ttu-id="19875-136">In alternativa, compilare la channel factory chiamando <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> e rilevare l'eccezione generata se la compilazione non riesce.</span><span class="sxs-lookup"><span data-stu-id="19875-136">Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19875-137">
            <paramref name="context" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-137">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="bindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="19875-138">Tipo di canale accettato dal listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-138">The type of channel the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="19875-139">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> che fornisce il contesto per l'elemento di associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-139">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19875-140">Restituisce un valore che indica se l'elemento di associazione può compilare un listener per un tipo di canale specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-140">Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19875-141">
            <see langword="true" /> se l'interfaccia <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> di tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> può essere compilata dall'elemento di associazione. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-141">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19875-142">Utilizzare questo metodo se si desidera verificare che il listener del canale per i canali di tipo `TChannel` possa essere compilato per il `context` fornito prima del tentativo di compilare il listener.</span><span class="sxs-lookup"><span data-stu-id="19875-142">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener.</span></span> <span data-ttu-id="19875-143">In alternativa, compilare il listener del canale chiamando <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> e rilevare l'eccezione generata se la compilazione non riesce.</span><span class="sxs-lookup"><span data-stu-id="19875-143">Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19875-144">
            <paramref name="context" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-144">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="bindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19875-145">Quando sottoposto a override in una classe derivata, restituisce una copia dell'oggetto dell'elemento di associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-145">When overridden in a derived class, returns a copy of the binding element object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19875-146">Oggetto <see cref="T:System.ServiceModel.Channels.BindingElement" /> che costituisce un clone completo dell'originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-146">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19875-147">Implementare il metodo <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> per restituire un clone completo dell'elemento di associazione.</span><span class="sxs-lookup"><span data-stu-id="19875-147">Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element.</span></span> <span data-ttu-id="19875-148">La restituzione di un clone consente al runtime di supportare il caso in cui più associazioni personalizzate condividono un elemento di associazione personalizzato.</span><span class="sxs-lookup"><span data-stu-id="19875-148">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="19875-149">Se non viene restituito un clone, il comportamento in fase di esecuzione non è definito.</span><span class="sxs-lookup"><span data-stu-id="19875-149">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="19875-150">Un clone completo di un oggetto crea una copia dell'oggetto e una copia di qualsiasi elemento a cui l'oggetto fa riferimento in modo diretto o indiretto.</span><span class="sxs-lookup"><span data-stu-id="19875-150">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="19875-151">Questo processo viene anche chiamato copia dell'intero oggetto grafico. Un duplicato superficiale di un oggetto, per contro, è una copia del solo oggetto.</span><span class="sxs-lookup"><span data-stu-id="19875-151">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="19875-152">Se l'oggetto contiene riferimenti ad altri oggetti, il duplicato superficiale non crea copie degli oggetti cui viene fatto riferimento ma copia solo i riferimenti negli oggetti originali.</span><span class="sxs-lookup"><span data-stu-id="19875-152">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class abstract T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="bindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="19875-153">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-153">The typed object for which the method is querying.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="19875-154">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> per l'elemento di associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-154">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19875-155">Quando sottoposto a override in una classe derivata, restituisce un oggetto tipizzato richiesto, se presente, dal livello appropriato nello stack dell'associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-155">When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19875-156">Oggetto tipizzato <paramref name="T" /> richiesto, se presente, oppure <see langword="null" /> in caso contrario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19875-156">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not present.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19875-157">Utilizzare questo oggetto per recuperare funzionalità, requisiti e parametri dallo stack dell'elemento di associazione.</span><span class="sxs-lookup"><span data-stu-id="19875-157">Use this to retrieve capabilities, requirements and parameters from the binding element stack.</span></span> <span data-ttu-id="19875-158">Se questa operazione è supportata, un elemento di associazione restituisce l'oggetto richiesto.</span><span class="sxs-lookup"><span data-stu-id="19875-158">If a binding element supports returning the requested object, it returns it.</span></span> <span data-ttu-id="19875-159">In caso contrario, delega la chiamata al successivo elemento di associazione nello stack.</span><span class="sxs-lookup"><span data-stu-id="19875-159">If not, it delegates the call down to the next binding element in the stack.</span></span> <span data-ttu-id="19875-160">Se raggiunge la fine dello stack e nessun elemento di associazione supporta l'oggetto richiesto, il metodo restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="19875-160">If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19875-161">Se vengono aggiunte intestazioni di messaggio che devono essere crittografate, è necessario restituire da questo metodo un'istanza di <xref:System.ServiceModel.Security.ChannelProtectionRequirements> con i requisiti specifici quando viene richiesto <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span><span class="sxs-lookup"><span data-stu-id="19875-161">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>