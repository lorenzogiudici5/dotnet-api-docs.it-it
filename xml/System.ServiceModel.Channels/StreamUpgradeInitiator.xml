<Type Name="StreamUpgradeInitiator" FullName="System.ServiceModel.Channels.StreamUpgradeInitiator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40a84e6a574595e1288250fc95451e5a27d5945b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39969345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class StreamUpgradeInitiator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamUpgradeInitiator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamUpgradeInitiator" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamUpgradeInitiator abstract" />
  <TypeSignature Language="F#" Value="type StreamUpgradeInitiator = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Per implementare un iniziatore di aggiornamento personalizzato, ereditare da questa classe base <see langword="abstract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un esempio di aggiornamento flusso consiste nel compilare un flusso di compressione direttamente all’inizio del flusso di trasporto. Questa classe è utilizzata con <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> e <xref:System.ServiceModel.Channels.StreamUpgradeProvider> per implementare un aggiornamento del flusso personalizzato.  
  
 Per una descrizione dettagliata del processo di aggiornamento, vedere <xref:System.ServiceModel.Channels.StreamUpgradeProvider> .  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamUpgradeInitiator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StreamUpgradeInitiator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginInitiateUpgrade (System.IO.Stream stream, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInitiateUpgrade(class System.IO.Stream stream, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginInitiateUpgrade(System::IO::Stream ^ stream, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginInitiateUpgrade : System.IO.Stream * AsyncCallback * obj -&gt; IAsyncResult" Usage="streamUpgradeInitiator.BeginInitiateUpgrade (stream, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso da aggiornare.</param>
        <param name="callback">Metodo da chiamare al termine di <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" />.</param>
        <param name="state">Informazioni sullo stato della chiamata asincrona.</param>
        <summary>Il metodo <see langword="abstract" /> può essere implementato per eseguire l'elaborazione asincrona che inizia un aggiornamento.</summary>
        <returns>Restituisce <see cref="T:System.IAsyncResult" /> che deve essere passato nel metodo <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo chiama <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A> e restituisce.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream EndInitiateUpgrade (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndInitiateUpgrade(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndInitiateUpgrade (result As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ EndInitiateUpgrade(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInitiateUpgrade : IAsyncResult -&gt; System.IO.Stream" Usage="streamUpgradeInitiator.EndInitiateUpgrade result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see langword="IAsyncResult" /> restituito dal metodo <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />.</param>
        <summary>Questo è il metodo di callback asincrono chiamato al completamento di <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />.</summary>
        <returns>Restituisce il flusso aggiornato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sull'utilizzo di questo metodo, vedere le note in <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextUpgrade">
      <MemberSignature Language="C#" Value="public abstract string GetNextUpgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNextUpgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextUpgrade () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetNextUpgrade();" />
      <MemberSignature Language="F#" Value="abstract member GetNextUpgrade : unit -&gt; string" Usage="streamUpgradeInitiator.GetNextUpgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il tipo di contenuto dell'aggiornamento successivo da eseguire.</summary>
        <returns>Restituisce il tipo di contenuto dell'aggiornamento successivo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo restituisce un set di tipi di contenuto di aggiornamento supportati dal provider di aggiornamento nell'ordine in cui sono previsti. I provider di aggiornamento che supportano un singolo aggiornamento restituiscono un solo valore. I provider di aggiornamento che supportano più aggiornamenti restituiscono i valori nell'ordine (ad esempio, tipo di contenuto di compressione seguito dal tipo di contenuto di sicurezza).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream InitiateUpgrade (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream InitiateUpgrade(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ InitiateUpgrade(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member InitiateUpgrade : System.IO.Stream -&gt; System.IO.Stream" Usage="streamUpgradeInitiator.InitiateUpgrade stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso da aggiornare.</param>
        <summary>Inizia l'aggiornamento del flusso chiedendo all'altra estremità della connessione di aggiornare il livello di trasporto del canale.</summary>
        <returns>Restituisce il flusso aggiornato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere chiamato più volte per ogni aggiornamento supportato dal provider di aggiornamento. Un provider di aggiornamento che supporta, ad esempio, la compressione e la sicurezza chiamerebbe due volte questo metodo, la prima per aggiornare lo streaming di trasporto predefinito per la compressione e la seconda per aggiornare la sicurezza. Le chiamate successive a questo metodo devono passare nel flusso di aggiornamento dalla chiamata precedente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>