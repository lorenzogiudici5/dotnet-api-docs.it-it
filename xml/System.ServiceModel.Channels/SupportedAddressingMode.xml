<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1543cde8dbf5d2afa103db8cd8285b3cfad2e0dd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36620401" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <TypeSignature Language="F#" Value="type SupportedAddressingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifica se un servizio supporta l'invio di risposte solo a indirizzi anonimi, solo a indirizzi non anonimi o a entrambi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa enumerazione viene utilizzata per specificare le funzionalità di un server che, a sua volta, impone un requisito nei relativi client.  
  
 Windows Communication Foundation (WCF) presenta una serie di controlli di indirizzamento per specificare dove devono essere inviati i messaggi. Sono disponibili, ad esempio, l'indirizzo logico <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> per la destinazione dei messaggi, l'indirizzo fisico ("Via"), utilizzato dal trasporto, sul quale resta in ascolto un servizio e l'indirizzo <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> dell'endpoint che fornisce l'indirizzo dell'endpoint client.  
  
 Nel caso più semplice, quando due parti scambiano messaggi solo tra loro, non è necessario specificare questi indirizzi separatamente. Tuttavia, poiché gli scambi possono interessare altre destinazioni di messaggio, è necessario poter specificare quando gli indirizzi devono essere forniti in modo esplicito. In alcuni casi questa possibilità deve essere consentita anche tra due sole parti, ad esempio nel caso di HTTP duale dove il server deve creare una propria richiesta HTTP. I tipi di relazioni elencati di seguito vengono definiti dall'enumerazione <xref:System.ServiceModel.Channels.SupportedAddressingMode> per acquisire questi modelli di messaggistica:  
  
-   Indirizzi anonimi sono la forma più elementare di indirizzamento. L'indirizzamento anonimo viene usato quando è disponibile un percorso predefinito per una risposta. TCP è un trasporto di comunicazione bidirezionale e la risposta a un messaggio TCP può essere restituita all'altro lato del socket che ha inviato il messaggio originale. Analogamente, il modello request/reply del trasporto HTTP invia risposte attraverso il canale di replica HTTP. Nessuna di queste risposte richiede la specifica della destinazione dei messaggi di risposta. Quando un server richiede risposte anonime dal client, utilizza il valore dell'enumerazione anonimo. WCF fornita dal sistema <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> e <xref:System.ServiceModel.WSHttpBinding> associazioni utilizzano sempre indirizzi anonimi.  
  
-   Quando l'invio della risposta è necessario creare un nuovo canale per la comunicazione, vengono utilizzati indirizzi non anonimi. WCF fornita dal sistema <xref:System.ServiceModel.WSDualHttpBinding> associazione utilizza un indirizzo non anonime. Nel caso di HTTP duale, il client crea una richiesta HTTP per inviare un messaggio. Il server deve quindi creare la propria richiesta HTTP per inviare una risposta. Poiché avvia l'operazione di invio, il server deve disporre di un endpoint specifico per stabilire la connessione. È necessario fornire al server l'indirizzo di un endpoint per la risposta. Analogamente, se un servizio deve rispondere a un messaggio unidirezionale ricevuto, richiede inoltre un non anonimi di indirizzi perché non vi è alcun canale di supporto disponibile per la comunicazione. Se il server restituisce un messaggio, è necessaria un'operazione completamente distinta da quella utilizza per inviare il primo messaggio.  
  
-   Mista è una terza forma di indirizzamento che combina indirizzi non anonimi e anonimo a seconda del messaggio viene inviato. Un esempio tipico della modalità di indirizzamento mista è l'utilizzo di un computer dedicato per l'elaborazione di messaggi di errore o di riconoscimento. Se la sequenza di scambio standard per le risposte HTTP o TCP, le risposte utilizzano l'indirizzamento anonimo, ma gli errori utilizzano l'indirizzamento non anonimo. Sebbene WCF non fornisce funzionalità in una delle associazioni standard di indirizzamento mista, è possibile scrivere un canale che consenta al servizio di inviare risposte direttamente per il canale di supporto (quando l'indirizzo di risposta anonimo) o su un canale separato (quando l'indirizzo di risposta è non anonimi). In tal caso, l'elemento di associazione del canale viene utilizzato per impostare <xref:System.ServiceModel.Channels.SupportedAddressingMode> su Mixed.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberSignature Language="F#" Value="Anonymous = 0" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Il server supporta solo indirizzi anonimi e i client devono fornire un indirizzo di risposta anonimo.</summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberSignature Language="F#" Value="Mixed = 2" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Il server supporta sia indirizzi anonimi che indirizzi non anonimi e i client possono scegliere di utilizzare uno dei tipi o entrambi.</summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberSignature Language="F#" Value="NonAnonymous = 1" Usage="System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Il server supporta solo indirizzi non anonimi e i client devono fornire un indirizzo di risposta non anonimo.</summary>
      </Docs>
    </Member>
  </Members>
</Type>