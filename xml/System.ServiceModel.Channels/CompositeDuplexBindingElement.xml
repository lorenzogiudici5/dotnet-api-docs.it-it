<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CompositeDuplexBindingElement.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e88f8b0e475131ee9d2ad9c054af95bf6acfeaa8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e88f8b0e475131ee9d2ad9c054af95bf6acfeaa8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.</source>
          <target state="translated">Rappresenta l'elemento di associazione utilizzato quando il client deve esporre un endpoint affinché il servizio restituisca messaggi al client.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.</source>
          <target state="translated">Viene in genere utilizzato con trasporti quali HTTP che non consentono comunicazioni duplex a livello nativo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.</source>
          <target state="translated">Il trasporto TCP, al contrario, consente comunicazioni duplex a livello nativo e non richiede quindi l'utilizzo di questo elemento di associazione perché il servizio restituisca messaggi a un client.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>The client must expose an address at which the service can contact it to establish a connection from the service to the client.</source>
          <target state="translated">Il client deve esporre un indirizzo al quale il servizio possa contattarlo per stabilire una connessione.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>This client address is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> property.</source>
          <target state="translated">Questo indirizzo client è fornito dalla proprietà <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>Note that <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> auto-generates a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> if one is not explicitly set by the user.</source>
          <target state="translated">Se non viene impostata esplicitamente dall'utente, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> genera automaticamente la proprietà <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the factory produces.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> generata dalla factory.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel factory.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> che fornisce il contesto necessario per compilare la channel factory.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a channel factory that can create a composite duplex channel.</source>
          <target state="translated">Restituisce una channel factory che può creare un canale duplex composito.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> that creates a composite duplex channel of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> che crea un canale duplex composito di tipo <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The build context requires an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> for the <ph id="ph2">`TChannel`</ph>.</source>
          <target state="translated">Il contesto di compilazione richiede un tipo <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> per il canale <ph id="ph2">`TChannel`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IOutputChannel" /&gt;</ph> and is not supported.</source>
          <target state="translated">Il canale <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> non è di tipo <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IOutputChannel" /&gt;</ph> e non è supportato.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the listener accepts.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> accettata dal listener.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> che fornisce il contesto necessario per compilare il listener del canale.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a channel listener that can accept a composite duplex channel.</source>
          <target state="translated">Restituisce un listener di canale che può accettare un canale duplex composito.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> that accepts a composite duplex channel of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> che accetta un canale duplex composito di tipo <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The build context requires an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> for the <ph id="ph2">`TChannel`</ph>.</source>
          <target state="translated">Il contesto di compilazione richiede un tipo <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> per il canale <ph id="ph2">`TChannel`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IInputChannel" /&gt;</ph> and is not supported.</source>
          <target state="translated">Il canale <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> non è di tipo <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IInputChannel" /&gt;</ph> e non è supportato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the channel factory produces.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> generata dalla channel factory.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> che fornisce il contesto necessario per compilare il listener del canale.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.</source>
          <target state="translated">Restituisce un valore che indica se l'associazione può compilare la channel factory che crea un tipo di canale specifico che soddisfa i requisiti del contesto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binding can build the channel factory; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'associazione può compilare la channel factory; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">`TChannel`</ph><ph id="ph3"> == </ph><ph id="ph4">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> and the inner binding can also build <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>; otherwise, <ph id="ph6">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> Se <ph id="ph2">`TChannel`</ph> <ph id="ph3"> == </ph> <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> e l'associazione interna può compilare anche <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>; in caso contrario, <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the listener accepts.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> accettata dal listener.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> che fornisce il contesto necessario per compilare il listener del canale.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.</source>
          <target state="translated">Restituisce un valore che indica se l'associazione può compilare il listener del canale che accetta un tipo di canale specifico che soddisfa i requisiti del contesto.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the channel listener can be built for the build required to accept the specified type of channel; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il listener del canale può essere compilato per il contesto necessario per accettare il tipo di canale specificato. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">`TChannel`</ph><ph id="ph3"> == </ph><ph id="ph4">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> and the inner binding can also build <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>; otherwise, <ph id="ph6">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> Se <ph id="ph2">`TChannel`</ph> <ph id="ph3"> == </ph> <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> e l'associazione interna può compilare anche <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>; in caso contrario, <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>Gets or sets the base address for the client.</source>
          <target state="translated">Ottiene o imposta l'indirizzo di base per il client.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base address for the client.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> contiene l'indirizzo di base per il client.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>This property provides an address at which the service can contact the client.</source>
          <target state="translated">Questa proprietà fornisce un indirizzo al quale il servizio può contattare il client.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A <ph id="ph1">`null`</ph> value causes the system to automatically generate a client base address.</source>
          <target state="translated">Un valore <ph id="ph1">`null`</ph> determina la generazione automatica di un indirizzo di base del client da parte del sistema.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>This is a base address, not an absolute address.</source>
          <target state="translated">Si tratta di un indirizzo di base, non di un indirizzo assoluto.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A GUID is appended to the base address when generating client endpoints from this binding.</source>
          <target state="translated">Quando vengono generati endpoint da questa associazione, all'indirizzo di base viene aggiunto un GUID.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>Returns a deep clone of the current binding element.</source>
          <target state="translated">Restituisce un clone completo dell'elemento di associazione corrente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> that is a deep clone of the current binding element.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> che costituisce un clone completo dell'elemento di associazione corrente.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">La restituzione di un clone consente al runtime di supportare il caso in cui più associazioni personalizzate condividono un elemento di associazione personalizzato.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>If a clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">Se non viene restituito un clone, il comportamento in fase di esecuzione non è definito.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">Un clone completo di un oggetto crea una copia dell'oggetto e una copia di qualsiasi elemento a cui l'oggetto fa riferimento in modo diretto o indiretto.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">Questo processo viene anche chiamato copia dell'intero oggetto grafico. Un duplicato superficiale di un oggetto, per contro, è una copia del solo oggetto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">Se l'oggetto contiene riferimenti ad altri oggetti, il duplicato superficiale non crea copie degli oggetti cui viene fatto riferimento ma copia solo i riferimenti negli oggetti originali.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>In particular, a deep copy of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;</ph> copies over the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> value.</source>
          <target state="translated">In particolare, una copia completa delle copie <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;</ph> sul valore <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object whose support is being tested.</source>
          <target state="translated">L'oggetto tipizzato di cui viene testato il supporto.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> che fornisce il contesto necessario per compilare il canale.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a typed object requested from the appropriate layer in one of the channel stacks.</source>
          <target state="translated">Se presente, restituisce un oggetto tipizzato richiesto dal livello appropriato in uno degli stack del canale.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is supported; or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">Se supportato, l'oggetto tipizzato <ph id="ph1">&lt;paramref name="T" /&gt;</ph> richiesto. In caso contrario, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding.</source>
          <target state="translated">Utilizzare questo metodo per richiedere un oggetto tipizzato, ad esempio un'interfaccia per l'impostazione di proprietà o per ottenere lo stato dal livello appropriato nell'associazione in stack.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If a layer supports returning the requested object, it returns it.</source>
          <target state="translated">L'oggetto richiesto viene restituito solo se tale azione è supportata dal livello.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
          <target state="translated">In caso contrario, delega la chiamata al livello successivo nello stack.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a <ph id="ph1">`null`</ph> value.</source>
          <target state="translated">Se raggiunge la fine dello stack e nessun livello supporta l'accettazione dell'oggetto richiesto, al chiamante viene restituito un valore <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph> that you can use to modify the exporting process.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph> da utilizzare per modificare il processo di esportazione.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that you can use to insert your custom policy assertion.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> da utilizzare per inserire l'asserzione di criteri personalizzata.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.</source>
          <target state="translated">Esporta asserzioni di criteri personalizzate sulle associazioni che rappresentano la presenza di canali duplex compositi nell'associazione.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>