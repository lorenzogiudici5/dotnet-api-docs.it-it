<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32e96da17ebc5c5d535108321675efc9526b07e7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37461072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type IBindingRuntimePreferences = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce il contratto facoltativo che un'associazione può implementare per specificare se le richieste in entrata sono gestite in modo sincrono o asincrono dal servizio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In alcuni casi può essere più efficiente per un'associazione elaborare i messaggi con i metodi sincroni <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> o <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>. Una classe <xref:System.ServiceModel.Channels.Binding> può implementare facoltativamente <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> per indicare ai chiamanti che questo è il metodo preferito.  
  
 Se un'associazione non implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, per impostazione predefinita il livello Service Model Runtime di Windows Communication Foundation (WCF) con le versioni asincrone del `Receive` e `Request` metodi. Se un'associazione implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, il livello WCF Service Model Runtime controlla il valore di <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> che verrà usata per determinare se chiamare le versioni sincrone di questi metodi (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> o <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) o asincrona le versioni (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> e <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> oppure <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> e <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>. Se <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> viene implementato dall'associazione e restituisce `true` dalla proprietà <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, è consigliabile utilizzare i metodi sincroni <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> e <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> per ricevere messaggi dal canale. Se l'associazione non implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> o restituisce `false` dalla proprietà <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, è consigliabile utilizzare i metodi asincroni <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> e <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> o <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> e <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.  
  
 Indipendentemente dal valore restituito dalla proprietà <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, tutte le associazioni devono fornire comunque implementazioni valide di entrambe le versioni sincrone e asincrone dei metodi `Receive`, per i tipi di canale specifici implementati. Per altre informazioni sull'implementazione di canali personalizzati, vedere [emergenti canali](~/docs/framework/wcf/extending/developing-channels.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata l'implementazione di un'associazione che implementa l'interfaccia <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>. Questo codice è tratto dal [Chunking canale](~/docs/framework/wcf/samples/chunking-channel.md) esempio:  
  
 [!code-csharp[S_UE_ChunkingChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se le richieste in entrata possono essere gestite più efficientemente in modo sincrono o in modo asincrono.</summary>
        <value>
          <see langword="true" /> Se le richieste possono essere gestite più efficientemente in modo sincrono; in caso contrario <see langword="false" />. L'impostazione predefinita è <see langword="false" />, per gestire le richieste in modo asincrono.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le associazioni standard (fornita dal sistema) fornite da Windows Communication Foundation (WCF) hanno implementato questa interfaccia e in alcuni casi l'override del valore predefinito per elaborare i messaggi in ingresso in modo sincrono.  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChunkingChannel#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>