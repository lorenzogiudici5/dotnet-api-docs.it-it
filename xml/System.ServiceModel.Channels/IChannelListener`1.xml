<Type Name="IChannelListener&lt;TChannel&gt;" FullName="System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f9e78f16a5b7021124655cae1a95d177c3e1375" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30505545" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelListener&lt;TChannel&gt; : System.ServiceModel.Channels.IChannelListener where TChannel : class, IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelListener`1&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt; implements class System.ServiceModel.Channels.IChannelListener, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelListener`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelListener(Of TChannel)&#xA;Implements IChannelListener" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TChannel&gt;&#xA; where TChannel : class, IChannelpublic interface class IChannelListener : System::ServiceModel::Channels::IChannelListener" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TChannel">Tipo di canale accettato dal listener del canale.</typeparam>
    <summary>Definisce l'interfaccia che deve essere implementata da un listener del canale per accettare canali di tipo specifico.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le listener factory che implementano le interfacce <xref:System.ServiceModel.Channels.IChannelListener> o <xref:System.ServiceModel.Channels.IChannelListener%601> forniscono servizi con meccanismi utilizzati per accettare i canali prodotti dai client che iniziano e abilitano la comunicazione con un servizio.  
  
 L'implementazione del contratto <xref:System.ServiceModel.Channels.IChannelListener%601> consente agli utenti di accettare più canali di un determinato tipo senza dovere specificare ogni volta il tipo di canale. In altre parole, la definizione del tipo di canale come parametro generico per l'interfaccia <xref:System.ServiceModel.Channels.IChannelListener%601> significa che non è necessario passare il tipo nei metodi <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A>. Se gli utenti desiderano accettare tipi di canale diversi, possono creare listener del canale aggiuntivi per ogni tipo di canale richiesto.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AcceptChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Accetta un canale di un tipo specificato per la comunicazione con un client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È consigliabile utilizzare l'overload <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> con il timeout esplicito. Il parametro `timeout` specificato per tale metodo esegue l'override di qualsiasi timeout predefinito che il sistema ha impostato per il servizio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel AcceptChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel AcceptChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptChannel () As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel AcceptChannel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Accetta un canale di un tipo specificato per la comunicazione con un client.</summary>
        <returns>Canale di tipo <paramref name="TChannel" /> accettato dal listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È consigliabile utilizzare l'overload <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> con il timeout esplicito. Il parametro `timeout` specificato per tale metodo esegue l'override di qualsiasi timeout predefinito che il sistema ha impostato per il servizio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel AcceptChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel AcceptChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptChannel (timeout As TimeSpan) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel AcceptChannel(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Struttura <see cref="T:System.TimeSpan" /> che specifica il tempo entro il quale un'operazione di attesa del canale deve essere completata prima di scadere.</param>
        <summary>Accetta un canale di un tipo specificato per la comunicazione con un client entro l'intervallo di tempo specificato.</summary>
        <returns>Canale di tipo <paramref name="TChannel" /> accettato dal listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È consigliabile utilizzare questo overload con il timeout esplicito invece di <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>. Il parametro `timeout` specificato per tale metodo esegue l'override di qualsiasi timeout predefinito che il sistema ha impostato per il servizio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAcceptChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizia un'operazione asincrona per accettare un canale entro l'intervallo di tempo specificato o predefinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È consigliabile utilizzare l'overload <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%2A> con il timeout esplicito. Il parametro `timeout` specificato per tale metodo esegue l'override di qualsiasi timeout predefinito che il sistema ha impostato per il servizio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAcceptChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptChannel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptChannel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptChannel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptChannel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento asincrono dell'operazione di accettazione di un canale.</param>
        <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione asincrona di accettazione di un canale.</param>
        <summary>Avvia un'operazione asincrona per accettare un canale.</summary>
        <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di accettazione di un canale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È consigliabile utilizzare l'overload <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> con il timeout esplicito. Il parametro `timeout` specificato per tale metodo esegue l'override di qualsiasi timeout predefinito che il sistema ha impostato per il servizio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Struttura <see cref="T:System.TimeSpan" /> che specifica il tempo entro il quale un'operazione di attesa del canale deve essere completata prima di scadere.</param>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento asincrono dell'operazione di accettazione di un canale.</param>
        <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione asincrona di accettazione di un canale.</param>
        <summary>Inizia un'operazione asincrona per accettare un canale entro l'intervallo di tempo specificato.</summary>
        <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di accettazione di un canale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È consigliabile utilizzare questo overload con il timeout esplicito invece di <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>. Il parametro `timeout` specificato per tale metodo esegue l'override di qualsiasi timeout predefinito che il sistema ha impostato per il servizio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel EndAcceptChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel EndAcceptChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptChannel (result As IAsyncResult) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel EndAcceptChannel(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="Overload:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel" />.</param>
        <summary>Completa un'operazione asincrona per accettare un canale.</summary>
        <returns>Canale di tipo <paramref name="TChannel" /> accettato dal listener.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>