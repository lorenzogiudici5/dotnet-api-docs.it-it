<Type Name="IContextManager" FullName="System.ServiceModel.Channels.IContextManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5d5ce43f3c3e70741b8908cac9117a9e955ba75" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36422151" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContextManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContextManager" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IContextManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContextManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContextManager" />
  <TypeSignature Language="F#" Value="type IContextManager = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="12180-101">Definisce un'interfaccia che consente di ottenere e impostare il contesto sul canale.</span>
      <span class="sxs-lookup">
        <span data-stu-id="12180-101">Defines an interface that allows you to get and set the context on the channel.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12180-102">Per i canali che utilizzano <xref:System.ServiceModel.WSHttpContextBinding> con il valore di <xref:System.ServiceModel.SessionMode.NotAllowed> impostato, il contesto non può essere recuperato sul client utilizzando <xref:System.ServiceModel.Channels.IContextManager>, in quanto un nuovo canale che stabilisce una sessione viene creato ogni volta che il metodo <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> viene chiamato per applicare la semantica <xref:System.ServiceModel.SessionMode.NotAllowed> su un canale.</span><span class="sxs-lookup"><span data-stu-id="12180-102">For channels that use <xref:System.ServiceModel.WSHttpContextBinding> with the <xref:System.ServiceModel.SessionMode.NotAllowed> value set, the context cannot be retrieved on the client using <xref:System.ServiceModel.Channels.IContextManager> because a new channel that establishes a session is created each time <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> is called to enforce <xref:System.ServiceModel.SessionMode.NotAllowed> semantics on a channel.</span></span> <span data-ttu-id="12180-103">Ciò significa che anche se in questo caso il contesto viene propagato correttamente al client, non può essere recuperato utilizzando <xref:System.ServiceModel.Channels.IContextManager>.</span><span class="sxs-lookup"><span data-stu-id="12180-103">This means that even though the context is properly propagated back to the client in this case, it cannot be retrieved using <xref:System.ServiceModel.Channels.IContextManager>.</span></span> <span data-ttu-id="12180-104">È possibile recuperarlo utilizzando <xref:System.ServiceModel.Channels.ContextMessageProperty> come mostrato nel codice seguente.</span><span class="sxs-lookup"><span data-stu-id="12180-104">You can still retrieve it using <xref:System.ServiceModel.Channels.ContextMessageProperty> as shown in the following code.</span></span>  
  
```csharp  
using (new OperationContextScope((IContextChannel)channel))  
{  
    channel.MyChannel("Test");  
    ContextMessageProperty context;  
    if (ContextMessageProperty.TryGet(OperationContext.Current.IncomingMessageProperties, out context))  
    {  
        Console.WriteLine(context.Count);  
    }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IContextManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.ServiceModel.Channels.IContextManager.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12180-105">Ottiene o imposta un valore che indica se la gestione del contesto è abilitata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12180-105">Gets or sets a value that indicates whether the context management is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12180-106">È <see langword="true" /> se il contesto è abilitato. In caso contrario è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12180-106">
              <see langword="true" /> if the context is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12180-107">Quando la gestione del contesto è abilitata, il canale del contesto memorizza nella cache il contesto all'interno della durata corrispondente.</span><span class="sxs-lookup"><span data-stu-id="12180-107">When context management is enabled the context channel caches the context in its lifetime.</span></span> <span data-ttu-id="12180-108">Il contesto può essere recuperato dal canale tramite la proprietà del canale `IContextManager` chiamando il metodo <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> su di essa.</span><span class="sxs-lookup"><span data-stu-id="12180-108">Context can be retrieved from the channel through the `IContextManager` channel property by calling <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> method on it.</span></span> <span data-ttu-id="12180-109">Il canale può inoltre essere preinizializzato con un contesto specifico prima di venire aperto chiamando il metodo <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> sulla proprietà del canale.</span><span class="sxs-lookup"><span data-stu-id="12180-109">The channel can also be pre-initialized with context before being opened by calling the <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> method on the channel property.</span></span> <span data-ttu-id="12180-110">Dopo essere stato inizializzato con il contesto, il canale non può essere reimpostato.</span><span class="sxs-lookup"><span data-stu-id="12180-110">Once the channel is initialized with context it cannot be reset.</span></span>  
  
 <span data-ttu-id="12180-111">Di seguito vengono illustrate le invarianti in questa modalità:</span><span class="sxs-lookup"><span data-stu-id="12180-111">The following are invariants in this mode:</span></span>  
  
-   <span data-ttu-id="12180-112">Qualsiasi chiamata a <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> dopo l'apertura del canale genera un'eccezione `InvalidOperationException`.</span><span class="sxs-lookup"><span data-stu-id="12180-112">Any call to <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> after the channel is open throws an `InvalidOperationException`.</span></span>  
  
-   <span data-ttu-id="12180-113">Qualsiasi tentativo di inviare il contesto tramite `ContextMessageProperty` in un messaggio in uscita genera un'eccezione `InvalidOperationException`.</span><span class="sxs-lookup"><span data-stu-id="12180-113">Any attempt to send context through the `ContextMessageProperty` in an outgoing message throws `InvalidOperationException`.</span></span>  
  
-   <span data-ttu-id="12180-114">Se un messaggio viene ricevuto dal server con il contesto, quando il canale è già stato inizializzato con un contesto, viene generata un'eccezione `ProtocolException`.</span><span class="sxs-lookup"><span data-stu-id="12180-114">If a message is received from the server with context, when the channel is already initialized with a context a `ProtocolException` is thrown.</span></span> <span data-ttu-id="12180-115">Si noti che è possibile ricevere il contesto iniziale da un server se il canale viene aperto senza impostazione esplicita del contesto.</span><span class="sxs-lookup"><span data-stu-id="12180-115">Note that you can receive initial context from a server if the channel is opened without explicitly setting the context.</span></span>  
  
-   <span data-ttu-id="12180-116">`ContextMessageProperty` su un messaggio in arrivo è sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="12180-116">The `ContextMessageProperty` on an incoming message is always `null`.</span></span>  
  
 <span data-ttu-id="12180-117">Quando la gestione del contesto non è abilitata, il canale del contesto non gestisce il contesto.</span><span class="sxs-lookup"><span data-stu-id="12180-117">When context management is not enabled, the context channel does not manage context.</span></span> <span data-ttu-id="12180-118">È responsabilità dell'applicazione recuperare, gestire e applicare il contesto tramite `ContextMessageProperty`.</span><span class="sxs-lookup"><span data-stu-id="12180-118">It is the application's responsibility to retrieve, manage and apply context through the `ContextMessageProperty`.</span></span> <span data-ttu-id="12180-119">Qualsiasi tentativo di chiamare <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> o <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> tramite la proprietà del canale `IContextManager` genera un'eccezione `InvalidOperationException`.</span><span class="sxs-lookup"><span data-stu-id="12180-119">Any attempt to call <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> or <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> using through the `IContextManager` channel property results in `InvalidOperationException`.</span></span>  
  
 <span data-ttu-id="12180-120">Tutti i cookie HTTP, ad eccezione dei cookie HTTP del contesto, sono gestiti a livello di canale.</span><span class="sxs-lookup"><span data-stu-id="12180-120">All HTTP cookies, except for context HTTP cookies, are handled at the channel level.</span></span> <span data-ttu-id="12180-121">I cookie HTTP del contesto sono gestiti a livello di applicazione.</span><span class="sxs-lookup"><span data-stu-id="12180-121">Context HTTP cookies are managed at the application level.</span></span> <span data-ttu-id="12180-122">Questo potrebbe determinare comportare conseguenze impreviste quando i canali sono condivisi per comunicare con istanze diverse indirizzate da <xref:System.ServiceModel.Channels.ContextMessageProperty>.</span><span class="sxs-lookup"><span data-stu-id="12180-122">This can have unexpected consequences when channels are shared to talk to different instances targeted by <xref:System.ServiceModel.Channels.ContextMessageProperty>.</span></span> <span data-ttu-id="12180-123">Nella tabella seguente viene mostrato l'effetto sui cookie HTTP quando <xref:System.ServiceModel.Channels.IContextManager.Enabled%2A> è impostato su `true` o `false`.</span><span class="sxs-lookup"><span data-stu-id="12180-123">The following table shows how HTTP cookies are affected when <xref:System.ServiceModel.Channels.IContextManager.Enabled%2A> is set to either `true` or `false`.</span></span>  
  
|<span data-ttu-id="12180-124">Binding</span><span class="sxs-lookup"><span data-stu-id="12180-124">Binding</span></span>|<span data-ttu-id="12180-125">Valore IContextManager.Enabled</span><span class="sxs-lookup"><span data-stu-id="12180-125">IContextManager.Enabled Value</span></span>|<span data-ttu-id="12180-126">Ambito dei cookie HTTP del contesto</span><span class="sxs-lookup"><span data-stu-id="12180-126">Context HTTP Cookie Scope</span></span>|<span data-ttu-id="12180-127">Ambito di altri cookie HTTP</span><span class="sxs-lookup"><span data-stu-id="12180-127">Other HTTP Cookies Scope</span></span>|  
|-------------|-----------------------------------|-------------------------------|------------------------------|  
|<span data-ttu-id="12180-128">BasicHttpBinding</span><span class="sxs-lookup"><span data-stu-id="12180-128">BasicHttpBinding</span></span>|<span data-ttu-id="12180-129">N/D</span><span class="sxs-lookup"><span data-stu-id="12180-129">n/a</span></span>|<span data-ttu-id="12180-130">ChannelFactory</span><span class="sxs-lookup"><span data-stu-id="12180-130">ChannelFactory</span></span>|<span data-ttu-id="12180-131">ChannelFactory</span><span class="sxs-lookup"><span data-stu-id="12180-131">ChannelFactory</span></span>|  
|<span data-ttu-id="12180-132">BasicHttpContextBinding</span><span class="sxs-lookup"><span data-stu-id="12180-132">BasicHttpContextBinding</span></span>|<span data-ttu-id="12180-133">true</span><span class="sxs-lookup"><span data-stu-id="12180-133">true</span></span>|<span data-ttu-id="12180-134">Canale</span><span class="sxs-lookup"><span data-stu-id="12180-134">Channel</span></span>|<span data-ttu-id="12180-135">Canale</span><span class="sxs-lookup"><span data-stu-id="12180-135">Channel</span></span>|  
|<span data-ttu-id="12180-136">BasicHttpContextBinding</span><span class="sxs-lookup"><span data-stu-id="12180-136">BasicHttpContextBinding</span></span>|<span data-ttu-id="12180-137">False</span><span class="sxs-lookup"><span data-stu-id="12180-137">false</span></span>|<span data-ttu-id="12180-138">Per ogni messaggio (gestito in modo esplicito dall'applicazione)</span><span class="sxs-lookup"><span data-stu-id="12180-138">For each message (explicitly managed by application)</span></span>|<span data-ttu-id="12180-139">Canale</span><span class="sxs-lookup"><span data-stu-id="12180-139">Channel</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IContextManager.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext();" />
      <MemberSignature Language="F#" Value="abstract member GetContext : unit -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="iContextManager.GetContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="12180-140">Ottiene il contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12180-140">Gets the context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12180-141">Interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> di coppie chiave/valore con lo spazio dei nomi e il nome del contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12180-141">The <see cref="T:System.Collections.Generic.IDictionary`2" /> of key/value pairs with the namespace and name of the context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="12180-142">Nel codice seguente viene mostrato come è possibile ottenere il contesto da un'istanza del proxy tipizzata sul client.</span><span class="sxs-lookup"><span data-stu-id="12180-142">The following code shows how the context can be obtained from a typed proxy instance on the client.</span></span>  
  
```  
IDictionary<string, string> context;  
CalculatorProxy proxy;  
IContextManager cm = proxy.InnerChannel.GetProperty<IContextManager>();  
if (cm != null)  
    context = cm.GetContext();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public void SetContext (System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContext(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IContextManager.SetContext(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetContext (context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetContext(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="abstract member SetContext : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="iContextManager.SetContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="12180-143">Interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> di coppie chiave/valore con lo spazio dei nomi e il nome del contesto impostato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12180-143">The <see cref="T:System.Collections.Generic.IDictionary`2" /> of key/value pairs with the namespace and name of the context that is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12180-144">Imposta il contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12180-144">Sets the context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="12180-145">Nel codice seguente viene mostrato come è possibile impostare il contesto sul client.</span><span class="sxs-lookup"><span data-stu-id="12180-145">The following code shows how the context can be set on the client.</span></span>  
  
```  
IDictionary<string, string> context;  
CalculatorProxy proxy;  
IContextManager cm = proxy.InnerChannel.GetProperty<IContextManager>();  
if (cm != null)  
    cm.SetContext(context);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>