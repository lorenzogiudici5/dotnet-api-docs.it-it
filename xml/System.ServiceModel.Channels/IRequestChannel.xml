<Type Name="IRequestChannel" FullName="System.ServiceModel.Channels.IRequestChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3308815bb08b3c00595dd459fdc5ee7f5f09da66" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36525563" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRequestChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRequestChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IRequestChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRequestChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRequestChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IRequestChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definisce il contratto che un canale deve implementare per essere sul lato richiedente di una comunicazione request-reply tra gli endpoint della messaggistica.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.IRequestChannel> definisce le varianti sincrone e asincrone di un metodo <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> che restituisce un messaggio di risposta. Fornisce inoltre una proprietà <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> e <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> per recuperare l'indirizzo dell'endpoint e l'URI ai quali viene inviato il messaggio di richiesta.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Avvia un'operazione asincrona per trasmettere un messaggio di richiesta al lato reply di uno scambio di messaggi request/reply.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Richiesta <see cref="T:System.ServiceModel.Channels.Message" /> da trasmettere.</param>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
        <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
        <summary>Avvia un'operazione asincrona per trasmettere un messaggio di richiesta al lato reply di uno scambio di messaggi request/reply.</summary>
        <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione del messaggio asincrono.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se le dimensioni del messaggio di richiesta sono superiori a quelle massime consentite dall'associazione in uso, viene generata <xref:System.ServiceModel.QuotaExceededException>. La dimensione massima del messaggio viene impostata dalla proprietà <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>. Il valore predefinito è 65536 byte.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come implementare questo metodo.  
  
 [!code-csharp[S_UE_HttpCookieSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Richiesta <see cref="T:System.ServiceModel.Channels.Message" /> da trasmettere.</param>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> specifica l'intervallo di tempo entro il quale deve pervenire una risposta.</param>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
        <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
        <summary>Avvia un'operazione asincrona per trasmettere un messaggio di richiesta al lato reply di uno scambio di messaggi request/reply entro l'intervallo di tempo specificato.</summary>
        <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione del messaggio asincrono.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se le dimensioni del messaggio di richiesta sono superiori a quelle massime consentite dall'associazione in uso, dovrebbe essere generata <xref:System.ServiceModel.QuotaExceededException>. La dimensione massima del messaggio viene impostata dalla proprietà <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>. Il valore predefinito è 65536 byte.  
  
 Se durante la chiamata della funzione viene passato un `timeout`, viene utilizzato tale valore. Se nell'associazione è impostato <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A>, nel caso in cui durante la chiamata della funzione non sia specificato alcun `timeout`, viene utilizzato il valore nell'associazione.  
  
 Se non viene specificato alcun timeout nell'associazione o durante la chiamata della funzione, viene utilizzato <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A>. Il valore predefinito è 1 minuto.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come implementare questo metodo:  
  
 [!code-csharp[S_UE_HttpCookieSession#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>L'operazione deve generare una <see cref="T:System.TimeoutException" /> se l'oggetto specificato <paramref name="timeout" /> viene superato prima del completamento dell'operazione.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRequest (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.EndRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
        <summary>Completa un'operazione asincrona per restituire una risposta basata sul messaggio a una richiesta trasmessa.</summary>
        <returns>Oggetto della classe <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto in risposta alla richiesta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se le dimensioni del messaggio di richiesta sono superiori a quelle massime consentite dall'associazione in uso, viene generata <xref:System.ServiceModel.QuotaExceededException>. La dimensione massima del messaggio viene impostata dalla proprietà <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>. Il valore predefinito è 65536 byte.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come implementare questo metodo.  
  
 [!code-csharp[S_UE_HttpCookieSession#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indirizzo remoto al quale il canale di richiesta invia i messaggi.</summary>
        <value>
          <see cref="T:System.ServiceModel.EndpointAddress" /> al quale il canale di richiesta invia i messaggi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la proprietà <xref:System.ServiceModel.EndpointAddress> non è stata specificata, l'oggetto della classe <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> funge sia da destinazione finale sia da indirizzo fisico. Se specificata, la proprietà <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> indica l'indirizzo fisico effettivo al quale viene inviato il messaggio e tramite il quale deve passare per giungere a destinazione.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come implementare questa proprietà.  
  
 [!code-csharp[S_UE_HttpCookieSession#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Request">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Richiesta <see cref="T:System.ServiceModel.Channels.Message" /> da trasmettere.</param>
        <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata.</summary>
        <returns>Oggetto della classe <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto in risposta alla richiesta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le implementazioni di <xref:System.ServiceModel.Channels.IRequestChannel> assicurano che il messaggio di risposta sia correlato con il messaggio di richiesta.  
  
 In genere, se un'implementazione di <xref:System.ServiceModel.Channels.IRequestChannel> riceve un messaggio non correlato a una richiesta in attesa, viene eliminato.  
  
 Il metodo <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> può essere chiamato contemporaneamente attraverso più thread.  
  
 Il passaggio del messaggio nel canale di richiesta determina l'accesso al messaggio. Dopo aver effettuato la chiamata a <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, non è più possibile controllare il messaggio o chiamare <xref:System.ServiceModel.Channels.Message.Close%2A> sul messaggio.  
  
 Se le dimensioni del messaggio di richiesta sono superiori a quelle massime consentite dall'associazione in uso, viene generata <xref:System.ServiceModel.QuotaExceededException>. La dimensione massima del messaggio viene impostata dalla proprietà <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>. Il valore predefinito è 65536 byte.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come implementare questo metodo:  
  
 [!code-csharp[S_UE_HttpCookieSession#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message * TimeSpan -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">Richiesta <see cref="T:System.ServiceModel.Channels.Message" /> da trasmettere.</param>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> specifica l'intervallo di tempo entro il quale deve pervenire una risposta.</param>
        <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata, entro l'intervallo di tempo specificato.</summary>
        <returns>Oggetto della classe <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto in risposta alla richiesta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le implementazioni di <xref:System.ServiceModel.Channels.IRequestChannel> assicurano che il messaggio di risposta sia correlato con il messaggio di richiesta.  
  
 In genere, se un'implementazione di <xref:System.ServiceModel.Channels.IRequestChannel> riceve un messaggio non correlato a una richiesta in attesa, viene eliminato.  
  
 Il metodo <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> può essere chiamato contemporaneamente attraverso più thread.  
  
 Il passaggio del messaggio nel canale di richiesta determina l'accesso al messaggio. Dopo aver effettuato la chiamata a <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, non è più possibile controllare il messaggio o chiamare <xref:System.ServiceModel.Channels.Message.Close%2A> sul messaggio.  
  
 Se le dimensioni del messaggio di richiesta sono superiori a quelle massime consentite dall'associazione in uso, viene generata <xref:System.ServiceModel.QuotaExceededException>. La dimensione massima del messaggio viene impostata dalla proprietà <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>. Il valore predefinito è 65536 byte.  
  
 Se durante la chiamata della funzione viene passato un `timeout`, viene utilizzato tale valore. Se nell'associazione è impostato <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A>, nel caso in cui durante la chiamata della funzione non sia specificato alcun `timeout`, viene utilizzato il valore nell'associazione.  
  
 Se non viene specificato alcun timeout nell'associazione o durante la chiamata della funzione, viene utilizzato <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A>. Il valore predefinito è 1 minuto.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come implementare questo metodo.  
  
 [!code-csharp[S_UE_HttpCookieSession#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>L'operazione deve generare una <see cref="T:System.TimeoutException" /> se l'oggetto specificato <paramref name="timeout" /> viene superato prima del completamento dell'operazione.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indirizzo di trasporto al quale viene inviata la richiesta.</summary>
        <value>Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui viene inviato il messaggio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la proprietà <xref:System.ServiceModel.EndpointAddress> non è stata specificata, l'oggetto della classe <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> funge sia da destinazione finale sia da indirizzo fisico. Se specificata, la proprietà <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> indica l'indirizzo fisico effettivo al quale viene inviato il messaggio e tramite il quale deve passare per giungere a destinazione.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come implementare questa proprietà.  
  
 [!code-csharp[S_UE_HttpCookieSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>