<Type Name="ContextBindingElement" FullName="System.ServiceModel.Channels.ContextBindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5c93eef4a0d487ab8ca32335f55fc8d82799f17" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37621718" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Channels.IContextBindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Channels.IContextBindingElement, class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.ContextBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextBindingElement&#xA;Inherits BindingElement&#xA;Implements IContextBindingElement, IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextBindingElement : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Channels::IContextBindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type ContextBindingElement = class&#xA;    inherit BindingElement&#xA;    interface IPolicyExportExtension&#xA;    interface IContextBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IContextBindingElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce un livello di protezione e un meccanismo di scambio come parte del contesto di un elemento di associazione e la funzionalità per compilare i listener del canale e le channel factory.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.ContextBindingElement> consente all'utente di aggiungere un elemento all'associazione di un servizio per la gestione del protocollo di scambio del contesto. <xref:System.ServiceModel.Channels.ContextBindingElement> è in genere basata su elementi di associazione di affidabilità, di sicurezza e di trasporto. <xref:System.ServiceModel.Channels.ContextBindingElement> non richiede opzioni di configurazione e può creare channel factory per <xref:System.ServiceModel.Channels.IRequestChannel>, <xref:System.ServiceModel.Channels.IRequestSessionChannel>e <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. Può inoltre creare listener del canale per <xref:System.ServiceModel.Channels.IReplyChannel>, <xref:System.ServiceModel.Channels.IReplySessionChannel> e <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. Un canale del contesto non modifica l'interfaccia del canale e lo stack di canali sottostante deve supportare la forma del canale richiesta e la funzionalità della sessione.  
  
 I listener del canale e le channel factory vengono utilizzati per costruire la parte degli stack dei canali utilizzata per elaborare i messaggi in ingresso e in uscita.  
  
> [!NOTE]
>  Se viene creata un'associazione basata sulla sessione con un <xref:System.ServiceModel.Channels.ContextBindingElement> e usato con un contratto che specifica <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A>  =  <xref:System.ServiceModel.SessionMode.NotAllowed>, un <xref:System.InvalidOperationException> viene generata quando viene creato il canale con il testo seguente: "gestione del contesto del canale non può essere abilitata o disabilitata dopo che il canale viene aperto." È necessario impostare <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> su <xref:System.ServiceModel.SessionMode.Allowed> o su <xref:System.ServiceModel.SessionMode.Required> oppure non utilizzare un canale basato sulla sessione.  
  
 Quando si crea un'associazione personalizzata, è consigliabile aggiungere <xref:System.ServiceModel.Channels.ContextBindingElement> alla classe <xref:System.ServiceModel.Channels.BindingElementCollection> dell'associazione personalizzata prima di aggiungere elementi di associazione di sicurezza e di affidabilità. In caso contrario, il servizio può generare una classe <xref:System.ServiceModel.ProtocolException> con il messaggio seguente:  
  
 "Il canale del contesto ha ricevuto un messaggio con contesto che non corrisponde al contesto corrente memorizzato nella cache sul canale. Assicurarsi che il servizio non modifichi il contesto dopo l'impostazione iniziale o disabiliti la gestione del contesto impostando la proprietà del canale 'IContextManager.Enabled' su falso."  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ContextBindingElement" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ContextBindingElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Imposta i valori predefiniti di <xref:System.Net.Security.ProtectionLevel.Sign> per <xref:System.Net.Security.ProtectionLevel>, e di <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> per <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.ContextBindingElement : System.Net.Security.ProtectionLevel -&gt; System.ServiceModel.Channels.ContextBindingElement" Usage="new System.ServiceModel.Channels.ContextBindingElement protectionLevel" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">Classe <see cref="T:System.Net.Security.ProtectionLevel" /> per l'elemento di associazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> con un livello di protezione specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Imposta il valore predefinito di <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> per <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'elemento <paramref name="protectionLevel" /> non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel, valuetype System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel, System::ServiceModel::Channels::ContextExchangeMechanism contextExchangeMechanism);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.ContextBindingElement : System.Net.Security.ProtectionLevel * System.ServiceModel.Channels.ContextExchangeMechanism -&gt; System.ServiceModel.Channels.ContextBindingElement" Usage="new System.ServiceModel.Channels.ContextBindingElement (protectionLevel, contextExchangeMechanism)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="contextExchangeMechanism" Type="System.ServiceModel.Channels.ContextExchangeMechanism" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">Classe <see cref="T:System.Net.Security.ProtectionLevel" /> per l'elemento di associazione.</param>
        <param name="contextExchangeMechanism">
          <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" /> che specifica il meccanismo utilizzato per scambiare contesto per l'elemento di associazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> con un livello di protezione e un meccanismo di scambio specificati.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="protectionLevel" /> o <paramref name="contextExchangeMechanism" /> non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, Uri clientCallbackAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel, valuetype System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, class System.Uri clientCallbackAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel, System::ServiceModel::Channels::ContextExchangeMechanism contextExchangeMechanism, Uri ^ clientCallbackAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.ContextBindingElement : System.Net.Security.ProtectionLevel * System.ServiceModel.Channels.ContextExchangeMechanism * Uri -&gt; System.ServiceModel.Channels.ContextBindingElement" Usage="new System.ServiceModel.Channels.ContextBindingElement (protectionLevel, contextExchangeMechanism, clientCallbackAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="contextExchangeMechanism" Type="System.ServiceModel.Channels.ContextExchangeMechanism" />
        <Parameter Name="clientCallbackAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">Livello di protezione per l'elemento di associazione.</param>
        <param name="contextExchangeMechanism">Il meccanismo utilizzato per scambiare contesto per l'elemento di associazione.</param>
        <param name="clientCallbackAddress">Indirizzo di callback del client.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> con il livello di protezione, meccanismo di scambio del contesto e indirizzo di callback del client specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, Uri clientCallbackAddress, bool contextManagementEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel, valuetype System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, class System.Uri clientCallbackAddress, bool contextManagementEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel, System::ServiceModel::Channels::ContextExchangeMechanism contextExchangeMechanism, Uri ^ clientCallbackAddress, bool contextManagementEnabled);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.ContextBindingElement : System.Net.Security.ProtectionLevel * System.ServiceModel.Channels.ContextExchangeMechanism * Uri * bool -&gt; System.ServiceModel.Channels.ContextBindingElement" Usage="new System.ServiceModel.Channels.ContextBindingElement (protectionLevel, contextExchangeMechanism, clientCallbackAddress, contextManagementEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="contextExchangeMechanism" Type="System.ServiceModel.Channels.ContextExchangeMechanism" />
        <Parameter Name="clientCallbackAddress" Type="System.Uri" />
        <Parameter Name="contextManagementEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">Livello di protezione per l'elemento di associazione.</param>
        <param name="contextExchangeMechanism">Il meccanismo utilizzato per scambiare contesto per l'elemento di associazione.</param>
        <param name="clientCallbackAddress">Indirizzo di callback del client.</param>
        <param name="contextManagementEnabled">
          <see langword="true" /> se la gestione di contesto è abilitata; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> con specificati il livello di protezione, meccanismo di scambio del contesto, indirizzo di callback del client e un valore che specifica se la gestione del contesto è abilitata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="contextBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
        <param name="context">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> relativa al canale.</param>
        <summary>Compila lo stack della channel factory nel client che crea un tipo di canale specificato per un contesto specificato.</summary>
        <returns>Interfaccia <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> per il contesto specificato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore <paramref name="context" /> impostato è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="contextBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Tipo di canale accettato dal listener del canale.</typeparam>
        <param name="context">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> per il listener.</param>
        <summary>Compila lo stack del listener del canale nel client che accetta un tipo di canale specificato per un contesto specificato.</summary>
        <returns>Interfaccia <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> di tipo <paramref name="TChannel" /> per il contesto specificato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore <paramref name="context" /> impostato è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="contextBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory. Solo <see cref="T:System.ServiceModel.Channels.IRequestChannel" />, <see cref="T:System.ServiceModel.Channels.IRequestSessionChannel" /> e <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> sono consentite per impostazione predefinita.</typeparam>
        <param name="context">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> per la factory.</param>
        <summary>Restituisce un valore che indica se l'elemento di associazione corrente può compilare una factory per un tipo di canale e di contesto specificati.</summary>
        <returns>
          <see langword="true" /> se lo stack della channel factory specificato può essere compilato nel client. In caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="contextBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Tipo di canale accettato dal listener del canale. Solo <see cref="T:System.ServiceModel.Channels.IReplyChannel" />, <see cref="T:System.ServiceModel.Channels.IReplySessionChannel" /> e <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> sono consentite per impostazione predefinita.</typeparam>
        <param name="context">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> per il listener.</param>
        <summary>Restituisce un valore che indica se l'associazione corrente può compilare un listener per un tipo di canale e di contesto specificati.</summary>
        <returns>
          <see langword="true" /> se lo stack del listener del canale specificato può essere compilato nel servizio. In caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCallbackAddress">
      <MemberSignature Language="C#" Value="public Uri ClientCallbackAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientCallbackAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCallbackAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientCallbackAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCallbackAddress : Uri with get, set" Usage="System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'indirizzo di callback del client per l'elemento di associazione.</summary>
        <value>Indirizzo di callback del client.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="contextBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuovo oggetto <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> inizializzato da quello corrente.</summary>
        <returns>Un oggetto <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> inizializzato da quello corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.ServiceModel.Channels.ContextBindingElement> duplicato ha gli stessi valori di <xref:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel%2A> e <xref:System.ServiceModel.Channels.ContextExchangeMechanism> dell'oggetto <xref:System.ServiceModel.Channels.ContextBindingElement> corrente.  
  
 Crea una copia completa dell'albero degli oggetti dell'elemento di associazione corrente, detta anche clone completo. Un clone completo di un oggetto crea una copia dell'oggetto e una copia di qualsiasi elemento a cui l'oggetto fa riferimento in modo diretto o indiretto. Questo processo è detto copia dell'intero oggetto grafico. La restituzione di un clone completo consente al runtime di supportare il caso in cui più associazioni personalizzate condividono un elemento di associazione personalizzato. Se non viene restituito un clone completo, il comportamento in fase di esecuzione non è definito. Un duplicato superficiale di un oggetto è una copia del solo oggetto. Se l'oggetto contiene riferimenti ad altri oggetti, il duplicato superficiale non crea copie degli oggetti cui viene fatto riferimento ma copia solo i riferimenti negli oggetti originali.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextExchangeMechanism">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.ContextExchangeMechanism ContextExchangeMechanism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Channels.ContextExchangeMechanism ContextExchangeMechanism" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextExchangeMechanism As ContextExchangeMechanism" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::ContextExchangeMechanism ContextExchangeMechanism { System::ServiceModel::Channels::ContextExchangeMechanism get(); void set(System::ServiceModel::Channels::ContextExchangeMechanism value); };" />
      <MemberSignature Language="F#" Value="member this.ContextExchangeMechanism : System.ServiceModel.Channels.ContextExchangeMechanism with get, set" Usage="System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.ContextExchangeMechanism</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il meccanismo di scambio utilizzato per comunicare contesto per l'elemento di associazione.</summary>
        <value>
          <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" /> che specifica il meccanismo utilizzato per scambiare contesto per l'elemento di associazione.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore impostato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContextManagementEnabled">
      <MemberSignature Language="C#" Value="public bool ContextManagementEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextManagementEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextManagementEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContextManagementEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ContextManagementEnabled : bool with get, set" Usage="System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se la gestione del contesto è abilitata.</summary>
        <value>
          <see langword="true" /> se la gestione di contesto è abilitata; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportPolicy">
      <MemberSignature Language="C#" Value="public virtual void ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit&#xA;override this.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="contextBindingElement.ExportPolicy (exporter, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">Classe <see cref="T:System.ServiceModel.Description.MetadataExporter" /> che esporta le informazioni sui metadati.</param>
        <param name="context">Oggetto <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> che fornisce mapping da elementi WSDL esportati alla descrizione del contratto.</param>
        <summary>Scrive asserzioni di criteri personalizzate nel contesto dell'elemento di associazione.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> è <see langword="null" /> o l'asserzione di criteri nell'associazione è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="contextBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
        <param name="context">Oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> specificato.</param>
        <summary>Restituisce l'oggetto tipizzato con il contesto specificato dal livello appropriato nello stack dei canali.</summary>
        <returns>L'oggetto tipizzato <paramref name="T" /> richiesto se presente.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il livello di protezione per l'elemento di associazione dal contesto.</summary>
        <value>Classe <see cref="T:System.Net.Security.ProtectionLevel" /> per l'elemento di associazione.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore impostato non è valido.</exception>
      </Docs>
    </Member>
  </Members>
</Type>