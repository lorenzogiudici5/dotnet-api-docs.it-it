<Type Name="ToolTask" FullName="Microsoft.Build.Utilities.ToolTask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aedb9c7f336e754eccfcb6d655a0dba3475de33e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ToolTask : Microsoft.Build.Utilities.Task, Microsoft.Build.Framework.ICancelableTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ToolTask extends Microsoft.Build.Utilities.Task implements class Microsoft.Build.Framework.ICancelableTask, class Microsoft.Build.Framework.ITask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.ToolTask" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ToolTask&#xA;Inherits Task&#xA;Implements ICancelableTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolTask abstract : Microsoft::Build::Utilities::Task, Microsoft::Build::Framework::ICancelableTask" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Utilities.Task</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ICancelableTask</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="7ef43-101">In caso di override in una classe derivata, implementa la funzionalità per un'attività che esegue il wrapping di uno strumento da riga di comando.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7ef43-101">When overridden in a derived form, provides functionality for a task that wraps a command line tool.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-102">Questa classe astratta fornisce le implementazioni predefinite per i metodi e proprietà di un'attività che esegue il wrapping di uno strumento da riga di comando.</span><span class="sxs-lookup"><span data-stu-id="7ef43-102">This abstract class provides default implementations for the methods and properties of a task that wraps a command line tool.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ef43-103">Nell'esempio seguente viene creato un <xref:Microsoft.Build.Utilities.ToolTask> che esegue [Ilasm.exe (Assembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="7ef43-103">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="7ef43-104">Il <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, e <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classi vengono utilizzate per generare le informazioni necessarie per eseguire l'attività.</span><span class="sxs-lookup"><span data-stu-id="7ef43-104">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-105">Inizializza una nuova istanza della classe <see cref="T:Microsoft.Build.Utilities.ToolTask" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-105">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-106">Inizializza una nuova istanza della classe <see cref="T:Microsoft.Build.Utilities.ToolTask" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-106">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask (System.Resources.ResourceManager taskResources);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Resources.ResourceManager taskResources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (taskResources As ResourceManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask(System::Resources::ResourceManager ^ taskResources);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskResources" Type="System.Resources.ResourceManager" />
      </Parameters>
      <Docs>
        <param name="taskResources">
          <span data-ttu-id="7ef43-107">La classe <see cref="T:System.Resources.ResourceManager" /> per le risorse dell'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-107">The <see cref="T:System.Resources.ResourceManager" /> for task resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ef43-108">Inizializza una nuova istanza della classe <see cref="T:Microsoft.Build.Utilities.ToolTask" /> con l'oggetto <see cref="T:System.Resources.ResourceManager" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-108">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class with the specified <see cref="T:System.Resources.ResourceManager" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask (System.Resources.ResourceManager taskResources, string helpKeywordPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Resources.ResourceManager taskResources, string helpKeywordPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (taskResources As ResourceManager, helpKeywordPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask(System::Resources::ResourceManager ^ taskResources, System::String ^ helpKeywordPrefix);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskResources" Type="System.Resources.ResourceManager" />
        <Parameter Name="helpKeywordPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskResources">
          <span data-ttu-id="7ef43-109">La classe <see cref="T:System.Resources.ResourceManager" /> per le risorse dell'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-109">The <see cref="T:System.Resources.ResourceManager" /> for task resources.</span>
          </span>
        </param>
        <param name="helpKeywordPrefix">
          <span data-ttu-id="7ef43-110">Parola chiave della Guida da usare per i messaggi generati dall'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-110">The Help keyword to use for messages raised by the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ef43-111">Inizializza una nuova istanza della classe <see cref="T:Microsoft.Build.Utilities.ToolTask" /> con la classe <see cref="T:System.Resources.ResourceManager" /> specificata e con il prefisso della parola chiave della Guida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-111">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class with the specified <see cref="T:System.Resources.ResourceManager" /> and Help keyword prefix.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallHostObjectToExecute">
      <MemberSignature Language="C#" Value="protected virtual bool CallHostObjectToExecute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CallHostObjectToExecute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CallHostObjectToExecute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CallHostObjectToExecute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-112">Chiama l'oggetto host per svolgere il lavoro dell'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-112">Calls the host object to perform the work of the task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-113">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-113">
              <see langword="true" /> if the method was successfule; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cancel();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ICancelableTask.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-114">Annulla l'esecuzione dell'attività da parte del processo richiedendo una chiusura corretta, quindi, dopo un breve periodo di tempo, forzare la chiusura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-114">Cancels the process executing the task by asking it to close nicely, then after a short period, forcing termination.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTempFile">
      <MemberSignature Language="C#" Value="protected void DeleteTempFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeleteTempFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeleteTempFile (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeleteTempFile(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="7ef43-115">Nome del file temporaneo da eliminare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-115">The name of the temporary file to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ef43-116">Elimina il file temporaneo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-116">Deletes the specified temporary file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-117">Se l'operazione di eliminazione non riesce per qualsiasi motivo (ad esempio se un file è bloccato da un software antivirus), questo metodo registra un avviso anziché generare un'eccezione, che potrebbe causare l'errore di compilazione.</span><span class="sxs-lookup"><span data-stu-id="7ef43-117">If the delete operation fails for any reason (such as if a file is locked by antivirus software), then this method logs a warning rather than throwing an exception, which would cause the build to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EchoOff">
      <MemberSignature Language="C#" Value="public bool EchoOff { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EchoOff" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EchoOff" />
      <MemberSignature Language="VB.NET" Value="Public Property EchoOff As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EchoOff { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-118">Indica che viene disattivata la visualizzazione della riga di comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-118">Indicates that command line echoing is turned off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-119">True quando l'eco della riga di comando è disattivato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-119">True when command line echo is off.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-120">MSBuild: disattiva la visualizzazione della riga di comando passando /Q nella riga di comando cmd.exe.</span><span class="sxs-lookup"><span data-stu-id="7ef43-120">MSBuild turns off command line echoing by passing /Q on the cmd.exe command line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Specialized.StringDictionary EnvironmentOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentOverride" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EnvironmentOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EnvironmentOverride As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::Specialized::StringDictionary ^ EnvironmentOverride { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EnvironmentVariables property")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-121">Ottiene un set di coppie nome-valore per la variabile di ambiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-121">Gets a set of environment variable name-value pairs.</span>
          </span>
          <span data-ttu-id="7ef43-122">Progettato per essere sottoposto a override in una classe di attività personalizzata (derivata da ToolTask) per restituire un set di variabili di ambiente nuove o modificate per creare il contesto di esecuzione dello strumento associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-122">Designed to be overridden in a custom task class (derived from ToolTask) to return a set of new or altered environment variables to create the execution context of the associated tool.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-123">Restituisce un set di variabili di ambiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-123">Returns a set of environment variables.</span>
          </span>
          <span data-ttu-id="7ef43-124">Ogni chiave di dizionario è il nome della variabile di ambiente di cui eseguire l'override e il valore di dizionario è il valore da impostare per tale variabile di ambiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-124">Each dictionary key is the name of the environment variable to override and the dictionary value is the value to set for that environment variable.</span>
          </span>
          <span data-ttu-id="7ef43-125">L'implementazione predefinita di EnvironmentOverride restituisce null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-125">The default implementation of EnvironmentOverride returns null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-126">Il metodo ExecuteTool passa queste variabili di ambiente per StartInfo del processo in cui viene eseguito lo strumento.</span><span class="sxs-lookup"><span data-stu-id="7ef43-126">The ExecuteTool method passes these environment variables to the StartInfo of the process in which the tool executes.</span></span> <span data-ttu-id="7ef43-127">Tutte le variabili di ambiente non incluse nel dizionario EnvironmentOverride vengono ereditate dal processo in cui viene eseguito il metodo ExecuteTool.</span><span class="sxs-lookup"><span data-stu-id="7ef43-127">Any environment variables not included in the EnvironmentOverride dictionary are inherited from the process in which the ExecuteTool method executes.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using Microsoft.Build.Utilities;  
using System.Collections.Specialized;  
  
/// <summary>  
/// CustomToolTask overrides the EnvironmentOverride property of ToolTask to add a directory  
/// to the Path environment variable of the process being executed  
/// </summary>  
abstract class CustomToolTask : ToolTask  
{  
      protected override StringDictionary EnvironmentOverride  
      {  
            get  
            {  
                  string newPath = Environment.GetEnvironmentVariable("Path", EnvironmentVariableTarget.Process) + @";C:\MyDirectory";  
                  StringDictionary result = new StringDictionary();  
                  result.Add("Path", newPath);  
                  return result;  
            }  
      }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public string[] EnvironmentVariables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentVariables As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ EnvironmentVariables { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-128">Matrice di coppie di variabili di ambiente separate da uguali che devono essere passate all'eseguibile generato, oltre al (o eseguire l'override in modo selettivo del) blocco di ambiente regolare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-128">Array of equals-separated pairs of environment variables that should be passed to the spawned executable, in addition to (or selectively overriding) the regular environment block.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-129">In tal caso invece di EnvironmentOverride come che accetta un oggetto StringDictionary, che non può essere impostata da un progetto MSBuild.</span><span class="sxs-lookup"><span data-stu-id="7ef43-129">Using this instead of EnvironmentOverride as that takes a StringDictionary, which cannot be set from an MSBuild project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITask.Execute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-130">Esegue il file eseguibile con i parametri attività specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-130">Runs the exectuable file with the specified task parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-131">
            <see langword="true" /> se l'attività viene eseguita correttamente. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-131">
              <see langword="true" /> if the task runs successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteTool">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteTool (string pathToTool, string responseFileCommands, string commandLineCommands);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteTool (pathToTool As String, responseFileCommands As String, commandLineCommands As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteTool(System::String ^ pathToTool, System::String ^ responseFileCommands, System::String ^ commandLineCommands);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="responseFileCommands" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool">
          <span data-ttu-id="7ef43-132">Percorso del file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-132">The path to the executable file.</span>
          </span>
        </param>
        <param name="responseFileCommands">
          <span data-ttu-id="7ef43-133">Argomenti della riga di comando da inserire nel file con estensione RSP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-133">The command line arguments to place in the .rsp file.</span>
          </span>
        </param>
        <param name="commandLineCommands">
          <span data-ttu-id="7ef43-134">Argomenti della riga di comando da passare direttamente al file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-134">The command line arguments to pass directly to the executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ef43-135">Crea un file di risposta (RSP) temporaneo e viene eseguito il file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-135">Creates a temporoary response (.rsp) file and runs the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-136">Codice di uscita restituito del file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-136">The returned exit code of the executable file.</span>
          </span>
          <span data-ttu-id="7ef43-137">Se l'attività ha registrato errori, ma il file eseguibile ha restituito un codice di uscita 0, questo metodo restituisce -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-137">If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-138">Ottiene il codice di uscita restituito del file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-138">Gets the returned exit code of the executable file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-139">Codice di uscita restituito del file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-139">The returned exit code of the executable file.</span>
          </span>
          <span data-ttu-id="7ef43-140">Se l'attività ha registrato errori, ma il file eseguibile ha restituito un codice di uscita 0, questo metodo restituisce -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-140">If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCommandLineCommands">
      <MemberSignature Language="C#" Value="protected virtual string GenerateCommandLineCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateCommandLineCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateCommandLineCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GenerateCommandLineCommands();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-141">Restituisce un valore stringa contenente gli argomenti della riga di comando da passare direttamente al file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-141">Returns a string value containing the command line arguments to pass directly to the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-142">Valore stringa contenente gli argomenti della riga di comando da passare direttamente al file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-142">A string value containing the command line arguments to pass directly to the executable file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-143">Questo metodo viene chiamato dopo <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> e <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ef43-143">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> and <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ef43-144">Nell'esempio seguente viene creato un <xref:Microsoft.Build.Utilities.ToolTask> che esegue [Ilasm.exe (Assembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="7ef43-144">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="7ef43-145">Il <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, e <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classi vengono utilizzate per generare le informazioni necessarie per eseguire l'attività.</span><span class="sxs-lookup"><span data-stu-id="7ef43-145">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFullPathToTool">
      <MemberSignature Language="C#" Value="protected abstract string GenerateFullPathToTool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateFullPathToTool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GenerateFullPathToTool () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GenerateFullPathToTool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-146">Restituisce il percorso completo del file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-146">Returns the fully qualified path to the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-147">Percorso completo del file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-147">The fully qualified path to the executable file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-148">Questo metodo restituisce il valore della <xref:Microsoft.Build.Utilities.ToolTask.ToolName%2A> proprietà se lo strumento si trova nel percorso di sistema.</span><span class="sxs-lookup"><span data-stu-id="7ef43-148">This method returns the value of the <xref:Microsoft.Build.Utilities.ToolTask.ToolName%2A> property if the tool is located in the system path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ef43-149">Nell'esempio seguente viene creato un <xref:Microsoft.Build.Utilities.ToolTask> che esegue [Ilasm.exe (Assembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="7ef43-149">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="7ef43-150">Il <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, e <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classi vengono utilizzate per generare le informazioni necessarie per eseguire l'attività.</span><span class="sxs-lookup"><span data-stu-id="7ef43-150">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateResponseFileCommands">
      <MemberSignature Language="C#" Value="protected virtual string GenerateResponseFileCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateResponseFileCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateResponseFileCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GenerateResponseFileCommands();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-151">Restituisce un valore stringa contenente gli argomenti della riga di comando da aggiungere al file di risposta (RSP) prima di eseguire il file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-151">Returns a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-152">Valore stringa contenente gli argomenti della riga di comando da aggiungere al file di risposta (RSP) prima di eseguire il file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-152">a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-153">Questo metodo viene chiamato dopo <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> e <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ef43-153">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> and <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProcessStartInfo">
      <MemberSignature Language="C#" Value="protected System.Diagnostics.ProcessStartInfo GetProcessStartInfo (string pathToTool, string commandLineCommands, string responseFileSwitch);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Diagnostics.ProcessStartInfo GetProcessStartInfo(string pathToTool, string commandLineCommands, string responseFileSwitch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetProcessStartInfo (pathToTool As String, commandLineCommands As String, responseFileSwitch As String) As ProcessStartInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Diagnostics::ProcessStartInfo ^ GetProcessStartInfo(System::String ^ pathToTool, System::String ^ commandLineCommands, System::String ^ responseFileSwitch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessStartInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
        <Parameter Name="responseFileSwitch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool">
          <span data-ttu-id="7ef43-154">Percorso dello strumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-154">The path to the tool.</span>
          </span>
        </param>
        <param name="commandLineCommands">
          <span data-ttu-id="7ef43-155">Comandi della riga di comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-155">The command line commands.</span>
          </span>
        </param>
        <param name="responseFileSwitch">
          <span data-ttu-id="7ef43-156">Opzione del file di risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-156">The response file switch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ef43-157">Inizializza le informazioni richieste per generare il processo che esegue lo strumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-157">Initializes the information required to spawn the process executing the tool.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-158">Informazioni richieste per avviare il processo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-158">The information required to start the process.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseFileSwitch">
      <MemberSignature Language="C#" Value="protected virtual string GetResponseFileSwitch (string responseFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResponseFileSwitch(string responseFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponseFileSwitch (responseFilePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResponseFileSwitch(System::String ^ responseFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="responseFilePath">
          <span data-ttu-id="7ef43-159">Percorso completo del file RSP temporaneo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-159">The full path to the temporary .rsp file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ef43-160">Restituisce l'opzione della riga di comando usata dal file eseguibile per specificare un file di risposta (RSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-160">Returns the command line switch used by the executable file to specifiy a response (.rsp) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-161">Opzione della riga di comando usata dal file eseguibile per specificare un file di risposta (RSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-161">The command line switch used by the executable file to specifiy a response (.rsp) file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-162">Questo metodo viene chiamato solo se <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A> restituisce un valore di stringa non vuota.</span><span class="sxs-lookup"><span data-stu-id="7ef43-162">This method is only called if <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A> returns a non-empty string value.</span></span>  
  
 <span data-ttu-id="7ef43-163">Questo metodo viene chiamato dopo <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>, <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A> e <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ef43-163">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>, <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A> and <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkingDirectory">
      <MemberSignature Language="C#" Value="protected virtual string GetWorkingDirectory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetWorkingDirectory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWorkingDirectory () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetWorkingDirectory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-164">Restituisce la directory in cui eseguire il file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-164">Returns the directory in which to run the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-165">Directory in cui eseguire il file eseguibile oppure un riferimento null (<see langword="Nothing" /> in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]) se il file eseguibile deve essere eseguito nella directory corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-165">The directory in which to run the executable file, or a null reference (<see langword="Nothing" /> in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]) if the executable file should be run in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-166">Si tratta di un metodo, piuttosto che una proprietà in modo che le classi derivate (come Exec) è possono scegliere di esporre una proprietà WorkingDirectory pubblica sarebbe di due proprietà.</span><span class="sxs-lookup"><span data-stu-id="7ef43-166">This is a method rather than a property so that derived classes (like Exec) can choose to expose a public WorkingDirectory property, and it would be confusing to have two properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleTaskExecutionErrors">
      <MemberSignature Language="C#" Value="protected virtual bool HandleTaskExecutionErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HandleTaskExecutionErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HandleTaskExecutionErrors () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HandleTaskExecutionErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-167">Gestisce gli errori di esecuzione generati dal file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-167">Handles execution errors raised by the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-168">
            <see langword="true" /> se il metodo viene eseguito con esito positivo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-168">
              <see langword="true" /> if the method runs successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-169">Questo metodo viene chiamato solo se il file eseguibile restituisce un codice di uscita diverso da zero.</span><span class="sxs-lookup"><span data-stu-id="7ef43-169">This method is called only if the executable file returns a non-zero exit code.</span></span>  
  
 <span data-ttu-id="7ef43-170">Il valore restituito di questo metodo viene utilizzato come valore restituito dell'attività.</span><span class="sxs-lookup"><span data-stu-id="7ef43-170">The return value of this method is used as the return value of the task.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoggedErrors">
      <MemberSignature Language="C#" Value="protected virtual bool HasLoggedErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoggedErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.HasLoggedErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HasLoggedErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasLoggedErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-171">Indica se ToolTask ha registrato errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-171">Whether this ToolTask has logged any errors</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeHostObject">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.InitializeHostObject" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeHostObject () As HostObjectInitializationStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::Build::Utilities::HostObjectInitializationStatus InitializeHostObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Utilities.HostObjectInitializationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-172">Inizializza l'oggetto host dell'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-172">Initializes the host object of the task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-173">La classe <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" /> dell'oggetto host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-173">The <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" /> of the host object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogEventsFromTextOutput">
      <MemberSignature Language="C#" Value="protected virtual void LogEventsFromTextOutput (string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogEventsFromTextOutput(string singleLine, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogEventsFromTextOutput(System::String ^ singleLine, Microsoft::Build::Framework::MessageImportance messageImportance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singleLine" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="singleLine">
          <span data-ttu-id="7ef43-174">Singola riga di testo che deve essere analizzata dal metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-174">A single line of text for the method to parse.</span>
          </span>
        </param>
        <param name="messageImportance">
          <span data-ttu-id="7ef43-175">Valore di <see cref="T:Microsoft.Build.Framework.MessageImportance" /> che indica il livello di importanza con cui registrare il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-175">A value of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level with which to log the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ef43-176">Analizza una singola riga di testo per identificare eventuali errori o avvisi in formato canonico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-176">Parses a single line of text to identify any errors or warnings in canonical format.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPathToTool">
      <MemberSignature Language="C#" Value="protected virtual void LogPathToTool (string toolName, string pathToTool);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogPathToTool(string toolName, string pathToTool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LogPathToTool (toolName As String, pathToTool As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogPathToTool(System::String ^ toolName, System::String ^ pathToTool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolName" Type="System.String" />
        <Parameter Name="pathToTool" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolName">
          <span data-ttu-id="7ef43-177">Nome del file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-177">The executable file name.</span>
          </span>
        </param>
        <param name="pathToTool">
          <span data-ttu-id="7ef43-178">Percorso del file eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-178">The path to the executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ef43-179">Registra il nome e il percorso dello strumento per tutti i logger registrati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-179">Logs the tool name and path to all registered loggers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStandardErrorAsError">
      <MemberSignature Language="C#" Value="public bool LogStandardErrorAsError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogStandardErrorAsError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError" />
      <MemberSignature Language="VB.NET" Value="Public Property LogStandardErrorAsError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogStandardErrorAsError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-180">TUTTI i messaggi ricevuti nel flusso di errori standard devono essere registrati come errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-180">Should ALL messages received on the standard error stream be logged as errors.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogToolCommand">
      <MemberSignature Language="C#" Value="protected virtual void LogToolCommand (string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogToolCommand(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LogToolCommand (message As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogToolCommand(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7ef43-181">Messaggio descrittivo da fornire ai logger, in genere, riga di comando e opzioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-181">A descriptive message to provide loggers, usually the command line and switches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ef43-182">Registra il punto iniziale dell'esecuzione su tutti i logger registrati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-182">Logs the starting point of the run to all registered loggers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFileEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding ResponseFileEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ResponseFileEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ResponseFileEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ ResponseFileEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-183">Recupera la classe <see cref="T:System.Text.Encoding" /> del file di risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-183">Gets the <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-184">La classe <see cref="T:System.Text.Encoding" /> del file di risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-184">The <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-185">La codifica è <xref:System.Text.Encoding.UTF8%2A> per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="7ef43-185">The encoding is <xref:System.Text.Encoding.UTF8%2A> by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFileEscape">
      <MemberSignature Language="C#" Value="protected virtual string ResponseFileEscape (string responseString);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ResponseFileEscape(string responseString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResponseFileEscape (responseString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ ResponseFileEscape(System::String ^ responseString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="responseString">
          <span data-ttu-id="7ef43-186">La stringa di risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-186">The response string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ef43-187">Metodo sottoponibile a override per uscire dal contenuto del file di risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-187">Overridable method to escape the content of the response file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-188">Restituisce la stringa di risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-188">Returns the response string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipTaskExecution">
      <MemberSignature Language="C#" Value="protected virtual bool SkipTaskExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SkipTaskExecution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SkipTaskExecution () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SkipTaskExecution();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-189">Indica se l'esecuzione dell'attività deve essere ignorata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-189">Indicates whether task execution should be skipped.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-190">
            <see langword="true" /> per saltare l'esecuzione dell'attività; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-190">
              <see langword="true" /> to skip task execution; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-191">Questo metodo viene chiamato dopo <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ef43-191">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding StandardErrorEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-192">Ottiene la classe <see cref="T:System.Text.Encoding" /> del flusso di errore standard dell'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-192">Gets the <see cref="T:System.Text.Encoding" /> of the standard error stream of the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-193">La classe <see cref="T:System.Text.Encoding" /> del file di risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-193">The <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-194">Output basato su console utilizza la tabella codici OEM di sistema corrente per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="7ef43-194">Console-based output uses the current system OEM code page by default.</span></span> <span data-ttu-id="7ef43-195">Si noti che è opportuno non utilizzare Console. OutputEncoding poiché i processi eseguiti non hanno molto a che fare con la finestra della console (e console. OutputEncoding non restituisce anche la tabella codici OEM se l'applicazione in esecuzione che ospita MSBuild non è un'applicazione console).</span><span class="sxs-lookup"><span data-stu-id="7ef43-195">Note that we should not use Console.OutputEncoding here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorImportance">
      <MemberSignature Language="C#" Value="public string StandardErrorImportance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardErrorImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportance" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorImportance As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardErrorImportance { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-196">Parametro attività: Importanza con cui registrare il testo dal flusso di errori standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-196">Task Parameter: Importance with which to log text from the standard error stream.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorImportanceToUse">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StandardErrorImportanceToUse As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Build::Framework::MessageImportance StandardErrorImportanceToUse { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-197">Ottiene l'importanza effettiva in base alla quale saranno registrati messaggi di errore standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-197">Gets the actual importance at which standard error messages will be logged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-198">Restituisce l'importanza effettiva in base alla quale saranno registrati messaggi di errore standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-198">Returns the actual importance at which standard error messages will be logged.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorLoggingImportance">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardErrorLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardErrorLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-199">Ottiene la classe <see cref="T:Microsoft.Build.Framework.MessageImportance" /> con cui registrare gli errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-199">Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-200">Classe <see cref="T:Microsoft.Build.Framework.MessageImportance" /> con cui registrare gli errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-200">The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding StandardOutputEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-201">Ottiene la classe <see cref="T:System.Text.Encoding" /> del flusso di output standard dell'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-201">Gets the <see cref="T:System.Text.Encoding" /> of the standard output stream of the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-202">La classe <see cref="T:System.Text.Encoding" /> del file di risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-202">The <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ef43-203">Output basato su console utilizza la tabella codici OEM di sistema corrente per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="7ef43-203">Console-based output uses the current system OEM code page by default.</span></span> <span data-ttu-id="7ef43-204">Si noti che è opportuno non utilizzare Console. OutputEncoding poiché i processi eseguiti non hanno molto a che fare con la finestra della console (e console. OutputEncoding non restituisce anche la tabella codici OEM se l'applicazione in esecuzione che ospita MSBuild non è un'applicazione console).</span><span class="sxs-lookup"><span data-stu-id="7ef43-204">Note that we should not use Console.OutputEncoding here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputImportance">
      <MemberSignature Language="C#" Value="public string StandardOutputImportance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardOutputImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportance" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputImportance As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardOutputImportance { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-205">Parametro attività: importanza con cui registrare il testo dal flusso di output standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-205">Task Parameter: Importance with which to log text from the standard out stream.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputImportanceToUse">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StandardOutputImportanceToUse As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Build::Framework::MessageImportance StandardOutputImportanceToUse { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-206">Ottiene l'importanza effettiva in base alla quale saranno registrati messaggi di output standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-206">Gets the actual importance at which standard out messages will be logged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-207">Restituisce l'importanza effettiva in base alla quale saranno registrati messaggi di output standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-207">Returns the actual importance at which standard out messages will be logged.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputLoggingImportance">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardOutputLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardOutputLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-208">Ottiene la classe <see cref="T:Microsoft.Build.Framework.MessageImportance" /> con cui registrare gli errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-208">Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-209">Classe <see cref="T:Microsoft.Build.Framework.MessageImportance" /> con cui registrare gli errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-209">The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskProcessTerminationTimeout">
      <MemberSignature Language="C#" Value="protected int TaskProcessTerminationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TaskProcessTerminationTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Property TaskProcessTerminationTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int TaskProcessTerminationTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-210">Timeout da attendere per il termine di un'attività prima che venga eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-210">A timeout to wait for a task to terminate before killing it.</span>
          </span>
          <span data-ttu-id="7ef43-211">In millisecondi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-211">In milliseconds.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-212">Ottiene o imposta l'intervallo di tempo, in millisecondi, trascorso il quale l'eseguibile dell'attività viene terminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-212">Gets or sets the amount of time after which the task executable is terminated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-213">Intervallo di timeout, espresso in millisecondi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-213">The time-out length, in milliseconds.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolCanceled">
      <MemberSignature Language="C#" Value="protected System.Threading.ManualResetEvent ToolCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.ManualResetEvent ToolCanceled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolCanceled" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ToolCanceled As ManualResetEvent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Threading::ManualResetEvent ^ ToolCanceled { System::Threading::ManualResetEvent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ManualResetEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-214">Utilizzato per segnalare quando uno strumento è stato annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-214">Used to signal when a tool has been cancelled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolExe">
      <MemberSignature Language="C#" Value="public virtual string ToolExe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolExe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolExe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolExe As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolExe { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-215">I progetti possono impostarlo per eseguire l'override di un ToolName di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-215">Projects may set this to override a task's ToolName.</span>
          </span>
          <span data-ttu-id="7ef43-216">Le attività possono eseguirne l'override per impedirlo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-216">Tasks may override this to prevent that.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="protected abstract string ToolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolName" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property ToolName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ ToolName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-217">Ottiene il nome del file eseguibile da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-217">Gets the name of the executable file to run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-218">Nome del file eseguibile da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-218">The name of the executable file to run.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ef43-219">Nell'esempio seguente viene creato un <xref:Microsoft.Build.Utilities.ToolTask> che esegue [Ilasm.exe (Assembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="7ef43-219">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="7ef43-220">Il <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, e <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classi vengono utilizzate per generare le informazioni necessarie per eseguire l'attività.</span><span class="sxs-lookup"><span data-stu-id="7ef43-220">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolPath">
      <MemberSignature Language="C#" Value="public string ToolPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-221">Ottiene o imposta il percorso del file eseguibile da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-221">Gets or sets the path of the executable file to run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-222">Percorso del file da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-222">The path of the file to run.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCommandProcessor">
      <MemberSignature Language="C#" Value="public bool UseCommandProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCommandProcessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.UseCommandProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCommandProcessor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCommandProcessor { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-223">Ottiene o imposta un'opzione che specifica se l'attività dello strumento creerà un file batch per la riga di comando e lo eseguirà utilizzando il processore dei comandi, anziché eseguire direttamente il comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-223">Gets or sets a switch that specifies whether the tool task will create a batch file for the command-line and execute that using the command-processor, rather than executing the command directly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-224">Se true, l'attività dello strumento creerà un file batch per la riga di comando e lo eseguirà utilizzando il processore dei comandi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-224">If true, the tool task will create a batch file for the command-line and execute that using the command-processor.</span>
          </span>
          <span data-ttu-id="7ef43-225">Se false, l'attività dello strumento eseguirà direttamente il comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-225">If false the tool task will execute the command directly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateParameters">
      <MemberSignature Language="C#" Value="protected internal virtual bool ValidateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ValidateParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ValidateParameters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ValidateParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ValidateParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-226">Indica se tutti i parametri dell'attività sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-226">Indicates whether all task paratmeters are valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ef43-227">
            <see langword="true" /> se tutti i parametri dell'attività sono validi; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-227">
              <see langword="true" /> if all task parameters are valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldDuringToolExecution">
      <MemberSignature Language="C#" Value="public bool YieldDuringToolExecution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool YieldDuringToolExecution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution" />
      <MemberSignature Language="VB.NET" Value="Public Property YieldDuringToolExecution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool YieldDuringToolExecution { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ef43-228">Indica se l'attività produrrà il nodo durante l'esecuzione dello strumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-228">Indicates if the task will yield the node during tool execution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ef43-229">True quando l'attività produrrà il nodo durante l'esecuzione dello strumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ef43-229">True when the task will yield the node during tool execution.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>