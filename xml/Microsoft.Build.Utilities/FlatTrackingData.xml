<Type Name="FlatTrackingData" FullName="Microsoft.Build.Utilities.FlatTrackingData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cdbbb77a77768b2ba275331c07120cdc64fb8664" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39921882" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FlatTrackingData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FlatTrackingData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.FlatTrackingData" />
  <TypeSignature Language="VB.NET" Value="Public Class FlatTrackingData" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlatTrackingData" />
  <TypeSignature Language="F#" Value="type FlatTrackingData = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="15776-101">Questa classe viene utilizzata per tenere traccia delle dipendenze del file durante una compilazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="15776-101">This class is used to track file dependencies during a build.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="15776-102">Crea una nuova istanza della classe utilizzata per tenere traccia delle dipendenze dei file durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-102">Creates a new instance of the class used to track file dependencies during a build.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), skipMissingFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, bool skipMissingFiles);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.FlatTrackingData : Microsoft.Build.Framework.ITaskItem[] * bool -&gt; Microsoft.Build.Utilities.FlatTrackingData" Usage="new Microsoft.Build.Utilities.FlatTrackingData (tlogFiles, skipMissingFiles)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="skipMissingFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tlogFiles">
          <span data-ttu-id="15776-103">File tlog .write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-103">The .write.</span>
          </span>
          <span data-ttu-id="15776-104">File tlog da interpretare</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-104">tlog files to interpret</span>
          </span>
        </param>
        <param name="skipMissingFiles">
          <span data-ttu-id="15776-105">Ignora i file che non esistono sul disco</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-105">Ignore files that do not exist on disk</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-106">Costruttore</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-106">Constructor</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, DateTime missingFileTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, valuetype System.DateTime missingFileTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), missingFileTimeUtc As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, DateTime missingFileTimeUtc);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.FlatTrackingData : Microsoft.Build.Framework.ITaskItem[] * DateTime -&gt; Microsoft.Build.Utilities.FlatTrackingData" Usage="new Microsoft.Build.Utilities.FlatTrackingData (tlogFiles, missingFileTimeUtc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="missingFileTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="tlogFiles">
          <span data-ttu-id="15776-107">File tlog .write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-107">The .write.</span>
          </span>
          <span data-ttu-id="15776-108">File tlog da interpretare</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-108">tlog files to interpret</span>
          </span>
        </param>
        <param name="missingFileTimeUtc">
          <span data-ttu-id="15776-109">DateTime che deve essere registrato per il file mancante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-109">The DateTime that should be recorded for missing file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-110">Costruttore</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-110">Constructor</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), skipMissingFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, bool skipMissingFiles);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.FlatTrackingData : Microsoft.Build.Framework.ITask * Microsoft.Build.Framework.ITaskItem[] * bool -&gt; Microsoft.Build.Utilities.FlatTrackingData" Usage="new Microsoft.Build.Utilities.FlatTrackingData (ownerTask, tlogFiles, skipMissingFiles)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="skipMissingFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask">
          <span data-ttu-id="15776-111">Attivit√† che utilizza lo strumento di rilevamento file</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-111">The task that is using file tracker</span>
          </span>
        </param>
        <param name="tlogFiles">
          <span data-ttu-id="15776-112">File tlog da interpretare</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-112">The tlog files to interpret</span>
          </span>
        </param>
        <param name="skipMissingFiles">
          <span data-ttu-id="15776-113">Ignora i file che non esistono sul disco</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-113">Ignore files that do not exist on disk</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-114">Costruttore</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-114">Constructor</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, DateTime missingFileTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, valuetype System.DateTime missingFileTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), missingFileTimeUtc As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, DateTime missingFileTimeUtc);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.FlatTrackingData : Microsoft.Build.Framework.ITask * Microsoft.Build.Framework.ITaskItem[] * DateTime -&gt; Microsoft.Build.Utilities.FlatTrackingData" Usage="new Microsoft.Build.Utilities.FlatTrackingData (ownerTask, tlogFiles, missingFileTimeUtc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="missingFileTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="ownerTask">
          <span data-ttu-id="15776-115">Attivit√† che utilizza lo strumento di rilevamento file</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-115">The task that is using file tracker</span>
          </span>
        </param>
        <param name="tlogFiles">
          <span data-ttu-id="15776-116">File tlog da interpretare</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-116">The tlog files to interpret</span>
          </span>
        </param>
        <param name="missingFileTimeUtc">
          <span data-ttu-id="15776-117">DateTime che deve essere registrato per il file mancante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-117">The DateTime that should be recorded for missing file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-118">Costruttore</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-118">Constructor</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, DateTime missingFileTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, valuetype System.DateTime missingFileTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), tlogFilesToIgnore As ITaskItem(), missingFileTimeUtc As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFilesToIgnore, DateTime missingFileTimeUtc);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.FlatTrackingData : Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * DateTime -&gt; Microsoft.Build.Utilities.FlatTrackingData" Usage="new Microsoft.Build.Utilities.FlatTrackingData (tlogFiles, tlogFilesToIgnore, missingFileTimeUtc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="tlogFilesToIgnore" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="missingFileTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="tlogFiles">
          <span data-ttu-id="15776-119">File tlog .write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-119">The .write.</span>
          </span>
          <span data-ttu-id="15776-120">File tlog da interpretare</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-120">tlog files to interpret</span>
          </span>
        </param>
        <param name="tlogFilesToIgnore">
          <span data-ttu-id="15776-121">TLog da ignorare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-121">The TLogs to ignore.</span>
          </span>
        </param>
        <param name="missingFileTimeUtc">
          <span data-ttu-id="15776-122">DateTime che deve essere registrato per il file mancante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-122">The DateTime that should be recorded for missing file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-123">Costruttore</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-123">Constructor</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, DateTime missingFileTimeUtc, string[] excludedInputPaths, System.Collections.Generic.IDictionary&lt;string,DateTime&gt; sharedLastWriteTimeUtcCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, valuetype System.DateTime missingFileTimeUtc, string[] excludedInputPaths, class System.Collections.Generic.IDictionary`2&lt;string, valuetype System.DateTime&gt; sharedLastWriteTimeUtcCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime,System.String[],System.Collections.Generic.IDictionary{System.String,System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), tlogFilesToIgnore As ITaskItem(), missingFileTimeUtc As DateTime, excludedInputPaths As String(), sharedLastWriteTimeUtcCache As IDictionary(Of String, DateTime))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFilesToIgnore, DateTime missingFileTimeUtc, cli::array &lt;System::String ^&gt; ^ excludedInputPaths, System::Collections::Generic::IDictionary&lt;System::String ^, DateTime&gt; ^ sharedLastWriteTimeUtcCache);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.FlatTrackingData : Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * DateTime * string[] * System.Collections.Generic.IDictionary&lt;string, DateTime&gt; -&gt; Microsoft.Build.Utilities.FlatTrackingData" Usage="new Microsoft.Build.Utilities.FlatTrackingData (tlogFiles, tlogFilesToIgnore, missingFileTimeUtc, excludedInputPaths, sharedLastWriteTimeUtcCache)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="tlogFilesToIgnore" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="missingFileTimeUtc" Type="System.DateTime" />
        <Parameter Name="excludedInputPaths" Type="System.String[]" />
        <Parameter Name="sharedLastWriteTimeUtcCache" Type="System.Collections.Generic.IDictionary&lt;System.String,System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="tlogFiles">
          <span data-ttu-id="15776-124">File tlog da interpretare</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-124">The .tlog files to interpret</span>
          </span>
        </param>
        <param name="tlogFilesToIgnore">
          <span data-ttu-id="15776-125">File tlog da ignorare</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-125">The .tlog files to ignore</span>
          </span>
        </param>
        <param name="missingFileTimeUtc">
          <span data-ttu-id="15776-126">Data e ora da registrare per il file mancante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-126">The date and time that should be recorded for missing file.</span>
          </span>
        </param>
        <param name="excludedInputPaths">
          <span data-ttu-id="15776-127">Set di percorsi contenenti i file da ignorare, comprese le sottodirectory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-127">The set of paths that contain files to be ignored, including any subdirectories.</span>
          </span>
        </param>
        <param name="sharedLastWriteTimeUtcCache">
          <span data-ttu-id="15776-128">Cache da usare che pu√≤ essere condivisa tra pi√π istanze di <c>FlatTrackingData</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-128">Cache to be used which can be shared between multiple <c>FlatTrackingData</c> instances.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-129">Costruttore</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-129">Constructor</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyTable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,DateTime&gt; DependencyTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype System.DateTime&gt; DependencyTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.DependencyTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyTable As IDictionary(Of String, DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, DateTime&gt; ^ DependencyTable { System::Collections::Generic::IDictionary&lt;System::String ^, DateTime&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyTable : System.Collections.Generic.IDictionary&lt;string, DateTime&gt;" Usage="Microsoft.Build.Utilities.FlatTrackingData.DependencyTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-130">Ottiene la tabella delle dipendenze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-130">Gets the dependency table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-131">Restituisce la tabella delle dipendenze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-131">Returns the dependency table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileIsExcludedFromDependencyCheck">
      <MemberSignature Language="C#" Value="public bool FileIsExcludedFromDependencyCheck (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FileIsExcludedFromDependencyCheck(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileIsExcludedFromDependencyCheck (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FileIsExcludedFromDependencyCheck(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.FileIsExcludedFromDependencyCheck : string -&gt; bool" Usage="flatTrackingData.FileIsExcludedFromDependencyCheck fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="15776-132">Nome del file da testare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-132">Name of the file to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-133">Restituisce <see langword="true" /> se il file specificato √® escluso dalla verifica delle dipendenze rilevate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-133">Returns <see langword="true" /> if the specified file is excluded from tracked dependency checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15776-134">
            <see langword="true" /> se il file √® escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-134">
              <see langword="true" /> if the file is excluded.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalizeTLogs">
      <MemberSignature Language="C#" Value="public static void FinalizeTLogs (bool trackedOperationsSucceeded, Microsoft.Build.Framework.ITaskItem[] readTLogNames, Microsoft.Build.Framework.ITaskItem[] writeTLogNames, Microsoft.Build.Framework.ITaskItem[] trackedFilesToRemoveFromTLogs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinalizeTLogs(bool trackedOperationsSucceeded, class Microsoft.Build.Framework.ITaskItem[] readTLogNames, class Microsoft.Build.Framework.ITaskItem[] writeTLogNames, class Microsoft.Build.Framework.ITaskItem[] trackedFilesToRemoveFromTLogs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(System.Boolean,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FinalizeTLogs (trackedOperationsSucceeded As Boolean, readTLogNames As ITaskItem(), writeTLogNames As ITaskItem(), trackedFilesToRemoveFromTLogs As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FinalizeTLogs(bool trackedOperationsSucceeded, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ readTLogNames, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ writeTLogNames, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ trackedFilesToRemoveFromTLogs);" />
      <MemberSignature Language="F#" Value="static member FinalizeTLogs : bool * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] -&gt; unit" Usage="Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs (trackedOperationsSucceeded, readTLogNames, writeTLogNames, trackedFilesToRemoveFromTLogs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trackedOperationsSucceeded" Type="System.Boolean" />
        <Parameter Name="readTLogNames" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="writeTLogNames" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="trackedFilesToRemoveFromTLogs" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="trackedOperationsSucceeded">
          <span data-ttu-id="15776-135">True indica che le operazioni rilevate hanno avuto esito positivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-135">True indicates that tracked operations succeeded.</span>
          </span>
        </param>
        <param name="readTLogNames">
          <span data-ttu-id="15776-136">TLog da leggere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-136">TLogs to be read.</span>
          </span>
        </param>
        <param name="writeTLogNames">
          <span data-ttu-id="15776-137">TLog da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-137">TLogs to be written.</span>
          </span>
        </param>
        <param name="trackedFilesToRemoveFromTLogs">
          <span data-ttu-id="15776-138">File rilevati da rimuovere da TLog.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-138">Tracked files to be removed from TLogs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-139">Comprime e finalizza i Tlog in base all'esito positivo dell'esecuzione rilevata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-139">Compact and finalize the Tlogs based on the success of the tracked execution.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15776-140">Dopo aver completate le operazioni rilevate quindi dobbiamo compact / finalizza i TLog in base all'esito positivo dell'esecuzione rilevata.</span><span class="sxs-lookup"><span data-stu-id="15776-140">Once tracked operations have been completed then we need to compact / finalize the Tlogs based on the success of the tracked execution.</span></span> <span data-ttu-id="15776-141">In caso contrario, √® quindi cancellare i TLog.</span><span class="sxs-lookup"><span data-stu-id="15776-141">If it fails, then we clean out the TLogs.</span></span> <span data-ttu-id="15776-142">Se ha esito positivo √® ripulire i file temporanei di tlog e scriverli nuovamente.</span><span class="sxs-lookup"><span data-stu-id="15776-142">If it succeeds then we clean temporary files from the TLogs and re-write them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastWriteTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime GetLastWriteTimeUtc (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetLastWriteTimeUtc(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastWriteTimeUtc (file As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetLastWriteTimeUtc(System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.GetLastWriteTimeUtc : string -&gt; DateTime" Usage="flatTrackingData.GetLastWriteTimeUtc file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file">
          <span data-ttu-id="15776-143">Nome del file</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-143">Name of the file</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-144">Restituisce il valore memorizzato nella cache per l'ultima scrittura del file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-144">Returns cached value for last write time of file.</span>
          </span>
          <span data-ttu-id="15776-145">Aggiorna la cache la prima volta in cui il file viene controllato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-145">Updates the cache the first            time the file is checked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15776-146">L'ora dell'ultima scrittura del file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-146">the last write time of the file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpToDate">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="15776-147">Controlla se i dati di rilevamento indicano che sia tutto aggiornato in base a UpToDateCheckType.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-147">Checks to see if the tracking data indicates that everything is up to date according to UpToDateCheckType.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpToDate">
      <MemberSignature Language="C#" Value="public static bool IsUpToDate (Microsoft.Build.Utilities.Task hostTask, Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, Microsoft.Build.Framework.ITaskItem[] readTLogNames, Microsoft.Build.Framework.ITaskItem[] writeTLogNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpToDate(class Microsoft.Build.Utilities.Task hostTask, valuetype Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, class Microsoft.Build.Framework.ITaskItem[] readTLogNames, class Microsoft.Build.Framework.ITaskItem[] writeTLogNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.Task,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpToDate(Microsoft::Build::Utilities::Task ^ hostTask, Microsoft::Build::Utilities::UpToDateCheckType upToDateCheckType, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ readTLogNames, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ writeTLogNames);" />
      <MemberSignature Language="F#" Value="static member IsUpToDate : Microsoft.Build.Utilities.Task * Microsoft.Build.Utilities.UpToDateCheckType * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate (hostTask, upToDateCheckType, readTLogNames, writeTLogNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostTask" Type="Microsoft.Build.Utilities.Task" />
        <Parameter Name="upToDateCheckType" Type="Microsoft.Build.Utilities.UpToDateCheckType" />
        <Parameter Name="readTLogNames" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="writeTLogNames" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="hostTask">
          <span data-ttu-id="15776-148">Attivit√† dell'host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-148">The host task.</span>
          </span>
        </param>
        <param name="upToDateCheckType">
          <span data-ttu-id="15776-149">UpToDateCheckType</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-149">UpToDateCheckType</span>
          </span>
        </param>
        <param name="readTLogNames">
          <span data-ttu-id="15776-150">Matrice di tlog di lettura</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-150">The array of read tlogs</span>
          </span>
        </param>
        <param name="writeTLogNames">
          <span data-ttu-id="15776-151">Matrice di tlog di scrittura</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-151">The array of write tlogs</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-152">Controlla se i dati di rilevamento indicano che sia tutto aggiornato in base a UpToDateCheckType.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-152">Checks to see if the tracking data indicates that everything is up to date according to UpToDateCheckType.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15776-153">Restituisce true se √® tutto aggiornato. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-153">Returns true if everything is up to date; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15776-154">Se le cose non sono aggiornate, i TLog vengono compattati per rimuovere tutte le voci in preparazione per rilevare nuovamente l'esecuzione del lavoro.</span><span class="sxs-lookup"><span data-stu-id="15776-154">If things are not up to date, then the TLogs are compacted to remove all entries in preparation to re-track execution of work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpToDate">
      <MemberSignature Language="C#" Value="public static bool IsUpToDate (Microsoft.Build.Utilities.TaskLoggingHelper Log, Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, Microsoft.Build.Utilities.FlatTrackingData inputs, Microsoft.Build.Utilities.FlatTrackingData outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpToDate(class Microsoft.Build.Utilities.TaskLoggingHelper Log, valuetype Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, class Microsoft.Build.Utilities.FlatTrackingData inputs, class Microsoft.Build.Utilities.FlatTrackingData outputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.TaskLoggingHelper,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Utilities.FlatTrackingData,Microsoft.Build.Utilities.FlatTrackingData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpToDate(Microsoft::Build::Utilities::TaskLoggingHelper ^ Log, Microsoft::Build::Utilities::UpToDateCheckType upToDateCheckType, Microsoft::Build::Utilities::FlatTrackingData ^ inputs, Microsoft::Build::Utilities::FlatTrackingData ^ outputs);" />
      <MemberSignature Language="F#" Value="static member IsUpToDate : Microsoft.Build.Utilities.TaskLoggingHelper * Microsoft.Build.Utilities.UpToDateCheckType * Microsoft.Build.Utilities.FlatTrackingData * Microsoft.Build.Utilities.FlatTrackingData -&gt; bool" Usage="Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate (Log, upToDateCheckType, inputs, outputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Log" Type="Microsoft.Build.Utilities.TaskLoggingHelper" />
        <Parameter Name="upToDateCheckType" Type="Microsoft.Build.Utilities.UpToDateCheckType" />
        <Parameter Name="inputs" Type="Microsoft.Build.Utilities.FlatTrackingData" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.FlatTrackingData" />
      </Parameters>
      <Docs>
        <param name="Log">
          <span data-ttu-id="15776-155">TaskLoggingHelper dall'attivit√† dell'host</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-155">TaskLoggingHelper from the host task</span>
          </span>
        </param>
        <param name="upToDateCheckType">
          <span data-ttu-id="15776-156">UpToDateCheckType da utilizzare</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-156">UpToDateCheckType to use</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="15776-157">Struttura FlatTrackingData che contiene gli input</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-157">FlatTrackingData structure containing the inputs</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="15776-158">Struttura FlatTrackingData che contiene gli output</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-158">FlatTrackingData structure containing the outputs</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-159">Controllo semplice dello stato di aggiornamento in base ai dati di rilevamento e a UpToDateCheckType.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-159">Simple check of up to date state according to the tracking data and the UpToDateCheckType.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15776-160">Restituisce true se √® tutto aggiornato. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-160">Returns true if everything is up to date; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15776-161">Nessun log di rilevamento verr√† eseguita la compattazione di dati quando si utilizza questo overload</span><span class="sxs-lookup"><span data-stu-id="15776-161">No tracking log compaction will take place when using this overload</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; MissingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; MissingFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.MissingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingFiles As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ MissingFiles { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::List&lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MissingFiles : System.Collections.Generic.List&lt;string&gt; with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.MissingFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-162">Ottiene o imposta i file mancanti rilevati nel TLog</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-162">Gets or sets missing files that have been detected in the TLog</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-163">Restituisce i file mancanti rilevati nel TLog</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-163">Returns missing files that have been detected in the TLog</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestFileName">
      <MemberSignature Language="C#" Value="public string NewestFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewestFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewestFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewestFileName : string with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.NewestFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-164">Ottiene o imposta il percorso del file visualizzato pi√π recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-164">Gets or sets the path for the newest file we have seen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-165">Restituisce il percorso del file visualizzato pi√π recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-165">Returns the path for the newest file we have seen.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestFileTime">
      <MemberSignature Language="C#" Value="public DateTime NewestFileTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NewestFileTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestFileTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NewestFileTime { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.NewestFileTime : DateTime with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-166">Ottiene o imposta l'ora del file visualizzato pi√π recente</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-166">Gets or sets the time for the newest file we have seen</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-167">Restituisce l'ora del file visualizzato pi√π recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-167">Returns the time for the newest file we have seen.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestFileTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime NewestFileTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NewestFileTimeUtc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestFileTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NewestFileTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.NewestFileTimeUtc : DateTime with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-168">Ottiene o imposta l'ora UTC del file visualizzato pi√π recente</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-168">Gets or sets the UTC time for the newest file we have seen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-169">Restituisce l'ora UTC del file visualizzato pi√π recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-169">Returns the UTC time for the newest file we have seen.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestTLogFileName">
      <MemberSignature Language="C#" Value="public string NewestTLogFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewestTLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestTLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewestTLogFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewestTLogFileName : string with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-170">Ottiene o imposta il percorso del file TLog pi√π recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-170">Gets or sets the path of the newest TLog file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-171">Restituisce il percorso del file TLog pi√π recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-171">Returns the path of the newest TLog file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestTLogTime">
      <MemberSignature Language="C#" Value="public DateTime NewestTLogTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NewestTLogTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestTLogTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NewestTLogTime { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.NewestTLogTime : DateTime with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-172">Ottiene o imposta l'ora del TLog pi√π recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-172">Gets or sets the time of the newest Tlog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-173">Restituisce l'ora del TLog pi√π recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-173">Returns the time of the newest Tlog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestTLogTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime NewestTLogTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NewestTLogTimeUtc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestTLogTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NewestTLogTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.NewestTLogTimeUtc : DateTime with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-174">Ottiene o imposta l'ora UTC del TLog pi√π recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-174">Gets or sets the UTC time of the newest Tlog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-175">Restituisce l'ora del TLog pi√π recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-175">Returns the time of the newest Tlog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldestFileName">
      <MemberSignature Language="C#" Value="public string OldestFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldestFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property OldestFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldestFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldestFileName : string with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.OldestFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-176">Ottiene o imposta il percorso del file visualizzato meno recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-176">Gets or sets the path for the oldest file we have seen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-177">Restituisce il percorso del file visualizzato meno recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-177">Returns the path for the oldest file we have seen.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldestFileTime">
      <MemberSignature Language="C#" Value="public DateTime OldestFileTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime OldestFileTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Property OldestFileTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime OldestFileTime { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.OldestFileTime : DateTime with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-178">Ottiene o imposta l'ora del file visualizzato meno recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-178">Gets or sets the time for the oldest file we have seen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-179">Restituisce l'ora del file visualizzato meno recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-179">Returns the time for the oldest file we have seen.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldestFileTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime OldestFileTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime OldestFileTimeUtc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property OldestFileTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime OldestFileTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.OldestFileTimeUtc : DateTime with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-180">Ottiene o imposta l'ora UTC del file visualizzato meno recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-180">Gets or sets the UTC time for the oldest file we have seen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-181">Restituisce l'ora UTC del file visualizzato meno recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-181">Returns the UTC time for the oldest file we have seen.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveTlog">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="15776-182">Questo metodo scrive nuovamente i tlog dalla tabella di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-182">This method re-writes the tlogs from the output table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveTlog">
      <MemberSignature Language="C#" Value="public void SaveTlog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTlog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.SaveTlog" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveTlog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveTlog();" />
      <MemberSignature Language="F#" Value="member this.SaveTlog : unit -&gt; unit" Usage="flatTrackingData.SaveTlog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="15776-183">Questo metodo scriver√† nuovamente i tlog dalla tabella di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-183">This method will re-write the tlogs from the output table.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveTlog">
      <MemberSignature Language="C#" Value="public void SaveTlog (Microsoft.Build.Utilities.DependencyFilter includeInTLog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTlog(class Microsoft.Build.Utilities.DependencyFilter includeInTLog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveTlog (includeInTLog As DependencyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveTlog(Microsoft::Build::Utilities::DependencyFilter ^ includeInTLog);" />
      <MemberSignature Language="F#" Value="member this.SaveTlog : Microsoft.Build.Utilities.DependencyFilter -&gt; unit" Usage="flatTrackingData.SaveTlog includeInTLog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeInTLog" Type="Microsoft.Build.Utilities.DependencyFilter" />
      </Parameters>
      <Docs>
        <param name="includeInTLog">
          <span data-ttu-id="15776-184">Filtro delle dipendenze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-184">The dependency filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15776-185">Questo metodo scriver√† nuovamente i tlog dalla tabella corrente</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-185">This method will re-write the tlogs from the current table</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipMissingFiles">
      <MemberSignature Language="C#" Value="public bool SkipMissingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipMissingFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipMissingFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipMissingFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipMissingFiles : bool with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-186">Ottiene o imposta un'opzione che specifica se i file nel TLog, che non esistono pi√π, devono essere ignorati o registrati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-186">Gets or sets a switch that specifies whether files in the TLog, but which no longer exist, be skipped or recorded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-187">Restituisce l'opzione che specifica se i file nel TLog, che non esistono pi√π, devono essere ignorati o registrati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-187">Returns the switch that specifies whether files in the TLog, but which no longer exist, be skipped or recorded.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TlogFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] TlogFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] TlogFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.TlogFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property TlogFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ TlogFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TlogFiles : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.TlogFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-188">Ottiene o imposta i file TLog che supportano questa struttura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-188">Gets or sets the TLog files that back this structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-189">Restituisce i file TLog che supportano questa struttura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-189">Returns the TLog files that back this structure.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TlogsAvailable">
      <MemberSignature Language="C#" Value="public bool TlogsAvailable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TlogsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Property TlogsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TlogsAvailable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TlogsAvailable : bool with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-190">Ottiene o imposta un'opzione che specifica se tutti i TLog passati sono disponibili su disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-190">Gets or sets a switch that specifies whether all the TLogs that were passed to us are available on disk.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-191">Restituisce un'opzione che specifica se tutti i TLog passati sono disponibili su disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-191">Returns a switch that specifies whether all the TLogs that were passed to us are available on disk.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TreatRootMarkersAsEntries">
      <MemberSignature Language="C#" Value="public bool TreatRootMarkersAsEntries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatRootMarkersAsEntries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatRootMarkersAsEntries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatRootMarkersAsEntries { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatRootMarkersAsEntries : bool with get, set" Usage="Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15776-192">Ottiene o imposta un'opzione che specifica se i marcatori radice nel TLog vengono considerati come accessi al file o solo come marcatori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-192">Gets or sets a switch that specifies whether root markers in the TLog be treated as file accesses, or only as markers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15776-193">Restituisce un'opzione che specifica se i marcatori radice nel TLog vengono considerati come accessi al file o solo come marcatori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-193">Returns a switch that specifies whether root markers in the TLog be treated as file accesses, or only as markers.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFileEntryDetails">
      <MemberSignature Language="C#" Value="public void UpdateFileEntryDetails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateFileEntryDetails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateFileEntryDetails ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateFileEntryDetails();" />
      <MemberSignature Language="F#" Value="member this.UpdateFileEntryDetails : unit -&gt; unit" Usage="flatTrackingData.UpdateFileEntryDetails " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="15776-194">Aggiornare lo stato corrente dei dettagli delle voci della tabella delle dipendenze</span>
          <span class="sxs-lookup">
            <span data-stu-id="15776-194">Update the current state of entry details for the dependency table</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>