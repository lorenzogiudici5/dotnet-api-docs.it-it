<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e34519610d0990efa2cce607f5089d6850005cd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30337255" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2725d-101">Rappresenta un logger di multiplexing.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2725d-101">Represents a multiplexing logger.</span>
      </span>
      <span data-ttu-id="2725d-102">Lo scopo di questo logger è di eseguire e annullare la registrazione dei logger più durante la compilazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2725d-102">The purpose of this logger is to register and unregister multiple loggers during the build.</span>
      </span>
      <span data-ttu-id="2725d-103">Supporta lo scenario IDE di Visual Studio in cui i logger vengono registrati e annullati per la richiesta di compilazione di ogni sistema di progetto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2725d-103">Supports the Visual Studio IDE scenario in which loggers are registered and unregistered for each project system’s build request.</span>
      </span>
      <span data-ttu-id="2725d-104">Una compilazione fisica può avere più compilazioni logiche, ciascuna dotata di un set di logger.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2725d-104">One physical build can have multiple logical builds, each with its own set of loggers.</span>
      </span>
      <span data-ttu-id="2725d-105">L'elemento <see langword="MuxLogger" /> è registrato con il gestore di compilazione come logger di stile centrale /l normale.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2725d-105">The <see langword="MuxLogger" /> registers itself with the build manager as a regular central /l style logger.</span>
      </span>
      <span data-ttu-id="2725d-106">Riceve messaggi dal gestore compilazioni e li indirizza al logger corretto, in base alla compilazione logica da cui è provenuto il messaggio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2725d-106">It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2725d-107">Il `MuxLogger` in genere funziona nel modo seguente:</span><span class="sxs-lookup"><span data-stu-id="2725d-107">The `MuxLogger` generally functions as follows:</span></span>  
  
-   <span data-ttu-id="2725d-108">Il `MuxLogger` viene registrato all'inizio della compilazione di inizio del gestore compilazioni.</span><span class="sxs-lookup"><span data-stu-id="2725d-108">The `MuxLogger` is registered at the beginning of the build manager’s Begin build.</span></span>  
  
     <span data-ttu-id="2725d-109">Tutti i logger registrati prima dell'avvio della compilazione al gestore compilazioni ottenere l'evento di compilazione avviata allo stesso tempo come il `MuxLogger`.</span><span class="sxs-lookup"><span data-stu-id="2725d-109">Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.</span></span>  
  
     <span data-ttu-id="2725d-110">Tutti i logger registrati dopo il gestore di compilazione viene avviata la compilazione di ottenere un evento di compilazione avviata sintetizzato.</span><span class="sxs-lookup"><span data-stu-id="2725d-110">Any loggers registered after the build manager starts the build get a synthesized build-started event.</span></span> <span data-ttu-id="2725d-111">L'evento non può essere memorizzato nella cache perché il timestamp dell'evento di compilazione avviata viene determinato quando viene creato l'evento e la memorizzazione nella cache l'evento concederebbe tempi di compilazione non corretto nel logger registrato per il `MuxLogger`.</span><span class="sxs-lookup"><span data-stu-id="2725d-111">The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.</span></span>  
  
-   <span data-ttu-id="2725d-112">Il `MuxLogger` viene inizializzata dal gestore di compilazione</span><span class="sxs-lookup"><span data-stu-id="2725d-112">The `MuxLogger` is initialized by the build manager</span></span>  
  
     <span data-ttu-id="2725d-113">Il `MuxLogger` ascolta a tutti gli eventi nell'origine evento dal gestore di compilazione e indirizza gli eventi correttamente per il logger registrati.</span><span class="sxs-lookup"><span data-stu-id="2725d-113">The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</span></span>  
  
-   <span data-ttu-id="2725d-114">Il `MuxLogger` viene arrestato al termine della compilazione nella build finale.</span><span class="sxs-lookup"><span data-stu-id="2725d-114">The `MuxLogger` is shutdown when the build is finished in end build.</span></span> <span data-ttu-id="2725d-115">A questo punto, Annulla la registrazione di tutti i logger associati.</span><span class="sxs-lookup"><span data-stu-id="2725d-115">At this time, it unregisters any loggers attached to it.</span></span>  
  
-   <span data-ttu-id="2725d-116">Il `MuxLogger` registra l'evento di compilazione terminata quando l'evento progetto completato per il primo evento di avvio al progetto viene visualizzato per ogni tipo di logger.</span><span class="sxs-lookup"><span data-stu-id="2725d-116">The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</span></span>  
  
 <span data-ttu-id="2725d-117">Il `MuxLogger` registra logger nel modo seguente:</span><span class="sxs-lookup"><span data-stu-id="2725d-117">The `MuxLogger` registers loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="2725d-118">Il logger è passato per il `MuxLogger.RegisterLogger` metodo con un ID di invio che viene utilizzato per indirizzare un messaggio a logger.</span><span class="sxs-lookup"><span data-stu-id="2725d-118">The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.</span></span>  
  
2.  <span data-ttu-id="2725d-119">Il `MuxLogger` registra il logger per il `MuxLogger` origine evento.</span><span class="sxs-lookup"><span data-stu-id="2725d-119">The `MuxLogger` registers the logger to the `MuxLogger` event source.</span></span>  
  
3.  <span data-ttu-id="2725d-120">Se è già stato registrato l'evento di compilazione avviata, il `MuxLogger` crea un nuovo evento di compilazione avviata e lo invia all'origine evento del logger.</span><span class="sxs-lookup"><span data-stu-id="2725d-120">If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger’s event source.</span></span>  
  
 <span data-ttu-id="2725d-121">Il `MuxLogger` Annulla la registrazione di logger nel modo seguente:</span><span class="sxs-lookup"><span data-stu-id="2725d-121">The `MuxLogger` unregisters loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="2725d-122">Al termine dell'invio di una compilazione, il `MuxLogger.UnregisterLogger` metodo viene chiamato con l'ID di invio per il logger.</span><span class="sxs-lookup"><span data-stu-id="2725d-122">When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.</span></span>  
  
2.  <span data-ttu-id="2725d-123">Il `MuxLogger` Cerca lo stato di esito positivo dell'evento progetto completato per l'ID di invio e registra un evento di compilazione-è stata completata per il logger.</span><span class="sxs-lookup"><span data-stu-id="2725d-123">The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</span></span>  
  
3.  <span data-ttu-id="2725d-124">Il `MuxLogger` Pulisce l'origine evento.</span><span class="sxs-lookup"><span data-stu-id="2725d-124">The `MuxLogger` cleans up the event source.</span></span>  
  
     <span data-ttu-id="2725d-125">Si noti che l'annullamento della registrazione proviene da un thread diverso da quello di registrazione e un problema di sincronizzazione può verificarsi se l'annullamento della registrazione viene chiamato durante gli eventi vengono registrati.</span><span class="sxs-lookup"><span data-stu-id="2725d-125">Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2725d-126">Crea una nuova istanza del logger di multiplexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-126">Creates a new instance of the multiplexing logger.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2725d-127">Inizializza l'istanza di <see langword="MuxLogger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-127">Initializes the <see langword="MuxLogger" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="2725d-128">Origine evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-128">The event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2725d-129">Inizializzare l'istanza <see langword="MuxLogger" /> con l'origine evento specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-129">Initialize the <see langword="MuxLogger" /> instance with the specified event source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="2725d-130">Origine evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-130">The event source.</span>
          </span>
        </param>
        <param name="maxNodeCount">
          <span data-ttu-id="2725d-131">Numero massimo di nodi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-131">The maximum number of nodes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2725d-132">Inizializzare l'istanza <see langword="MuxLogger" /> con l'origine evento e il numero massimo di nodi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-132">Initialize the <see langword="MuxLogger" /> instance with the specified event source and specified maximum number of nodes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2725d-133">Ottiene e imposta l'attributo Parameters, richiesto dall'interfaccia <see langword="ILogger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-133">Gets and sets the Parameters attribute, required by the <see langword="ILogger" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2725d-134">Restituisce l'attributo Parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-134">Returns the Parameters attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId">
          <span data-ttu-id="2725d-135">L'ID dell'invio del logger registrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-135">The submission ID of the logger being registered.</span>
          </span>
        </param>
        <param name="logger">
          <span data-ttu-id="2725d-136">Il logger da registrare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-136">The logger to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2725d-137">Registra un logger in <see langword="MuxLogger" /> e genera un evento avviato dalla compilazione se tale evento è già stato registrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-137">Registers a logger on the <see langword="MuxLogger" /> and raises a build-started event if the build-started event has already been logged.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2725d-138">Arresta <see langword="MuxLogger" /> e cancella tutti gli stati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-138">Shuts down the <see langword="MuxLogger" /> and clears out any state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId">
          <span data-ttu-id="2725d-139">L'ID dell'invio del logger da eliminare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-139">The submission ID of the logger to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2725d-140">Rimuove il logger specificato da MuxLogger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-140">Removes the specified logger from the MuxLogger.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2725d-141">Restituisce <see langword="true" /> se il metodo ha esito positivo quando si rimuove il logger; in caso contrario, restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-141">Returns <see langword="true" /> if the method is successful in removing the logger, otherwise, returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2725d-142">Ottiene e imposta l'attributo Verbosity, richiesto dall'interfaccia <see langword="ILogger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-142">Gets and sets the Verbosity attribute, required by the <see langword="ILogger" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2725d-143">Restituisce l'attributo Verbosity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2725d-143">Returns the Verbosity attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>