<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe449848bcdce05ca59b27ae4a3b23e50137f9b6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30657975" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un servizio che indica le relazioni tra oggetti e proprietà situazionali per la valutazione dell'estensione di markup.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IProvideValueTarget> rappresenta un servizio che riporta informazioni riguardo la struttura di proprietà dell'oggetto che circonda in cui viene richiamato un convertitore di valori.  
  
 Convertitori di tipi ed estensioni di markup possono eseguire query per <xref:System.Windows.Markup.IProvideValueTarget> come servizio nel contesto del servizio fornito da un writer di oggetti XAML, quando il writer di oggetti XAML richiama il comportamento di conversione di valori. Per ulteriori informazioni, vedere [convertitori di tipi ed estensioni di Markup per XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) e [contesti di servizio disponibili per convertitori di tipi ed estensioni di Markup](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Per le estensioni di markup in particolare, uno scenario in cui <xref:System.Windows.Markup.IProvideValueTarget> è utile per determinare la validità dell'utilizzo dell'estensione di markup. Ad esempio, l'estensione di markup potrebbe implementare un meccanismo di rinvio di valore, ma tale meccanismo di utilizzo potrebbe essere adatto solo se l'oggetto di destinazione è in grado di utilizzare altri componenti del meccanismo di rinvio in fase di esecuzione. È possibile controllare le caratteristiche di sistema di tipi di oggetto restituito come <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> e assicurarsi che l'oggetto supporta la tecnica di esclusione. In questo caso, l'estensione di markup restituisce un valore e in caso contrario, l'estensione di markup genera un'eccezione che verrà prelevata come eccezione interna da un writer di oggetti XAML. Uno scenario simile consiste nel verificare che una determinata proprietà supporti una funzionalità, controllando le caratteristiche di sistema di tipi del <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.  
  
 Anche se il nome dell'API <xref:System.Windows.Markup.IProvideValueTarget> potrebbe implicare un'associazione con <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, le informazioni restituite da <xref:System.Windows.Markup.IProvideValueTarget> può anche essere utile per un <xref:System.ComponentModel.TypeConverter> o <xref:System.Windows.Markup.ValueSerializer>. Oggetto <xref:System.ComponentModel.TypeConverter> o <xref:System.Windows.Markup.ValueSerializer> in genere più contesto rispetto a un'estensione di markup poiché è dedicato a un particolare tipo di destinazione o una proprietà di destinazione e pertanto la validità situazionale viene in genere stimabile nel sistema di tipi. Tuttavia, esistono altri scenari. Di seguito è riportato un elenco di alcuni scenari che potrebbero essere implementati da un convertitore di tipi o un'estensione di markup:  
  
-   Ottenere <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> per leggere i valori dell'istanza di altre proprietà sull'oggetto. Si noti che la gestione qui debbano essere affidabili per i valori non impostati, perché l'ordine di elaborazione di membri XAML nell'oggetto di destinazione può essere non deterministico.  
  
-   Ottenere <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> per leggere i metadati a livello di tipo o per verificare che le interfacce richieste sono implementate dal tipo.  
  
-   Ottenere <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> per leggere i metadati della proprietà.  
  
 Uno scenario consiste nell'utilizzare <xref:System.Windows.Markup.IProvideValueTarget> informazioni limite quali oggetti o proprietà che possono essere impostati dall'estensione di markup.  
  
 Prima di tentare di utilizzare il servizio, assicurarsi che il servizio stesso non sia `null` quando restituito dal parametro del provider servizio rilevanti in uso per il contesto.  
  
> [!IMPORTANT]
>  Quando si utilizza il servizio, è particolarmente importante non modificare l'oggetto a cui fa riferimento il <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> proprietà o altri oggetti a cui fa riferimento l'oggetto. Per WPF in particolare, queste modifiche potrebbero provocare modifiche impreviste invalidare il sistema di proprietà WPF.  
  
> [!NOTE]
>  Non utilizzare il tipo di <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> per determinare quale preciso tipo di un convertitore di tipo o estensione di markup deve restituire. Che non è consigliata. Il tipo restituito deve essere coerenza con l'attribuzione (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> per le estensioni di markup) o i modelli (nome della classe del convertitore di tipi).  
  
 Nelle versioni precedenti di .NET Framework, questa interfaccia esisteva nell'assembly WindowsBase di specifiche di WPF. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> nell'assembly System. Xaml. Per ulteriori informazioni, vedere [tipi migrati da WPF a System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Note sull'utilizzo di WPF  
 Questo servizio supporta funzionalità di framework, ad esempio l'associazione in una proprietà di dipendenza.  
  
 In WPF, il servizio rappresentato da <xref:System.Windows.Markup.IProvideValueTarget> può restituire gli oggetti e proprietà per le situazioni in cui il valore da restituire da un convertitore di tipo o estensione di markup dipende dal contesto.  
  
 <xref:System.Windows.Markup.IProvideValueTarget> è ampiamente utilizzato nell'implementazione interna del <xref:System.Windows.Data.BindingBase>, la classe che implementa il meccanismo di associazione per le proprietà di dipendenza in WPF.  
  
 Un provider di servizi interno predefinito per WPF implementa <xref:System.Windows.Markup.IProvideValueTarget> per l'utilizzo da parte di un convertitore di estensione o il tipo di markup personalizzata. L'oggetto e proprietà segnalato da <xref:System.Windows.Markup.IProvideValueTarget> può essere impostata solo dal servizio WPF interno. Oltre a questa definizione della procedura <xref:System.Windows.Markup.IProvideValueTarget> opera richiederebbe la definizione di un provider di servizi per gli utilizzi convertitore estensione e il tipo di markup che implementa almeno il <xref:System.Windows.Markup.IProvideValueTarget> e <xref:System.Windows.Markup.IXamlTypeResolver> servizi e che è un avanzato scenario non descritte di seguito.  
  
 Un valore null per <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> o <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> non significa necessariamente che non può agire un convertitore di tipo o estensione di markup, sebbene che dipende dall'implementazione. Un esempio in cui i valori da <xref:System.Windows.Markup.IProvideValueTarget> sono null anche se è disponibile il servizio è se l'estensione di markup viene nidificata all'interno di un'altra estensione di markup, ad esempio un <xref:System.Windows.Data.Binding>. Un'implementazione che si basa su <xref:System.Windows.Markup.IProvideValueTarget> deve verificare sempre i valori null solo se allo scopo di generare un'eccezione specifica, se è la progettazione desiderata.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto di destinazione da segnalare.</summary>
        <value>Oggetto di destinazione da segnalare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito da <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> riferimento effettivo, non è un identificatore di tipo di sistema o altri identificatori. Il valore può anche essere `null`; vedere <xref:System.Windows.Markup.IProvideValueTarget>.  
  
> [!IMPORTANT]
>  Quando si utilizza il servizio, è particolarmente importante non modificare l'oggetto a cui fa riferimento il <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> proprietà o altri oggetti a cui fa riferimento l'oggetto come proprietà che non sono in particolare la conversione di valori caso si siano gestendo. Per WPF in particolare, modificare l'oggetto di destinazione potrebbe causare modifiche impreviste invalidare il sistema di proprietà WPF.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un identificatore per la proprietà di destinazione indicata.</summary>
        <value>Identificatore per la proprietà di destinazione indicata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore può anche essere `null`; vedere <xref:System.Windows.Markup.IProvideValueTarget>.  
  
## <a name="wpf-usage-notes"></a>Note sull'utilizzo di WPF  
 Per una proprietà di dipendenza, il servizio WPF predefinito può restituire un <xref:System.Windows.DependencyProperty>, in modo che il convertitore di tipo o estensione di markup può utilizzare i metadati. In caso contrario, l'oggetto restituito può essere un <xref:System.Reflection.PropertyInfo> per una proprietà CLR.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>