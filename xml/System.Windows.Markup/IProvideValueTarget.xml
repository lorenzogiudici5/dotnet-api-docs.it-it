<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d72e415413f8ade185f1b1d6b314e24485b6e485" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39795633" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un servizio che indica le relazioni tra oggetti e proprietà situazionali per la valutazione dell'estensione di markup.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IProvideValueTarget> rappresenta un servizio che segnala informazioni riguardanti la struttura oggetto-proprietà circostante in cui viene richiamato un convertitore di valori.  
  
 Cercare i convertitori di tipi ed estensioni di markup <xref:System.Windows.Markup.IProvideValueTarget> come servizio nel contesto del servizio fornita da un writer di oggetti XAML, quando il writer di oggetti XAML richiama il comportamento di conversione di valori. Per altre informazioni, vedere [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) e [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Per le estensioni di markup in particolare, uno scenario in cui <xref:System.Windows.Markup.IProvideValueTarget> è utile consiste nel determinare la validità dell'utilizzo dell'estensione di markup. Ad esempio, l'estensione di markup può implementare un meccanismo di differimento di valore, ma usando tale meccanismo potrebbe essere adatto solo se l'oggetto di destinazione è in grado di utilizzare altri componenti del meccanismo di rinvio in fase di esecuzione. È possibile controllare le caratteristiche di sistema di tipo dell'oggetto restituito come <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> e assicurarsi che l'oggetto supporta la tecnica di rinvio. In questo caso, l'estensione di markup restituisce un valore e in caso contrario, l'estensione di markup viene generata un'eccezione che verrà prelevata come eccezione interna da un writer di oggetti XAML. Uno scenario simile consiste nel verificare che una particolare proprietà supporti una funzionalità, controllando le caratteristiche di sistema di tipi del <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.  
  
 Anche se il nome dell'API <xref:System.Windows.Markup.IProvideValueTarget> potrebbe implicare un'associazione con <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, le informazioni segnalate dal <xref:System.Windows.Markup.IProvideValueTarget> può anche essere utile un <xref:System.ComponentModel.TypeConverter> o <xref:System.Windows.Markup.ValueSerializer>. Oggetto <xref:System.ComponentModel.TypeConverter> o <xref:System.Windows.Markup.ValueSerializer> hanno in genere più rapida rispetto a un'estensione di markup perché è dedicato a un particolare tipo di destinazione o una proprietà di destinazione ed è pertanto la validità consapevolezza solitamente prevedibile nel sistema di tipi. Tuttavia, esistono altri scenari. Di seguito è riportato un elenco di alcuni scenari in cui può essere implementato un convertitore di tipi o un'estensione di markup:  
  
-   Ottenere <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> per leggere i valori di istanza di altre proprietà in quell'oggetto. Si noti che la gestione qui potrebbero dover essere affidabili per i valori non impostati, poiché l'ordine di elaborazione dei membri XAML dell'oggetto di destinazione può essere non deterministico.  
  
-   Ottenere <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> per leggere i metadati a livello di tipo o per verificare che le interfacce richieste sono implementate dal tipo.  
  
-   Ottenere <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> per leggere i metadati della proprietà.  
  
 Uno scenario consiste nell'usare <xref:System.Windows.Markup.IProvideValueTarget> informazioni al limite quali oggetti o proprietà che possono essere impostati dall'estensione di markup.  
  
 Prima di provare a usare il servizio, assicurarsi che il servizio stesso non `null` quando restituito dal parametro del provider servizio pertinente in uso per il contesto.  
  
> [!IMPORTANT]
>  Quando si usa il servizio, è particolarmente importante non modificare l'oggetto fa riferimento il <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> proprietà o altri oggetti di cui viene fatto riferimento da tale oggetto. Per WPF in particolare, queste modifiche potrebbero provocare modifiche impreviste che rischiano di compromettere il sistema di proprietà WPF.  
  
> [!NOTE]
>  Non usare il tipo di <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> per determinare quale preciso tipo un convertitore di tipo o estensione di markup deve restituire. Non è consigliata. Il tipo restituito deve essere coerenza con l'attribuzione (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> per le estensioni di markup) o i modelli (nome classe del convertitore di tipi).  
  
 Nelle versioni precedenti di .NET Framework, questa interfaccia esistenti nell'assembly WindowsBase di specifiche di WPF. Nelle [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> è incluso nell'assembly System. Xaml. Per altre informazioni, vedere [tipi migrati da WPF a System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Note sull'utilizzo di WPF  
 Questo servizio supporta funzionalità framework, ad esempio binding su una proprietà di dipendenza.  
  
 In WPF, il servizio rappresentato da <xref:System.Windows.Markup.IProvideValueTarget> può restituire gli oggetti e proprietà per le situazioni in cui il valore da restituire da un convertitore di tipo o estensione di markup dipende dal contesto.  
  
 <xref:System.Windows.Markup.IProvideValueTarget> è ampiamente utilizzato nell'implementazione interna di <xref:System.Windows.Data.BindingBase>, la classe che implementa il meccanismo di associazione delle proprietà di dipendenza in WPF.  
  
 Un provider di servizi interna predefinito per WPF implementa <xref:System.Windows.Markup.IProvideValueTarget> per l'utilizzo da parte di un convertitore di estensione o il tipo di markup personalizzata. L'oggetto e proprietà segnalate da <xref:System.Windows.Markup.IProvideValueTarget> può essere impostato solo dal servizio di WPF interno. Questa definizione di procedura a oltrepassare <xref:System.Windows.Markup.IProvideValueTarget> opera sarebbe necessario definire il proprio provider di servizi per gli utilizzi del convertitore estensione e il tipo di markup che implementa almeno il <xref:System.Windows.Markup.IProvideValueTarget> e <xref:System.Windows.Markup.IXamlTypeResolver> servizi e che è un avanzato scenario in cui non è descritto di seguito.  
  
 Un valore null per <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> o <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> non significa necessariamente che non può agire un convertitore di tipo o estensione di markup, benché che dipende dall'implementazione. Un esempio di caso in cui i valori da <xref:System.Windows.Markup.IProvideValueTarget> sono null anche se il servizio è disponibile, è se l'estensione di markup viene nidificata all'interno di un'altra estensione di markup, ad esempio un <xref:System.Windows.Data.Binding>. Un'implementazione che si basa su <xref:System.Windows.Markup.IProvideValueTarget> deve verificare sempre i valori null solo se allo scopo di generare un'eccezione specifica, se è la progettazione desiderata.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto di destinazione da segnalare.</summary>
        <value>Oggetto di destinazione da segnalare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito da <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> il riferimento effettivo, non è un identificatore di tipo di sistema o altro identificatore. Il valore può essere inoltre `null`; vedere <xref:System.Windows.Markup.IProvideValueTarget>.  
  
> [!IMPORTANT]
>  Quando si usa il servizio, è particolarmente importante non modificare l'oggetto fa riferimento il <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> proprietà o altri oggetti di cui viene fatto riferimento da tale oggetto come utilizzata come proprietà non incluse in modo specifico la conversione di valori si siano gestendo. Per WPF in particolare, la modifica l'oggetto di destinazione potrebbe causare modifiche impreviste che rischiano di compromettere il sistema di proprietà WPF.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un identificatore per la proprietà di destinazione indicata.</summary>
        <value>Identificatore per la proprietà di destinazione indicata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore può essere inoltre `null`; vedere <xref:System.Windows.Markup.IProvideValueTarget>.  
  
## <a name="wpf-usage-notes"></a>Note sull'utilizzo di WPF  
 Per una proprietà di dipendenza, il servizio WPF predefinito può restituire un <xref:System.Windows.DependencyProperty>, in modo che il convertitore di estensione o il tipo di markup è possibile utilizzare i metadati. In caso contrario, l'oggetto restituito può essere un <xref:System.Reflection.PropertyInfo> per una proprietà CLR.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>