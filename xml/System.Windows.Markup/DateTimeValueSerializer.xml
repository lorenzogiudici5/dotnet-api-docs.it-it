<Type Name="DateTimeValueSerializer" FullName="System.Windows.Markup.DateTimeValueSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9244ddea0e81fe6dd9f9095eeee91858de63e507" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502933" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DateTimeValueSerializer : System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateTimeValueSerializer extends System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.DateTimeValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class DateTimeValueSerializer&#xA;Inherits ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeValueSerializer : System::Windows::Markup::ValueSerializer" />
  <TypeSignature Language="F#" Value="type DateTimeValueSerializer = class&#xA;    inherit ValueSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.ValueSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.DateTime" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.ValueSerializer> viene utilizzato anziché <xref:System.ComponentModel.TypeConverter> nei casi in cui conversione del tipo richiede uno stato aggiuntivo. <xref:System.Windows.Markup.DateTimeValueSerializer> non dispone di attributi a un tipo con <xref:System.Windows.Markup.ValueSerializerAttribute>. Infatti, <xref:System.DateTime> in mscorlib, e mscorlib non può eseguire le dipendenze in classi di attributo che non viene definita. Al contrario, l'utilizzo di <xref:System.Windows.Markup.DateTimeValueSerializer> è/minuscole speciale nel comportamento del processore XAML nel comportamento di servizi XAML di .NET Framework.  
  
 Nelle versioni precedenti di .NET Framework, questa classe esistente nell'assembly WindowsBase di specifiche di WPF. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> nell'assembly System. Xaml. Vedere [tipi migrati da WPF a System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.Primitives.MarkupWriter" />
    <altmember cref="T:System.DateTime" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public override bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="dateTimeValueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">Stringa da valutare per la conversione.</param>
        <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
        <summary>Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see langword="true" /> se il valore può essere convertito. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa implementazione restituisce sempre `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public override bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="dateTimeValueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto di cui valutare la conversione.</param>
        <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
        <summary>Determina se l'oggetto specificato può essere convertito in un oggetto <see cref="T:System.String" />.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa implementazione restituisce `true` solo se il valore passato `value` è di tipo <xref:System.DateTime>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public override object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="dateTimeValueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">Stringa da convertire in <see cref="T:System.DateTime" />.</param>
        <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
        <summary>Converte <see cref="T:System.String" /> in <see cref="T:System.DateTime" />.</summary>
        <returns>Nuova istanza di <see cref="T:System.DateTime" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Restituisce una stringa vuota <xref:System.DateTime.MinValue?displayProperty=nameWithType>.  
  
 L'attuale implementazione Usa <xref:System.DateTime.Parse%2A> internamente oltre che utilizza il seguente <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public override string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="dateTimeValueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da convertire in una stringa.</param>
        <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
        <summary>Converte un'istanza di <see cref="T:System.DateTime" /> in <see cref="T:System.String" />.</summary>
        <returns>Rappresentazione di stringa dell'elemento <see cref="T:System.DateTime" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `context` non è usata da questa implementazione.  
  
 Rappresentazioni di stringa per le date come disponibile nell'elaborazione del valore XAML si basano le `en-US` delle impostazioni cultura. Infatti elaborazione XAML per le informazioni cultura suddivisa concettualmente tra fasi in fase di compilazione e Runtime e deve utilizzare una rappresentazione di stringa noti in tutto. Per altre informazioni, vedere [WPF Panoramica della globalizzazione e localizzazione](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md).  
  
 L'attuale implementazione Usa una stringa di formato viene regolata a seconda che gli aspetti del metodo <xref:System.DateTime> dispongono di valori. Ad esempio, se è presente alcun valore in <xref:System.TimeSpan.TotalSeconds%2A>, la stringa di formato è nel formato di `yyyy-MM-dd` invece che scrivere totalmente dettagliati di valori zero per il componente della fase.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> non è <see cref="T:System.DateTime" /> oppure è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>