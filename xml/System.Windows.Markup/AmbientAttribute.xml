<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a588b8db1b8f8532658523e101121c299bb6e55a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39967964" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica che una proprietà o un tipo deve essere considerato di ambiente. l concetto di ambiente si riferisce al modo in cui i processori XAML determinano i proprietari dei tipi dei membri.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una proprietà di ambiente è una proprietà in cui il valore deve essere disponibile nel contesto del parser durante la creazione di un oggetto grafico, ma la ricerca di tipi o membri tipico viene sospesa per scopi del nodo XAML immediato set creato. Esistono due scenari principali per il concetto di ambiente:  
  
-   Un'altra proprietà dello stesso oggetto influisce su e certifica funzionamento di tale ricerca di proprietà dell'oggetto.  
  
-   La proprietà rappresenta un meccanismo più ampio di differimento ed estendono le funzionalità di ambiente per la ricerca di un valore del membro per tutti gli oggetti contenuti all'interno dell'oggetto corrente.  
  
 Questo attributo può essere applicato a proprietà specifiche che ci si aspetta i contenitori che consentono a un comportamento di ricerca delle proprietà di ambiente oppure può essere applicato a una classe per abilitare il comportamento di proprietà di ambiente in tutti i casi di quel tipo di valore per una proprietà.  
  
 <xref:System.Windows.Markup.AmbientAttribute> può anche essere applicato a un metodo CLR, per supportare l'attribuzione di una proprietà associabile XAML come ambiente. Ciò è potenzialmente necessario perché in un'implementazione CLR un XAML proprietà associata è implementato/rappresentato per la reflection come un modello di funzione di accesso con `get` e `set` metodi. Non esiste alcuna proprietà CLR effettivo all'attributo, limitando così l'utilizzo per <xref:System.AttributeTargets> a `Property` avrebbe non abilitato specificando un membro associabile come ambiente. Per un membro associabile che si desidera segnalare di ambiente, dell'attributo di `get` della funzione di accesso. Non provare a metodi di attributo che non sono in modo specifico i metodi di supporto di membri associabili.  
  
 Nelle versioni precedenti di .NET Framework, questa classe era presente nell'assembly WindowsBase di specifiche di WPF. Nelle [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> è incluso nell'assembly System. Xaml. Per altre informazioni, vedere [tipi migrati da WPF a System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
 Tipi di ambiente (tipi where <xref:System.Windows.Markup.AmbientAttribute> viene applicato a livello di tipo) può essere utilizzato per alcune situazioni l'elaborazione di XAML in cui il tipo di una proprietà deve essere risolto nell'ordine errato.  
  
## <a name="object-writer-scenarios"></a>Scenari di Writer di oggetti  
 Se si sta definendo un writer di oggetti XAML e si verifica una proprietà, un metodo o un tipo in cui <xref:System.Windows.Markup.AmbientAttribute> viene applicato, è in genere è necessario accedere a un servizio per determinare il comportamento di ricerca di proprietà di ambiente desiderato che è necessaria per la scrittura degli oggetti. Per ulteriori informazioni, vedere <xref:System.Xaml.IAmbientProvider>.  
  
## <a name="value-converters"></a>Convertitori di valori  
 Estensioni di markup o convertitori di tipi potrebbe essere necessario conoscere le informazioni di ambiente per elaborare le proprietà che rappresentano i mapping di tipo indiretta, ad esempio le proprietà che specificano i membri o tipi dai nomi della stringa con o senza qualifica. In questo scenario, <xref:System.Windows.Markup.AmbientAttribute> non deve essere utilizzato direttamente per la logica di codice convertitore di valori. Piuttosto, il convertitore di valori deve basarsi sul comportamento di elaborazione del writer XAML, che deve trascorrere <xref:System.Xaml.IAmbientProvider> nei contesti di servizio relativo ai metodi di convertitore di tipi di valore quando viene chiamato.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>Scenari WPF per AmbientAttribute  
  
-   Una proprietà di un <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) può qualificare le ricerche di nome di proprietà che sono necessari per trovare i riferimenti sottostanti per i nomi delle proprietà in <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valori.  
  
-   Tutto il contenuto all'interno di un `Resources` proprietà (elementi di un <xref:System.Windows.ResourceDictionary>), nonché del contenuto del modello, deve essere in grado di accedere ad altri peer come valori. La dichiarazione dell'intera `Resources` proprietà come ambiente richiama la logica che si abilita nel parser XAML WPF.  
  
 Visualizzare <xref:System.Windows.ResourceDictionary> per un esempio di scenario per l'impostazione <xref:System.Windows.Markup.AmbientAttribute> a livello di tipo.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>