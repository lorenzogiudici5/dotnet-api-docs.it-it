<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarkupExtension.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f36d9706c5d26b97dcc9537ee7078eceaf138fc8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f36d9706c5d26b97dcc9537ee7078eceaf138fc8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Provides a base class for XAML markup extension implementations that can be supported by .NET Framework XAML Services and other XAML readers and XAML writers.</source>
          <target state="translated">Fornisce una classe base per le implementazioni delle estensioni di markup XAML che possono essere supportate dai servizi XAML di .NET Framework e da altri reader e writer XAML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Markup extensions return objects to callers, based on the input of string attribute values or markup elements in XAML.</source>
          <target state="translated">Estensioni del markup restituiscono oggetti ai chiamanti, in base all'input di valori di attributo di stringa o degli elementi di markup in XAML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Markup extensions return objects in a more sophisticated way than type converters alone can accomplish.</source>
          <target state="translated">Estensioni del markup restituiscono oggetti in modo più sofisticato di convertitori di tipi da solo è possono eseguire.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>A XAML object writer invokes a type converter because a type or member has a type converter implementation associated with it.</source>
          <target state="translated">Un writer di oggetti XAML richiama un convertitore di tipi perché un tipo o membro è un'implementazione del convertitore è associata.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>From the CLR frame of reference, this means that a type or member is <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attributed.</source>
          <target state="translated">Dal frame CLR di riferimento, ciò significa che è un tipo o membro <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> con attributi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>From the XAML type system perspective, this means that a XAML type or a XAML member has a value for its <ph id="ph1">`TypeConverter`</ph> property.</source>
          <target state="translated">Dalla prospettiva del sistema di tipi XAML, ciò significa che un tipo XAML o un membro XAML dispone di un valore per il relativo <ph id="ph1">`TypeConverter`</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>The invocation of a type converter is tied to the type or property definition, and is always invoked by XAML processing for these cases.</source>
          <target state="translated">La chiamata di un convertitore di tipi è associata alla definizione del tipo di proprietà e viene sempre richiamata l'elaborazione in questi casi il codice XAML.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>In contrast, a markup extension is more under the control of user code and user-produced markup, and can be applied whenever an application scenario demands it.</source>
          <target state="translated">Al contrario, un'estensione di markup è sotto il controllo del codice utente e il markup generato da utente e può essere applicata a ogni volta che uno scenario di applicazione lo richiede.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>A markup extension can be invoked and can be used for setting different type-member values, so long as the markup extension's return type is assignable to that value.</source>
          <target state="translated">Un'estensione di markup può essere richiamata e utilizzabili per impostare i valori di membro di tipo diverso, purché il tipo restituito dell'estensione di markup è assegnabile a quel valore.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>For information on creating a custom markup extension, see <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph>.</source>
          <target state="translated">Per informazioni sulla creazione di un'estensione di markup personalizzata, vedere <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>For more information on markup extensions in general, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulle estensioni di markup in generale, vedere <bpt id="p1">[</bpt>estensioni di Markup per XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>If you are building on WPF and using or creating markup extensions for XAML, other relevant information can be found in the topic <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</source>
          <target state="translated">Se si compila su WPF e di utilizzo o la creazione di estensioni di markup per XAML, altre informazioni, vedere l'argomento <bpt id="p1">[</bpt>le estensioni di Markup e XAML WPF<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> method of each markup extension implementation can use an <ph id="ph2">&lt;xref:System.IServiceProvider&gt;</ph> at run time that can provide context.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> metodo di implementazione di ogni estensione di markup può utilizzare un <ph id="ph2">&lt;xref:System.IServiceProvider&gt;</ph> in fase di esecuzione che può fornire contesto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>This  <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> is then queried for specific services that pass information, such as <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</source>
          <target state="translated">Questo <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> viene quindi eseguita una query per i servizi specifici che passano informazioni, ad esempio <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>For more information on service contexts for a markup extension, see <bpt id="p1">[</bpt>Service Contexts Available to Type Converters and Markup Extensions<ept id="p1">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui contesti del servizio per un'estensione di markup, vedere <bpt id="p1">[</bpt>contesti di servizio disponibili per convertitori di tipi ed estensioni di Markup<ept id="p1">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Derived classes should be attributed with <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> to inform consumers of the most specific return type available from the markup extension's <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> implementation.</source>
          <target state="translated">Le classi derivate devono essere attribuite con <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> per informare gli utenti del tipo restituito più specifico disponibile dell'estensione di markup <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> implementazione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>Initializes a new instance of a class derived from <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza di una classe derivata dall'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> abstract class does not hold any private values that require initialization.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> classe astratta non contiene valori privati che richiedono l'inizializzazione.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>A functional markup extension should define its own public default constructor.</source>
          <target state="translated">Un'estensione di markup funzionale deve definire il proprio costruttore predefinito pubblico.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>Additionally, the markup extension should implement constructors that are appropriate for the extension's intended capabilities and markup usage.</source>
          <target state="translated">Inoltre, l'estensione di markup deve implementare costruttori appropriati per l'utilizzo di markup e funzionalità desiderate dell'estensione.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>estensioni di Markup per XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>A service provider helper that can provide services for the markup extension.</source>
          <target state="translated">Helper del provider di servizi che può fornire servizi per l'estensione di markup.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.</source>
          <target state="translated">In caso di implementazione in una classe derivata, restituisce un oggetto fornito come valore della proprietà di destinazione per questa estensione di markup.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The object value to set on the property where the extension is applied.</source>
          <target state="translated">Valore dell'oggetto da impostare sulla proprietà in cui viene applicata l'estensione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>When a XAML processor processes a type node and member value that is a markup extension, it invokes the <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> method of that markup extension and writes the result into the object graph or serialization stream.</source>
          <target state="translated">Quando un processore XAML elabora un nodo e il membro valore del tipo è un'estensione di markup, richiama il <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> metodo di estensione di markup e scrive il risultato nell'oggetto grafico o la serializzazione nel flusso.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The XAML object writer passes service context to each such implementation through the <ph id="ph1">`serviceProvider`</ph> parameter.</source>
          <target state="translated">Writer di oggetti XAML passa il contesto di servizio per ogni implementazione tramite il <ph id="ph1">`serviceProvider`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>See "Notes to Implementers" section for more information on how to implement <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> in a custom markup extension.</source>
          <target state="translated">Vedere la sezione "Note per gli implementatori" per ulteriori informazioni su come implementare <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> in un'estensione di markup personalizzata.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>WPF Usage Notes</source>
          <target state="translated">Note sull'utilizzo di WPF</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>WPF classes that have specific interactions with markup set operations should not rely on <ph id="ph1">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> for a <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> implementation.</source>
          <target state="translated">Le classi WPF che hanno interazioni specifiche con le operazioni di impostazione di markup non devono basarsi su <ph id="ph1">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> per un <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> implementazione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>-attributed callbacks instead.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>-callback con attributi.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Common services returned by the default service provider that is typically available to a custom or existing <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph> implementation include the following primary services.</source>
          <target state="translated">Servizi comuni restituiti dal provider del servizio predefinito che in genere è disponibile per un oggetto personalizzato o esistente <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph> implementazione includono i seguenti servizi primari.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IProvideValueTarget" /&gt;</ph> reports the object reference and a property identifier from the context where the markup extension is used</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IProvideValueTarget" /&gt;</ph> segnala il riferimento all'oggetto e un identificatore della proprietà dal contesto in cui viene usata l'estensione di markup</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph> exposes a service that parallels the general XAML object writing behavior that can provide a <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> based on a XAML type name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph> espone un servizio che consente di confrontare l'oggetto XAML generale scrittura del comportamento in grado di fornire un <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> basata su un nome di tipo XAML.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The name can optionally include a prefix for a mapped XAML namespace.</source>
          <target state="translated">Il nome può includere un prefisso per un spazio dei nomi XAML mappato.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;see cref="T:System.Xaml.IXamlSchemaContextProvider" /&gt;</ph> exposes the active XAML schema context directly.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.IXamlSchemaContextProvider" /&gt;</ph> espone direttamente il contesto dello schema XAML attivo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>From the reported <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, you can obtain XAML schema context information such as how assemblies are mapped for type support, preferred prefix in assemblies, lists of each <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> in an assembly, and so on.</source>
          <target state="translated">Da dichiarato <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, è possibile ottenere schema informazioni sul contesto XAML ad Elenca il modo in cui vengono eseguito il mapping di assembly per il supporto di tipo, il prefisso preferito negli assembly, di ogni <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> in un assembly e così via.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Other services available for more specialized markup extension scenarios include:</source>
          <target state="translated">Altri servizi disponibili per gli scenari dell'estensione di markup più specializzati includono:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Potentially, implementations of <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> can ignore the <ph id="ph2">&lt;paramref name="serviceProvider" /&gt;</ph> parameter.</source>
          <target state="translated">Potenzialmente, le implementazioni di <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> possibile ignorare il <ph id="ph2">&lt;paramref name="serviceProvider" /&gt;</ph> parametro.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>This is viable for some basic scenarios, where no context at all is required for returning a value.</source>
          <target state="translated">Questo è disponibile per alcuni scenari di base, in cui nessun contesto non è richiesto per la restituzione di un valore.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>In typical usage, the .NET Framework XAML Services and the implemented XAML object writers will provide a service provider to all value converter methods that are invoked during XAML processing.</source>
          <target state="translated">In un utilizzo tipico, dei servizi XAML di .NET Framework e XAML implementato l'oggetto writer fornirà un provider del servizio per tutti i metodi convertitore di valori che vengono richiamate durante XAML l'elaborazione.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>However, for robustness, you should provide code paths for null values both for the service provider itself and for any requested service.</source>
          <target state="translated">Tuttavia, per motivi di affidabilità, è necessario fornire i percorsi del codice per i valori null per il provider di servizi e per qualsiasi servizio richiesto.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Null values might occur if your markup extension is applied in a circumstance where the typical service support provided by a XAML processor infrastructure is not available.</source>
          <target state="translated">I valori null potrebbero verificarsi se viene applicata l'estensione di markup in un caso in cui non è disponibile il supporto tipico servizio fornito da un'infrastruttura di processore XAML.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>For more information on available services from the XAML service provider context and how to use them, see <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui servizi disponibili dal contesto di provider di servizi XAML e sul loro utilizzo, vedere <bpt id="p1">[</bpt>convertitori di tipi ed estensioni di Markup per XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Implementations that require a certain service to be available in order to produce a useful <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> result are expected to throw exceptions if that service is not available.</source>
          <target state="translated">Le implementazioni che richiedono un determinato servizio sia disponibile per produrre un utile <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> risultato devono generare eccezioni se tale servizio non è disponibile.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The recommended exception to throw is <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</source>
          <target state="translated">Eccezione da generare consigliato è <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The implementation may also throw exceptions if one of the arguments that the custom markup extension needs in order to provide a value is null, is invalid for its data type, or does not contain a value that the markup extension is capable of processing.</source>
          <target state="translated">L'implementazione può anche generare eccezioni se uno degli argomenti necessarie per l'estensione di markup personalizzata per fornire un valore è null, non è valido per il tipo di dati o non contiene un valore che è in grado di elaborare l'estensione di markup.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The recommended exception to throw is <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</source>
          <target state="translated">Eccezione da generare consigliato è <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>