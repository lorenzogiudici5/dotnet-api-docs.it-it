<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea60377fc932098230fdd7a1a5006bcc7b0f7edc" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50171685" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce una classe base per le implementazioni delle estensioni di markup XAML che possono essere supportate dai servizi XAML di .NET Framework e da altri reader e writer XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le estensioni di markup restituiscono oggetti ai chiamanti, in base all'input di valori di stringa degli attributi o elementi di markup in XAML. Le estensioni di markup restituiscono oggetti in modo più sofisticato rispetto a convertitori di tipi da solo è possono eseguire. Un writer di oggetti XAML richiama un convertitore di tipi perché un tipo o membro dispone di un'implementazione del convertitore di tipi associata. Dal fotogramma di riferimento CLR, ciò significa che è un tipo o membro <xref:System.ComponentModel.TypeConverterAttribute> con attributi. Dalla prospettiva del sistema di tipi XAML, ciò significa che un tipo XAML o un membro XAML ha un valore per la relativa `TypeConverter` proprietà. La chiamata di un convertitore di tipi è legata alla definizione del tipo di proprietà e viene sempre richiamata da XAML in questi casi di elaborazione. Al contrario, un'estensione di markup più sotto il controllo del codice utente e il markup generato dall'utente e può essere applicata ogni volta che uno scenario di applicazione lo richiede. Un'estensione di markup può essere richiamata e può essere utilizzata per impostare i valori di membro di tipo diverso, purché il tipo restituito dell'estensione di markup è assegnabile a tale valore.  
  
 Per informazioni sulla creazione di un'estensione di markup personalizzata, vedere <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>. Per altre informazioni sulle estensioni di markup in generale, vedere [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md). Se si compila in WPF e uso o la creazione di estensioni di markup per XAML, altre informazioni rilevanti sono reperibili nell'argomento [estensioni di Markup e XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  
  
 Il <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> metodo di implementazione di ogni estensione di markup può usare un <xref:System.IServiceProvider> in fase di esecuzione che può fornire contesto. Ciò <xref:System.IServiceProvider> viene quindi eseguita una query per servizi specifici che passano le informazioni, ad esempio <xref:System.Windows.Markup.IProvideValueTarget> o <xref:System.Windows.Markup.IXamlTypeResolver>. Per altre informazioni sui contesti del servizio per un'estensione di markup, vedere [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Le classi derivate che dovrebbero essere attribuite con <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> per informare gli utenti del tipo restituito più specifico disponibile dell'estensione di markup <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementazione.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Convertitori di tipi o le estensioni di Markup per XAML</related>
    <related type="Article" href="http://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">Panoramica delle estensioni di markup per XAML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe  derivata da <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Markup.MarkupExtension> classe astratta non contengono alcun valore privati che richiedono un'inizializzazione.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Un'estensione di markup funzionali debba definire il proprio costruttore predefinito pubblico. Inoltre, l'estensione di markup deve implementare costruttori appropriati per la funzionalità desiderata dell'estensione e l'utilizzo di markup. Per altre informazioni, vedere [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Helper del provider di servizi che può fornire servizi per l'estensione di markup.</param>
        <summary>In caso di implementazione in una classe derivata, restituisce un oggetto fornito come valore della proprietà di destinazione per questa estensione di markup.</summary>
        <returns>Valore dell'oggetto da impostare sulla proprietà in cui viene applicata l'estensione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un processore XAML elabora un valore di nodo e il membro tipo che è un'estensione di markup, viene richiamato il <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> metodo dell'estensione di markup e scrive il risultato nell'oggetto grafico o serializzazione nel flusso. Il writer di oggetti XAML passa il contesto del servizio per ciascuna implementazione tramite il `serviceProvider` parametro.  
  
 Per altre informazioni sull'implementazione vedere la sezione "Note per gli implementatori" <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> in un'estensione di markup personalizzata.  
  
## <a name="wpf-usage-notes"></a>Note sull'utilizzo di WPF  
  
> [!IMPORTANT]
>  Non basarsi su classi WPF che hanno specifiche interazioni con le operazioni sui set di markup <xref:System.Windows.Markup.IReceiveMarkupExtension> per un [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementazione. Usare <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-callback con attributi.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Servizi comuni restituiti dal provider di servizi predefiniti che è in genere disponibili per un oggetto personalizzato o esistenti <see cref="T:System.Windows.Markup.MarkupExtension" /> implementazione includono i seguenti servizi primari.  
  
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> segnala il riferimento all'oggetto e un identificatore di proprietà dal contesto in cui viene usata l'estensione di markup 
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> espone un servizio che affianca l'oggetto XAML generale la scrittura di comportamento in grado di fornire un <see cref="T:System.Type" /> basato su un nome di tipo XAML. Il nome può includere facoltativamente un prefisso per uno spazio dei nomi XAML mappata.  
  
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> espone direttamente il contesto dello schema XAML attivo. Da dichiarato <see cref="T:System.Xaml.XamlSchemaContext" />, è possibile ottenere XAML contesto le informazioni sullo schema ad modo in cui vengono eseguito il mapping degli assembly per il supporto di tipo prefisso preferito negli assembly, elenca della ognuno <see cref="T:System.Xaml.XamlType" /> in un assembly e così via.  
  
-Altri servizi disponibili per gli scenari dell'estensione di markup più specializzati includono: 
    -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" />  
  
Potenzialmente, le implementazioni di <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> può essere ignorato il <paramref name="serviceProvider" /> parametro. Questo è disponibile per alcuni scenari di base, in cui nessun contesto non è richiesto per la restituzione di un valore.  
  
In utilizzo tipico dei servizi XAML di .NET Framework e il XAML implementato l'oggetto writer fornirà un provider di servizi a tutti i metodi di convertitore di tipi di valore che vengono richiamate durante XAML l'elaborazione. Tuttavia, per motivi di affidabilità, è necessario fornire i percorsi del codice per i valori null sia per il provider di servizi per qualsiasi servizio richiesto. I valori null potrebbero verificarsi se l'estensione di markup viene applicata in un caso in cui non è disponibile il supporto tipico servizio fornito da un'infrastruttura di processore XAML.  
  
Per altre informazioni sui servizi disponibili dal contesto del provider di servizi XAML e come usarli, vedere [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  
  
Le implementazioni che richiedono un determinato servizio sia disponibile per produrre un utile <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> risultato devono generare eccezioni se tale servizio non è disponibile. Eccezione da generare consigliato è <see cref="T:System.InvalidOperationException" />.  
  
L'implementazione può anche generare eccezioni se uno degli argomenti necessarie per l'estensione di markup personalizzata per fornire un valore è null, non è valido per il tipo di dati o non contiene un valore che è in grado di elaborare l'estensione di markup. Eccezione da generare consigliato è <see cref="T:System.InvalidOperationException" />.</para>
        </block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
        <related type="Article" href="http://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Convertitori di tipi o le estensioni di Markup per XAML</related>
        <related type="Article" href="http://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">Panoramica delle estensioni di markup per XAML</related>
      </Docs>
    </Member>
  </Members>
</Type>