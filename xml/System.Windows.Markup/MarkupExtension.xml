<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3746808349956fe51624132285df9c875558e01e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502594" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce una classe base per le implementazioni delle estensioni di markup XAML che possono essere supportate dai servizi XAML di .NET Framework e da altri reader e writer XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le estensioni di markup restituiscono oggetti ai soli chiamanti, in base all'input di valori di attributo di stringa o degli elementi di markup in XAML. Le estensioni di markup restituiscono oggetti in modo più sofisticato rispetto a scopo convertitori di tipi da solo. Un writer di oggetti XAML richiama un convertitore di tipi perché un tipo o membro è un'implementazione del convertitore è associata. Dal frame CLR di riferimento, ciò significa che un tipo o membro è <xref:System.ComponentModel.TypeConverterAttribute> con attributi. Dalla prospettiva del sistema di tipi XAML, ciò significa che un membro XAML o un tipo XAML ha un valore per il relativo `TypeConverter` proprietà. La chiamata di un convertitore di tipi è associata alla definizione del tipo di proprietà e viene sempre richiamata l'elaborazione in questi casi il codice XAML. Al contrario, un'estensione di markup è sotto il controllo del codice utente e il markup generato da utente e può essere applicata ogni volta che uno scenario di applicazione lo richiede. Un'estensione di markup può essere richiamata e può essere utilizzata per impostare i valori di membro di tipo diverso, purché il tipo restituito dell'estensione di markup è assegnabile a quel valore.  
  
 Per informazioni sulla creazione di un'estensione di markup personalizzata, vedere <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>. Per ulteriori informazioni sulle estensioni di markup in generale, vedere [le estensioni di Markup per XAML Panoramica](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md). Se si sta compilando su WPF e di utilizzo o la creazione di estensioni di markup per XAML, altre informazioni rilevanti sono reperibile nell'argomento [le estensioni di Markup e XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  
  
 Il <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> metodo di ogni implementazione dell'estensione di markup può utilizzare un <xref:System.IServiceProvider> in fase di esecuzione che può fornire contesto. Ciò <xref:System.IServiceProvider> viene quindi eseguita una query per servizi specifici che passano informazioni, ad esempio <xref:System.Windows.Markup.IProvideValueTarget> o <xref:System.Windows.Markup.IXamlTypeResolver>. Per ulteriori informazioni sui contesti del servizio per un'estensione di markup, vedere [contesti di servizio disponibili per convertitori di tipi ed estensioni di Markup](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Le classi derivate devono essere attribuite <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> per informare gli utenti del tipo restituito più specifico disponibile dell'estensione di markup <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementazione.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza di una classe derivata dall'oggetto <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Markup.MarkupExtension> classe astratta non contiene valori privati che richiedono l'inizializzazione.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Un'estensione di markup funzionale deve definire il proprio costruttore predefinito pubblico. Inoltre, l'estensione di markup deve implementare costruttori appropriati per funzionalità desiderate dell'estensione e di markup. Per altre informazioni, vedere [estensioni di Markup per XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Helper del provider di servizi che può fornire servizi per l'estensione di markup.</param>
        <summary>In caso di implementazione in una classe derivata, restituisce un oggetto fornito come valore della proprietà di destinazione per questa estensione di markup.</summary>
        <returns>Valore dell'oggetto da impostare sulla proprietà in cui viene applicata l'estensione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un processore XAML elabora un nodo e il membro valore del tipo è un'estensione di markup, viene richiamato il <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> metodo di estensione di markup e scrive il risultato nell'oggetto grafico o la serializzazione nel flusso. Il writer di oggetti XAML passa il contesto di servizio per ogni implementazione tramite il `serviceProvider` parametro.  
  
 Vedere la sezione "Note per gli implementatori" per ulteriori informazioni su come implementare <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> in un'estensione di markup personalizzata.  
  
## <a name="wpf-usage-notes"></a>Note sull'utilizzo di WPF  
  
> [!IMPORTANT]
>  Classi WPF che dispongono di specifiche interazioni con le operazioni di impostazione di markup non devono basarsi sul <xref:System.Windows.Markup.IReceiveMarkupExtension> per un [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementazione. Utilizzare <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-callback con attributi.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Servizi comuni restituiti dal provider del servizio predefinito che in genere è disponibile per un oggetto personalizzato o esistente <see cref="T:System.Windows.Markup.MarkupExtension" /> implementazione includono i seguenti servizi primari.  - <see cref="T:System.Windows.Markup.IProvideValueTarget" /> segnala il riferimento all'oggetto e un identificatore della proprietà dal contesto in cui viene utilizzata l'estensione di markup - <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> espone un servizio che affianca l'oggetto XAML generale la scrittura del comportamento in grado di fornire un <see cref="T:System.Type" /> in base a un file XAML nome del tipo. Il nome può includere un prefisso per uno spazio dei nomi XAML mappato.  - <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> espone direttamente il contesto dello schema XAML attivo. Da dichiarato <see cref="T:System.Xaml.XamlSchemaContext" />, è possibile ottenere XAML informazioni sullo schema contesto ad Elenca modo in cui vengono eseguito il mapping di assembly per il supporto di tipo, prefisso preferito negli assembly, di ogni <see cref="T:System.Xaml.XamlType" /> in un assembly e così via.  -Gli altri servizi disponibili per gli scenari dell'estensione di markup più specializzati di includono:- <see cref="T:System.Windows.Markup.IUriContext" />   
  
    -    <see cref="T:System.Xaml.IAmbientProvider" />   
  
    -    <see cref="T:System.Xaml.IDestinationTypeProvider" />   
  
    -    <see cref="T:System.Xaml.IRootObjectProvider" />   
  
    -    <see cref="T:System.Xaml.IXamlNameResolver" />   
  
    -    <see cref="T:System.Xaml.IXamlNamespaceResolver" /> Potenzialmente, le implementazioni di <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> possibile ignorare il <paramref name="serviceProvider" /> parametro. Ciò è valido per alcuni scenari di base, in cui nessun contesto non è richiesto per la restituzione di un valore.  In un utilizzo tipico, dei servizi XAML di .NET Framework e il codice XAML implementato l'oggetto writer fornirà un provider del servizio per tutti i metodi convertitore di valori che vengono richiamate durante XAML l'elaborazione. Tuttavia, per motivi di affidabilità, è necessario fornire i percorsi del codice per i valori null per il provider di servizi e per qualsiasi servizio richiesto. I valori null potrebbero verificarsi se l'estensione di markup viene applicato in una circostanza in cui non è disponibile il supporto tipico servizio fornito da un'infrastruttura di processore XAML.  Per ulteriori informazioni sui servizi disponibili dal contesto il provider di servizi XAML e come utilizzarle, vedere [convertitori di tipi ed estensioni di Markup per XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  Le implementazioni che richiedono un determinato servizio sia disponibile per produrre un utile <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> risultato devono generare eccezioni se tale servizio non è disponibile. È consigliato eccezione da generare <see cref="T:System.InvalidOperationException" />.  L'implementazione può inoltre generare eccezioni se uno degli argomenti necessarie per l'estensione di markup personalizzata per fornire un valore è null, non è valido per il tipo di dati o non contiene un valore che è in grado di elaborare l'estensione di markup. È consigliato eccezione da generare <see cref="T:System.InvalidOperationException" />.</para>
        </block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
  </Members>
</Type>