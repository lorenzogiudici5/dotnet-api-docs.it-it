<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59030ed027457420aa960fc21555efb478355923" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50171854" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <TypeSignature Language="F#" Value="type ValueSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8980b-101">Classe astratta che definisce il comportamento di conversione per la serializzazione da una rappresentazione di oggetto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8980b-101">Abstract class that defines conversion behavior for serialization from an object representation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-102">La stringa restituita da un convertitore per la serializzazione deve essere senza perdita di dati e il convertitore deve restituire sempre la stessa stringa di un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="8980b-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="8980b-103">Se un convertitore di tipi (derivata da <xref:System.ComponentModel.TypeConverter>) non soddisfa questi requisiti nel relativo `ConvertTo` implementazioni per output di tipo stringa, un oggetto personalizzato <xref:System.Windows.Markup.ValueSerializer> deve essere dichiarato.</span><span class="sxs-lookup"><span data-stu-id="8980b-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="8980b-104">Entrambi i <xref:System.Windows.Markup.ValueSerializer> deve soddisfare i requisiti, o un valore null <xref:System.Windows.Markup.ValueSerializer> deve essere associata al tipo.</span><span class="sxs-lookup"><span data-stu-id="8980b-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="8980b-105">Oggetto <xref:System.Windows.Markup.ValueSerializer> viene associata a un tipo applicando il <xref:System.Windows.Markup.ValueSerializerAttribute> attributo.</span><span class="sxs-lookup"><span data-stu-id="8980b-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="8980b-106">Un valore null <xref:System.Windows.Markup.ValueSerializer> indica il convertitore di tipi deve essere ignorato per le conversioni a convert-string nell'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="8980b-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8980b-107">Implementazione di <xref:System.Windows.Markup.ValueSerializer> non deve generare eccezioni.</span><span class="sxs-lookup"><span data-stu-id="8980b-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="8980b-108">Tutte le eccezioni generate è stato possibile terminare la serializzazione.</span><span class="sxs-lookup"><span data-stu-id="8980b-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="8980b-109"><xref:System.Windows.Markup.IValueSerializerContext> per un <xref:System.Windows.Markup.ValueSerializer> e le relative API sono analoga a <xref:System.ComponentModel.ITypeDescriptorContext> per un <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="8980b-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="8980b-110">In realtà <xref:System.Windows.Markup.IValueSerializerContext> eredita <xref:System.ComponentModel.ITypeDescriptorContext>.</span><span class="sxs-lookup"><span data-stu-id="8980b-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="8980b-111">Quando un <xref:System.Windows.Markup.ValueSerializer> API della classe derivata viene chiamato, il chiamante (in genere un processo di serializzatore) passa un contesto che può fornire determinati servizi.</span><span class="sxs-lookup"><span data-stu-id="8980b-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="8980b-112">A causa di linee guida generali che un <xref:System.Windows.Markup.ValueSerializer> non devono generare eccezioni.</span><span class="sxs-lookup"><span data-stu-id="8980b-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="8980b-113">Mancata restituzione di un servizio specifico dal contesto deve inoltre non genera eccezioni.</span><span class="sxs-lookup"><span data-stu-id="8980b-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="8980b-114">Nelle versioni precedenti di .NET Framework, questa classe era presente nell'assembly WindowsBase di specifiche di WPF.</span><span class="sxs-lookup"><span data-stu-id="8980b-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="8980b-115">Nelle [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> è incluso nell'assembly System. Xaml.</span><span class="sxs-lookup"><span data-stu-id="8980b-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="8980b-116">Per altre informazioni, vedere [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="8980b-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8980b-117">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-118">Il corpo di questo costruttore è vuoto; il <xref:System.Windows.Markup.ValueSerializer> classe non contiene valori che richiedono un'inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="8980b-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8980b-119">Stringa da valutare per la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-119">The string to evaluate for conversion.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8980b-120">Informazioni di contesto utilizzate per la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-120">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-121">In caso di override in una classe derivata, determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza del tipo supportato dall'implementazione di <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-122">
            <see langword="true" /> se il valore può essere convertito. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-122">
              <see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-123">L'implementazione di base restituisce sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="8980b-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8980b-124">Oggetto di cui valutare la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-124">The object to evaluate for conversion.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8980b-125">Informazioni di contesto utilizzate per la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-125">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-126">In caso di override in una classe derivata, determina se l'oggetto specificato può essere convertito in un oggetto <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-127">
            <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-127">
              <see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-128">L'implementazione di base restituisce sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="8980b-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj&#xA;override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="valueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8980b-129">Stringa da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-129">The string to convert.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8980b-130">Informazioni di contesto utilizzate per la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-130">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-131">In caso di override in una classe derivata, converte un oggetto <see cref="T:System.String" /> in un'istanza del tipo che l'implementazione di <see cref="T:System.Windows.Markup.ValueSerializer" /> supporta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-132">Nuova istanza del tipo che l'implementazione di <see cref="T:System.Windows.Markup.ValueSerializer" /> supporta in base all'oggetto <paramref name="value" /> fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-133">L'implementazione di base sempre genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8980b-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8980b-134">L'oggetto <paramref name="value" /> non può essere convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-134">
              <paramref name="value" /> cannot be converted.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8980b-135">Non generare eccezioni dalle implementazioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8980b-135">Avoid throwing exceptions from implementations.</span>
            </span>
            <span data-ttu-id="8980b-136">Vedere <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8980b-136">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string&#xA;override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="valueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8980b-137">Oggetto da convertire in una stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-137">The object to convert into a string.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8980b-138">Informazioni di contesto utilizzate per la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-138">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-139">In caso di override in una classe derivata, converte l'oggetto specificato in un oggetto <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-139">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-140">Rappresentazione di stringa dell'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-140">A string representation of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-141">L'implementazione di base sempre genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8980b-141">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8980b-142">L'oggetto <paramref name="value" /> non può essere convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-142">
              <paramref name="value" /> cannot be converted.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8980b-143">Non generare eccezioni dalle implementazioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8980b-143">Avoid throwing exceptions from implementations.</span>
            </span>
            <span data-ttu-id="8980b-144">Vedere <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8980b-144">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="valueSerializer.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8980b-145">Oggetto che non è stato possibile convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-145">The object that could not be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-146">Restituisce un'eccezione da generare quando non è possibile eseguire una conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-146">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-147">Oggetto <see cref="T:System.Exception" /> per l'eccezione da generare quando non è possibile eseguire una conversione <see langword="ConvertFrom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-147">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-148">L'effettivo `throw` parola chiave non viene richiamato da questo metodo, pertanto l'utilizzo tipico è `throw GetConvertFromException` (con i parametri forniti).</span><span class="sxs-lookup"><span data-stu-id="8980b-148">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="8980b-149">L'eccezione specifica restituito è <xref:System.InvalidOperationException>, con `value` passato nel messaggio di eccezione.</span><span class="sxs-lookup"><span data-stu-id="8980b-149">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="8980b-150">Il modello di utilizzo è identico a quello di utilità di eccezione in <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="8980b-150">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="valueSerializer.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8980b-151">Oggetto che non è stato possibile convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-151">The object that could not be converted.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="8980b-152">Tipo che rappresenta il tipo in cui è stata tentata la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-152">A type that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-153">Restituisce un'eccezione da generare quando non è possibile eseguire una conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-153">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-154">Oggetto <see cref="T:System.Exception" /> per l'eccezione da generare quando non è possibile eseguire una conversione <see langword="ConvertTo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-154">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-155">L'effettivo `throw` parola chiave non viene richiamato da questo metodo, pertanto l'utilizzo tipico prevede `throw GetConvertToException` (con `value` parametro fornito).</span><span class="sxs-lookup"><span data-stu-id="8980b-155">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="8980b-156">L'eccezione specifica restituito è <xref:System.InvalidOperationException>, con `value` passato nel messaggio di eccezione.</span><span class="sxs-lookup"><span data-stu-id="8980b-156">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="8980b-157">Il modello di utilizzo è identico a quello di utilità di eccezione in <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="8980b-157">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8980b-158">Ottiene il <see cref="T:System.Windows.Markup.ValueSerializer" /> per un oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor descriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="descriptor">
          <span data-ttu-id="8980b-159">Descrittore per la proprietà CLR da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-159">The CLR property descriptor for the property to be serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-160">Ottiene l'oggetto <see cref="T:System.Windows.Markup.ValueSerializer" /> dichiarato per una proprietà, passando un descrittore di proprietà CLR per la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-160">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-161">Serializzatore associato alla proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-161">The serializer associated with the specified property.</span>
          </span>
          <span data-ttu-id="8980b-162">Può restituire <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-162">May return <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-163">Oggetto <xref:System.Windows.Markup.ValueSerializer> è indicato per una proprietà o per un tipo che viene utilizzato come valore per una proprietà, applicando il <xref:System.Windows.Markup.ValueSerializerAttribute> attributo nella dichiarazione del tipo o proprietà.</span><span class="sxs-lookup"><span data-stu-id="8980b-163">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="8980b-164">Il <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> è un metodo di utilità che legge le informazioni sul sistema di tipo Common Language Runtime e restituisce un nuovo <xref:System.Windows.Markup.ValueSerializer> classe basato sull'attributo, se trovato nella proprietà o se viene trovato nel tipo della proprietà.</span><span class="sxs-lookup"><span data-stu-id="8980b-164">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="8980b-165">`null` potrebbe essere restituito se non esiste alcun serializzatore questo tipo.</span><span class="sxs-lookup"><span data-stu-id="8980b-165">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="8980b-166">`null` potrebbe essere restituito anche se un tipo di proprietà viene attribuito intenzionalmente con un valore null <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8980b-166">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="8980b-167">Un'altra modalità che <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> restituisce l'oggetto interno supporta `TypeConverterValueSerializer` (classe), ovvero un <xref:System.Windows.Markup.ValueSerializer> implementazione che esegue il wrapping di un <xref:System.ComponentModel.TypeConverter> e lo converte il `Convert` metodi per `Convert*String` metodi (ad esempio <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>viene chiamato con l'input del <xref:System.String> digitare, quindi si traduce in <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="8980b-167">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="8980b-168">Questa operazione viene eseguita solo nei casi in cui tutti gli elementi seguenti sono vere:</span><span class="sxs-lookup"><span data-stu-id="8980b-168">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="8980b-169">Oggetto <xref:System.ComponentModel.TypeConverterAttribute> viene trovato nella proprietà pertinente o tipo di proprietà pertinenti.</span><span class="sxs-lookup"><span data-stu-id="8980b-169">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="8980b-170">Il functoid <xref:System.ComponentModel.TypeConverter> può essere costruita correttamente.</span><span class="sxs-lookup"><span data-stu-id="8980b-170">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="8980b-171">Il <xref:System.ComponentModel.TypeConverter> restituisce `true` per <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, denominato che fa riferimento il <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="8980b-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="8980b-172">Il <xref:System.ComponentModel.TypeConverter> restituisce `true` per <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, denominato che fa riferimento il <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="8980b-172">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="8980b-173">Il <xref:System.ComponentModel.TypeConverter> restituisce `true` per <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, denominato che fa riferimento il <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="8980b-173">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8980b-174">Di seguito sono casi speciali: <xref:System.DateTime> tipi restituiscono un <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> tipi di restituiscono un serializzatore interno, ma funzionale (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="8980b-174">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8980b-175">
            <paramref name="descriptor" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-175">
              <paramref name="descriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="8980b-176">Tipo per cui ottenere l'oggetto <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-176">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-177">Ottiene l'oggetto <see cref="T:System.Windows.Markup.ValueSerializer" /> dichiarato per il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-177">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-178">Serializzatore associato al tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-178">The serializer associated with the specified type.</span>
          </span>
          <span data-ttu-id="8980b-179">Può restituire <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-179">May return <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-180">Oggetto <xref:System.Windows.Markup.ValueSerializer> per un tipo è indicato applicando il <xref:System.Windows.Markup.ValueSerializerAttribute> attributo nella dichiarazione del tipo.</span><span class="sxs-lookup"><span data-stu-id="8980b-180">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="8980b-181">Il <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> è un metodo di utilità che legge le informazioni sul sistema di tipo Common Language Runtime e restituisce un nuovo <xref:System.Windows.Markup.ValueSerializer> classe basato sull'attributo, se trovato nell'oggetto specificato `type`.</span><span class="sxs-lookup"><span data-stu-id="8980b-181">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="8980b-182">`null` potrebbe essere restituito se non esiste alcun serializzatore questo tipo.</span><span class="sxs-lookup"><span data-stu-id="8980b-182">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="8980b-183">`null` potrebbe essere restituito anche se un tipo viene attribuito intenzionalmente con un valore null <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8980b-183">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="8980b-184">Un'altra modalità che <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> restituisce l'oggetto interno supporta `TypeConverterValueSerializer` (classe), ovvero un <xref:System.Windows.Markup.ValueSerializer> implementazione che esegue il wrapping di un <xref:System.ComponentModel.TypeConverter> e lo converte il `Convert` metodi per `Convert*String` metodi (ad esempio <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>viene chiamato con l'input del <xref:System.String> digitare, quindi si traduce in <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="8980b-184">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="8980b-185">Questa operazione viene eseguita solo nei casi in cui tutti gli elementi seguenti sono vere:</span><span class="sxs-lookup"><span data-stu-id="8980b-185">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="8980b-186">Oggetto <xref:System.ComponentModel.TypeConverterAttribute> si trova `type`.</span><span class="sxs-lookup"><span data-stu-id="8980b-186">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="8980b-187">Il functoid <xref:System.ComponentModel.TypeConverter> può essere costruita correttamente.</span><span class="sxs-lookup"><span data-stu-id="8980b-187">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="8980b-188">Il <xref:System.ComponentModel.TypeConverter> restituisce `true` per <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, denominato che fa riferimento il <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="8980b-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="8980b-189">Il <xref:System.ComponentModel.TypeConverter> restituisce `true` per <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, denominato che fa riferimento il <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="8980b-189">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="8980b-190">Il <xref:System.ComponentModel.TypeConverter> restituisce `true` per <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, denominato che fa riferimento il <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="8980b-190">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8980b-191">Di seguito sono casi speciali: <xref:System.DateTime> tipi restituiscono un <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> tipi di restituiscono un serializzatore interno, ma funzionale (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="8980b-191">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8980b-192">
            <paramref name="type" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-192">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (descriptor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="descriptor">
          <span data-ttu-id="8980b-193">Descrittore della proprietà da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-193">Descriptor for the property to be serialized.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8980b-194">Informazioni di contesto utilizzate per la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-194">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-195">Ottiene l'oggetto <see cref="T:System.Windows.Markup.ValueSerializer" /> dichiarato per la proprietà specificata, usando il contesto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-195">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-196">Serializzatore associato alla proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-196">The serializer associated with the specified property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-197">Anziché basarsi esclusivamente sugli attributi segnalati nel sistema di tipi CLR, questo overload viene utilizzato il `context` come servizio e chiama l'implementazione del servizio di <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8980b-197">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8980b-198">Il <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementazione sarebbe in genere si basano sempre sul `descriptor`, ma potrebbe implementare un comportamento speciale per alcuni contesti.</span><span class="sxs-lookup"><span data-stu-id="8980b-198">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="8980b-199">Questo metodo deve essere chiamato quando il chiamante è disponibile un <xref:System.Windows.Markup.IValueSerializerContext> da un servizio.</span><span class="sxs-lookup"><span data-stu-id="8980b-199">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="8980b-200">Questo garantisce che i valori corretti <xref:System.Windows.Markup.ValueSerializer> viene restituito per il contesto specifico.</span><span class="sxs-lookup"><span data-stu-id="8980b-200">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="8980b-201">Se il contesto non restituisce `null` dal relativo <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> per l'oggetto specificato `descriptor`, o se il contesto è specificare `null`, il comportamento è identico alla chiamata il <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span><span class="sxs-lookup"><span data-stu-id="8980b-201">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8980b-202">
            <paramref name="descriptor" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-202">
              <paramref name="descriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (type, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="8980b-203">Tipo per cui ottenere l'oggetto <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-203">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8980b-204">Informazioni di contesto utilizzate per la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-204">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-205">Ottiene l'oggetto <see cref="T:System.Windows.Markup.ValueSerializer" /> dichiarato per il tipo specificato, usando il contesto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-205">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-206">Serializzatore associato al tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-206">The serializer associated with the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-207">Anziché basarsi esclusivamente sugli attributi segnalati nel sistema di tipi CLR, questo overload viene utilizzato il `context` come servizio e chiama l'implementazione del servizio di <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8980b-207">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8980b-208">Il <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementazione sarebbe in genere si basano sempre sul `type`, ma potrebbe implementare un comportamento speciale per alcuni contesti.</span><span class="sxs-lookup"><span data-stu-id="8980b-208">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="8980b-209">Questo metodo deve essere chiamato quando il chiamante è disponibile un <xref:System.Windows.Markup.IValueSerializerContext> da un servizio.</span><span class="sxs-lookup"><span data-stu-id="8980b-209">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="8980b-210">Questo garantisce che i valori corretti <xref:System.Windows.Markup.ValueSerializer> viene restituito per il contesto specifico.</span><span class="sxs-lookup"><span data-stu-id="8980b-210">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="8980b-211">Se il contesto non restituisce `null` dal relativo <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> per l'oggetto specificato `type`, o se il contesto è specificare `null`, il comportamento è identico alla chiamata il <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span><span class="sxs-lookup"><span data-stu-id="8980b-211">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8980b-212">
            <paramref name="type" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-212">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;&#xA;override this.TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;" Usage="valueSerializer.TypeReferences (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8980b-213">Valore da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-213">The value being serialized.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8980b-214">Informazioni di contesto utilizzate per la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-214">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8980b-215">Ottiene un'enumerazione dei tipi a cui fa riferimento l'oggetto <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-215">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8980b-216">Tipi convertiti da questo serializzatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8980b-216">The types converted by this serializer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8980b-217">Tutti i tipi una <xref:System.Windows.Markup.ValueSerializer> converte devono essere inclusi nell'enumerazione restituita.</span><span class="sxs-lookup"><span data-stu-id="8980b-217">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="8980b-218">In questo modo un serializzatore garantire che un de-serializzatore ha informazioni sufficienti per valutare i tipi converte questo serializzatore.</span><span class="sxs-lookup"><span data-stu-id="8980b-218">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="8980b-219">L'override di questo metodo è uno scenario avanzato.</span><span class="sxs-lookup"><span data-stu-id="8980b-219">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="8980b-220">Si esegue l'override solo non è necessario se si implementa un sistema in cui CLR sistema TipoProprietario-proprietà relazioni tra i tipi disponibili per un contesto dello schema XAML non segnala le informazioni necessarie.</span><span class="sxs-lookup"><span data-stu-id="8980b-220">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="8980b-221">Note sull'utilizzo di WPF</span><span class="sxs-lookup"><span data-stu-id="8980b-221">WPF Usage Notes</span></span>  
 <span data-ttu-id="8980b-222">Il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] sistema di proprietà implementa un serializzatore di valori interni che esegue l'override <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> perché una proprietà di dipendenza è un concetto che può avere i proprietari aggiunti.</span><span class="sxs-lookup"><span data-stu-id="8980b-222">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="8980b-223">espressioni hanno anche la gestione interna speciali.</span><span class="sxs-lookup"><span data-stu-id="8980b-223">expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>