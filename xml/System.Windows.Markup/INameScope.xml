<Type Name="INameScope" FullName="System.Windows.Markup.INameScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ac045db164c4d2d4320bd924bd6f858a4e66c0aa" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52239079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INameScope" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameScope" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.INameScope" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameScope" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameScope" />
  <TypeSignature Language="F#" Value="type INameScope = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f894a-101">Definisce un contratto per la modalità di accesso ai nomi degli elementi all'interno di un particolare ambito dei nomi XAML e per come imporre l'univocità dei nomi all'interno di tale ambito dei nomi XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f894a-101">Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f894a-102">Questa interfaccia è implementata da classi che includono elementi figlio che devono essere riutilizzata tramite il modello o rinviare metafora.</span><span class="sxs-lookup"><span data-stu-id="f894a-102">This interface is implemented by classes that have child elements that are intended to be reused through the template or defer metaphor.</span></span> <span data-ttu-id="f894a-103">I modelli, le factory e costrutti simili devono avere i NameScope XAML univoci che sono separate da un grafico di oggetti principali e radice XAML.</span><span class="sxs-lookup"><span data-stu-id="f894a-103">Templates, factories and similar constructs must have unique XAML namescopes that are separate from a main object graph and root XAML.</span></span> <span data-ttu-id="f894a-104">Di seguito il principio è che non vi sarà alcun conflitti di nomi quando gli oggetti creati da tali elementi figlio vengono introdotti nell'oggetto grafico di un'applicazione e, in modo che le operazioni DOM e le tecniche di riferimento XAML che si basano sull'identificatore del nome possono basarsi sul nome univocità in ogni namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="f894a-104">The principle here is that there should be no name collisions when objects created from those child elements are introduced to an application's object graph, and so that DOM operations and XAML reference techniques that rely on the name identifier can rely on name uniqueness in each XAML namescope.</span></span>  
  
 <span data-ttu-id="f894a-105">Nelle versioni precedenti di .NET Framework, questa interfaccia esistenti nell'assembly WindowsBase di specifiche di WPF.</span><span class="sxs-lookup"><span data-stu-id="f894a-105">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="f894a-106">Nelle [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.INameScope> è incluso nell'assembly System. Xaml.</span><span class="sxs-lookup"><span data-stu-id="f894a-106">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.INameScope> is in the System.Xaml assembly.</span></span> <span data-ttu-id="f894a-107">Per altre informazioni, vedere [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="f894a-107">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="f894a-108">Note sull'utilizzo di WPF</span><span class="sxs-lookup"><span data-stu-id="f894a-108">WPF Usage Notes</span></span>  
 <span data-ttu-id="f894a-109">Questa interfaccia viene implementata dalla classe WPF <xref:System.Windows.NameScope>.</span><span class="sxs-lookup"><span data-stu-id="f894a-109">This interface is implemented by the WPF class <xref:System.Windows.NameScope>.</span></span> <span data-ttu-id="f894a-110">La maggior parte delle operazioni di namescope XAML in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] operare usando <xref:System.Windows.NameScope> istanze, ma le informazioni in alcuni casi viene comunicato internamente usando <xref:System.Windows.Markup.INameScope> riferimenti.</span><span class="sxs-lookup"><span data-stu-id="f894a-110">Most XAML namescope operations in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] operate by using <xref:System.Windows.NameScope> instances, but information is occasionally communicated internally by using <xref:System.Windows.Markup.INameScope> references.</span></span>  
  
 <span data-ttu-id="f894a-111">Sono esempi di classi WPF che usano una factory o rinviano la metafora con rappresentazione XAML <xref:System.Windows.Style> e <xref:System.Windows.FrameworkTemplate>.</span><span class="sxs-lookup"><span data-stu-id="f894a-111">Examples of WPF classes that use a factory or defer metaphor combined with XAML representation are <xref:System.Windows.Style> and <xref:System.Windows.FrameworkTemplate>.</span></span> <span data-ttu-id="f894a-112">Queste implementazioni di solito si basano sulle versioni esplicitare dei metodi di interfaccia disponibili dal <xref:System.Windows.NameScope> classe.</span><span class="sxs-lookup"><span data-stu-id="f894a-112">These implementations usually rely on the explicit versions of the interface methods available from the <xref:System.Windows.NameScope> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.NameScope" />
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48">
      <span data-ttu-id="f894a-113">Attributo X:Name</span>
      <span class="sxs-lookup">
        <span data-stu-id="f894a-113">x:Name Attribute</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindName : string -&gt; obj" Usage="iNameScope.FindName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f894a-114">Identificatore del nome per l'oggetto da richiedere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f894a-114">The name identifier for the object being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f894a-115">Restituisce un oggetto con il nome identificativo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f894a-115">Returns an object that has the provided identifying name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f894a-116">Oggetto, se trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f894a-116">The object, if found.</span>
          </span>
          <span data-ttu-id="f894a-117">Restituisce <see langword="null" /> se non è stato trovato alcun oggetto di tale nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f894a-117">Returns <see langword="null" /> if no object of that name was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f894a-118">Le stringhe dei nomi valido nel markup XAML devono corrispondere ai requisiti documentati in [grammatica XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="f894a-118">Valid name strings in XAML markup must match the requirements documented in [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.NameScope" />
        <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48">
          <span data-ttu-id="f894a-119">Attributo X:Name</span>
          <span class="sxs-lookup">
            <span data-stu-id="f894a-119">x:Name Attribute</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit" Usage="iNameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f894a-120">Nome da registrare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f894a-120">The name to register.</span>
          </span>
        </param>
        <param name="scopedElement">
          <span data-ttu-id="f894a-121">Elemento specifico a cui fa riferimento il valore <paramref name="name" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f894a-121">The specific element that the provided <paramref name="name" /> refers to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f894a-122">Registra il nome specificato nell'ambito dei nomi XAML corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f894a-122">Registers the provided name into the current XAML namescope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f894a-123">Non sono consentiti nomi duplicati in un namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="f894a-123">Duplicate names in a XAML namescope are not permitted.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f894a-124">Non consentono i nomi duplicati da registrare.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f894a-124">Do not permit duplicate names to be registered.</span>
            </span>
            <span data-ttu-id="f894a-125">Se l'input <paramref name="name" /> è già assegnato a un elemento esistente nella rappresentazione raccolta interna del namescope XAML (anche se è identico <paramref name="scopedElement" />), generare un'eccezione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f894a-125">If the input <paramref name="name" /> is already assigned to an existing element in the internal collection representation of the XAML namescope (even if it is the same as <paramref name="scopedElement" />), throw an exception.</span>
            </span>
            <span data-ttu-id="f894a-126">Considerare anche generare un'eccezione se il nome fornito non corrisponde al [grammatica XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="f894a-126">Also consider throwing an exception if the provided name does not conform to [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit" Usage="iNameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f894a-127">Nome di cui annullare la registrazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f894a-127">The name to unregister.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f894a-128">Annulla la registrazione del nome specificato nell'ambito dei nomi XAML corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f894a-128">Unregisters the provided name from the current XAML namescope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f894a-129">Se il nome di input non esiste, generare un'eccezione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f894a-129">If the input name does not exist, throw an exception.</span>
            </span>
            <span data-ttu-id="f894a-130">È necessario rimuovere il nome e l'elemento registrato in precedenza che si intende la rappresentazione in forma di raccolta del namescope XAML, in modo che lo stesso nome è stato possibile registrare potenzialmente nuovamente in futuro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f894a-130">You should remove the name and the previously registered element it refers to from the collection representation of the XAML namescope, so that the same name could potentially be registered again in the future.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
  </Members>
</Type>