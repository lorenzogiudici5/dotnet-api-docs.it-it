<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarkupExtensionReturnTypeAttribute.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5200ab52bc40c135b973800ab238f970f0c48da04.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">200ab52bc40c135b973800ab238f970f0c48da04</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
          <source>Reports the type that a markup extension can return.</source>
          <target state="translated">Segnala il tipo che un'estensione di markup può restituire.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> derived custom class should apply this <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> to indicate a possible type-safe return type that is returned by its <ph id="ph3">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> implementation.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> classe personalizzata derivata deve applicare questo <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> per indicare un tipo restituito indipendente dai tipi possibili che viene restituito dal relativo <ph id="ph3">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> implementazione.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
          <source>In other words, if a markup extension always returns a more specific type than type of <ph id="ph1">&lt;xref:System.Object&gt;</ph>, and casting to that type is a primary scenario, the markup extension class should attribute with <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> and report that type.</source>
          <target state="translated">In altre parole, se un'estensione di markup restituisce sempre un tipo più specifico rispetto al tipo di <ph id="ph1">&lt;xref:System.Object&gt;</ph>ed esegue il cast a che il tipo è un scenario principale, la classe di estensione di markup è necessario associare <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> e tale tipo di report.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">Nelle versioni precedenti di .NET Framework, la classe esistente nell'assembly WindowsBase di specifiche di WPF.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> nell'assembly System. Xaml.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>tipi migrati da WPF a System. XAML<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
          <source>For more information on patterns for implementing a custom XAML markup extension, see <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> and <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui modelli per l'implementazione di un'estensione di markup XAML personalizzata, vedere <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> e <bpt id="p1">[</bpt>convertitori di tipi ed estensioni di Markup per XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
          <source>The return type that this  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> reports.</source>
          <target state="translated">Tipo restituito indicato da <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /&gt;</ph> class using the provided <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /&gt;</ph> mediante l'oggetto <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> fornito.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> derived custom class should apply this <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> to indicate the type-safe return type that is returned by its <ph id="ph3">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> implementation.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> classe personalizzata derivata deve applicare questo <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> per indicare il tipo restituito indipendente dai tipi restituito dal relativo <ph id="ph3">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> implementazione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
          <source>The return type that this  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> reports.</source>
          <target state="translated">Tipo restituito indicato da <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
          <source>Deprecated; do not use.</source>
          <target state="translated">Non supportato, non usare.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
          <source>Deprecated; do not use.</source>
          <target state="translated">Non supportato, non usare.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
          <source>The form of <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> that reports a second parameter for an expression is deprecated/obsolete and should not be used.</source>
          <target state="translated">Il modulo di <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> che riporta un secondo parametro per un'espressione è deprecato obsoleta e non deve essere utilizzata.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
          <source>If an expression or other type or model for deferred evaluation is a possible return type, you should attribute with a return type of <ph id="ph1">&lt;xref:System.Object&gt;</ph> instead.</source>
          <target state="translated">Se un'espressione o un altro tipo o del modello per la valutazione posticipata è un tipo restituito possibile, è necessario associare un tipo restituito di <ph id="ph1">&lt;xref:System.Object&gt;</ph> invece.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
          <source>Deprecated; do not use.</source>
          <target state="translated">Non supportato, non usare.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
          <source>Deprecated; do not use.</source>
          <target state="translated">Non supportato, non usare.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
          <source>The form of <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> that reports a second parameter for an expression is deprecated and should not be used.</source>
          <target state="translated">Il modulo di <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> che riporta un secondo parametro di un'espressione è deprecata e non deve essere utilizzata.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
          <source>If an expression is possible, you should attribute with a return type of <ph id="ph1">&lt;xref:System.Object&gt;</ph> instead.</source>
          <target state="translated">Se un'espressione è possibile, è necessario attribuire un tipo restituito di <ph id="ph1">&lt;xref:System.Object&gt;</ph> invece.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph> return type that this <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> reports.</source>
          <target state="translated">Ottiene il tipo restituito dell'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph> che questo <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> segnala.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
          <source>The type-safe return type of the specific <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> implementation of the markup extension where the <ph id="ph2">&lt;see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> is applied.</source>
          <target state="translated">Il tipo restituito indipendente dai tipi delle specifiche <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> implementazione dell'estensione di markup in cui il <ph id="ph2">&lt;see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> viene applicato.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>