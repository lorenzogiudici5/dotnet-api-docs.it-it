<Type Name="IUriContext" FullName="System.Windows.Markup.IUriContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2af19935a30a4b6986111d8eb3b451d5cc92310c" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39819832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IUriContext" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public interface class IUriContext" />
  <TypeSignature Language="F#" Value="type IUriContext = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationCore, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un servizio che può usare il contesto dell'applicazione per risolvere un URI relativo specificato in un URI assoluto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IUriContext> implementato come un servizio consente a convertitori di tipi da usare un contesto specifico dell'applicazione che potrebbe essere in grado di completare una proprietà di tipo URI.  
  
 Cercare i convertitori di tipi ed estensioni di markup <xref:System.Windows.Markup.IUriContext> come servizio nel contesto del servizio fornita da un writer di oggetti XAML, quando il writer di oggetti XAML richiama il comportamento di conversione di valori. Per altre informazioni, vedere [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) e [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 <xref:System.Windows.Markup.IUriContext> non è sufficiente per la conversione del valore e il contesto del servizio. Può anche implementare la logica di classe per gli elementi dell'interfaccia utente o di altre classi che supportano il contenimento <xref:System.Windows.Markup.IUriContext> servizi come modello riconosciuto che gli elementi figlio possono chiamare per informazioni sull'URI di base oppure archiviare informazioni sull'URI ottenuto da XAML di base di analisi del elemento radice.  
  
 Nelle versioni precedenti di .NET Framework, questa interfaccia esistenti nell'assembly PresentationCore specifiche di WPF. Nelle [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IUriContext> è incluso nell'assembly System. Xaml. Per altre informazioni, vedere [tipi migrati da WPF a System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Note sull'utilizzo di WPF  
 Scenari di esempio per <xref:System.Windows.Markup.IUriContext> esiste in WPF.  
  
 Come esempio di un convertitore di valori, il <xref:System.Windows.Media.FontFamilyConverter> classe può utilizzare un URI relativo che viene fornito per proprietà, ad esempio <xref:System.Windows.Controls.Page.FontFamily%2A?displayProperty=nameWithType>, se <xref:System.Windows.Markup.IUriContext> è disponibile come servizio nel <xref:System.ComponentModel.ITypeDescriptorContext> input.  
  
 Ad esempio del case, elemento <xref:System.Windows.Documents.Hyperlink> implementi <xref:System.Windows.Markup.IUriContext> in modo da poterla passare tramite valori URI di base durante l'analisi, che quindi modifica <xref:System.Windows.Documents.Hyperlink.NavigateUri%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.Windows.Markup.IUriContext.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'URI di base del contesto applicazione corrente.</summary>
        <value>URI di base URI del contesto applicazione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>