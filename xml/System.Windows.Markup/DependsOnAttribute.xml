<Type Name="DependsOnAttribute" FullName="System.Windows.Markup.DependsOnAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9cc8359e6b8b119c606483f2b145d91b25694032" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502855" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DependsOnAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DependsOnAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.DependsOnAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependsOnAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependsOnAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DependsOnAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="33669-101">Indica che la proprietà con attributi dipende dal valore di un'altra proprietà.</span>
      <span class="sxs-lookup">
        <span data-stu-id="33669-101">Indicates that the attributed property is dependent on the value of another property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33669-102">Il <xref:System.Windows.Markup.XamlWriter.Save%2A> metodo su <xref:System.Windows.Markup.XamlWriter> elaborerà la proprietà specificata prima di elaborare la proprietà che questo attributo è impostato su.</span><span class="sxs-lookup"><span data-stu-id="33669-102">The <xref:System.Windows.Markup.XamlWriter.Save%2A> method on <xref:System.Windows.Markup.XamlWriter> will process the specified property before processing the property that this attribute is set on.</span></span>  
  
 <span data-ttu-id="33669-103">Il `name` valore applicato a questo attributo deve essere il nome non qualificato semplice di una proprietà che è presente nello stesso tipo.</span><span class="sxs-lookup"><span data-stu-id="33669-103">The `name` value applied to this attribute must be the simple unqualified name of a property that exists in the same type.</span></span> <span data-ttu-id="33669-104">È possibile specificare le proprietà associate come dipendenti.</span><span class="sxs-lookup"><span data-stu-id="33669-104">You cannot  specify attached properties as being dependent.</span></span>  
  
 <span data-ttu-id="33669-105">Quando si applica questo attributo, è necessario prestare attenzione per evitare dipendenze circolari.</span><span class="sxs-lookup"><span data-stu-id="33669-105">When applying this attribute, care must be taken to avoid circular dependencies.</span></span>  <span data-ttu-id="33669-106">Dipendenze circolari vengono rilevate solo quando sono stati scritti tutte le proprietà del ciclo e anche in questo caso il comportamento è non deterministico.</span><span class="sxs-lookup"><span data-stu-id="33669-106">Circular dependencies are only detected when all the properties in the cycle have been written and even so the behavior is nondeterministic.</span></span>  
  
 <span data-ttu-id="33669-107">L'applicazione di questo attributo a una definizione di proprietà garantisce che le proprietà dipendenti vengono elaborate prima di tutto in scrittura di oggetti XAML.</span><span class="sxs-lookup"><span data-stu-id="33669-107">Applying this attribute to a property definition ensures that the dependent properties are processed first in XAML object writing.</span></span> <span data-ttu-id="33669-108">Fa parte delle regole generali di markup XAML che i valori di attributo applicati per un oggetto creato devono essere in grado di essere elaborati in qualsiasi ordine.</span><span class="sxs-lookup"><span data-stu-id="33669-108">It is part of the general rules of XAML markup that attribute values applied for a created object should be able to be processed in any order.</span></span> <span data-ttu-id="33669-109">Utilizzi di <xref:System.Windows.Markup.DependsOnAttribute> specificano i casi eccezionali di proprietà sui tipi in cui è necessario seguire un ordine specifico di analisi per la creazione di oggetti validi.</span><span class="sxs-lookup"><span data-stu-id="33669-109">Usages of <xref:System.Windows.Markup.DependsOnAttribute> specify the exceptional cases of properties on types where a specific order of parsing must be followed for valid object creation.</span></span>  
  
 <span data-ttu-id="33669-110">Nelle versioni precedenti di .NET Framework, questa classe esistente nell'assembly WindowsBase di specifiche di WPF.</span><span class="sxs-lookup"><span data-stu-id="33669-110">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="33669-111">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DependsOnAttribute> nell'assembly System. Xaml.</span><span class="sxs-lookup"><span data-stu-id="33669-111">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DependsOnAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="33669-112">Per altre informazioni, vedere [tipi migrati da WPF a System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="33669-112">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="33669-113">Note sull'utilizzo di WPF</span><span class="sxs-lookup"><span data-stu-id="33669-113">WPF Usage Notes</span></span>  
 <span data-ttu-id="33669-114">Il <xref:System.Windows.Setter.Value%2A> proprietà il <xref:System.Windows.Setter> classe è un esempio di una proprietà in WPF in cui il <xref:System.Windows.Markup.DependsOnAttribute> attributo viene applicato.</span><span class="sxs-lookup"><span data-stu-id="33669-114">The <xref:System.Windows.Setter.Value%2A> property on the <xref:System.Windows.Setter> class is an example of a property in WPF where the <xref:System.Windows.Markup.DependsOnAttribute> attribute is applied.</span></span>  <span data-ttu-id="33669-115"><xref:System.Windows.Setter.Value%2A> dipende <xref:System.Windows.Setter.Property%2A> e <xref:System.Windows.Setter.TargetName%2A> viene elaborata per prima, in caso contrario, non è possibile sapere quale tipo dovrebbe essere creata per i casi di convertitore di tipi di valore.</span><span class="sxs-lookup"><span data-stu-id="33669-115"><xref:System.Windows.Setter.Value%2A> depends on <xref:System.Windows.Setter.Property%2A> and <xref:System.Windows.Setter.TargetName%2A> being processed first, otherwise there is no way to know what type is supposed to be created for value converter cases.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependsOnAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DependsOnAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.DependsOnAttribute : string -&gt; System.Windows.Markup.DependsOnAttribute" Usage="new System.Windows.Markup.DependsOnAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="33669-116">La proprietà da cui dipende la proprietà associata a <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33669-116">The property that the property associated with this <see cref="T:System.Windows.Markup.DependsOnAttribute" /> depends on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33669-117">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33669-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.DependsOnAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.DependsOnAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Markup.DependsOnAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33669-118">Ottiene il nome della proprietà correlata dichiarata in <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33669-118">Gets the name of the related property declared in this <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="33669-119">Nome della proprietà correlata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33669-119">The name of the related property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.DependsOnAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.Windows.Markup.DependsOnAttribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33669-120">Ottiene un identificatore univoco per <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33669-120">Gets a unique identifier for this <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="33669-121">Identificatore univoco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33669-121">The unique identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33669-122">Si tratta di un valore generato che utilizza il comportamento di override per consentire più attributi con lo stesso <xref:System.Windows.Markup.DependsOnAttribute.Name%2A> da applicare.</span><span class="sxs-lookup"><span data-stu-id="33669-122">This is a generated value that uses an override behavior in order to permit multiple attributes with the same <xref:System.Windows.Markup.DependsOnAttribute.Name%2A> to be applied.</span></span> <span data-ttu-id="33669-123">Purché le dipendenze non sono più circolare o è ambigua in caso contrario, <xref:System.Windows.Markup.DependsOnAttribute> sono supportati i riferimenti al nome della proprietà stessa.</span><span class="sxs-lookup"><span data-stu-id="33669-123">So long as dependencies are not circular or otherwise ambiguous, multiple <xref:System.Windows.Markup.DependsOnAttribute> references to the same property name are supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>