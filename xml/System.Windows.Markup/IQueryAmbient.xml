<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b1419b6b996eab65fbdcda1f6ed9782df12197d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502764" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Esegue una query per determinare se una proprietà specificata deve essere considerata di ambiente nell'ambito corrente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lo scopo di un meccanismo di proprietà di ambiente è per migliorare il tempo di analisi informando un writer di oggetti XAML per evitare di creare un'istanza di determinati oggetti, nei casi in cui è noto che gli oggetti sono i valori che sono temporanei e non utile per un tempo di esecuzione tipico applicazione. In genere, le ricerche XAML o elaborazione XAML di una funzione di accesso get di proprietà dovrà creare istanze di tali oggetti per riempire la rappresentazione grafica dell'oggetto con valori di pronto all'uso.  
  
 <xref:System.Windows.Markup.IQueryAmbient> dispone di un membro: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.  
  
 <xref:System.Windows.Markup.IQueryAmbient> è un meccanismo parallelo per <xref:System.Windows.Markup.AmbientAttribute>. <xref:System.Windows.Markup.IQueryAmbient> è il meccanismo specializzato che eviti l'uso della reflection per determinare le informazioni e anche act seconda della situazione (un oggetto specificato è stato possibile scegliere di report `true` oppure `false` per <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), mentre l'attributo è essenzialmente statico analisi). <xref:System.Windows.Markup.AmbientAttribute> è il meccanismo generale che può essere utilizzato dal writer di oggetti XAML e che in genere è correlato alle proprietà del sistema di tipo XAML dedicato <xref:System.Xaml.XamlMember.IsAmbient%2A> e <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
## <a name="wpf-implementations-of-iqueryambient"></a>Implementazioni WPF di IQueryAmbient  
 In WPF, <xref:System.Windows.Markup.IQueryAmbient> viene utilizzato per il processo di ricerca di dizionario risorse. Il processo di ricerca Ottiene successivo `Resources` valori in tutto l'albero logico WPF, procedendo verso la radice dell'ambito di risorsa fino a una chiave viene trovata o la chiave viene determinata che non esista nell'ambito. In genere, tale operazione richiederebbe creazione di un <xref:System.Windows.ResourceDictionary> ogni volta che si ricevono i risultati. Il contenuto della dichiarazione `Resources` di ambiente, purché `Resources` esiste consente di ottimizzare questo processo di ricerca. In WPF, questa interfaccia viene implementata nei casi seguenti:  
  
-   <xref:System.Windows.FrameworkElement> implementa <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> per restituire `true` per tutti i nomi di proprietà se contiene un oggetto esistente <xref:System.Windows.ResourceDictionary> per <xref:System.Windows.FrameworkElement.Resources%2A>, e in modo fino a quando la query non è disponibile per il <xref:System.Windows.FrameworkElement.Resources%2A> proprietà stessa.  
  
-   <xref:System.Windows.Style> implementa lo stesso modello per il relativo <xref:System.Windows.Style.Resources%2A>.  
  
-   <xref:System.Windows.Application> implementa lo stesso modello per il relativo <xref:System.Windows.Application.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkContentElement> implementa lo stesso modello per il relativo <xref:System.Windows.FrameworkContentElement.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkTemplate> implementa lo stesso modello per il relativo <xref:System.Windows.FrameworkTemplate.Resources%2A>. Segnala inoltre <xref:System.Windows.FrameworkTemplate.Template%2A> di ambiente ma restituisce contenuto `false` se l'esecuzione di query per <xref:System.Windows.FrameworkTemplate.Template%2A> se stesso.  
  
-   In ognuno di questi casi, la corrispondente `Resources` proprietà (e <xref:System.Windows.FrameworkTemplate.Template%2A>) con attributo <xref:System.Windows.Markup.AmbientAttribute>. L'utilizzo tipico consiste nell'eseguire una query per le proprietà che non sono il <xref:System.Windows.Markup.AmbientAttribute> con attributi di proprietà dell'oggetto che definisce l'interfaccia. In altre parole, purché un dizionario risorse esistente per fornire il valore della fase di esecuzione potenziale quando viene creato l'oggetto grafico, qualsiasi altra proprietà oltre contenitore delle proprietà del dizionario risorse può essere considerata di ambiente.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nome della proprietà di cui verificare lo stato di ambiente.</param>
        <summary>Esegue una query per determinare se una proprietà denominata specificata può essere considerata di ambiente nell'ambito corrente.</summary>
        <returns>
          <see langword="true" /> se la proprietà richiesta può essere considerata di ambiente; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>