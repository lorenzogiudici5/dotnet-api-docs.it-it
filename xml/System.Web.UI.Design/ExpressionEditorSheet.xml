<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d987e9f0ffaf7b1818b7d646845498696df77f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36589981" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="95a02-101">Rappresenta una pagina dell'editor in fase di progettazione per un'espressione personalizzata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="95a02-101">Represents a design-time editor sheet for a custom expression.</span>
      </span>
      <span data-ttu-id="95a02-102">La classe deve essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="95a02-102">This class must be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a02-103">Un editor di espressioni personalizzato consente allo sviluppatore di impostare le proprietà in un'espressione personalizzata in fase di progettazione.</span><span class="sxs-lookup"><span data-stu-id="95a02-103">A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</span></span> <span data-ttu-id="95a02-104">I valori delle proprietà di controllo possono essere impostati utilizzando stringhe di espressione. le stringhe di espressione vengono valutate in fase di esecuzione da un generatore di espressioni e in fase di progettazione da un editor di espressioni.</span><span class="sxs-lookup"><span data-stu-id="95a02-104">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</span></span>  
  
 <span data-ttu-id="95a02-105">Quando si Esplora il <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> proprietà per un controllo nella griglia delle proprietà in fase di progettazione, la finestra di progettazione visiva consente di visualizzare una finestra di dialogo per impostare le espressioni che forniscono il valore per una proprietà del controllo.</span><span class="sxs-lookup"><span data-stu-id="95a02-105">When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</span></span> <span data-ttu-id="95a02-106">È possibile selezionare il tipo dell'espressione in base a un elenco di prefissi di espressione.</span><span class="sxs-lookup"><span data-stu-id="95a02-106">You can select the expression type based on a list of expression prefixes.</span></span> <span data-ttu-id="95a02-107">Quando si seleziona un prefisso di espressione dall'elenco, la finestra di progettazione visiva utilizza l'oggetto associato <xref:System.Web.UI.Design.ExpressionEditor> e <xref:System.Web.UI.Design.ExpressionEditorSheet> oggetti da valutare e convertire la stringa dell'espressione in base alla sintassi per il tipo di espressione.</span><span class="sxs-lookup"><span data-stu-id="95a02-107">When you select an expression prefix from the list, the visual designer uses the associated <xref:System.Web.UI.Design.ExpressionEditor> and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to evaluate and convert the expression string based on the syntax for that type of expression.</span></span> <span data-ttu-id="95a02-108">Finestra di progettazione visiva Usa proprietà editor espressioni per la richiesta di una o più stringhe che combinano nella stringa di espressione personalizzata.</span><span class="sxs-lookup"><span data-stu-id="95a02-108">The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</span></span>  
  
 <span data-ttu-id="95a02-109">In genere, per fornire un nuovo tipo di espressione in fase di progettazione, si definisce un prefisso univoco e fornire personalizzata <xref:System.Web.Compilation.ExpressionBuilder> e <xref:System.Web.UI.Design.ExpressionEditor> implementazioni.</span><span class="sxs-lookup"><span data-stu-id="95a02-109">Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> implementations.</span></span> <span data-ttu-id="95a02-110">Facoltativamente, è possibile fornire un oggetto personalizzato <xref:System.Web.UI.Design.ExpressionEditorSheet> implementazione che definisce le proprietà che verranno utilizzate per formare l'espressione.</span><span class="sxs-lookup"><span data-stu-id="95a02-110">Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression.</span></span> <span data-ttu-id="95a02-111">Per associare un prefisso di espressione con un generatore di espressioni e un editor di espressioni, applicare il <xref:System.Web.Compilation.ExpressionEditorAttribute> attributo e un <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributo personalizzato <xref:System.Web.Configuration.ExpressionBuilder> classe e quindi configurare il prefisso dell'espressione per un generatore di espressioni il `expressionBuilders` elemento nel file di configurazione Web.</span><span class="sxs-lookup"><span data-stu-id="95a02-111">To associate an expression prefix with an expression builder and an expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute and an <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute to the custom <xref:System.Web.Configuration.ExpressionBuilder> class, and then configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="95a02-112">L'implementazione predefinita del <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> metodo restituisce una semplice pagina dell'editor, che usa una singola stringa di input in modo da formare l'espressione.</span><span class="sxs-lookup"><span data-stu-id="95a02-112">The default implementation of the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns a basic editor sheet, which uses a single input string to form the expression.</span></span> <span data-ttu-id="95a02-113">Gli editor di espressioni personalizzate che derivano dal <xref:System.Web.UI.Design.ExpressionEditor> possibile eseguire l'override di <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> per restituire un editor personalizzato di implementazione della pagina.</span><span class="sxs-lookup"><span data-stu-id="95a02-113">Custom expression editors that are derived from the <xref:System.Web.UI.Design.ExpressionEditor> can override the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span> <span data-ttu-id="95a02-114">In genere, una pagina dell'editor personalizzato contiene più proprietà che vengono usati per compilare la stringa dell'espressione.</span><span class="sxs-lookup"><span data-stu-id="95a02-114">Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</span></span> <span data-ttu-id="95a02-115">Il <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> metodo restituisce la stringa di espressione risultante in base alle proprietà dell'espressione corrente.</span><span class="sxs-lookup"><span data-stu-id="95a02-115">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns the resulting expression string based on the current expression properties.</span></span>  
  
 <span data-ttu-id="95a02-116">Ad esempio, il <xref:System.Web.UI.Design.ResourceExpressionEditor> classe deriva il <xref:System.Web.UI.Design.ExpressionEditor> classe e fornisce un'implementazione per la valutazione e associazione di un riferimento di stringa di risorsa con una proprietà del controllo in fase di progettazione.</span><span class="sxs-lookup"><span data-stu-id="95a02-116">For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</span></span> <span data-ttu-id="95a02-117">Il <xref:System.Web.Compilation.ResourceExpressionBuilder> classe è associato il prefisso dell'espressione `Resources` e il <xref:System.Web.UI.Design.ResourceExpressionEditor> implementazione.</span><span class="sxs-lookup"><span data-stu-id="95a02-117">The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation.</span></span> <span data-ttu-id="95a02-118">Il <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> metodo restituisce un <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, che definisce le proprietà singoli che costituiscono un'espressione di riferimento di risorsa.</span><span class="sxs-lookup"><span data-stu-id="95a02-118">The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.</span></span>  
  
 <span data-ttu-id="95a02-119">Quando si eredita dal <xref:System.Web.UI.Design.ExpressionEditorSheet> (classe), è necessario eseguire l'override dei membri seguenti:</span><span class="sxs-lookup"><span data-stu-id="95a02-119">When you inherit from the <xref:System.Web.UI.Design.ExpressionEditorSheet> class, you must override the following members:</span></span>  
  
-   <span data-ttu-id="95a02-120">Il <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> per restituire un editor personalizzato di implementazione della pagina.</span><span class="sxs-lookup"><span data-stu-id="95a02-120">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span>  
  
-   <span data-ttu-id="95a02-121">Il <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> costruttore per implementare le azioni di inizializzazione personalizzati per l'implementazione della pagina editor di espressioni.</span><span class="sxs-lookup"><span data-stu-id="95a02-121">The <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to implement custom initialization actions for your expression editor sheet implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="95a02-122">
        <para>Derivare un indicatore dell'editor di espressioni personalizzato dal <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> (classe), se si sta definendo un nuovo tipo di espressione per i valori delle proprietà di controllo e si desidera creare la stringa di espressione in base ai valori di proprietà più espressioni. Implementazione di una classe derivata deve contenere i seguenti elementi:-una proprietà pubblica per ogni valore distinto nella stringa di espressione che può essere impostata in fase di progettazione.  -Un'implementazione del <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metodo che costituisce la stringa di espressione personalizzata ai valori delle proprietà di editor.  -Facoltativamente, implementazione di un costruttore che imposta i valori iniziali dell'editor di proprietà.  La classe dell'editor espressioni personalizzato associato crea un'istanza della pagina dell'editor derivata nel <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> metodo, inizializza l'istanza con la stringa di espressione corrente impostato per la proprietà del controllo e restituisce l'istanza per la finestra di progettazione visiva. Finestra di progettazione visiva consente di impostare l'espressione di proprietà e chiama quindi il <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metodo in modo da formare la stringa dell'espressione ai valori delle proprietà di espressione di input.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="95a02-122">
          <para>Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values. A derived class implementation should contain the following:  -   A public property for each distinct value in the expression string that can be set at design time.  -   An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.  -   Optionally, a constructor implementation that sets the initial values of the editor sheet properties.  The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and returns the instance to the visual designer. The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="95a02-123">Implementazione del provider di servizi fornita dall'host di progettazione, utilizzata per ottenere ulteriori servizi in fase di progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95a02-123">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95a02-124">Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95a02-124">Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a02-125">Poiché il <xref:System.Web.UI.Design.ExpressionEditorSheet> classe è astratta, non è possibile creare un'istanza di un <xref:System.Web.UI.Design.ExpressionEditorSheet> utilizzando direttamente la <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="95a02-125">Because the <xref:System.Web.UI.Design.ExpressionEditorSheet> class is abstract, you cannot create an instance of an <xref:System.Web.UI.Design.ExpressionEditorSheet> directly using the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="95a02-126">
            <para>Quando si deriva dal <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> classe, eseguire l'override di <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> costruttore per implementare le azioni di inizializzazione personalizzati per l'implementazione della pagina editor di espressioni.  Ad esempio, una classe foglio editor espressioni personalizzato che implementa le proprietà di espressione aggiuntive possa definire i valori predefiniti per le proprietà dell'espressione nel <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> costruttore. Una classe foglio editor di espressioni personalizzato è possibile definire gli overload del costruttore pubblico aggiuntivi che utilizzano valori di parametro di input per impostare i valori iniziali per le proprietà dell'espressione.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="95a02-126">
              <para>When deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, override the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor to implement custom initialization actions for your expression editor sheet implementation.  For example, a custom expression editor sheet class that implements additional expression properties can define the default values for the expression properties in the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor. A custom expression editor sheet class can define additional public constructor overloads that use input parameter values to set the initial values for the expression properties.</para>
            </span>
          </span>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95a02-127">Se sottoposto a override in una classe derivata, restituisce la stringa di espressione formata dai valori della proprietà della pagina dell'editor di espressioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95a02-127">When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95a02-128">La stringa di espressione personalizzata per i valori delle proprietà correnti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95a02-128">The custom expression string for the current property values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a02-129">Un editor di espressioni personalizzato contiene le impostazioni in fase di progettazione per più proprietà dell'espressione, vengono combinate per formare una stringa dell'espressione.</span><span class="sxs-lookup"><span data-stu-id="95a02-129">A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</span></span> <span data-ttu-id="95a02-130">I valori delle proprietà di controllo possono essere impostati utilizzando stringhe di espressione. le stringhe di espressione vengono valutate in fase di esecuzione da un generatore di espressioni.</span><span class="sxs-lookup"><span data-stu-id="95a02-130">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</span></span>  
  
 <span data-ttu-id="95a02-131">Il <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> metodo restituisce una stringa di espressione che viene compilata dalle proprietà dell'espressione corrente.</span><span class="sxs-lookup"><span data-stu-id="95a02-131">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns an expression string that is built from the current expression properties.</span></span> <span data-ttu-id="95a02-132">Finestra di progettazione visiva consente di impostare l'espressione di proprietà e chiama quindi il <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> metodo per ottenere la stringa di espressione e impostare il valore della proprietà controllo.</span><span class="sxs-lookup"><span data-stu-id="95a02-132">The visual designer allows you to set the expression sheet properties, and then calls the <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method to get the expression string and set the control property value.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="95a02-133">
            <para>Derivare un indicatore dell'editor di espressioni personalizzato dal <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> (classe), se si sta definendo un nuovo tipo di espressione per i valori delle proprietà di controllo e si desidera creare la stringa di espressione in base ai valori di proprietà più espressioni. Implementazione di una classe derivata deve contenere i seguenti elementi:-una proprietà pubblica per ogni valore distinto nella stringa di espressione che può essere impostata in fase di progettazione.  -Un'implementazione del <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metodo che costituisce la stringa di espressione personalizzata ai valori delle proprietà di editor.  -Facoltativamente, implementazione di un costruttore che imposta i valori iniziali dell'editor di proprietà.  La classe dell'editor espressioni personalizzato associato crea un'istanza della pagina dell'editor derivata nel <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> metodo, inizializza l'istanza con la stringa di espressione corrente impostato per la proprietà del controllo e quindi restituisce l'istanza per l'oggetto visivo finestra di progettazione. Finestra di progettazione visiva consente di impostare l'espressione di proprietà e chiama quindi il <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metodo in modo da formare la stringa dell'espressione ai valori delle proprietà di espressione di input.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="95a02-133">
              <para>Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values. A derived class implementation should contain the following:  -   A public property for each distinct value in the expression string that can be set at design time.  -   An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.  -   Optionally, a constructor implementation that sets the initial values of the editor sheet properties.  The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and then returns the instance to the visual designer. The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95a02-134">Ottiene un valore che indica se la stringa di espressione è valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95a02-134">Gets a value that indicates whether the expression string is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95a02-135">
            <see langword="true" /> se la stringa di espressione è valida; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95a02-135">
              <see langword="true" />, if the expression string is valid; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a02-136">Questa implementazione di base restituisce sempre `true`.</span><span class="sxs-lookup"><span data-stu-id="95a02-136">This base implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95a02-137">Ottiene l'implementazione del provider di servizi utilizzata dalla pagina dell'editor di espressioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95a02-137">Gets the service provider implementation that is used by the expression editor sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95a02-138">Oggetto <see cref="T:System.IServiceProvider" />, in genere fornito dall'host di progettazione, che può essere utilizzato per ottenere ulteriori servizi in fase di progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95a02-138">An <see cref="T:System.IServiceProvider" />, typically provided by the design host, that can be used to obtain additional design-time services.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a02-139">Usare la <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> costruttore per impostare il <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementazione per un editor di espressioni personalizzate.</span><span class="sxs-lookup"><span data-stu-id="95a02-139">Use the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to set the <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementation for a custom expression editor sheet.</span></span>  
  
 <span data-ttu-id="95a02-140">Il <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> proprietà può essere utilizzata per accedere ai servizi forniti dall'host di progettazione.</span><span class="sxs-lookup"><span data-stu-id="95a02-140">The <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> property can be used to access services that are provided by the designer host.</span></span> <span data-ttu-id="95a02-141">Ad esempio, chiamare il <xref:System.IServiceProvider.GetService%2A> metodo con il <xref:System.Web.UI.Design.IWebApplication> interfaccia per accedere agli elementi di progetto, documenti o i dettagli di file di configurazione vengono forniti tramite la finestra di progettazione visiva.</span><span class="sxs-lookup"><span data-stu-id="95a02-141">For example, call the <xref:System.IServiceProvider.GetService%2A> method with the <xref:System.Web.UI.Design.IWebApplication> interface to access project items, documents, or configuration file details that are provided through the visual designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>