<Type Name="TemplateDefinition" FullName="System.Web.UI.Design.TemplateDefinition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3e4c5e3be4452391c650259f2857ab360c8d1c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589545" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TemplateDefinition : System.Web.UI.Design.DesignerObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateDefinition extends System.Web.UI.Design.DesignerObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.TemplateDefinition" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateDefinition&#xA;Inherits DesignerObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateDefinition : System::Web::UI::Design::DesignerObject" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.DesignerObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce proprietà e metodi che definiscono un elemento di modello in un controllo server Web in fase di progettazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Design.TemplateDefinition> fornisce una classe di definizione di modello di base che può essere ereditata ed esteso per una finestra di progettazione fornire supporto per i controlli basati su modelli in un host di progettazione, ad esempio utilizzare [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. Un host di progettazione utilizza le proprietà e metodi di <xref:System.Web.UI.Design.TemplateDefinition> classe per facilitare la creazione e modifica di un modello in fase di progettazione.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come derivare una classe personalizzata dalla <xref:System.Web.UI.Design.ControlDesigner> classe. Questa finestra di progettazione supporta un controllo con quattro possibili modelli.  
  
 Per una prova, aggiungere un riferimento all'assembly System.Design.dll, compilare il codice e quindi, in una host di progettazione, ad esempio [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], esaminare la pagina in visualizzazione progettazione. Selezionare il controllo, fare clic sull'elenco di azioni per selezionare un modello da modificare e quindi utilizzare la funzionalità di trascinamento e rilascio per spostare i controlli nel modello.  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
    <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Design.TemplateDefinition" />.</summary>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designer As ControlDesigner, name As String, templatedObject As Object, templatePropertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designer">Oggetto <see cref="T:System.Web.UI.Design.ControlDesigner" /> padre.</param>
        <param name="name">Nome del modello.</param>
        <param name="templatedObject">Oggetto contenente il modello.</param>
        <param name="templatePropertyName">Nome di proprietà che rappresenta questo modello nell'elenco **Proprietà** dell'host di progettazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Design.TemplateDefinition" />, utilizzando la finestra di progettazione, il nome di modello, il modello e il nome di proprietà forniti.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> è <see langword="null" />,  
  
 oppure  
  
 <paramref name="templatedObject" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, bool serverControlsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, bool serverControlsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designer As ControlDesigner, name As String, templatedObject As Object, templatePropertyName As String, serverControlsOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName, bool serverControlsOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="serverControlsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer">Oggetto <see cref="T:System.Web.UI.Design.ControlDesigner" /> padre.</param>
        <param name="name">Nome del modello.</param>
        <param name="templatedObject">Oggetto contenente il modello.</param>
        <param name="templatePropertyName">Nome di proprietà che rappresenta questo modello nell'elenco **Proprietà** dell'host di progettazione.</param>
        <param name="serverControlsOnly">Valore Boolean che indica se come contenuto del modello devono essere consentiti soltanto controlli server Web.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Design.TemplateDefinition" />, utilizzando la finestra di progettazione, il nome di modello, il modello e il nome di proprietà forniti e specificando se il contenuto del modello deve essere limitato a controlli server Web.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> è <see langword="null" />,  
  
 oppure  
  
 <paramref name="templatedObject" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName, System::Web::UI::WebControls::Style ^ style);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="designer">Oggetto <see cref="T:System.Web.UI.Design.ControlDesigner" /> padre.</param>
        <param name="name">Nome del modello.</param>
        <param name="templatedObject">Oggetto contenente il modello.</param>
        <param name="templatePropertyName">Nome di proprietà che rappresenta questo modello nell'elenco **Proprietà** dell'host di progettazione.</param>
        <param name="style">Oggetto <see cref="T:System.Web.UI.WebControls.Style" /> da applicare a ogni modello.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Design.TemplateDefinition" />, utilizzando la finestra di progettazione, il nome di modello, il modello, il nome di proprietà e l'oggetto <see cref="T:System.Web.UI.WebControls.Style" /> forniti.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> è <see langword="null" />,  
  
 oppure  
  
 <paramref name="templatedObject" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, System.Web.UI.WebControls.Style style, bool serverControlsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, class System.Web.UI.WebControls.Style style, bool serverControlsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName, System::Web::UI::WebControls::Style ^ style, bool serverControlsOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="serverControlsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer">Oggetto <see cref="T:System.Web.UI.Design.ControlDesigner" /> padre.</param>
        <param name="name">Nome del modello.</param>
        <param name="templatedObject">Oggetto contenente il modello.</param>
        <param name="templatePropertyName">Nome di proprietà che rappresenta questo modello nell'elenco **Proprietà** dell'host di progettazione.</param>
        <param name="style">Oggetto <see cref="T:System.Web.UI.WebControls.Style" /> da applicare a ogni modello.</param>
        <param name="serverControlsOnly">Valore Boolean che indica se il contenuto del modello deve essere limitato a controlli server Web.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Design.TemplateDefinition" />, utilizzando la finestra di progettazione, il nome di modello, il modello, il nome di proprietà e l'oggetto <see cref="T:System.Web.UI.WebControls.Style" /> forniti e specificando se il contenuto deve essere limitato a controlli server Web.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> è <see langword="null" />,  
  
 oppure  
  
 <paramref name="templatedObject" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="AllowEditing">
      <MemberSignature Language="C#" Value="public virtual bool AllowEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEditing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.AllowEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la modifica del contenuto deve essere attivata nel modello.</summary>
        <value>
          <see langword="true" /> se la modifica è consentita. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per modificare il valore predefinito, è necessario eseguire l'override di classi derivate di <xref:System.Web.UI.Design.TemplateDefinition.AllowEditing%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual string Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.Content" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Content As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Content { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il markup HTML che rappresenta il contenuto del modello.</summary>
        <value>Markup HTML per il contenuto del modello.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerControlsOnly">
      <MemberSignature Language="C#" Value="public bool ServerControlsOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ServerControlsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.ServerControlsOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerControlsOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ServerControlsOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera un valore che indica se il contenuto del modello deve essere limitato a controlli server Web, in base all'impostazione del costruttore <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" />. Questa proprietà è di sola lettura.</summary>
        <value>
          <see langword="true" /> se il contenuto è limitato a controlli server Web. In caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ Style { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera lo stile da applicare al modello, in base all'impostazione del costruttore <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" />. Questa proprietà è di sola lettura.</summary>
        <value>Un oggetto <see cref="T:System.Web.UI.WebControls.Style" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Web.UI.WebControls.Style> proprietà è di sola lettura, le proprietà del <xref:System.Web.UI.WebControls.Style> può essere impostato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDataBinding">
      <MemberSignature Language="C#" Value="public bool SupportsDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.SupportsDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o imposta un valore che indica se il modello supporta l'associazione dati.</summary>
        <value>
          <see langword="true" /> se il modello supporta l'associazione dati. In caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedObject">
      <MemberSignature Language="C#" Value="public object TemplatedObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TemplatedObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.TemplatedObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatedObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TemplatedObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera il componente in cui risiede il modello. Questa proprietà è di sola lettura.</summary>
        <value>Componente impostato in occasione della creazione della classe <see cref="T:System.Web.UI.Design.TemplateDefinition" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene questo <xref:System.Web.UI.Design.TemplateDefinition.TemplatedObject%2A> proprietà è di sola lettura, è possono impostare le proprietà e se <xref:System.Web.UI.Design.TemplateDefinition.AllowEditing%2A> è true, il contenuto può essere modificato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatePropertyName">
      <MemberSignature Language="C#" Value="public string TemplatePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.TemplatePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatePropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera il nome di proprietà per il modello che deve essere visualizzato dall'host di progettazione nella griglia delle proprietà.</summary>
        <value>Il nome del modello come dovrebbe essere visualizzato nel **proprietà** elenco di host di progettazione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>