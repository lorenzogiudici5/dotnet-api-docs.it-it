<Type Name="ResourceExpressionEditor" FullName="System.Web.UI.Design.ResourceExpressionEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d69c070d19dc7b93d0fcd5eff90a622d29d8db38" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37540463" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResourceExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditor&#xA;Inherits ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditor : System::Web::UI::Design::ExpressionEditor" />
  <TypeSignature Language="F#" Value="type ResourceExpressionEditor = class&#xA;    inherit ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce le proprietà e i metodi per la valutazione e la modifica di un'espressione della risorsa in fase di progettazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Design.ResourceExpressionEditor> deriva dalla classe di <xref:System.Web.UI.Design.ExpressionEditor> classe e fornisce un'implementazione per la valutazione e associazione di un riferimento a una risorsa a una proprietà del controllo in fase di progettazione. Ad esempio, è possibile associare il valore della proprietà di un controllo all'espressione di risorsa `Resources:submitText`, che indica che il valore della proprietà controllo è impostato usando la risorsa denominata `submitText`.  
  
 Host di una finestra di progettazione visiva, ad esempio [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], viene utilizzato il <xref:System.Web.UI.Design.ResourceExpressionEditor> classe per specificare una classe di risorse, chiave e valore predefinito della finestra di progettazione di un'espressione di risorsa e quindi valutare l'espressione della risorsa selezionata per il rendering in fase di progettazione.  
  
 Quando si Esplora il <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> proprietà per un controllo nella griglia delle proprietà in fase di progettazione, la finestra di progettazione visiva consente di visualizzare una finestra di dialogo per impostare le espressioni che forniscono il valore in fase di esecuzione per una proprietà del controllo. È possibile selezionare il tipo dell'espressione basato su un elenco di prefissi di espressione. Quando si seleziona il **le risorse** prefisso di espressione nell'elenco, la finestra di progettazione Usa visual il <xref:System.Web.UI.Design.ResourceExpressionEditor> metodi per impostare, valutare e convertire l'espressione in base alla sintassi di espressione di risorsa. La finestra di progettazione Usa il risultato dell'espressione valutata per assegnare i valori di proprietà che vengono sottoposti a rendering nell'area di progettazione del controllo.  
  
 La base <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=nameWithType> proprietà per un <xref:System.Web.Compilation.ResourceExpressionBuilder> restituisce la stringa `Resources`. Il <xref:System.Web.Compilation.ResourceExpressionBuilder> classe è associata il prefisso di espressione `Resources` e il <xref:System.Web.UI.Design.ResourceExpressionEditor> implementazione.  
  
 Il <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> metodo valuta un'espressione di risorsa di input. Il <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> restituzione del metodo di <xref:System.Web.UI.Design.ExpressionEditorSheet> implementazione che viene usato per selezionare il nome della risorsa, classe e il valore predefinito della finestra di progettazione e in modo da formare un'espressione di risorsa tra i valori di risorse selezionato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come associare le <xref:System.Web.UI.WebControls.HyperLink.Text%2A> proprietà di un <xref:System.Web.UI.WebControls.HyperLink> controllo a un'espressione di risorsa utilizzando il <xref:System.Web.UI.Design.ResourceExpressionEditor> classe.  
  
1.  In un progetto di Web Form, aggiungere un nuovo file di risorse denominato Strings. resx nella directory App_LocalResources.  
  
2.  Aggiungere una stringa denominata myLinkText al file di risorse Strings. resx e quindi impostare il valore per il testo per un <xref:System.Web.UI.WebControls.HyperLink> controllo.  
  
     Ad esempio, impostare il `myLinkText` valore stringa da `This is a good link`.  
  
3.  In una pagina Web Form, aggiungere un <xref:System.Web.UI.WebControls.HyperLink> controllo.  
  
4.  Per il `Hyperlink` controllo, nelle proprietà, fare clic su **espressioni**, quindi fare clic sul pulsante con puntini di sospensione (**... **).  
  
     Il `<Hyperlinkname>` **espressioni** verrà visualizzata la finestra di dialogo.  
  
5.  Sotto **proprietà associabili**, fare clic su **testo**e quindi il **tipo di espressione** elenco, immettere **risorse**.  
  
     Le proprietà dell'espressione risorse definite dal <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> classe visualizzata.  
  
6.  Sotto **proprietà dell'espressione** impostare **NomeClasse** a **stringhe**, che è il nome della classe per il file di risorse Strings. resx e set compilate **ResourceKey ** al **myLinkText**, ovvero il nome di stringhe in Strings. resx.  
  
 Usa la finestra di progettazione visiva le <xref:System.Web.UI.Design.ResourceExpressionEditor> assegnare l'espressione di risorsa per il `Text` proprietà. L'origine con estensione aspx seguente mostra un esempio di un valore della proprietà che viene impostato tramite un'espressione di risorsa.  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza di una classe <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Web.UI.Design.ResourceExpressionEditor> oggetto è configurato dalla classe di base con un <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> impostata su `Resources`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="resourceExpressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Espressione di risorsa da valutare. <c>expression</c> non include il prefisso di espressione <see langword="Resources" />.</param>
        <param name="parseTimeData">Oggetto che fornisce dati di analisi aggiuntivi, sotto forma di valore di <see cref="T:System.Web.Compilation.ResourceExpressionFields" />.</param>
        <param name="propertyType">Tipo della proprietà del controllo.</param>
        <param name="serviceProvider">Implementazione del provider di servizi fornita dall'host di progettazione, utilizzata per ottenere ulteriori servizi in fase di progettazione.</param>
        <summary>Valuta un'espressione di risorsa e fornisce il valore in fase di progettazione per una proprietà di un controllo.</summary>
        <returns>L'oggetto a cui viene fatto riferimento dalla stringa di espressione valutata, se la valutazione dell'espressione ha avuto esito positivo; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> Cerca la risorsa specificata dal metodo `expression`e quindi restituisce la risorsa.  
  
 Usa la finestra di progettazione visiva di <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> metodo per valutare un'espressione di risorsa e fornire il valore in fase di progettazione per una proprietà del controllo associato. In fase di esecuzione, il parser della pagina utilizza il <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> e <xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A> metodi dell'oggetto corrispondente <xref:System.Web.Compilation.ResourceExpressionBuilder> implementazione per valutare un'espressione e specificare il valore in fase di esecuzione per una proprietà del controllo associato.  
  
 La finestra di progettazione utilizza il <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A> metodo per analizzare la stringa di espressione in fase di progettazione e quindi chiama il <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> metodo con i dati dell'espressione analizzata.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionFields" />
        <altmember cref="Overload:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="resourceExpressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Espressione di risorsa utilizzata per inizializzare la pagina dell'editor di espressioni.</param>
        <param name="serviceProvider">Implementazione del provider di servizi fornita dall'host di progettazione, utilizzata per inizializzare la pagina dell'editor di espressioni.</param>
        <summary>Restituisce una pagina dell'editor di espressioni di risorsa inizializzata con la stringa di espressione di input e l'implementazione del provider di servizi.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> che definisce le proprietà dell'espressione di risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> metodo restituisce un editor di espressioni implementazione della pagina per le espressioni di risorse. L'host di progettazione visiva Usa la pagina dell'editor espressioni nella relativa finestra di dialogo di espressioni.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
  </Members>
</Type>