<Type Name="ExpressionEditor" FullName="System.Web.UI.Design.ExpressionEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6029f291d01ac72d8aad54c46a381e25a236c1c7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36390597" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditor abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definisce un set di proprietà e di metodi per la valutazione di un'espressione associata alla proprietà del controllo in fase di progettazione e per fornire una pagina dell'editor di espressioni all'host di progettazione visiva per l'utilizzo nella finestra di dialogo dell'editori di espressioni. Questa classe è astratta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Host di una finestra di progettazione, ad esempio [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], utilizza il <xref:System.Web.UI.Design.ExpressionEditor> classe per presentare un'espressione personalizzata pagine dell'editor per l'utente e quindi valutare l'espressione selezionata per il rendering in fase di progettazione.  
  
 Quando si Esplora il <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> proprietà per un controllo nella griglia delle proprietà in fase di progettazione, la finestra di progettazione visiva consente di visualizzare una finestra di dialogo per impostare le espressioni per una proprietà del controllo. È possibile selezionare il tipo dell'espressione in base a un elenco di prefissi di espressione. Quando si seleziona un prefisso di espressione dall'elenco, la finestra di progettazione visiva utilizza l'oggetto associato <xref:System.Web.UI.Design.ExpressionEditor> e <xref:System.Web.UI.Design.ExpressionEditorSheet> oggetti da impostare, valutare e convertire la stringa di espressione in base alla sintassi per il tipo di espressione. Finestra di progettazione visiva imposta l'espressione per la proprietà del controllo associato e quindi utilizza il risultato dell'espressione valutata per assegnare i valori delle proprietà vengono visualizzati nell'area di progettazione del controllo.  
  
 Il metodo statico <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> metodi ottengono l'editor di espressioni che è associato un prefisso specifico o di un generatore di espressioni. Il <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> proprietà per un <xref:System.Web.UI.Design.ExpressionEditor> oggetto restituisce il prefisso di espressione configurato. Il <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> metodo restituisce una stringa di espressione di input. Il <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> metodo restituisce il <xref:System.Web.UI.Design.ExpressionEditorSheet> implementazione che viene usato per richiedere per le proprietà di un'espressione personalizzata nella finestra di dialogo espressioni.  
  
 In genere, per supportare un nuovo tipo di espressione in fase di progettazione, si definisce un prefisso univoco e fornire personalizzata <xref:System.Web.Compilation.ExpressionBuilder> e <xref:System.Web.UI.Design.ExpressionEditor> implementazioni. Facoltativamente, è possibile fornire un oggetto personalizzato <xref:System.Web.UI.Design.ExpressionEditorSheet> implementazione che definisce le proprietà che verranno utilizzate per formare l'espressione nella finestra di dialogo espressioni.  
  
 Il prefisso dell'espressione identifica il tipo di espressione personalizzata e la associa un'espressione con il generatore di espressioni e l'editor di espressioni. Quando le espressioni personalizzate vengono analizzate in una pagina, il prefisso dell'espressione viene utilizzato per creare istanze dell'oggetto associato <xref:System.Web.Compilation.ExpressionBuilder> e <xref:System.Web.UI.Design.ExpressionEditor> classi. Per associare un prefisso di espressione con un generatore di espressioni e l'editor di espressioni, applicare il <xref:System.Web.Compilation.ExpressionEditorAttribute> e <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributi per l'oggetto personalizzato <xref:System.Web.Compilation.ExpressionBuilder> classe e configurare il prefisso dell'espressione per un generatore di espressioni di `expressionBuilders` elemento nel file di configurazione Web. Il prefisso non è necessaria, ma consigliato.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come derivare il <xref:System.Web.UI.Design.ExpressionEditor> classe per definire un editor di espressioni personalizzato.  
  
 [!code-csharp[CustomExpressionEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/customexpressioneditor/cs/CustomAppSettingsExpression.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>I passaggi seguenti sono necessari quando si deriva una classe personalizzata <see cref="T:System.Web.UI.Design.ExpressionEditor" /> classe:-eseguire l'Override di <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> metodo per valutare il tipo di espressioni personalizzato in fase di progettazione.  -Facoltativamente, eseguire l'override di <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> per restituire una classe personalizzata che definisce le proprietà che vengono combinate per formare l'espressione personalizzata.  -Applica il <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> dell'attributo IsDefault sul <see cref="T:System.Web.Compilation.ExpressionBuilder" /> classe dichiarazione per associare il generatore di espressioni personalizzato alla classe dell'editor di espressione derivati.  Ad esempio, il <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> classe deriva il <see cref="T:System.Web.UI.Design.ExpressionEditor" /> classe e fornisce un'implementazione per la valutazione e associazione di un riferimento di stringa di risorsa con una proprietà del controllo in fase di progettazione. Il <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" /> classe è associato il prefisso dell'espressione <see langword="Resources" /> e il <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> implementazione. Il <see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> metodo restituisce un <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />, che definisce le proprietà singoli che costituiscono un'espressione di riferimento di risorsa.</para>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché il <xref:System.Web.UI.Design.ExpressionEditor> classe è astratta, non è possibile creare un'istanza del <xref:System.Web.UI.Design.ExpressionEditor> classe utilizzando direttamente la <xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A> costruttore.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si deriva dal <see cref="T:System.Web.UI.Design.ExpressionEditor" /> classe, eseguire l'override di <see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" /> costruttore per implementare le azioni di inizializzazione personalizzati per l'implementazione di editor di espressioni.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="expressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Stringa di espressione da valutare. L'espressione non include il prefisso di espressione.</param>
        <param name="parseTimeData">Oggetto contenente informazioni di analisi aggiuntive per la valutazione del parametro <c>expression</c>. Solitamente viene fornito dal generatore di espressioni.</param>
        <param name="propertyType">Tipo di proprietà di controllo a cui è associato il parametro <c>expression</c>.</param>
        <param name="serviceProvider">Implementazione del provider di servizi fornita dall'host di progettazione, utilizzata per ottenere ulteriori servizi in fase di progettazione.</param>
        <summary>Valuta una stringa di espressione e fornisce il valore in fase di progettazione per una proprietà del controllo.</summary>
        <returns>L'oggetto a cui viene fatto riferimento dalla stringa di espressione valutata, se la valutazione dell'espressione ha avuto esito positivo; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'host della finestra di progettazione visiva utilizza il <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> metodo valutare un'espressione e fornire il valore in fase di progettazione per una proprietà del controllo associato.  
  
 Utilizza la finestra di progettazione visiva la <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType> metodo per analizzare la stringa di espressione in fase di progettazione, quindi chiama il <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> metodo con i dati dell'espressione analizzata. Finestra di progettazione visiva utilizza il risultato dell'espressione valutata per assegnare i valori delle proprietà che vengono visualizzati nell'area di progettazione del controllo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le classi che derivano dal <see cref="T:System.Web.UI.Design.ExpressionEditor" /> classe deve eseguire l'override di <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> metodo per valutare il tipo di espressioni personalizzato in fase di progettazione.  Come minimo, un <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> implementazione deve utilizzare i passaggi seguenti: 1.  Valutare la stringa di espressione e determinare l'oggetto cui viene fatto riferimento dall'espressione.  2.  Restituire <see langword="null" />, se la stringa di espressione non può essere valutata.  3.  Usare la <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> metodo su <paramref name="propertyType" /> per determinare se l'oggetto di riferimento può essere assegnato direttamente al tipo di proprietà di controllo e quindi, in base al risultato, completare una delle azioni seguenti: - se l'oggetto di riferimento può essere assegnato direttamente alla proprietà del controllo, restituire l'oggetto di riferimento per l'espressione.  -Se l'oggetto di riferimento è un tipo semplice, ad esempio una stringa, restituire l'oggetto di riferimento.  -In caso contrario, determinare se l'oggetto di riferimento può essere assegnato a o convertito nel tipo di proprietà.  4.  Usare la <see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" /> metodo sul <see cref="T:System.ComponentModel.TypeConverter" /> dell'oggetto per <paramref name="propertyType" /> per determinare se l'oggetto di riferimento può essere convertito nel tipo di proprietà del controllo, quindi, in base al risultato, completare una delle azioni seguenti: - se l'oggetto può essere convertito nel tipo di proprietà di controllo, restituire l'oggetto convertito usando il <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> metodo.  -Se l'oggetto di riferimento non può essere assegnato o convertito in <paramref name="propertyType" />, restituire l'oggetto di riferimento.  Facoltativamente, il <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> implementazione può utilizzare il <paramref name="parseTimeData" /> oggetto fornito dal <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> implementazione per ottimizzare o favorire la valutazione della stringa di espressione di input.</para>
        </block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il prefisso di espressione che identifica le stringhe di espressione supportate dall'implementazione dell'editor di espressioni.</summary>
        <value>Una stringa che rappresenta il prefisso per le espressioni supportate dalla classe derivata dalla classe <see cref="T:System.Web.UI.Design.ExpressionEditor" />; una stringa vuota ("") se all'editor di espressioni non è associato un prefisso di espressione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il prefisso dell'espressione identifica il tipo di espressione personalizzata e la associa un'espressione con il generatore di espressioni e l'editor di espressioni. Quando le espressioni personalizzate vengono analizzate in una pagina, il prefisso dell'espressione viene utilizzato per creare istanze dell'oggetto associato <xref:System.Web.Compilation.ExpressionBuilder> e <xref:System.Web.UI.Design.ExpressionEditor> classi. Per associare un prefisso di espressione con un generatore di espressioni e l'editor di espressioni, applicare il <xref:System.Web.Compilation.ExpressionEditorAttribute> e <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributi per l'oggetto personalizzato <xref:System.Web.Compilation.ExpressionBuilder> classe e configurare il prefisso dell'espressione per un generatore di espressioni di `expressionBuilders` elemento nel file di configurazione Web.  
  
 In genere, le classi derivate non esegue l'override di <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> proprietà. La base <xref:System.Web.UI.Design.ExpressionEditor> classe set il <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> valore in base il <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributo per la proprietà associata <xref:System.Web.Compilation.ExpressionBuilder> oggetto.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExpressionEditor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un'implementazione di <see cref="T:System.Web.UI.Design.ExpressionEditor" /> associata a un prefisso di espressione o a un generatore di espressioni.</summary>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(string expressionPrefix, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionPrefix As String, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(System::String ^ expressionPrefix, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionPrefix, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">Il prefisso di espressione utilizzato per trovare l'editor di espressioni associato.</param>
        <param name="serviceProvider">Implementazione del provider di servizi fornita dall'host di progettazione, utilizzata per ottenere ulteriori servizi in fase di progettazione.</param>
        <summary>Restituisce un'implementazione di <see cref="T:System.Web.UI.Design.ExpressionEditor" /> associata al prefisso di espressione specificato.</summary>
        <returns>Implementazione di <see cref="T:System.Web.UI.Design.ExpressionEditor" /> associata a <paramref name="expressionPrefix" />; in caso contrario, <see langword="null" />, se <paramref name="expressionPrefix" /> non è stato definito o associato a <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il metodo statico <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> overload del metodo per trovare il <xref:System.Web.UI.Design.ExpressionEditor> oggetto associato a un prefisso specifico o il tipo di generatore di espressioni.  
  
 Per ogni tipo di espressioni personalizzato, un prefisso di espressione identifica il generatore di espressioni associato e l'editor di espressioni. Quando le espressioni personalizzate vengono analizzate in una pagina, il prefisso dell'espressione viene utilizzato per creare istanze dell'oggetto associato <xref:System.Web.Compilation.ExpressionBuilder> e <xref:System.Web.UI.Design.ExpressionEditor> classi.  
  
 Per associare un prefisso di espressione con un generatore di espressioni e l'editor di espressioni, applicare il <xref:System.Web.Compilation.ExpressionEditorAttribute> e <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributi per l'oggetto personalizzato <xref:System.Web.Compilation.ExpressionBuilder> classe e configurare il prefisso dell'espressione per un generatore di espressioni di `expressionBuilders` elemento nel file di configurazione Web.  
  
 Per trovare l'espressione associata editor per un prefisso, il <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> metodo enumera disponibili <xref:System.Web.Compilation.ExpressionBuilder> implementazioni per un prefisso corrispondente. Il <xref:System.Web.Compilation.ExpressionBuilder> implementazioni possono essere configurate nel `expressionBuilders` sezione del file di configurazione Web. Se è disponibile un <xref:System.Web.Compilation.ExpressionBuilder> implementazione definisce il prefisso dell'espressione, il <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> metodo restituisce il tipo specificato nella <xref:System.Web.Compilation.ExpressionEditorAttribute> attributo del <xref:System.Web.Compilation.ExpressionBuilder> dei metadati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceProvider" /> è <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(class System.Type expressionBuilderType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionBuilderType As Type, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(Type ^ expressionBuilderType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : Type * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionBuilderType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionBuilderType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionBuilderType">Il tipo della classe generatore di espressioni derivata, utilizzato per trovare l'editor di espressioni associato.</param>
        <param name="serviceProvider">Implementazione del provider di servizi fornita dall'host di progettazione, utilizzata per ottenere ulteriori servizi in fase di progettazione.</param>
        <summary>Restituisce un'implementazione di <see cref="T:System.Web.UI.Design.ExpressionEditor" /> associata al prefisso di generatore di espressioni specificato.</summary>
        <returns>Implementazione di <see cref="T:System.Web.UI.Design.ExpressionEditor" /> associata a <paramref name="expressionBuilderType" />; in caso contrario, <see langword="null" />, se <paramref name="expressionBuilderType" /> non può essere individuato o non dispone di un oggetto <see cref="T:System.Web.UI.Design.ExpressionEditor" /> associato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il metodo statico <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> overload per trovare il <xref:System.Web.UI.Design.ExpressionEditor> oggetto associato a un prefisso specifico o il tipo di generatore di espressioni.  
  
 Per ogni tipo di espressioni personalizzato, un prefisso di espressione identifica il generatore di espressioni associato e l'editor di espressioni. Quando le espressioni personalizzate vengono analizzate in una pagina, il prefisso dell'espressione viene utilizzato per creare istanze dell'oggetto associato <xref:System.Web.Compilation.ExpressionBuilder> e <xref:System.Web.UI.Design.ExpressionEditor> classi.  
  
 Per associare un prefisso di espressione con un generatore di espressioni e l'editor di espressioni, applicare il <xref:System.Web.Compilation.ExpressionEditorAttribute> e <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributi per l'oggetto personalizzato <xref:System.Web.Compilation.ExpressionBuilder> classe e configurare il prefisso dell'espressione per un generatore di espressioni di `expressionBuilders` elemento nel file di configurazione Web.  
  
 Il <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> metodo enumera disponibili <xref:System.Web.Compilation.ExpressionBuilder> implementazioni individuare `expressionBuilderType`. Il <xref:System.Web.Compilation.ExpressionBuilder> implementazioni possono essere configurate nel `expressionBuilders` sezione del file di configurazione Web. Se `expressionBuilderType` viene trovato nel set di disponibilità <xref:System.Web.Compilation.ExpressionBuilder> implementazioni, la <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> metodo restituisce il tipo specificato nella <xref:System.Web.Compilation.ExpressionEditorAttribute> attributo del <xref:System.Web.Compilation.ExpressionBuilder> metadati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expressionBuilderType" /> è <see langword="null" />.  \- o -  <paramref name="serviceProvider" /> è <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet&#xA;override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="expressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Stringa di espressione impostata per una proprietà di un controllo, utilizzata per inizializzare la pagina dell'editor di espressioni.</param>
        <param name="serviceProvider">Implementazione del provider di servizi fornita dall'host di progettazione, utilizzata per ottenere ulteriori servizi in fase di progettazione.</param>
        <summary>Restituisce una pagina dell'editor di espressioni associata all'editor di espressioni corrente.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> che definisce le proprietà dell'espressione personalizzata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> metodo restituisce un <xref:System.Web.UI.Design.ExpressionEditorSheet> implementazione che definisca le stringhe che vengono combinate per formare un'espressione personalizzata. Finestra di progettazione visiva utilizza un editor di espressioni per la richiesta di una o più stringhe che combinano in un'espressione personalizzata. Il metodo di classe di base restituisce un valore predefinito dell'editor di espressioni, che usa una singola stringa di input in modo da formare l'espressione. L'editor di espressioni definisce la griglia delle proprietà per l'espressione. Pertanto, le proprietà che espone l'editor espressioni diventano le proprietà che possono essere definite per l'espressione nella finestra di dialogo.  
  
 Le classi che derivano dal <xref:System.Web.UI.Design.ExpressionEditor> classe facoltativamente possibile eseguire l'override di <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> metodo per fornire un editor di espressioni personalizzate. Un editor di espressioni personalizzate possono consentire a un input in fase di progettazione per più proprietà, vengono combinate per formare la stringa dell'espressione.  
  
 Ad esempio, il <xref:System.Web.UI.Design.ResourceExpressionEditor> classe deriva il <xref:System.Web.UI.Design.ExpressionEditor> classe e fornisce un'implementazione per la valutazione e associazione di un riferimento di stringa di risorsa con una proprietà del controllo in fase di progettazione. Il <xref:System.Web.Compilation.ResourceExpressionBuilder> classe è associato il prefisso dell'espressione `Resources` e il <xref:System.Web.UI.Design.ResourceExpressionEditor> implementazione. Il <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, che definisce le proprietà singoli che costituiscono un'espressione di riferimento di risorsa.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>In genere, per fornire un nuovo tipo di espressione in fase di progettazione, si definisce un prefisso univoco e fornire personalizzata <see cref="T:System.Web.Compilation.ExpressionBuilder" /> e <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementazioni. Facoltativamente, è possibile fornire un oggetto personalizzato <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> implementazione che definisce le proprietà che verranno utilizzate per formare l'espressione. Anche se il file di configurazione definisce il prefisso, è consigliabile applicare anche un <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> oggetto e un <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> oggetto.  Eseguire l'override di <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> per restituire un editor di espressioni che definisce l'input in fase di progettazione per più proprietà in un'espressione personalizzata. Quando si seleziona una proprietà del controllo e il tipo di editor espressioni, la finestra di progettazione chiama il <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> (metodo), quindi fornisce stringa che rappresenta l'espressione corrente impostato per la proprietà del controllo. Utilizzare <paramref name="expression" /> per impostare i valori iniziali per le proprietà dell'espressione. Utilizzare <paramref name="serviceProvider" /> per inizializzare un costruttore di foglio di espressioni personalizzato e di accedere ai servizi forniti dall'host di progettazione. Ad esempio, chiamare il <see cref="M:System.IServiceProvider.GetService(System.Type)" /> metodo con il <see cref="T:System.Web.UI.Design.IWebApplication" /> tipo per accedere agli elementi di progetto, documenti o i dettagli di file di configurazione vengono forniti tramite la finestra di progettazione visiva.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>