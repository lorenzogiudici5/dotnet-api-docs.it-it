<Type Name="ExpressionsCollectionConverter" FullName="System.Web.UI.Design.ExpressionsCollectionConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f90c866f68cec759a76dba10044b105632f918b9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36390584" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExpressionsCollectionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionsCollectionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionsCollectionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionsCollectionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionsCollectionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type ExpressionsCollectionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un convertitore di tipi per gli insiemi di associazioni di espressioni.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Design.ExpressionsCollectionConverter> classe converte un <xref:System.Web.UI.ExpressionBindingCollection> in una stringa per la griglia di modifica delle proprietà in fase di progettazione, che viene sempre visualizzata come una stringa vuota ("").  
  
 Un host di progettazione, ad esempio [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], Usa la <xref:System.Web.Compilation.ExpressionBuilder> e <xref:System.Web.UI.Design.ExpressionEditor> classe implementazioni con il <xref:System.Web.UI.Design.ExpressionsCollectionEditor> e <xref:System.Web.UI.Design.ExpressionsCollectionConverter> classi per impostare le associazioni di espressioni per le proprietà del controllo in fase di progettazione e la <xref:System.Web.UI.Design.ControlPersister> per rendere persistenti le espressioni in fase di esecuzione. Stringhe di espressione di fare riferimento a una risorsa localizzabile, un'impostazione dell'applicazione, una stringa di connessione o un tipo di espressione personalizzata. La stringa dell'espressione è associata alla proprietà del controllo in fase di progettazione e quindi utilizzata in fase di esecuzione per determinare il valore della proprietà.  
  
> [!NOTE]
>  Non è necessario accedere direttamente un convertitore di tipi. Questa implementazione di <xref:System.ComponentModel.TypeConverter> è disponibile solo per uso da un <xref:System.Web.UI.ExpressionBindingCollection> oggetto in fase di progettazione.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.Web.UI.ExpressionBindingCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionsCollectionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionsCollectionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Design.ExpressionsCollectionConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Non è necessario accedere direttamente un convertitore di tipi. Questa implementazione di <xref:System.ComponentModel.TypeConverter> è disponibile solo per uso da un <xref:System.Web.UI.ExpressionBindingCollection> oggetto in fase di progettazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="expressionsCollectionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che indica il componente o il controllo a cui appartiene l'insieme di associazioni di espressioni.</param>
        <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che può essere utilizzato per fornire ulteriori informazioni sulle impostazioni cultura.</param>
        <param name="value">Oggetto da convertire.</param>
        <param name="destinationType">Tipo in cui eseguire la conversione.</param>
        <summary>Converte nel tipo specificato un insieme di associazioni di espressioni.</summary>
        <returns>Se <paramref name="destinationType" /> non è di tipo <see cref="T:System.String" />, l'oggetto prodotto dalla conversione dei tipi; in caso contrario, se <paramref name="destinationType" /> è una stringa, una stringa vuota ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Non è necessario accedere direttamente un convertitore di tipi. Questa implementazione di <xref:System.ComponentModel.TypeConverter> è disponibile solo per uso da un <xref:System.Web.UI.ExpressionBindingCollection> oggetto in fase di progettazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="T:System.Web.UI.ExpressionBindingCollection" />
      </Docs>
    </Member>
  </Members>
</Type>