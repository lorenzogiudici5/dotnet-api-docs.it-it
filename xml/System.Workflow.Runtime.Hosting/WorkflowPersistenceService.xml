<Type Name="WorkflowPersistenceService" FullName="System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c742a078c39671956d687e07cbccd410cf37853f" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39821073" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowPersistenceService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowPersistenceService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowPersistenceService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type WorkflowPersistenceService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Le classe di base astratta dalla quale vengono derivati tutti i servizi di persistenza.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Quando si verificano determinate condizioni mentre il flusso di lavoro è in esecuzione, il motore di runtime del flusso di lavoro imposta come persistenti le informazioni sullo stato relative all'istanza del flusso di lavoro. Può verificarsi la persistenza, ad esempio, quando finisce una transazione atomica, quando l'istanza del flusso di lavoro diventa inattiva, quando l'host chiama <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> sull'istanza del flusso di lavoro o quando un'istanza del flusso di lavoro viene terminata o si conclude. Quando la semantica del motore di runtime del flusso di lavoro stabilisce che si verifichi la persistenza, il motore di runtime del flusso di lavoro chiama i metodi forniti da un servizio di persistenza per salvare le informazioni sullo stato relative all'istanza del flusso di lavoro. Analogamente, quando il motore di runtime del flusso di lavoro deve ripristinare un'istanza del flusso di lavoro precedentemente impostata come persistente, chiama i metodi forniti da un servizio di persistenza per caricare queste informazioni sullo stato. Il motore di runtime del flusso di lavoro gestisce tutta la semantica che definisce quando eseguire la persistenza. Il servizio di persistenza gestisce le operazioni di salvataggio e caricamento delle informazioni sullo stato del flusso di lavoro da o verso un archivio dati.  
  
 È possibile creare un servizio di persistenza derivando una classe dalla classe <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>.  È possibile aggiungere il servizio di persistenza al motore di runtime del flusso di lavoro chiamando <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> o creando una voce adatta nel file di configurazione dell'applicazione. <xref:System.Workflow.Runtime.WorkflowRuntime> deve contenere solo un servizio di persistenza. In Windows Workflow Foundation è disponibile la classe <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, un servizio di persistenza predefinito che può essere utilizzato direttamente o dopo essere stato esteso.  
  
 Il motore di runtime del flusso di lavoro dispone della semantica necessaria per bloccare le informazioni sullo stato del flusso di lavoro negli ambienti in cui i servizi di persistenza che sono in esecuzione in processi diversi possono avere accesso a un solo archivio dati. La classe <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> fornisce le capacità necessarie per supportare questa funzionalità del motore di runtime del flusso di lavoro fornendo un parametro a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> che specifica se le informazioni sullo stato di un'istanza del flusso di lavoro devono essere sbloccate nell'archivio dati, e fornendo un metodo <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> per sbloccare informazioni sullo stato del flusso di lavoro precedentemente bloccate. In un servizio di persistenza che implementa il blocco, una chiamata a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> deve bloccare le informazioni sullo stato per un'istanza del flusso di lavoro.  
  
 Il servizio di persistenza deve generare un'eccezione <xref:System.Workflow.Runtime.Hosting.PersistenceException> se non riesce a salvare informazioni sullo stato nell'archivio dati o a caricare informazioni sullo stato dall'archivio dati. Questo è il comportamento previsto dal motore di runtime del flusso di lavoro.  
  
 Un meccanismo di inclusione in batch è disponibile per i servizi che utilizzano un archivio durevole per salvare le informazioni sullo stato del flusso di lavoro. È importante in questi casi mantenere la coerenza tra l'archivio durevole utilizzato dal servizio di persistenza e lo stato interno del motore di runtime del flusso di lavoro. È possibile aggiungere la funzionalità definita dall'interfaccia <xref:System.Workflow.Runtime.IPendingWork> al servizio e quindi partecipare all'inclusione in batch delle transazioni del flusso di lavoro fornita da <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> aggiungendo modifiche all'archivio dati come elementi di lavoro in <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>. Anche l'archivio durevole deve implementare l'interfaccia <xref:System.Transactions.IEnlistmentNotification>, in modo che le informazioni del flusso di lavoro non vengano erroneamente rese persistenti nel caso di un rollback della transazione. Per altre informazioni, vedere <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A> o <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowPersistenceService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowPersistenceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Quando viene implementato in una classe derivata, inizializza una nuova istanza della classe <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un'istanza della classe `SqlWorkflowPersistenceService` (derivata da `WorkflowPersistenceService`). Questo esempio è tratto dall'esempio SDK Nested Exception Handlers, dalla classe Program.cs.  Per altre informazioni, vedere la [esempio di gestori di eccezioni annidati](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).  
  
 [!code-csharp[WF_Samples#161](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#161)]
 [!code-vb[WF_Samples#161](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static byte[] GetDefaultSerializedForm (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig unsigned int8[] GetDefaultSerializedForm(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Byte&gt; ^ GetDefaultSerializedForm(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetDefaultSerializedForm : System.Workflow.ComponentModel.Activity -&gt; byte[]" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <see cref="T:System.Workflow.ComponentModel.Activity" /> di cui è richiesto il form serializzato.</param>
        <summary>Recupera il form predefinito serializzato di <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
        <returns>Form predefinito serializzato di <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsBlocked">
      <MemberSignature Language="C#" Value="protected internal static bool GetIsBlocked (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool GetIsBlocked(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetIsBlocked (rootActivity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool GetIsBlocked(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetIsBlocked : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">Attività radice dell'istanza del flusso di lavoro.</param>
        <summary>Indica se l'attività specificata è bloccata.</summary>
        <returns>
          <see langword="true" /> se l'attività specificata è bloccata; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSuspendOrTerminateInfo">
      <MemberSignature Language="C#" Value="protected internal static string GetSuspendOrTerminateInfo (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig string GetSuspendOrTerminateInfo(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetSuspendOrTerminateInfo (rootActivity As Activity) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::String ^ GetSuspendOrTerminateInfo(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetSuspendOrTerminateInfo : System.Workflow.ComponentModel.Activity -&gt; string" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">Attività radice dell'istanza del flusso di lavoro.</param>
        <summary>Recupera le informazioni di chiusura o sospensione dell'attività specificata.</summary>
        <returns>Un elemento <see cref="T:System.String" /> che contiene le informazioni di chiusura o sospensione.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowStatus">
      <MemberSignature Language="C#" Value="protected internal static System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig valuetype System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetWorkflowStatus (rootActivity As Activity) As WorkflowStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::Workflow::Runtime::WorkflowStatus GetWorkflowStatus(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetWorkflowStatus : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.Runtime.WorkflowStatus" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">Attività radice dell'istanza del flusso di lavoro.</param>
        <summary>Recupera lo stato del flusso di lavoro.</summary>
        <returns>Valore dell'enumerazione <see cref="T:System.Workflow.Runtime.WorkflowStatus" /> che indica lo stato del flusso di lavoro.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid scopeId, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadCompletedContextActivity(valuetype System.Guid scopeId, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadCompletedContextActivity (scopeId As Guid, outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadCompletedContextActivity(Guid scopeId, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="abstract member LoadCompletedContextActivity : Guid * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadCompletedContextActivity (scopeId, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="scopeId">
          <see cref="T:System.Guid" /> dell'ambito completato.</param>
        <param name="outerActivity">Un oggetto <see cref="T:System.Workflow.ComponentModel.Activity" /> che rappresenta l'attività che racchiude l'ambito completato.</param>
        <summary>Se implementato in una classe derivata, carica di nuovo l'ambito completato specificato in memoria.</summary>
        <returns>Classe <see cref="T:System.Workflow.ComponentModel.Activity" /> che rappresenta l'ambito compilato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il motore di runtime del flusso di lavoro utilizza <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> per implementare la compensazione. È necessario ripristinare una copia identica dell'ambito completato. Per questo scopo, è necessario ripristinare un <xref:System.IO.Stream> valido dalla rappresentazione dell'ambito completato nell'archivio dati. Quindi è necessario passare <xref:System.IO.Stream> a uno dei metodi di overload di <xref:System.Workflow.ComponentModel.Activity.Load%2A> per eseguire la deserializzazione dell'ambito.  
  
 Se il servizio di persistenza non può caricare l'ambito completato dall'archivio dati, deve generare un'eccezione <xref:System.Workflow.Runtime.Hosting.PersistenceException> con un messaggio adatto.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione del metodo `LoadCompletedContextActivity`. Questo esempio è tratto dall'esempio SDK Custom Persistence Service nel file FilePersistenceService.cs. Per altre informazioni, vedere [esempio di servizio di persistenza personalizzato](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadWorkflowInstanceState (instanceId As Guid) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadWorkflowInstanceState(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member LoadWorkflowInstanceState : Guid -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadWorkflowInstanceState instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <see cref="T:System.Guid" /> dell'attività radice dell'istanza del flusso di lavoro.</param>
        <summary>Se implementato in una classe derivata, carica di nuovo lo stato specificato dell'istanza del flusso di lavoro in memoria.</summary>
        <returns>
          <see cref="T:System.Workflow.ComponentModel.Activity" /> che rappresenta l'attività radice dell'istanza del flusso di lavoro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario ripristinare una copia identica dell'attività. Per questo scopo, è necessario ripristinare un <xref:System.IO.Stream> valido dalla rappresentazione dell'istanza del flusso di lavoro nell'archivio dati; quindi è necessario passare questo <xref:System.IO.Stream> a uno dei metodi <xref:System.Workflow.ComponentModel.Activity.Load%2A> di overload per deserializzare lo stato dell'istanza del flusso di lavoro. Se il servizio di persistenza non può caricare lo stato dell'istanza del flusso di lavoro dall'archivio dati, deve generare un'eccezione <xref:System.Workflow.Runtime.Hosting.PersistenceException> con un messaggio adatto.  
  
 Il motore di runtime del flusso di lavoro implementa la semantica di blocco per limitare l'accesso allo stato di un'istanza del flusso di lavoro salvato in un archivio dati. L'accesso può essere eseguito dai servizi di persistenza che sono in esecuzione in più processi. La semantica di blocco è progettata per impedire il caricamento della stessa istanza del flusso di lavoro in memoria contemporaneamente a servizi di persistenza in esecuzione in due processi diversi. A seconda del tipo di ambiente supportato dal servizio di persistenza, è possibile scegliere se supportare questa funzionalità. Se si sceglie di supportare la semantica di blocco della fase di esecuzione e questo stato dell'istanza del flusso di lavoro è stato precedentemente bloccato da un altro processo, è necessario generare un'eccezione <xref:System.Workflow.Runtime.WorkflowOwnershipException>. In caso contrario, è necessario bloccare l'accesso allo stato dell'istanza del flusso di lavoro nell'archivio dati. Lo stato dell'istanza del flusso di lavoro può essere sbloccato mediante una chiamata a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> oppure a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> con il parametro di sblocco impostato su `true`.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione del metodo `LoadWorkflowInstanceState`. Questo esempio è tratto dall'esempio SDK Custom Persistence Service nel file FilePersistenceService.cs. Per altre informazioni, vedere [esempio di servizio di persistenza personalizzato](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).  
  
 [!code-csharp[WF_Samples#266](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#266)]
 [!code-vb[WF_Samples#266](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#266)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFromDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm (byte[] activityBytes, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm(unsigned int8[] activityBytes, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RestoreFromDefaultSerializedForm (activityBytes As Byte(), outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Workflow::ComponentModel::Activity ^ RestoreFromDefaultSerializedForm(cli::array &lt;System::Byte&gt; ^ activityBytes, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="static member RestoreFromDefaultSerializedForm : byte[] * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm (activityBytes, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityBytes" Type="System.Byte[]" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activityBytes">Form serializzato di <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
        <param name="outerActivity">Classe <see cref="T:System.Workflow.ComponentModel.Activity" /> esterna contenente la classe <see cref="T:System.Workflow.ComponentModel.Activity" /> da ripristinare.</param>
        <summary>Ripristina la classe <see cref="T:System.Workflow.ComponentModel.Activity" /> dal form serializzato.</summary>
        <returns>
          <see cref="T:System.Workflow.ComponentModel.Activity" /> ripristinata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione del metodo `RestoreFromDefaultSerializedForm`. Questo esempio è tratto dall'esempio SDK Custom Persistence Service nel file FilePersistenceService.cs. Per altre informazioni, vedere [esempio di servizio di persistenza personalizzato](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveCompletedContextActivity(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveCompletedContextActivity(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member SaveCompletedContextActivity : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.SaveCompletedContextActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Classe <see cref="T:System.Workflow.ComponentModel.Activity" /> che rappresenta l'ambito compilato.</param>
        <summary>Se implementato in una classe derivata, salva l'ambito completato specificato in un archivio dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il motore di runtime del flusso di lavoro salva lo stato delle attività dell'ambito completato per implementare la compensazione. È necessario chiamare uno dei metodi <xref:System.Workflow.ComponentModel.Activity.Save%2A> di overload per serializzare `activity` in un <xref:System.IO.Stream>; si può quindi scegliere anche di elaborare <xref:System.IO.Stream> prima di scriverlo nell'archivio dati. Tuttavia, quando il motore di runtime del flusso di lavoro chiama <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, è necessario ripristinare una copia identica dell'attività.  
  
 È necessario essere in grado di associare l'ambito completato all'istanza del flusso di lavoro che lo racchiude per contrassegnare l'ambito come non necessario nell'archivio dati quando l'istanza del flusso di lavoro finisce o viene terminata. È pertanto necessario salvare anche il <xref:System.Guid> dell'istanza del flusso di lavoro associato all'ambito completato, che può essere ottenuto dalla proprietà <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> della classe <xref:System.Workflow.Runtime.WorkflowInstance> associata a `activity`.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> accetta il <xref:System.Guid> dell'ambito completato come parametro. Di conseguenza, è necessario salvare la proprietà <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> associata a `activity`. Può essere fatto riferimento a questa proprietà tramite il campo <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty> di `activity`.  
  
 Se si sta implementando un servizio di persistenza che utilizza un archivio durevole, per mantenere la coerenza con lo stato interno del motore di runtime del flusso di lavoro, è necessario partecipare all'inclusione in batch delle transazioni del flusso di lavoro per rinviare l'effettiva scrittura nell'archivio durevole fino a un punto di commit del flusso di lavoro. Per partecipare all'inclusione in batch, aggiungere un elemento di lavoro alla proprietà <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> che rappresenta le modifiche in sospeso al database e implementare l'interfaccia <xref:System.Workflow.Runtime.IPendingWork> nel servizio di persistenza.  
  
 Se non è possibile salvare l'ambito completato nell'archivio dati, è necessario generare un'eccezione <xref:System.Workflow.Runtime.Hosting.PersistenceException> con un messaggio di errore adatto.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione del metodo `SaveCompletedContextActivity`. Questo esempio è tratto dall'esempio SDK Custom Persistence Service nel file FilePersistenceService.cs. Per altre informazioni, vedere [esempio di servizio di persistenza personalizzato](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).  
  
 [!code-csharp[WF_Samples#268](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#268)]
 [!code-vb[WF_Samples#268](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#268)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity, bool unlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub SaveWorkflowInstanceState (rootActivity As Activity, unlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity, bool unlock);" />
      <MemberSignature Language="F#" Value="abstract member SaveWorkflowInstanceState : System.Workflow.ComponentModel.Activity * bool -&gt; unit" Usage="workflowPersistenceService.SaveWorkflowInstanceState (rootActivity, unlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="unlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootActivity">Attività radice dell'istanza del flusso di lavoro.</param>
        <param name="unlock">
          <see langword="true" /> se l'istanza del flusso di lavoro non deve essere bloccata; <see langword="false" /> se l'istanza del flusso di lavoro deve essere bloccata.</param>
        <summary>Se implementato in una classe derivata, salva lo stato dell'istanza del flusso di lavoro in un archivio dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario chiamare uno dei metodi <xref:System.Workflow.ComponentModel.Activity.Save%2A> di overload per serializzare `rootActivity` in un <xref:System.IO.Stream>. È quindi possibile scegliere anche di elaborare <xref:System.IO.Stream> prima di scriverlo nell'archivio dati. Tuttavia, quando il motore di runtime del flusso di lavoro chiama <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, è necessario ripristinare una copia identica dell'attività radice. Se non è possibile salvare lo stato dell'istanza del flusso di lavoro nell'archivio dati, è necessario generare un'eccezione <xref:System.Workflow.Runtime.Hosting.PersistenceException> con un messaggio di errore adatto.  
  
 Il motore di runtime del flusso di lavoro implementa la semantica di blocco per limitare l'accesso allo stato di un'istanza del flusso di lavoro salvato nell'archivio dati. L'accesso può essere eseguito dai servizi di persistenza che sono in esecuzione in più host e che puntano allo stesso archivio dati. La semantica di blocco è progettata per impedire il caricamento della stessa istanza del flusso di lavoro in memoria contemporaneamente a servizi di persistenza in esecuzione in due runtime del flusso di lavoro diversi. A seconda del tipo di ambiente supportato dal servizio di persistenza, è possibile scegliere se supportare o meno questa funzionalità. Se si sceglie di supportare la semantica di blocco della fase di esecuzione e un servizio di persistenza tenta di salvare uno stato dell'istanza del flusso di lavoro precedentemente bloccato da un altro servizio di persistenza, è necessario generare un'eccezione <xref:System.Workflow.Runtime.WorkflowOwnershipException>. Se `unlock` è `true`, è necessario sbloccare l'accesso allo stato dell'istanza del flusso di lavoro dopo averlo salvato.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> accetta il <xref:System.Guid> dell'istanza del flusso di lavoro come parametro. Di conseguenza, è necessario salvare questo <xref:System.Guid>. È anche possibile utilizzare questo <xref:System.Guid> per associare l'istanza del flusso di lavoro agli stati salvati degli ambiti completati. Questa operazione è necessaria perché deve essere possibile contrassegnare questi ambiti completati come non necessari quando l'istanza del flusso di lavoro viene completata.  
  
 Il motore di runtime del flusso di lavoro chiama <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> un'ultima volta quando l'istanza del flusso di lavoro viene completata o terminata. Di conseguenza, se <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> è uguale a <xref:System.Workflow.Runtime.WorkflowStatus.Completed> o <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>, è possibile eliminare senza problemi l'istanza del flusso di lavoro e tutti i relativi ambiti completati dall'archivio dati. In alternativa, è possibile sottoscrivere gli eventi <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> o <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> per determinare quando è possibile eliminare senza problemi i record associati all'istanza del flusso di lavoro. Il momento in cui i record vengono effettivamente eliminati dall'archivio dati dipende dall'implementazione.  
  
 Se si implementa un servizio di persistenza che utilizza un archivio durevole, per mantenere la coerenza con lo stato interno del motore di runtime del flusso di lavoro, è necessario partecipare all'inclusione in batch delle transazioni del flusso di lavoro per rinviare l'effettiva scrittura nell'archivio durevole fino a un punto di commit del flusso di lavoro. Per partecipare all'inclusione in batch, aggiungere un elemento di lavoro alla proprietà <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> che rappresenta le modifiche in sospeso all'archivio durevole e implementare l'interfaccia <xref:System.Workflow.Runtime.IPendingWork> nel servizio di persistenza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione del metodo `SaveWorkflowInstanceState`. Questo esempio è tratto dall'esempio SDK Custom Persistence Service nel file FilePersistenceService.cs. Per altre informazioni, vedere [esempio di servizio di persistenza personalizzato](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).  
  
 [!code-csharp[WF_Samples#264](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#264)]
 [!code-vb[WF_Samples#264](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#264)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadOnIdle">
      <MemberSignature Language="C#" Value="protected internal abstract bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool UnloadOnIdle(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool UnloadOnIdle(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member UnloadOnIdle : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="workflowPersistenceService.UnloadOnIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Classe <see cref="T:System.Workflow.ComponentModel.Activity" /> che rappresenta l'ambito compilato.</param>
        <summary>Determina se un flusso di lavoro deve essere scaricato quando è inattivo.</summary>
        <returns>Se è <see langword="true" />, il motore di runtime del flusso di lavoro scaricherà il flusso di lavoro specificato quando diventa inattivo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione del metodo `UnloadOnIdle`. Questo esempio è tratto dall'esempio SDK Custom Persistence Service nel file FilePersistenceService.cs. Per altre informazioni, vedere [esempio di servizio di persistenza personalizzato](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).  
  
 [!code-csharp[WF_Samples#270](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#270)]
 [!code-vb[WF_Samples#270](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#270)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void UnlockWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub UnlockWorkflowInstanceState (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void UnlockWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="abstract member UnlockWorkflowInstanceState : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.UnlockWorkflowInstanceState rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">Attività radice dell'istanza del flusso di lavoro.</param>
        <summary>Quando viene sottoposto a override in una classe derivata, sblocca lo stato dell'istanza del flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è astratto, pertanto non contiene un'implementazione predefinita per il blocco e lo sblocco.  
  
 Durante l'implementazione di un servizio di persistenza personalizzato, se si desidera implementare uno schema di blocco è necessario eseguire l'override di questo metodo e fornire un meccanismo di blocco-sblocco nel metodo <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> basato sul valore del parametro di sblocco.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione del metodo `UnlockWorkflowInstanceState`. Questo esempio è tratto dall'esempio SDK Custom Persistence Service nel file FilePersistenceService.cs. Per altre informazioni, vedere [esempio di servizio di persistenza personalizzato](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).  
  
 [!code-csharp[WF_Samples#267](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#267)]
 [!code-vb[WF_Samples#267](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#267)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>