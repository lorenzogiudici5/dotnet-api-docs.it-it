<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowRuntimeService.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b30eb5a5e6360b690bed8bd6e4576d3411e00e47.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b30eb5a5e6360b690bed8bd6e4576d3411e00e47</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Represents the abstract base class from which the workflow runtime engine core services are derived.</source>
          <target state="translated">Rappresenta la classe base astratta dalla quale vengono derivati i servizi di base del motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can be started and stopped by the workflow runtime engine.</source>
          <target state="translated">I servizi che derivano dalla classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> possono essere avviati e arrestati dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>The order in which the services are started or stopped, however, is indeterminate, and services may require the support of other services in order to properly initialize themselves when they are started, and, conversely, may require the to support of other services in order to properly shut down when they are stopped.</source>
          <target state="translated">L'ordine in cui i servizi vengono avviati o arrestati, tuttavia, è indeterminato e i servizi possono richiedere il supporto di altri servizi allo scopo di eseguire correttamente l'inizializzazione quando vengono avviati e, al contrario, possono richiedere il supporto di altri servizi allo scopo di eseguire correttamente la chiusura quando vengono arrestati.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>To address this problem, the workflow runtime engine provides two-phase mechanisms for starting and stopping services.</source>
          <target state="translated">Per risolvere questo problema, il motore di runtime del flusso di lavoro fornisce meccanismi a due fasi per l'avvio e l'arresto dei servizi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>When <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> is called, the workflow runtime engine invokes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method for each of its services that derive from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> viene chiamato, il motore di runtime del flusso di lavoro richiama il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> per ognuno dei servizi che derivano dalla classe <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>After all of these services have been started, the workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event, which causes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method to be invoked for each workflow runtime engine service.</source>
          <target state="translated">Quando tutti questi servizi sono stati avviati, il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> che provoca la chiamata del metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> per ogni servizio del motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Your service can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method to participate in this two phase process.</source>
          <target state="translated">Il servizio può eseguire l'override del metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> per partecipare a questo processo a due fasi.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Similarly, when <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method provide this two-phase mechanism.</source>
          <target state="translated">In modo analogo, quando <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> viene chiamato, il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>, l'evento <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> e il metodo <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> forniscono questo meccanismo a due fasi.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>The State property contains a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;</ph> value that indicates whether the service is in the process of starting or stopping or is completely started or stopped.</source>
          <target state="translated">La proprietà State contiene un valore <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;</ph> che indica se il servizio è in fase di avvio o di arresto oppure se è stato completamente avviato o arrestato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can raise the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> event when they encounter a condition that causes an unhandled exception by calling <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph>.</source>
          <target state="translated">I servizi che derivano dalla classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> possono generare l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> quando incontrano una condizione che provoca un'eccezione non gestita chiamando <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Services derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class ultimately derives from the <ph id="ph5">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">I servizi derivati dalla classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, dalla classe <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, dalla classe <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> e dalla classe <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> derivano dalla classe <ph id="ph5">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor">
          <source>When implemented in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> class.</source>
          <target state="translated">Quando viene implementato in una classe derivata, inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> is initialized to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph>.</source>
          <target state="translated">L'enumerazione <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> viene inizializzata su <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /&gt;</ph> event.</source>
          <target state="translated">Quando viene sottoposto a override in una classe derivata, rappresenta il metodo che verrà chiamato quando il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class implements a two-phase starting mechanism so that workflow runtime engine services may perform any initialization that depends on other services after the workflow runtime engine has invoked the  <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method for all of its workflow runtime engine services.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> implementa un meccanismo di avvio a due fasi che consente ai servizi del motore di runtime del flusso di lavoro di eseguire qualsiasi inizializzazione che dipende da altri servizi dopo che il motore di runtime del flusso di lavoro ha richiamato il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> per tutti i relativi servizi.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>After the workflow runtime engine has called the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method of all of its workflow runtime engine services, it raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Dopo aver chiamato il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> di tutti i relativi servizi, il motore di runtime del flusso di lavoro genera l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>You can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method to provide any final startup functionality required by your service when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event is raised.</source>
          <target state="translated">È possibile eseguire l'override del metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> per fornire qualsiasi funzionalità di avvio conclusiva richiesta del servizio quando viene generato l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>The mechanics of subscribing and unsubscribing from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event is handled internally.</source>
          <target state="translated">Il meccanismo di sottoscrizione e annullamento della sottoscrizione dell'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> viene gestito internamente.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>If your service is added to the workflow runtime engine by a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> after the workflow runtime engine has already been started, the workflow runtime engine will call <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on your service.</source>
          <target state="translated">Se il servizio viene aggiunto al motore di runtime del flusso di lavoro mediante una chiamata a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> dopo l'avvio del motore di runtime del flusso di lavoro, quest'ultimo chiamerà il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> sul servizio.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> from inside the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method.</source>
          <target state="translated">In questa situazione, tuttavia, l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> si già è verificato, pertanto può essere necessario che il servizio esegua qualsiasi inizializzazione che normalmente eseguirebbe in <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> dal metodo <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine has been started.</source>
          <target state="translated">È possibile testare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> per determinare se il motore di runtime del flusso di lavoro è stato avviato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph> before <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> viene impostato su <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph> prima che <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> venga richiamato.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> performs no action.</source>
          <target state="translated">L'implementazione predefinita di <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> non esegue azioni.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /&gt;</ph> event.</source>
          <target state="translated">Quando viene sottoposto a override in una classe derivata, rappresenta il metodo che verrà chiamato quando il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class implements a two-phase stopping mechanism so that workflow runtime engine services may retain some functionality after their <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method is invoked by the workflow runtime engine in order that they may, if necessary, support the shutdown of other services.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> implementa un meccanismo di arresto a due fasi che consente ai servizi del motore di runtime del flusso di lavoro di mantenere alcune funzionalità dopo che il relativo metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> viene richiamato dal motore di runtime del flusso in modo che possano, se necessario, supportare la chiusura di altri servizi.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>After the workflow runtime engine has called the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method of all of its workflow runtime engine services, it raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Dopo aver chiamato il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> di tutti i relativi servizi, il motore di runtime del flusso di lavoro genera l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>You can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method to provide any final shutdown functionality required by your service when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event is raised.</source>
          <target state="translated">È possibile eseguire l'override del metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> per fornire qualsiasi funzionalità di chiusura conclusiva richiesta del servizio quando l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> viene generato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>The mechanics of subscribing and unsubscribing from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event is handled internally.</source>
          <target state="translated">Il meccanismo di sottoscrizione e annullamento della sottoscrizione dell'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> viene gestito internamente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>If your <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> is removed from the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> while the workflow runtime engine is running, the workflow runtime engine will call <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> on your service.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> viene rimosso dal motore di runtime del flusso di lavoro mediante una chiamata a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> mentre il motore di runtime del flusso di lavoro è in esecuzione, quest'ultimo chiamerà il metodo <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> sul servizio.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method will not be called for your service.</source>
          <target state="translated">In questa situazione, il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> non verrà tuttavia chiamato per il servizio.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>Therefore, your service may have to perform any final shutdown that it would ordinarily perform in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> from inside the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method.</source>
          <target state="translated">Di conseguenza, è possibile che il servizio debba eseguire operazioni di chiusura conclusive che normalmente eseguirebbe in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> dal metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine is running.</source>
          <target state="translated">È possibile testare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> per determinare se il motore di runtime del flusso di lavoro è in esecuzione.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph> before <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> viene impostato su <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph> prima che <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> venga richiamato.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> performs no action.</source>
          <target state="translated">L'implementazione predefinita di <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> non esegue azioni.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>The exception that could not be handled.</source>
          <target state="translated">Eccezione non gestita.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> dell'istanza del flusso di lavoro associato all'eccezione non gestita.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>Your service can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> event when it encounters an exception that it cannot handle during its execution.</source>
          <target state="translated">Il servizio può chiamare <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> per generare l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> quando rileva un'eccezione che non può gestire durante l'esecuzione.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>You should pass the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">È necessario passare l'identificatore <ph id="ph1">&lt;xref:System.Guid&gt;</ph> dell'istanza del flusso di lavoro associato all'eccezione non gestita.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>For example, a timer service might pass the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> associated with the timer for which the exception occurred.</source>
          <target state="translated">Ad esempio, un servizio timer può passare il <ph id="ph1">&lt;xref:System.Guid&gt;</ph> associato al timer per il quale si è verificata l'eccezione.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> for this service.</source>
          <target state="translated">Ottiene la classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> per questo servizio.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> object.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime">
          <source>The workflow runtime engine sets this property before it calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on the service.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro imposta questa proprietà prima di chiamare <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> sul servizio.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>When overridden in a derived class, starts the service and changes the <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> to <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" /&gt;</ph>.</source>
          <target state="translated">Quando viene sottoposto a override in una classe derivata, avvia il servizio e modifica la classe <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> in <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> is invoked by the workflow runtime engine on all of its services that derive from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class when <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> viene richiamato dal motore di runtime del flusso di lavoro su tutti i servizi derivati dalla classe <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> quando <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> viene chiamato.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> is also invoked by the workflow runtime engine when a workflow runtime engine service is added to the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> after the workflow runtime engine has already started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> viene richiamato anche dal motore di runtime del flusso di lavoro quando un servizio del motore di runtime del flusso di lavoro viene aggiunto allo stesso da una chiamata a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> dopo l'avvio del motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> tracks whether the service has been started and uses this information to throw the appropriate exception if the service is started while it is already running.</source>
          <target state="translated">L'implementazione predefinita di <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> rileva se il servizio è stato avviato e utilizza queste informazioni per generare l'eccezione adatta se il servizio viene avviato mentre è già in esecuzione.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>You can provide additional functionality necessary to have your service started by the workflow runtime engine by overriding this method.</source>
          <target state="translated">Per fare in modo che il servizio venga avviato dal motore di runtime del flusso di lavoro, è possibile fornire le funzionalità aggiuntive eseguendo l'override di questo metodo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>There is no guarantee about which, if any, services will be running when the workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on your service.</source>
          <target state="translated">Non è possibile garantire quale servizio, se disponibile, sia in esecuzione quando il motore di runtime di flusso di lavoro chiama <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> sul servizio.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>Therefore, in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method, you should only perform any initialization that does not depend on functionality provided by other services.</source>
          <target state="translated">Nel metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>, pertanto, è necessario eseguire solo un'inizializzazione che non dipende dalla funzionalità fornita da altri servizi.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>This includes functionality provided by core services such as the scheduler service.</source>
          <target state="translated">Tali funzionalità includono quelle fornite dai servizi di base, ad esempio il servizio Utilità di pianificazione.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event after it has called the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method of all of its workflow runtime engine services.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> dopo aver chiamato il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> di tutti i relativi servizi.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>If your service requires additional initialization after all of the workflow runtime engine services have been started, you can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method in order to perform this initialization when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se il servizio richiede ulteriori inizializzazioni dopo l'avvio di tutti i servizi del motore di runtime del flusso di lavoro, è possibile eseguire l'override del metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> per eseguire tale inizializzazione quando viene generato l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>If your service is added to the workflow runtime engine by a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> after the workflow runtime engine has already been started, the workflow runtime engine will call <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on your service.</source>
          <target state="translated">Se il servizio viene aggiunto al motore di runtime del flusso di lavoro mediante una chiamata a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> dopo l'avvio del motore di runtime del flusso di lavoro, quest'ultimo chiamerà il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> sul servizio.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> from inside the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method.</source>
          <target state="translated">In questa situazione, tuttavia, l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> si già è verificato, pertanto può essere necessario che il servizio esegua qualsiasi inizializzazione che normalmente eseguirebbe in <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> dal metodo <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine has been started.</source>
          <target state="translated">È possibile testare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> per determinare se il motore di runtime del flusso di lavoro è stato avviato.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> should only be called by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> deve essere chiamato solo dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The following example demonstrates calling the Start method on an object derived from <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>, TerminationTrackingService.</source>
          <target state="translated">Nell'esempio seguente viene illustrata la chiamata del metodo Start su un oggetto derivato da <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>, TerminationTrackingService.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>This example is from the Termination Tracking Service SDK sample.</source>
          <target state="translated">Questo esempio è tratto dall'esempio SDK Termination Tracking Service.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Termination Tracking Service Sample<ept id="p1">](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>esempio servizio di rilevamento di terminazione<ept id="p1">](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The service has already been started.</source>
          <target state="translated">Il servizio è già stato avviato.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>Gets the state of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph>.</source>
          <target state="translated">Ottiene lo stato della classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class implements two-phase mechanisms for both starting and stopping a workflow runtime engine service.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> implementa meccanismi a due fasi per l'avvio e l'arresto di un servizio del motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The first phase of the start mechanism begins when the workflow runtime engine calls the implementation of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method for the service.</source>
          <target state="translated">La prima fase del meccanismo di avvio inizia quando il motore di runtime del flusso di lavoro richiede l'implementazione del metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> per il servizio.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>This method should call the base implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>, which sets <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting&gt;</ph>.</source>
          <target state="translated">Questo metodo deve chiamare l'implementazione base di <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>, che imposta <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> su <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The second phase occurs after the workflow runtime engine starts all of its workflow runtime engine services when it raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event.</source>
          <target state="translated">La seconda fase si verifica dopo che il motore di runtime del flusso di lavoro ha avviato tutti i relativi servizi quando genera l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> internally manages a subscription to this event and its handler will set <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> gestisce internamente una sottoscrizione a questo evento e il relativo gestore imposterà <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> su <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The two-phase mechanism for stopping a workflow runtime engine service begins when the workflow runtime engine calls the implementation of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method for the service.</source>
          <target state="translated">Il meccanismo a due fasi per l'arresto di un servizio del motore di runtime del flusso di lavoro ha inizio quando il motore di runtime richiede l'implementazione del metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> per il servizio.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>This method should call the base implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>, which sets <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping&gt;</ph>.</source>
          <target state="translated">Questo metodo deve chiamare l'implementazione base di <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>, che imposta <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> su <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>After it has stopped all of its workflow runtime engine services, the workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> dopo aver arrestato tutti i relativi servizi.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> internally manages a subscription to this event and its handler will set <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> gestisce internamente una sottoscrizione a questo evento e il relativo gestore imposterà <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> su <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>When overridden in a derived class, stops the service and changes the <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> to <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" /&gt;</ph>.</source>
          <target state="translated">Quando viene sottoposto a override in una classe derivata, arresta il servizio e modifica la classe <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> in <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> is invoked by the workflow runtime engine on all of its services that derive from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class when <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> viene richiamato dal motore di runtime del flusso di lavoro su tutti i servizi derivati dalla classe <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> quando <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> viene chiamato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> is also invoked by the workflow runtime engine when a workflow runtime engine service is removed from the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>.</source>
          <target state="translated">Anche <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> viene richiamato dal motore di runtime del flusso di lavoro quando un servizio del motore di runtime del flusso di lavoro viene rimosso mediante una chiamata a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> tracks whether the service has been started and uses this information to throw the appropriate exception if the service is stopped before it is started.</source>
          <target state="translated">L'implementazione predefinita di <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> rileva se il servizio è stato avviato e utilizza queste informazioni per generare l'eccezione adatta se il servizio viene arrestato prima di essere avviato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>You can provide additional functionality necessary to have your service stopped by the workflow runtime engine by overriding this method.</source>
          <target state="translated">Per fare in modo che il servizio venga arrestato dal motore di runtime del flusso di lavoro, è possibile fornire le funzionalità aggiuntive eseguendo l'override di questo metodo.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>There is no guarantee about which, if any, services will be stopped or running when <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> is called on your service.</source>
          <target state="translated">Non è possibile garantire quale servizio, se disponibile, venga arrestato o eseguito quando <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> viene chiamato sul servizio.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>The workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event after it has called the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method of all of its workflow runtime engine services.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> dopo aver chiamato il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> di tutti i relativi servizi.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>Your service may need to retain some residual functionality to support other services until all the workflow runtime engine services have had their stop methods invoked by the workflow runtime engine.</source>
          <target state="translated">Per supportare altri servizi fino a quando il motore di runtime del flusso di lavoro avrà richiamato i metodi Stop di tutti i servizi del motore di runtime del flusso di lavoro, è possibile che il servizio debba mantenere alcune funzionalità residue.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>If your service must retain such functionality, you can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method to perform any additional action required to finish stopping your service when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event is raised.</source>
          <target state="translated">Se il servizio deve mantenere tali funzionalità, è possibile eseguire l'override del metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> per eseguire l'azione aggiuntiva richiesta per completare l'arresto del servizio quando viene generato l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>If your <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> is removed from the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> while the workflow runtime engine is running, the workflow runtime engine will call <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> on your service.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> viene rimosso dal motore di runtime del flusso di lavoro mediante una chiamata a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> mentre il motore di runtime del flusso di lavoro è in esecuzione, quest'ultimo chiamerà il metodo <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> sul servizio.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method will not be called for your service.</source>
          <target state="translated">In questa situazione, il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> non verrà tuttavia chiamato per il servizio.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>Therefore, your service may have to perform any additional shutdown functionality that it would ordinarily perform in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> from inside the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method.</source>
          <target state="translated">Di conseguenza, è possibile che il servizio debba eseguire qualsiasi funzionalità di chiusura aggiuntiva che normalmente eseguirebbe in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> dal metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine is running.</source>
          <target state="translated">È possibile testare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> per determinare se il motore di runtime del flusso di lavoro è in esecuzione.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> should only be called by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> deve essere chiamato solo dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>The service has not yet been started.</source>
          <target state="translated">Il servizio non è ancora stato avviato.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>