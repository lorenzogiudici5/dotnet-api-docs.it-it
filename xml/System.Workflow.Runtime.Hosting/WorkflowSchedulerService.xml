<Type Name="WorkflowSchedulerService" FullName="System.Workflow.Runtime.Hosting.WorkflowSchedulerService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ab15944820559fcdfdb2c720101a409ea59fe0a" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48628231" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowSchedulerService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowSchedulerService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowSchedulerService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type WorkflowSchedulerService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="07719-101">Fornisce un meccanismo per implementare il pool di thread allo scopo di eseguire il flusso di lavoro e gestire la registrazione e gli eventi del timer in memoria.</span>
      <span class="sxs-lookup">
        <span data-stu-id="07719-101">Provides a mechanism to implement your own thread pool to execute the workflow and manage in-memory timer registration and events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="07719-102"><xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> è la classe base per tutte le classi che creano thread che eseguono istanze del flusso di lavoro sull'host del motore di runtime del flusso di lavoro,</span><span class="sxs-lookup"><span data-stu-id="07719-102"><xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host.</span></span> <span data-ttu-id="07719-103">Tra queste sono inclusi i tipi  <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> e <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</span><span class="sxs-lookup"><span data-stu-id="07719-103">These include <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> and <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="07719-104">Quando si eredita dalla classe <see cref="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />, è necessario eseguire l'override dei seguenti membri: <see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)" />, <see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" /> e <see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="07719-104">When you inherit from <see cref="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />, you must override the following members: <see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)" />, <see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" /> and <see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowSchedulerService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowSchedulerService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07719-105">Quando viene implementato in una classe derivata, inizializza una nuova istanza della classe <see cref="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-105">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07719-106">Nell'esempio seguente viene illustrata la creazione di un'istanza di un oggetto <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> (che eredita da <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>) e l'aggiunta dell'istanza al runtime.</span><span class="sxs-lookup"><span data-stu-id="07719-106">The following example demonstrates creating an instance of a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> object (that inherits from <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>) and adding it to the runtime.</span></span> <span data-ttu-id="07719-107">Questo esempio è tratto dall'esempio SDK Nested Exception Handlers incluso nel file Program.cs.</span><span class="sxs-lookup"><span data-stu-id="07719-107">This example is from the Nested Exception Handlers SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="07719-108">Per altre informazioni, vedere [esempio di gestori di eccezioni annidati](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span><span class="sxs-lookup"><span data-stu-id="07719-108">For more information, see [Nested Exception Handlers Sample](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span></span>  
  
 [!code-csharp[WF_Samples#161](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#161)]
 [!code-vb[WF_Samples#161](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal abstract void Cancel (Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Cancel(valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Cancel (timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Cancel(Guid timerId);" />
      <MemberSignature Language="F#" Value="abstract member Cancel : Guid -&gt; unit" Usage="workflowSchedulerService.Cancel timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerId">
          <span data-ttu-id="07719-109">
            <see cref="T:System.Guid" /> associato al thread pianificato esistente da annullare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-109">The <see cref="T:System.Guid" /> associated with the existing scheduled thread to cancel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07719-110">Quando viene sottoposto a override in una classe derivata, annulla l'elemento di lavoro pianificato con l'oggetto <paramref name="timerId" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-110">When overridden in a derived class, cancels the scheduled work item with the given <paramref name="timerId" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07719-111"><xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A> rimuove dalla coda degli elementi di lavoro in sospeso una richiesta precedente per pianificare un'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="07719-111"><xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A> removes from the pending work items queue a previous request to schedule a workflow instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schedule">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="07719-112">Chiamato dal runtime per richiedere un nuovo thread per l'esecuzione di un'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-112">Called by the runtime to request a new thread to run a workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal abstract void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member Schedule : System.Threading.WaitCallback * Guid -&gt; unit" Usage="workflowSchedulerService.Schedule (callback, workflowInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="07719-113">Un delegato multicast <see cref="T:System.Threading.WaitCallback" /> che rappresenta il metodo da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-113">A <see cref="T:System.Threading.WaitCallback" /> multicast delegate that represents the method to run.</span>
          </span>
        </param>
        <param name="workflowInstanceId">
          <span data-ttu-id="07719-114">
            <see cref="T:System.Guid" /> che rappresenta l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-114">A <see cref="T:System.Guid" /> that represents the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07719-115">Quando viene sottoposto a override in una classe derivata, questo metodo viene chiamato dal runtime per pianificare un elemento di lavoro (callback) per uno specifico ID dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-115">When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular instance ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07719-116">Utilizzare il costruttore <xref:System.Threading.WaitCallback> per creare il metodo delegato in modo che venga eseguito nel nuovo thread.</span><span class="sxs-lookup"><span data-stu-id="07719-116">Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal abstract void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId, valuetype System.DateTime whenUtc, valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid, whenUtc As DateTime, timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="F#" Value="abstract member Schedule : System.Threading.WaitCallback * Guid * DateTime * Guid -&gt; unit" Usage="workflowSchedulerService.Schedule (callback, workflowInstanceId, whenUtc, timerId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="whenUtc" Type="System.DateTime" />
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="07719-117">Un delegato multicast <see cref="T:System.Threading.WaitCallback" /> che rappresenta il metodo da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-117">A <see cref="T:System.Threading.WaitCallback" /> multicast delegate that represents the method to run.</span>
          </span>
        </param>
        <param name="workflowInstanceId">
          <span data-ttu-id="07719-118">
            <see cref="T:System.Guid" /> che rappresenta l'istanza del flusso di lavoro da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-118">A <see cref="T:System.Guid" /> that represents the workflow instance to add.</span>
          </span>
        </param>
        <param name="whenUtc">
          <span data-ttu-id="07719-119">
            <see cref="T:System.DateTime" /> in cui iniziare l'esecuzione dell'elemento del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-119">The <see cref="T:System.DateTime" /> to begin running the workflow item.</span>
          </span>
        </param>
        <param name="timerId">
          <span data-ttu-id="07719-120">
            <see cref="T:System.Guid" /> che rappresenta il timer pianificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-120">A <see cref="T:System.Guid" /> that represents the scheduled timer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07719-121">Quando viene sottoposto a override in una classe derivata, questo metodo viene chiamato dal runtime per pianificare un elemento di lavoro (callback) per una specifica istanza del flusso di lavoro da eseguire in un determinato momento (<see cref="T:System.DateTime" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="07719-121">When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular workflow instance to be done at the given time (<see cref="T:System.DateTime" />).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>