<Type Name="DefaultWorkflowSchedulerService" FullName="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f49cc9708e0fb14cae30ca7e633b273141df0a21" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719845" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultWorkflowSchedulerService extends System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultWorkflowSchedulerService&#xA;Inherits WorkflowSchedulerService" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultWorkflowSchedulerService : System::Workflow::Runtime::Hosting::WorkflowSchedulerService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowSchedulerService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Crea e gestisce i thread che eseguono le istanze del flusso di lavoro sul motore di runtime del flusso di lavoro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Per impostazione predefinita, la classe <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> viene utilizzata dal motore di runtime del flusso di lavoro. Questa classe consente di accodare più istanze del flusso di lavoro nel pool di thread di runtime. Se si desidera controllare il thread responsabile per l'esecuzione del flusso di lavoro, utilizzare <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> contenente informazioni di inizializzazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene richiamato quando il motore di runtime del flusso di lavoro carica servizi da un file di configurazione dell'applicazione. L'unico parametro valido è `maxSimultaneousWorkflows`, che specifica il numero di flussi di lavoro che possono essere eseguiti contemporaneamente.  
  
 L'impostazione di `maxSimultaneousWorkflows` su un valore elevato può determinare la mancanza di risorse per il pool di thread .NET. Questo può causare il verificarsi di timeout quando un servizio di persistenza tenta di completare una transazione di persistenza, in quanto anche gli oggetti <xref:System.Transactions.Transaction> utilizzano il pool di thread .NET.  
  
 Se non viene specificato in un costruttore o in un file di configurazione, il valore predefinito per `maxSimultaneousWorkflows` è 5 per un computer a processore singolo e (int)(5 * Environment.ProcessorCount * .8) per un computer a più processori. Si noti che (int)(5 * Environment.ProcessorCount * .8) non è sempre uguale a (int)(4 * Environment.ProcessorCount), a causa delle regole dei valori integer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> contiene un riferimento null (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">Uno dei valori di chiave nella raccolta <paramref name="parameters" /> contiene un riferimento null (<see langword="Nothing" />).  
  
 --oppure--  
  
 Uno dei valori di chiave nella raccolta <paramref name="parameters" /> non corrisponde alla chiave predefinita per <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />.</exception>
        <exception cref="T:System.FormatException">Impossibile convertire uno dei parametri in un numero a virgola mobile a precisione doppia che corrisponde a <see cref="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" /> è minore di 1.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService (int maxSimultaneousWorkflows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxSimultaneousWorkflows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maxSimultaneousWorkflows As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService(int maxSimultaneousWorkflows);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxSimultaneousWorkflows" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxSimultaneousWorkflows">Un numero intero che determina il numero massimo di istanze del flusso di lavoro che possono essere archiviate nella coda del pool di thread.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> utilizzando il numero massimo specificato di istanze del flusso di lavoro che il servizio può eseguire simultaneamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di `maxSimultaneousWorkflows` su un valore elevato può determinare la mancanza di risorse per il pool di thread .NET. Questo può causare il verificarsi di timeout quando un servizio di persistenza tenta di completare una transazione di persistenza, in quanto anche gli oggetti <xref:System.Transactions.Transaction> utilizzano il pool di thread .NET.  
  
 Se non viene specificato in un costruttore o in un file di configurazione, il valore predefinito per `maxSimultaneousWorkflows` è 5 per un computer a processore singolo e (int)(5 * Environment.ProcessorCount * .8) per un computer a più processori. Si noti che (int)(5 * Environment.ProcessorCount * .8) non è sempre uguale a (int)(4 * Environment.ProcessorCount), a causa delle regole dei valori integer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxSimultaneousWorkflows" /> è minore di 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal override void Cancel (Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Cancel(valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Cancel (timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Cancel(Guid timerId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerId">
          <see cref="T:System.Guid" /> associato all'elemento di lavoro pianificato esistente da annullare.</param>
        <summary>Annulla l'elemento di lavoro specificato dell'istanza del flusso di lavoro esistente.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="timerId" /> è un GUID vuoto.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxSimultaneousWorkflows">
      <MemberSignature Language="C#" Value="public int MaxSimultaneousWorkflows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSimultaneousWorkflows" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxSimultaneousWorkflows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxSimultaneousWorkflows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero massimo di istanze del flusso di lavoro che possono essere archiviate nella coda del pool di thread.</summary>
        <value>Un numero intero che rappresenta il numero massimo di istanze del flusso di lavoro che possono essere archiviate nella coda del pool di thread.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito per questo metodo è 5 per un computer a singolo processore e (int)(5 * Environment.ProcessorCount * .8) per un computer a più processori. Si noti che (int)(5 * Environment.ProcessorCount * .8) non è sempre uguale a (int)(4 * Environment.ProcessorCount), a causa delle regole dei valori integer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStarted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica a <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> che è stata avviata l'esecuzione di un'istanza del flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted%2A> crea un thread per il primo elemento di lavoro nell'elenco di elementi in attesa di essere inclusi nel pool di thread dell'istanza del flusso di lavoro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schedule">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge un'istanza del flusso di lavoro alla coda degli elementi di lavoro in sospeso.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">Un delegato multicast <see cref="T:System.Threading.WaitCallback" /> che rappresenta il metodo da eseguire.</param>
        <param name="workflowInstanceId">
          <see cref="T:System.Guid" /> che rappresenta l'istanza del flusso di lavoro.</param>
        <summary>Aggiunge un'istanza del flusso di lavoro alla coda degli elementi di lavoro in sospeso utilizzando l'istanza del flusso di lavoro specificata con il delegato multicast specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il costruttore <xref:System.Threading.WaitCallback> per creare il metodo delegato in modo che venga eseguito nel nuovo thread.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callback" /> contiene un riferimento null (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId, valuetype System.DateTime whenUtc, valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid, whenUtc As DateTime, timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="whenUtc" Type="System.DateTime" />
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">Un delegato multicast <see cref="T:System.Threading.WaitCallback" /> che rappresenta il metodo da eseguire.</param>
        <param name="workflowInstanceId">
          <see cref="T:System.Guid" /> che rappresenta l'istanza del flusso di lavoro.</param>
        <param name="whenUtc">
          <see cref="T:System.DateTime" /> che indica l'ora in cui deve iniziare l'esecuzione del thread.</param>
        <param name="timerId">
          <see cref="T:System.Guid" /> che rappresenta il thread pianificato.</param>
        <summary>Aggiunge l'istanza del flusso di lavoro specificata alla coda degli elementi di lavoro in sospeso utilizzando il delegato multicast specificato, <see cref="T:System.DateTime" /> e i GUID.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il costruttore <xref:System.Threading.WaitCallback> per creare il metodo delegato in modo che venga eseguito nel nuovo thread.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callback" /> contiene un riferimento null (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="workflowInstanceId" /> o <paramref name="timerId" /> è un GUID vuoto.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrompe il thread attualmente in esecuzione sull'istanza del flusso di lavoro e qualsiasi timer in esecuzione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>