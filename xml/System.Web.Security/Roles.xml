<Type Name="Roles" FullName="System.Web.Security.Roles">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cad064b36e9a290c953de2f65314d8fef4aa3e1d" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51935105" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Roles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Roles extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Roles" />
  <TypeSignature Language="VB.NET" Value="Public Class Roles" />
  <TypeSignature Language="C++ CLI" Value="public ref class Roles abstract sealed" />
  <TypeSignature Language="F#" Value="type Roles = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gestisce l'appartenenza degli utenti nei ruoli per il controllo delle autorizzazioni in un'applicazione ASP.NET. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestione dei ruoli ASP.NET consente di gestire l'autorizzazione per l'applicazione basata su gruppi di utenti indicati come ruoli. Ovvero assegnando utenti a ruoli, è possibile controllare l'accesso a diverse parti o caratteristiche dell'applicazione Web in base al ruolo anziché o oltre a, la specifica dell'autorizzazione basata su nome utente. Ad esempio, un'applicazione dipendente potrebbe avere ruoli, ad esempio responsabili, dipendenti, dirigenti e così via, in cui sono specificati privilegi diversi per ogni ruolo.  
  
 Gli utenti possono appartenere a più di un ruolo. Ad esempio, se il sito è un forum di discussione, alcuni utenti potrebbero essere nel ruolo di membri e i moderatori. È possibile definire ogni ruolo per disporre di privilegi diversi nel sito e un utente che è in entrambi i ruoli hanno quindi entrambi i set di privilegi.  
  
 Per abilitare la gestione dei ruoli per l'applicazione ASP.NET, usare l'elemento del `system.web` sezione nel file Web. config per l'applicazione, come illustrato nell'esempio seguente.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Initial Catalog=aspnetdb;Integrated Security=SSPI;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
  
  <roleManager defaultProvider="SqlProvider"   
    enabled="true"  
    cacheRolesInCookie="true"  
    cookieName=".ASPROLES"  
    cookieTimeout="30"  
    cookiePath="/"  
    cookieRequireSSL="false"  
    cookieSlidingExpiration="true"  
    cookieProtection="All" >  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlRoleProvider"  
        connectionStringName="SqlServices"  
        applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 È possibile specificare le regole di autorizzazione nel file di configurazione per l'applicazione Web o a livello di programmazione nel codice. Ad esempio, la sezione seguente da un file Web. config richiede agli utenti di effettuare l'accesso (negare agli utenti anonimi) e quindi consente solo agli utenti nel ruolo amministratori di accedere.  
  
```  
<authorization>  
  <deny users="?" />  
  <allow roles="Administrators" />  
  <deny users="*" />  
</authorization>  
```  
  
 Se si usa il `authorization` sezione nel file Web. config dell'applicazione per specificare l'autorizzazione basata sui ruoli, gli utenti dell'applicazione deve fornire un'identità utente autenticata. È possibile autenticare gli utenti con l'autenticazione di Windows o form. Gli utenti anonimi non è possibile assegnare a un ruolo. Ruoli possono essere utilizzati in modo indipendente o in combinazione con, ASP.NET <xref:System.Web.Security.Membership> classi.  
  
 Per verificare l'appartenenza al ruolo a livello di codice, è possibile usare la <xref:System.Web.Security.Roles> classe o il <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> proprietà con il <xref:System.Web.Security.Roles.IsUserInRole%2A> (metodo), oppure è possibile usare i <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> proprietà con il <xref:System.Security.Principal.IPrincipal.IsInRole%2A?displayProperty=nameWithType> (metodo). Per esempi di codice che a livello di codice controlla l'appartenenza al ruolo, vedere la sezione di esempio in questo argomento.  
  
 Il <xref:System.Web.Security.Roles> classe consente inoltre di creare ed eliminare i ruoli e aggiungere o rimuovere utenti dai ruoli.  
  
> [!NOTE]
>  Se è stata configurata l'applicazione per usare il <xref:System.Web.Security.WindowsTokenRoleProvider> (classe), è possibile modificare l'appartenenza al ruolo o ruoli. Il <xref:System.Web.Security.WindowsTokenRoleProvider> solo i gruppi di appartenenza classverifies nella sicurezza di Windows. In questo caso, è necessario utilizzare Gestione degli account utente Windows invece di ruoli ASP.NET per creare ed eliminare gruppi e gestire l'appartenenza al gruppo.  
  
 È possibile archiviare le informazioni sui ruoli in diverse origini dati.  
  
-   È possibile usare il <xref:System.Web.Security.WindowsTokenRoleProvider> classe da cui recuperare le informazioni sui ruoli in base l'appartenenza ai gruppi di Windows.  
  
-   È possibile archiviare le informazioni sui ruoli in un database di SQL Server usando il <xref:System.Web.Security.SqlRoleProvider> classe.  
  
-   Se si dispone di informazioni di ruolo esistente, o si vogliono archiviare le informazioni sui ruoli in e recuperare informazioni sui ruoli da un'origine dati diversa da Windows, un'autorizzazione Store o SQL Server, è possibile implementare un provider del ruoli personalizzato creando una classe che eredita il <xref:System.Web.Security.RoleProvider> classe astratta. Per altre informazioni, vedere [implementa un Provider di ruoli](https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d).  
  
 Se il browser dell'utente accetta i cookie, è possibile archiviare le informazioni sui ruoli per l'utente in un cookie presente nel computer dell'utente. Per ogni richiesta di pagina, ASP.NET legge le informazioni sui ruoli per l'utente del cookie. Ciò può migliorare le prestazioni delle applicazioni, riducendo la quantità di comunicazione necessaria con l'origine dati per recuperare le informazioni sui ruoli. Se le informazioni sui ruoli per un utente è troppo lunghi per l'archiviazione in un cookie, ASP.NET archivia solo le informazioni sui ruoli utilizzati di recente nel cookie e quindi cerca le informazioni sui ruoli aggiuntivi nell'origine dei dati in base alle esigenze. Se il browser dell'utente non supporta i cookie o i cookie sono disabilitati, le informazioni sui ruoli non è memorizzato nella cache in un cookie.  
  
 È possibile migliorare l'affidabilità dei nomi di ruoli memorizzati in un cookie, specificando un <xref:System.Web.Security.Roles.CookieProtectionValue%2A> proprietà quando si configurano i ruoli ASP.NET. Il valore predefinito <xref:System.Web.Security.Roles.CookieProtectionValue%2A> è `All`, che consente di crittografare i nomi dei ruoli nel cookie e verifica che il contenuto del cookie non è stato modificato.  
  
   
  
## Examples  
 L'esempio seguente illustra il file Web. config per un'applicazione configurata per utilizzare sia l'appartenenza ASP.NET e i ruoli ASP.NET e usare il <xref:System.Web.Security.SqlRoleProvider> per archiviare le informazioni di appartenenza e ruoli in un database di SQL Server. Gli utenti vengono autenticati con autenticazione basata su form e solo gli utenti nel ruolo di amministratore di consentito l'accesso all'applicazione.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Initial Catalog=aspnetdb;Integrated Security=SSPI;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <authorization>  
      <deny users="?" />  
      <allow roles="Administrators" />  
      <deny users="*" />  
    </authorization>  
  
    <membership defaultProvider="AspNetSqlProvider" userIsOnlineTimeWindow="15">  
    </membership>  
  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
  
      <providers>  
        <clear />  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"  
          applicationName="SampleApplication" />  
        </providers>  
  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 Esempio di codice seguente controlla a livello di codice se l'utente connesso è nel ruolo Administrators prima di consentire all'utente di visualizzare i ruoli di altri utenti.  
  
  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="AddUsersToRole">
      <MemberSignature Language="C#" Value="public static void AddUsersToRole (string[] usernames, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddUsersToRole(string[] usernames, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.AddUsersToRole(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddUsersToRole (usernames As String(), roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddUsersToRole(cli::array &lt;System::String ^&gt; ^ usernames, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member AddUsersToRole : string[] * string -&gt; unit" Usage="System.Web.Security.Roles.AddUsersToRole (usernames, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernames">Matrice di stringhe di nomi utente da aggiungere al ruolo specificato.</param>
        <param name="roleName">Ruolo a cui aggiungere i nomi utente specificati.</param>
        <summary>Aggiunge utenti specifici al ruolo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.AddUsersToRole%2A> metodo chiama il provider di ruoli predefinito per associare gli utenti specificati al ruolo specificato nell'origine dati.  
  
 Se l'applicazione usa la <xref:System.Web.Security.SqlRoleProvider> classe, gli aggiornamenti di database che vengono eseguiti durante la chiamata al <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> metodo eseguite all'interno di una transazione. Se viene rilevato un errore, ad esempio un nome utente che è già in un ruolo specificato, viene eseguito il rollback della transazione e viene eseguito alcun aggiornamento.  
  
> [!NOTE]
>  I nomi utente e i nomi di ruolo non possono contenere virgole.  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge uno o più utenti a un ruolo o rimuove un utente da un ruolo in base all'input utente. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.  
  
oppure 
Uno degli elementi in <paramref name="usernames" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
Uno degli elementi in <paramref name="usernames" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 <paramref name="usernames" /> contiene un elemento duplicato.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public static void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="static member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="System.Web.Security.Roles.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matrice di stringhe di nomi utente da aggiungere ai ruoli specificati.</param>
        <param name="roleNames">Matrice di stringhe di nomi di ruoli a cui aggiungere i nomi utente specificati.</param>
        <summary>Aggiunge utenti specifici ai ruoli specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.AddUsersToRoles%2A> metodo chiama il provider di ruoli predefinito per associare gli utenti specificati ai ruoli specificati nell'origine dati.  
  
 Se l'applicazione usa la <xref:System.Web.Security.SqlRoleProvider> classe, gli aggiornamenti di database che vengono eseguiti durante la chiamata al <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> metodo eseguite all'interno di una transazione. Se viene rilevato un errore, ad esempio un nome utente che è già in un ruolo specificato, viene eseguito il rollback della transazione e viene eseguito alcun aggiornamento.  
  
> [!NOTE]
>  I nomi utente e i nomi di ruolo non possono contenere virgole.  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge uno o più utenti a uno o più ruoli. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/adduserstorolescs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Roles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/adduserstorolesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno dei ruoli in <paramref name="roleNames" /> è <see langword="null" />.  
  
oppure 
Uno degli utenti in <paramref name="usernames" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno dei ruoli in <paramref name="roleNames" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
Uno degli utenti in <paramref name="usernames" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 <paramref name="roleNames" /> contiene un elemento duplicato.  
  
oppure 
 <paramref name="usernames" /> contiene un elemento duplicato.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddUserToRole">
      <MemberSignature Language="C#" Value="public static void AddUserToRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddUserToRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.AddUserToRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddUserToRole (username As String, roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddUserToRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member AddUserToRole : string * string -&gt; unit" Usage="System.Web.Security.Roles.AddUserToRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nome utente da aggiungere al ruolo specificato.</param>
        <param name="roleName">Ruolo a cui aggiungere il nome utente specificato.</param>
        <summary>Aggiunge l'utente specificato al ruolo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.AddUserToRole%2A> metodo chiama il provider di ruoli predefinito per associare l'utente specificato con il ruolo specificato nell'origine dati.  
  
> [!NOTE]
>  I nomi utente e i nomi di ruolo non possono contenere virgole.  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge un utente a un ruolo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/addusertorolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Roles#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/addusertorolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.  
  
oppure 
 <paramref name="username" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 <paramref name="username" /> è una stringa vuota o contiene una virgola (,).</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.  
  
oppure 
L'utente è già assegnato al ruolo specificato.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddUserToRoles">
      <MemberSignature Language="C#" Value="public static void AddUserToRoles (string username, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddUserToRoles(string username, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.AddUserToRoles(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddUserToRoles (username As String, roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddUserToRoles(System::String ^ username, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="static member AddUserToRoles : string * string[] -&gt; unit" Usage="System.Web.Security.Roles.AddUserToRoles (username, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="username">Nome utente da aggiungere ai ruoli specificati.</param>
        <param name="roleNames">Matrice di stringhe di ruoli a cui aggiungere il nome utente specificato.</param>
        <summary>Aggiunge l'utente specificato ai ruoli specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.AddUserToRoles%2A> metodo chiama il provider di ruoli predefinito per associare l'utente specificato con i ruoli specificati nell'origine dati.  
  
 Se l'applicazione usa la <xref:System.Web.Security.SqlRoleProvider> classe, gli aggiornamenti di database che vengono eseguiti durante la chiamata al <xref:System.Web.Security.Roles.AddUserToRoles%2A> metodo eseguite all'interno di una transazione. Se viene rilevato un errore, ad esempio un nome utente che è già in un ruolo specificato, viene eseguito il rollback della transazione e viene eseguito alcun aggiornamento.  
  
> [!NOTE]
>  I nomi utente e i nomi di ruolo non possono contenere virgole.  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge un utente a uno o più ruoli. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/addusertorolescs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Roles#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/addusertorolesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno dei ruoli in <paramref name="roleNames" /> è <see langword="null" />.  
  
oppure 
 <paramref name="username" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno dei ruoli in <paramref name="roleNames" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 <paramref name="username" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 <paramref name="roleNames" /> contiene un elemento duplicato.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.Roles.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'applicazione per cui archiviare e recuperare informazioni sui ruoli.</summary>
        <value>Nome dell'applicazione per cui archiviare e recuperare informazioni sui ruoli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà viene usata dal <xref:System.Web.Security.Roles> classe per associare gli utenti e ruoli con diverse applicazioni. Ciò consente a più applicazioni di usare la stessa origine dati per archiviare le informazioni sui ruoli e utenti senza incorrere in conflitti tra nomi utente duplicati o i nomi dei ruoli duplicati. Più applicazioni ASP.NET possono usare la stessa origine dati, specificando lo stesso valore nel <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà. È possibile impostare il <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà a livello di codice oppure è possibile impostarlo in modo dichiarativo nel file di configurazione per l'applicazione Web usando il `applicationName` attributo.  
  
 Se l'applicazione Web Usa il <xref:System.Web.Security.SqlRoleProvider> classe e un valore non è specificato per il `applicationName` attributo nel file di configurazione, il <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> valore della proprietà corrente <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> proprietà viene utilizzata.  
  
> [!CAUTION]
>  Poiché un'istanza del provider predefinito solo ruolo viene usata per tutte le richieste servite da un <xref:System.Web.HttpApplication> dell'oggetto, è possibile che più richieste in esecuzione contemporaneamente e si tenta di impostare il <xref:System.Web.Security.Roles.ApplicationName%2A> valore della proprietà. Il <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà non è thread-safe per più operazioni di scrittura e la modifica di <xref:System.Web.Security.Roles.ApplicationName%2A> valore della proprietà può produrre risultati imprevisti per più utenti di un'applicazione. È consigliabile evitare di scrivere codice per consentire agli utenti di impostare il <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà, a meno che non necessari. Un esempio di un'applicazione in cui l'impostazione di <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà potrebbe essere necessaria un'applicazione amministrativa che gestisce i dati del ruolo per più applicazioni. Questo tipo di applicazione deve essere un utente singolo e non è un'applicazione Web.  
  
   
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione usa una <xref:System.Web.Security.SqlRoleProvider> istanza e imposta la `applicationName` dell'attributo `MyApplication`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CacheRolesInCookie">
      <MemberSignature Language="C#" Value="public static bool CacheRolesInCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CacheRolesInCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CacheRolesInCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CacheRolesInCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CacheRolesInCookie { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheRolesInCookie : bool" Usage="System.Web.Security.Roles.CacheRolesInCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se i ruoli dell'utente corrente sono memorizzati in un cookie.</summary>
        <value>
          <see langword="true" /> se i ruoli dell'utente corrente sono memorizzati in un cookie; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando la <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> è impostata su `true` nel file Web. config, informazioni sui ruoli per ogni utente viene archiviati in un cookie. Quando la gestione dei ruoli controlla se un utente è in un determinato ruolo, il cookie dei ruoli è selezionato prima della chiamata del provider di ruoli per controllare l'elenco dei ruoli nell'origine dati. Il cookie viene aggiornato in modo dinamico per memorizzare nella cache i più recente convalidati i nomi dei ruoli.  
  
 È possibile migliorare l'affidabilità dei nomi di ruoli memorizzati in un cookie, specificando un <xref:System.Web.Security.Roles.CookieProtectionValue%2A> proprietà quando si configurano i ruoli ASP.NET. Il valore predefinito <xref:System.Web.Security.Roles.CookieProtectionValue%2A> è `All`, che consente di crittografare i nomi dei ruoli nel cookie e verifica che il contenuto del cookie non è stato modificato.  
  
> [!NOTE]
>  Poiché i nomi dei ruoli possono essere memorizzati nella cache oltre l'origine dati, è possibile che le modifiche apportate alla gestione dei ruoli nell'origine dati potrebbero non rifletteranno i valori memorizzati nella cache. In questo caso, l'utente deve chiudere e riaprire il browser per cancellare il valore del cookie memorizzato nella cache.  
  
   
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione usa una <xref:System.Web.Security.SqlRoleProvider> istanza e imposta la `cacheRolesInCookie` dell'attributo `true`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
   </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieName">
      <MemberSignature Language="C#" Value="public static string CookieName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookieName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookieName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieName : string" Usage="System.Web.Security.Roles.CookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del cookie in cui sono memorizzati i nomi dei ruoli.</summary>
        <value>Nome del cookie in cui sono memorizzati i nomi dei ruoli. L'impostazione predefinita è .ASPXROLES.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare il nome del cookie in cui vengono memorizzati nella cache dei ruoli per l'applicazione impostando il `cookieName` attributo nel file Web. config per l'applicazione ASP.NET. Ciò è utile quando si vuole identificare in modo univoco un cookie per l'applicazione o quando un cookie è condiviso tra più applicazioni, ad esempio un cookie di dominio.  
  
   
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione usa una <xref:System.Web.Security.SqlRoleProvider> istanza e imposta il `cookieName` dell'attributo. ASPROLES.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public static string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string" Usage="System.Web.Security.Roles.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il percorso del cookie dei nomi di ruoli memorizzati.</summary>
        <value>Percorso del cookie in cui sono memorizzati i nomi di ruoli. L'impostazione predefinita è /.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare il percorso del cookie in cui vengono memorizzati nella cache dei ruoli per l'applicazione impostando il `cookiePath` attributo nel file Web. config per l'applicazione ASP.NET. Per altre informazioni sui percorsi dei cookie, vedere <xref:System.Web.HttpCookie.Path%2A>.  
  
   
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione utilizza un <xref:System.Web.Security.SqlRoleProvider> istanza e imposta il `cookiePath` attributo /MyApplication.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/MyApplication"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieProtectionValue">
      <MemberSignature Language="C#" Value="public static System.Web.Security.CookieProtection CookieProtectionValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.Security.CookieProtection CookieProtectionValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookieProtectionValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieProtectionValue As CookieProtection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::CookieProtection CookieProtectionValue { System::Web::Security::CookieProtection get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieProtectionValue : System.Web.Security.CookieProtection" Usage="System.Web.Security.Roles.CookieProtectionValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.CookieProtection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica la modalità di protezione dei nomi di ruoli memorizzati in un cookie.</summary>
        <value>Uno dei valori di enumerazione di <see cref="T:System.Web.Security.CookieProtection" /> che indica la modalità di protezione dei nomi di ruoli memorizzati in un cookie. Il valore predefinito è <see langword="All" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare la protezione del cookie in cui vengono memorizzati nella cache dei ruoli per l'applicazione impostando il `cookieProtection` attributo nel file Web. config per l'applicazione ASP.NET. Il `cookieProtection` dell'attributo accetta un <xref:System.Web.Security.CookieProtection> valore di enumerazione che indica se i nomi dei ruoli sono crittografati, convalida, entrambi o nessuno.  
  
   
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione usa una <xref:System.Web.Security.SqlRoleProvider> istanza e imposta `cookieProtection` dell'attributo `Encrypted`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/MyApplication"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="Encrypted" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieRequireSSL">
      <MemberSignature Language="C#" Value="public static bool CookieRequireSSL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookieRequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookieRequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieRequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookieRequireSSL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieRequireSSL : bool" Usage="System.Web.Security.Roles.CookieRequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il cookie dei nomi di ruoli richiede SSL per essere restituito al server.</summary>
        <value>
          <see langword="true" /> se è richiesta la crittografia SSL per restituire il cookie dei nomi di ruoli al server; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare se SSL (Secure Sockets Layer) è obbligatorio per restituire il cookie dei nomi di ruolo per il server nell'applicazione impostando il `cookieRequireSSL` attributo nel file Web. config per l'applicazione ASP.NET. Per ulteriori informazioni, vedere <xref:System.Web.HttpCookie.Secure%2A>.  
  
   
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione usa una <xref:System.Web.Security.SqlRoleProvider> istanza e imposta `cookieRequireSSL` a `true`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/MyApplication"  
  cookieRequireSSL="true"  
  cookieSlidingExpiration="true"  
  cookieProtection="Encrypted" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieSlidingExpiration">
      <MemberSignature Language="C#" Value="public static bool CookieSlidingExpiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookieSlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookieSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieSlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookieSlidingExpiration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieSlidingExpiration : bool" Usage="System.Web.Security.Roles.CookieSlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se la data e l'ora di scadenza del cookie dei nomi di ruoli verranno reimpostate periodicamente.</summary>
        <value>
          <see langword="true" /> se la data e l'ora di scadenza del cookie contenente i nomi dei ruoli vengono reimpostate periodicamente; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare se data di scadenza del cookie dei nomi di ruoli e ora verrà reimpostato con ogni risposta utilizzando il `cookieSlidingExpiration` attributo nel file Web. config per l'applicazione ASP.NET. Se `true`, la scadenza del cookie imposterà inizialmente per la data corrente più il <xref:System.Web.Security.Roles.CookieTimeout%2A> in pochi minuti. Mentre l'utente continua a usare attivamente l'applicazione ASP.NET la data di scadenza del cookie verrà essere aggiornate automaticamente se è presente meno della metà del <xref:System.Web.Security.Roles.CookieTimeout%2A> rimanenti. Per altre informazioni, vedere la proprietà <xref:System.Web.HttpCookie.Expires%2A>.  
  
   
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione usa una <xref:System.Web.Security.SqlRoleProvider> istanza e imposta la <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> proprietà `false`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/MyApplication"  
  cookieRequireSSL="true"  
  cookieSlidingExpiration="false"  
  cookieProtection="Encrypted" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieTimeout">
      <MemberSignature Language="C#" Value="public static int CookieTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CookieTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookieTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CookieTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieTimeout : int" Usage="System.Web.Security.Roles.CookieTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di minuti prima della scadenza del cookie.</summary>
        <value>Intero che specifica il numero di minuti prima della scadenza del cookie dei ruoli. Il valore predefinito è 30 minuti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.CookieTimeout%2A> proprietà viene utilizzata quando il <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> è di proprietà `true` e specifica il time-to-live in pochi minuti per il cookie dei ruoli. Per impostare il <xref:System.Web.Security.Roles.CookieTimeout%2A> valore, aggiungere il `cookieTimeout` attributo all'elemento nel file Web. config per l'applicazione ASP.NET e specificare un valore integer.  
  
 Se <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> è `false`, questa proprietà viene ignorata.  
  
   
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione usa una <xref:System.Web.Security.SqlRoleProvider> istanza e imposta il <xref:System.Web.Security.Roles.CookieTimeout%2A> proprietà a 30 minuti.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/MyApplication"  
  cookieRequireSSL="true"  
  cookieSlidingExpiration="true"  
  cookieProtection="Encrypted" >  
  <providers>  
  <add  
    name="SqlProvider"  
    type="System.Web.Security.SqlRoleProvider"  
    connectionStringName="SqlServices"  
    applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePersistentCookie">
      <MemberSignature Language="C#" Value="public static bool CreatePersistentCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CreatePersistentCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CreatePersistentCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CreatePersistentCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CreatePersistentCookie { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CreatePersistentCookie : bool" Usage="System.Web.Security.Roles.CreatePersistentCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il cookie dei nomi di ruoli è basato sulla sessione o persistente.</summary>
        <value>
          <see langword="true" /> se il cookie dei nomi di ruoli è persistente; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.CreatePersistentCookie%2A> valore della proprietà è impostato nella configurazione per un'applicazione ASP.NET usando il `createPersistentCookie` attributo dell'elemento di configurazione.  
  
 Quando `false`, il cookie dei nomi di ruoli è un cookie di sessione, vale a dire, il cookie viene perso quando il browser viene chiuso. Quando `true`, il cookie dei nomi di ruoli è un cookie permanente che è disponibile in più sessioni del browser. La data di scadenza del cookie persistente e l'ora siano impostate per la data corrente e l'ora più il <xref:System.Web.Security.Roles.CookieTimeout%2A> valore in minuti.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public static void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member CreateRole : string -&gt; unit" Usage="System.Web.Security.Roles.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da creare.</param>
        <summary>Aggiunge un nuovo ruolo all'origine dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.CreateRole%2A> metodo aggiunge un nome di ruolo per l'origine dati. <xref:System.Web.Security.Roles.CreateRole%2A> le chiamate di <xref:System.Web.Security.RoleProvider.CreateRole%2A> metodo del provider di ruoli predefinito per aggiungere il ruolo specificato per l'origine dati.  
  
> [!NOTE]
>  I nomi di ruolo non possono contenere virgole.  
  
   
  
## Examples  
 Esempio di codice seguente crea un nuovo ruolo nell'origine dati. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="roleName" /> è una stringa vuota.  
  
oppure 
 <paramref name="roleName" /> contiene una virgola.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCookie">
      <MemberSignature Language="C#" Value="public static void DeleteCookie ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteCookie() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.DeleteCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteCookie ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteCookie();" />
      <MemberSignature Language="F#" Value="static member DeleteCookie : unit -&gt; unit" Usage="System.Web.Security.Roles.DeleteCookie " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina il cookie in cui sono memorizzati i nomi di ruoli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.DeleteCookie%2A> metodo cancella il contenuto del cookie utilizzato per memorizzare i nomi dei ruoli. Per altre informazioni sulla memorizzazione nella cache i nomi dei ruoli, vedere <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>.  
  
   
  
## Examples  
 Nell'esempio di codice viene chiamato il <xref:System.Web.Security.Roles.DeleteCookie%2A> metodo per cancellare qualsiasi memorizzato nella cache i nomi dei ruoli quando un utente effettua l'accesso. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Roles#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/logincs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Roles#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/loginvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteRole">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rimuove un ruolo dall'origine dati.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public static bool DeleteRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.DeleteRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteRole (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member DeleteRole : string -&gt; bool" Usage="System.Web.Security.Roles.DeleteRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da eliminare.</param>
        <summary>Rimuove un ruolo dall'origine dati.</summary>
        <returns>
          <see langword="true" /> se <paramref name="roleName" /> è stato eliminato dall'origine dati; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.DeleteRole%2A> metodo rimuove un nome di ruolo dall'origine dati. <xref:System.Web.Security.Roles.DeleteRole%2A> le chiamate di <xref:System.Web.Security.RoleProvider.DeleteRole%2A> metodo del provider di ruoli predefinito per rimuovere il ruolo specificato dell'origine dati.  
  
 Se il ruolo è identificato dal `roleName` parametro ha uno o più membri, quindi verrà generata un'eccezione e il ruolo non verrà eliminato.  
  
   
  
## Examples  
 Esempio di codice seguente elimina un ruolo dall'origine dati. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola (,).</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> ha uno o più membri.  
  
oppure 
La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public static bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="static member DeleteRole : string * bool -&gt; bool" Usage="System.Web.Security.Roles.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da eliminare.</param>
        <param name="throwOnPopulatedRole">Se <see langword="true" /> e <c>roleName</c> ha uno o più membri, viene generata un'eccezione.</param>
        <summary>Rimuove un ruolo dall'origine dati.</summary>
        <returns>
          <see langword="true" /> se <paramref name="roleName" /> è stato eliminato dall'origine dati; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.DeleteRole%2A> metodo rimuove un nome di ruolo dall'origine dati. <xref:System.Web.Security.Roles.DeleteRole%2A> le chiamate di <xref:System.Web.Security.RoleProvider.DeleteRole%2A> metodo del provider di ruoli predefinito per rimuovere il ruolo specificato dell'origine dati.  
  
 Se `throwOnPopulatedRole` viene `true`, quindi verrà generata un'eccezione e il ruolo non verrà eliminato se il ruolo è identificato dal `roleName` parametro ha uno o più membri. Se `throwOnPopulatedRole` è `false`, il ruolo verrà eliminato se è vuota o meno.  
  
   
  
## Examples  
 Esempio di codice seguente elimina un ruolo dall'origine dati. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="roleName" /> è una stringa vuota.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> ha uno o più membri e <paramref name="throwOnPopulatedRole" /> è <see langword="true" />.  
  
oppure 
La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public static string Domain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Domain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string" Usage="System.Web.Security.Roles.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore del dominio del cookie dei nomi di ruoli.</summary>
        <value>Proprietà <see cref="P:System.Web.HttpCookie.Domain" /> del cookie dei nomi di ruoli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.Domain%2A> valore della proprietà è impostato nella configurazione per un'applicazione ASP.NET usando il `domain` attributo dell'elemento di configurazione.  
  
 Se viene specificato alcun valore nella configurazione per l'attributo di dominio, il <xref:System.Web.Security.Roles.Domain%2A> proprietà restituisce `null` e il dominio del cookie dei nomi di ruoli predefinito è il comportamento delle <xref:System.Web.HttpCookie> <xref:System.Web.HttpCookie.Domain%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Security.Roles.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la gestione ruoli è abilitata per l'applicazione Web corrente.</summary>
        <value>
          <see langword="true" /> se la gestione ruoli è attivata; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione usa una <xref:System.Web.Security.SqlRoleProvider> istanza e imposta la `enabled` dell'attributo `true`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public static string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersInRole : string * string -&gt; string[]" Usage="System.Web.Security.Roles.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Ruolo in cui eseguire la ricerca.</param>
        <param name="usernameToMatch">Nome utente da cercare.</param>
        <summary>Ottiene un elenco di utenti appartenenti a un ruolo specificato in cui il nome utente contiene il nome utente specificato di cui verificare la corrispondenza.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti gli utenti il cui nome utente corrisponde a <paramref name="usernameToMatch" /> e che sono membri del ruolo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.FindUsersInRole%2A> Restituisce un elenco di utenti in un ruolo in cui il nome utente contiene una corrispondenza dell'oggetto fornito `usernameToMatch` dell'applicazione configurata `applicationName`. Ad esempio, se il `usernameToMatch` parametro è impostato su "user", quindi gli utenti "user1", "user2", "utente3" e così via vengono restituiti. Gli utenti vengono restituiti in ordine alfabetico per nome utente.  
  
 Il <xref:System.Web.Security.SqlRoleProvider> esegue la ricerca utilizzando una clausola LIKE contro il `usernameToMatch` parametro. Caratteri jolly sono supportati da SQL Server nel come clausole possono essere usate nel `usernameToMatch` valore del parametro.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.FindUsersInRole%2A> metodo per visualizzare l'appartenenza al ruolo in base all'input. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).  
  
oppure 
 <paramref name="usernameToMatch" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 Il parametro <paramref name="usernameToMatch" /> è una stringa vuota.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public static string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="static member GetAllRoles : unit -&gt; string[]" Usage="System.Web.Security.Roles.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un elenco di tutti i ruoli per l'applicazione.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti i ruoli memorizzati nell'origine dati per l'applicazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.GetAllRoles%2A> chiamate al metodo il <xref:System.Web.Security.RoleProvider.GetAllRoles%2A?displayProperty=nameWithType> metodo del provider di ruoli predefinito per ottenere un elenco di tutti i ruoli dall'origine dati per un'applicazione. Solo i ruoli per l'applicazione specificata nel <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà vengono recuperate.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetAllRoles%2A> metodo per ottenere l'elenco dei ruoli per un'applicazione e associare i risultati in un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRolesForUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene un elenco di ruoli a cui appartiene un utente.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public static string[] GetRolesForUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetRolesForUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.GetRolesForUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRolesForUser () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetRolesForUser();" />
      <MemberSignature Language="F#" Value="static member GetRolesForUser : unit -&gt; string[]" Usage="System.Web.Security.Roles.GetRolesForUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un elenco dei ruoli a cui appartiene l'utente attualmente connesso al sistema.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti i ruoli a cui appartiene l'utente attualmente connesso al sistema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.GetRolesForUser%2A> chiamate al metodo il <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A?displayProperty=nameWithType> metodo del provider di ruoli predefinito per il recupero dei dati di origine i ruoli in cui l'utente attualmente connesso. L'utente attualmente connesso viene identificato mediante il <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> proprietà dell'oggetto corrente <xref:System.Web.HttpContext?displayProperty=nameWithType>, o da <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> gli ambienti di hosting non HTTP. Se nessun utente è connesso, verrà generata un'eccezione. Solo i ruoli per l'applicazione specificata nel <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà vengono recuperate.  
  
 Se <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> viene `true`, quindi i risultati del <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodo può essere restituito dalla cache dei ruoli anziché il provider di ruoli specificato.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodo per recuperare un elenco di ruoli per un utente specificato e associati i ruoli restituiti da una <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Roles#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Nessun utente è correntemente connesso al sistema.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public static string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member GetRolesForUser : string -&gt; string[]" Usage="System.Web.Security.Roles.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utente per il quale restituire un elenco di ruoli.</param>
        <summary>Ottiene un elenco di ruoli a cui appartiene un utente.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti i ruoli a cui appartiene l'utente specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.GetRolesForUser%2A> chiamate al metodo il <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A?displayProperty=nameWithType> metodo del provider di ruoli predefinito per il recupero dei dati di origine i ruoli che l'utente appartiene. Solo i ruoli per l'applicazione specificata nel <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà vengono recuperate.  
  
 Se `username` è uguale all'utente corrente connesso e <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> viene `true`, i risultati del <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodo può essere restituito dalla cache dei ruoli anziché specificato <xref:System.Web.Security.Roles.Provider%2A>.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodo per recuperare un elenco di ruoli per un utente specificato e associati i ruoli restituiti da una <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Roles#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contiene una virgola (,).</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public static string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member GetUsersInRole : string -&gt; string[]" Usage="System.Web.Security.Roles.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Ruolo per il quale ottenere l'elenco di utenti.</param>
        <summary>Ottiene un elenco di utenti appartenenti al ruolo specificato.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti gli utenti membri del ruolo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.GetUsersInRole%2A> chiamate al metodo il <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> metodo del provider di ruoli predefinito per recuperare i nomi utente associati a un ruolo dall'origine dati. Solo i ruoli per l'applicazione specificata nel <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà vengono recuperate.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetUsersInRole%2A> metodo per ottenere un elenco degli utenti in un determinato ruolo e associa i risultati a un <xref:System.Web.UI.WebControls.GridView> controllo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola (,).</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUserInRole">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene un valore che indica se un utente appartiene al ruolo specificato.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public static bool IsUserInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUserInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.IsUserInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUserInRole (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUserInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member IsUserInRole : string -&gt; bool" Usage="System.Web.Security.Roles.IsUserInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo in cui eseguire la ricerca.</param>
        <summary>Ottiene un valore che indica se l'utente attualmente connesso al sistema appartiene al ruolo specificato. L'API deve essere chiamata solo all'interno del contesto di un thread di richiesta ASP.NET e in tale caso d'uso sanzionato è thread-safe.</summary>
        <returns>
          <see langword="true" /> se l'utente correntemente connesso appartiene al ruolo specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.IsUserInRole%2A> chiamate al metodo il <xref:System.Web.Security.RoleProvider.IsUserInRole%2A?displayProperty=nameWithType> metodo del provider di ruoli predefiniti per determinare se l'utente attualmente connesso è associato a un ruolo dall'origine dati per l'applicazione specificata nel <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà. L'utente attualmente connesso viene identificato mediante il <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> proprietà dell'oggetto corrente <xref:System.Web.HttpContext?displayProperty=nameWithType>, o da <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> gli ambienti di hosting non HTTP. Se nessun utente è connesso, verrà generata un'eccezione. Solo i ruoli per l'applicazione specificata nel <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà vengono recuperate.  
  
 Se <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> viene `true`, quindi `roleName` può essere confrontato con la cache dei ruoli anziché il provider di ruoli specificato.  
  
   
  
## Examples  
 Esempio di codice seguente controlla a livello di codice se l'utente attualmente connesso è nel ruolo Administrators prima di consentire all'utente di visualizzare le impostazioni dei ruoli per l'applicazione. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.  
  
oppure 
Nessun utente è correntemente connesso al sistema.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola (,).</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public static bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member IsUserInRole : string * string -&gt; bool" Usage="System.Web.Security.Roles.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nome dell'utente da cercare.</param>
        <param name="roleName">Nome del ruolo in cui eseguire la ricerca.</param>
        <summary>Ottiene un valore che indica se l'utente specificato appartiene al ruolo specificato. L'API deve essere chiamata solo all'interno del contesto di un thread di richiesta ASP.NET e in tale caso d'uso sanzionato è thread-safe.</summary>
        <returns>
          <see langword="true" /> se l'utente specificato appartiene al ruolo specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.IsUserInRole%2A> chiamate al metodo il <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> metodo del provider di ruoli predefiniti per determinare se un nome utente è associato a un ruolo dall'origine dati per l'applicazione specificata nel <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà.  
  
 Se `username` è uguale all'utente corrente connesso e il <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> valore della proprietà `true`, `roleName` può essere confrontato con la cache dei ruoli anziché specificato <xref:System.Web.Security.Roles.Provider%2A>.  
  
   
  
## Examples  
 Esempio di codice seguente a livello di codice controlla se un utente è nel ruolo Administrators prima di consentire all'utente di visualizzare le impostazioni dei ruoli per l'applicazione. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.  
  
oppure 
 <paramref name="username" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 <paramref name="username" /> contiene una virgola (,).</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedResults">
      <MemberSignature Language="C#" Value="public static int MaxCachedResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxCachedResults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.MaxCachedResults" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxCachedResults As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxCachedResults { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedResults : int" Usage="System.Web.Security.Roles.MaxCachedResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero massimo di nomi di ruoli da memorizzare per un utente.</summary>
        <value>Numero massimo di nomi di ruoli da memorizzare per un utente. Il valore predefinito è 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.MaxCachedResults%2A> viene impostata usando i `maxCachedResults` attributo di configurazione. Il valore della `maxCachedResults` attributo di configurazione deve essere impostato su un valore intero maggiore di zero.  
  
   
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione usa una <xref:System.Web.Security.SqlRoleProvider> istanza e imposta il `maxCachedResults` attributo a 10.  
  
```  
<roleManager  
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All"   
  maxCachedResults="10" />  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.RoleProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.RoleProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As RoleProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::RoleProvider ^ Provider { System::Web::Security::RoleProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.RoleProvider" Usage="System.Web.Security.Roles.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.RoleProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il provider di ruoli predefinito per l'applicazione.</summary>
        <value>Provider di ruoli predefinito per l'applicazione, esposto come una classe che eredita la classe astratta <see cref="T:System.Web.Security.RoleProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.Provider%2A> proprietà consente di fare riferimento direttamente a provider di ruoli predefinito per un'applicazione. Viene in genere utilizzato per accedere ai membri personalizzati del provider di ruoli che non sono in parte il <xref:System.Web.Security.RoleProvider> classe astratta.  
  
 Ad esempio, il <xref:System.Web.Security.WindowsTokenRoleProvider> classe include un overload del <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> metodo che consente di determinare se un utente è in un ruolo di Windows comune usando un <xref:System.Security.Principal.WindowsBuiltInRole> valore di enumerazione. Un riferimento al <xref:System.Web.Security.WindowsTokenRoleProvider> classe per un'applicazione può essere ottenuta usando il <xref:System.Web.Security.Roles.Provider%2A> proprietà e può essere eseguito il cast come un <xref:System.Web.Security.WindowsTokenRoleProvider> per fare riferimento al <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> rapporto di overload.  
  
 Se più provider di ruoli sono configurati per un'applicazione, è possibile accedere usando provider di ruoli diversi di <xref:System.Web.Security.Roles.Providers%2A> raccolta.  
  
   
  
## Examples  
 Esempio di codice seguente viene eseguito il cast di provider di ruoli predefiniti come un <xref:System.Web.Security.WindowsTokenRoleProvider> e verifica se l'utente attualmente connesso è nel ruolo Administrators prima di consentire all'utente di visualizzare le impostazioni dei ruoli per l'applicazione. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.WindowsTokenRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/ViewRoles2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/ViewRoles2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.RoleProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.RoleProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As RoleProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::RoleProviderCollection ^ Providers { System::Web::Security::RoleProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Security.RoleProviderCollection" Usage="System.Web.Security.Roles.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.RoleProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta dei provider di ruoli per l'applicazione ASP.NET.</summary>
        <value>Oggetto <see cref="T:System.Web.Security.RoleProviderCollection" /> contenente i provider di ruoli configurati per l'applicazione ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.Providers%2A> proprietà fa riferimento a tutti i provider di ruoli abilitati per un'applicazione, inclusi eventuali provider aggiunti nel file Web. config. È possibile controllare il ruolo di cui sono disponibili provider per un'applicazione usando il `providers` elemento della sezione nel file Web. config per l'applicazione.  
  
 Nell'esempio seguente viene illustrata una sezione che rimuove tutti i provider esistenti (ad esempio quelle specificate nel file Machine. config) e aggiunge un <xref:System.Web.Security.SqlRoleProvider> istanza come provider di ruoli per l'applicazione.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="false"  
      cookieSlidingExpiration="true"  
      cookieProtection="Encrypted">  
  
      <providers>  
        <clear/>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
         </providers>  
  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 È possibile ottenere un riferimento fortemente tipizzato per un provider di <xref:System.Web.Security.Roles.Providers%2A> raccolta in base al provider di ruoli di indicizzazione in base al nome e il cast al tipo desiderato.  
  
 È possibile ottenere un riferimento al provider predefinito per un'applicazione usando il <xref:System.Web.Security.Roles.Provider%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente elenca i provider abilitati per un'applicazione e i relativi tipi.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Roles#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserFromRole">
      <MemberSignature Language="C#" Value="public static void RemoveUserFromRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveUserFromRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.RemoveUserFromRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveUserFromRole (username As String, roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveUserFromRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member RemoveUserFromRole : string * string -&gt; unit" Usage="System.Web.Security.Roles.RemoveUserFromRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utente da rimuovere dal ruolo specificato.</param>
        <param name="roleName">Ruolo da cui rimuovere l'utente specificato.</param>
        <summary>Rimuove l'utente specificato dal ruolo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.RemoveUserFromRole%2A> metodo chiama il provider di ruoli predefinito per rimuovere l'utente specificato dal ruolo specificato nell'origine dati.  
  
   
  
## Examples  
 Esempio di codice seguente rimuove un utente da un ruolo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.  
  
oppure 
 <paramref name="username" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola (,). 
 <paramref name="username" /> è una stringa vuota o contiene una virgola (,).</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserFromRoles">
      <MemberSignature Language="C#" Value="public static void RemoveUserFromRoles (string username, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveUserFromRoles(string username, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.RemoveUserFromRoles(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveUserFromRoles (username As String, roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveUserFromRoles(System::String ^ username, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="static member RemoveUserFromRoles : string * string[] -&gt; unit" Usage="System.Web.Security.Roles.RemoveUserFromRoles (username, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="username">Utente da rimuovere dai ruoli specificati.</param>
        <param name="roleNames">Matrice di stringhe di nomi di ruoli da cui rimuovere l'utente specificato.</param>
        <summary>Rimuove l'utente specificato dai ruoli specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> metodo chiama il provider di ruoli predefinito per rimuovere l'utente specificato dai ruoli specificati nell'origine dati.  
  
 Se l'applicazione è configurata per usare la <xref:System.Web.Security.SqlRoleProvider> classe, gli aggiornamenti di database che vengono eseguiti durante la chiamata al <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> metodo eseguite all'interno di una transazione. Se viene rilevato un errore, ad esempio un nome utente che non è un ruolo specificato, viene eseguito il rollback della transazione e viene eseguito alcun aggiornamento.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> metodo per rimuovere un utente da uno o più ruoli. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/RemoveUserFromRolescs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Roles#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/RemoveUserFromRolesvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno dei ruoli in <paramref name="roleNames" /> è <see langword="null" />.  
  
oppure 
 <paramref name="username" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno dei ruoli in <paramref name="roleNames" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 <paramref name="username" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 <paramref name="roleNames" /> contiene un elemento duplicato.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRole">
      <MemberSignature Language="C#" Value="public static void RemoveUsersFromRole (string[] usernames, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveUsersFromRole(string[] usernames, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.RemoveUsersFromRole(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveUsersFromRole (usernames As String(), roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveUsersFromRole(cli::array &lt;System::String ^&gt; ^ usernames, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member RemoveUsersFromRole : string[] * string -&gt; unit" Usage="System.Web.Security.Roles.RemoveUsersFromRole (usernames, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernames">Matrice di stringhe di nomi utente da rimuovere dai ruoli specificati.</param>
        <param name="roleName">Nome del ruolo da cui rimuovere gli utenti specificati.</param>
        <summary>Rimuove gli utenti specificati dal ruolo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> metodo chiama il provider di ruoli predefinito per rimuovere gli utenti specificati dal ruolo specificato nell'origine dati.  
  
 Se l'applicazione usa la <xref:System.Web.Security.SqlRoleProvider> classe, gli aggiornamenti di database che vengono eseguiti durante la chiamata al <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> metodo eseguite all'interno di una transazione. Se viene rilevato un errore, ad esempio un nome utente che non è un ruolo specificato, viene eseguito il rollback della transazione e viene eseguito alcun aggiornamento.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> metodo per rimuovere uno o più utenti da un ruolo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/RemoveUsersFromRolecs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Roles#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/RemoveUsersFromRolevb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.  
  
oppure 
Uno dei nomi utente in <paramref name="usernames" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
Uno dei nomi utente in <paramref name="usernames" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 <paramref name="usernames" /> contiene un elemento duplicato.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public static void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="static member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="System.Web.Security.Roles.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matrice di stringhe di nomi utente da rimuovere dai ruoli specificati.</param>
        <param name="roleNames">Matrice di stringhe di nomi di ruoli da cui rimuovere gli utenti specificati.</param>
        <summary>Consente di rimuovere i nomi utente specificati dai ruoli specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> metodo chiama il provider di ruoli predefinito per rimuovere gli utenti specificati dai ruoli specificati nell'origine dati.  
  
 Se l'applicazione usa la <xref:System.Web.Security.SqlRoleProvider> classe, gli aggiornamenti di database che vengono eseguiti durante la chiamata al <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> metodo eseguite all'interno di una transazione. Se viene rilevato un errore, ad esempio un nome utente che non è un ruolo specificato, viene eseguito il rollback della transazione e viene eseguito alcun aggiornamento.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> metodo per rimuovere uno o più utenti da uno o più ruoli basato sull'input dell'utente. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/RemoveUsersFromRolescs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Roles#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/RemoveUsersFromRolesvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno dei ruoli specificati in <paramref name="roleNames" /> è <see langword="null" />.  
  
oppure 
Uno degli utenti specificati in <paramref name="usernames" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno dei ruoli specificati in <paramref name="roleNames" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
Uno degli utenti specificati in <paramref name="usernames" /> è una stringa vuota o contiene una virgola (,).  
  
oppure 
 <paramref name="roleNames" /> contiene un elemento duplicato.  
  
oppure 
 <paramref name="usernames" /> contiene un elemento duplicato.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public static bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member RoleExists : string -&gt; bool" Usage="System.Web.Security.Roles.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da cercare nell'origine dati.</param>
        <summary>Ottiene un valore che indica se il nome del ruolo specificato esiste già nell'origine dati del ruolo.</summary>
        <returns>
          <see langword="true" /> se il nome del ruolo esiste già nell'origine dati; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Roles.RoleExists%2A> chiamate al metodo il `RoleExists` metodo del provider per determinare se un nome di ruolo esiste nell'origine dati per l'applicazione specificato nel ruolo predefinito di <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.RoleExists%2A> metodo per determinare se un nome di ruolo esiste già prima di creare il ruolo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola (,).</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestione ruoli non è attivata.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informazioni sulla gestione di ruoli ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>