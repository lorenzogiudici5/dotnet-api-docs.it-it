<Type Name="SqlRoleProvider" FullName="System.Web.Security.SqlRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d555023d319f49211f2a3b1a31cace7cb962d5c6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36596643" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type SqlRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of role membership information for an ASP.NET application in a SQL Server database.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe viene utilizzata per la <xref:System.Web.Security.Roles> e <xref:System.Web.Security.RolePrincipal> classi per fornire servizi di gestione dei ruoli per un'applicazione ASP.NET tramite un database di SQL Server. È possibile utilizzare la gestione dei ruoli per specificare diversi livelli di autorizzazione per l'applicazione.  
  
 Usare la <xref:System.Web.Security.SqlRoleProvider> (classe), è innanzitutto necessario creare il database di SQL Server utilizzato dal <xref:System.Web.Security.SqlRoleProvider>. Per creare il database utilizzato dal <xref:System.Web.Security.SqlRoleProvider> (classe), eseguire la `aspnet_regsql.exe` trovare eseguibile nel C:\WINDOWS\Microsoft.NET\Framework\ `versionNumber` cartella e specificare la `-Ar` opzione (ad esempio, `aspnet_regsql.exe -Ar`). Il database creato è denominato Aspnetdb. In alternativa, eseguire aspnet_regsql.exe per attivare la modalità di configurazione GUI e scegliere di configurare tutte le funzionalità ASP.NET.  
  
 Se il provider di ruoli è configurato con una stringa di connessione che utilizza la sicurezza integrata, l'account di processo dell'applicazione ASP.NET deve disporre di diritti per la connessione al database di SQL Server.  
  
 Il file Machine. config è configurato con un <xref:System.Web.Security.SqlRoleProvider> istanza denominata AspNetSqlProvider che si connette a SQL Server nel computer locale. È possibile usare questa istanza del provider o specificare una nel file Web. config per l'applicazione ASP.NET. Per utilizzare l'istanza AspNetSqlProvider, specificare AspNetSqlProvider come il `defaultProvider` nella configurazione.  
  
 È possibile configurare il <xref:System.Web.Security.SqlRoleProvider> per utilizzare le stesse informazioni utente e il database come il <xref:System.Web.Security.SqlMembershipProvider> per poter usare un singolo database per l'autenticazione e autorizzazione. Per utilizzare lo stesso database per l'appartenenza e le informazioni sui ruoli, eseguire aspnet_regsql.exe. exe e installare la funzionalità di appartenenza. Quindi specificare la stessa stringa di connessione nella configurazione per entrambe le <xref:System.Web.Security.SqlRoleProvider> e <xref:System.Web.Security.SqlMembershipProvider> istanze. Inoltre, assicurarsi che entrambe le istanze del provider sono configurate con lo stesso <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il file Web. config per un'applicazione ASP.NET configurata per l'utilizzo di un <xref:System.Web.Security.SqlRoleProvider> oggetto e il <xref:System.Web.Security.SqlMembershipProvider>. L'elemento è configurato per consentire l'accesso agli utenti autenticati solo al ruolo Administrators.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="logincs.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
         <allow roles="Administrators" />  
         <deny users="*" />  
    </authorization>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="false"  
          requiresQuestionAndAnswer="false"   
          passwordFormat="Hashed"   
          applicationName="SampleApplication" />  
      </providers>  
    </membership>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"   
          applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an instance of the <see cref="T:System.Web.Security.SqlRoleProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.%23ctor%2A> costruttore viene chiamato da ASP.NET per creare un'istanza di <xref:System.Web.Security.SqlRoleProvider> classe come specificato nella configurazione per l'applicazione. Questo costruttore non può essere utilizzato dal codice.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">A string array of user names to be added to the specified roles.</param>
        <param name="roleNames">A string array of role names to add the specified user names to.</param>
        <summary>Adds the specified user names to each of the specified roles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe da associare uno o più utenti con uno o più ruoli nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). Questo metodo viene chiamato dal <xref:System.Web.Security.Roles.AddUserToRole%2A>, <xref:System.Web.Security.Roles.AddUserToRoles%2A>, <xref:System.Web.Security.Roles.AddUsersToRole%2A>, e <xref:System.Web.Security.Roles.AddUsersToRoles%2A> metodi il <xref:System.Web.Security.Roles> classe.  
  
 Gli aggiornamenti di database che vengono eseguiti durante la chiamata al <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> metodo sono effettuate all'interno di una transazione. Se si verifica un errore, ad esempio un nome utente che è già in un ruolo specificato, viene eseguito il rollback della transazione e viene eseguito alcun aggiornamento.  
  
 Se il <xref:System.Web.Security.SqlRoleProvider> viene utilizzato con il <xref:System.Web.Security.SqlMembershipProvider>e uno dei nomi utente specificato non esiste nel database, il nome utente verrà aggiunto automaticamente al database.  
  
 I nomi utente e i nomi dei ruoli non può contenere virgole.  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge uno o più utenti a un ruolo o rimuove un utente da un ruolo. Per un esempio di un file Web. config che abilita la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">One of the roles in <paramref name="roleNames" /> is <see langword="null" />.  -or-  One of the users in <paramref name="usernames" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">One of the roles in <paramref name="roleNames" /> is an empty string or contains a comma.  -or-  One of the users in <paramref name="usernames" /> is an empty string or contains a comma.  -or-  One of the roles in <paramref name="roleNames" /> is longer than 256 characters.  -or-  One of the users in <paramref name="usernames" /> is longer than 256 characters.  -or-  <paramref name="roleNames" /> contains a duplicate element.  -or-  <paramref name="usernames" /> contains a duplicate element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">One or more of the specified role names was not found.  -or-  One or more of the specified user names was not found.  -or-  One or more of the specified user names is already associated with one or more of the specified role names.  -or-  An unknown error occurred while communicating with the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application for which to store and retrieve role information.</summary>
        <value>Il nome dell'applicazione per cui si desidera archiviare e recuperare le informazioni sui ruoli. Il valore predefinito è il <see cref="P:System.Web.HttpRequest.ApplicationPath" /> valore della proprietà per l'oggetto corrente <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> viene utilizzato il <xref:System.Web.Security.SqlRoleProvider> per associare gli utenti e ruoli con applicazioni diverse. In questo modo più applicazioni di utilizzare lo stesso database per archiviare informazioni su utenti e ruoli senza che si verifichino conflitti tra nomi utente duplicati o i nomi dei ruoli. Più applicazioni ASP.NET è possono utilizzare lo stesso database, specificando lo stesso valore nel <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> proprietà. Il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> può essere impostata a livello di programmazione, o può essere impostata in modo dichiarativo nel file di configurazione dell'applicazione Web tramite il `applicationName` attributo.  
  
 Se non viene specificato un valore per il `applicationName` attributo nel file di configurazione per l'applicazione Web, il <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> valore della proprietà per l'oggetto corrente <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> oggetto viene utilizzato.  
  
> [!CAUTION]
>  Poiché un'istanza del provider predefinito singolo ruolo viene utilizzata per tutte le richieste servite da un <xref:System.Web.HttpApplication> dell'oggetto, è possibile avere più richieste in esecuzione contemporaneamente e si tenta di impostare il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> valore della proprietà. Il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> proprietà non è thread-safe per più operazioni di scrittura e la modifica di <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> valore della proprietà può comportare un comportamento imprevisto per più utenti di un'applicazione. È consigliabile evitare di scrivere codice che consenta agli utenti di impostare il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> proprietà solo se necessario. Un esempio di un'applicazione in cui l'impostazione di <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> proprietà potrebbe essere necessario un'applicazione amministrativa che gestisce i dati del ruolo per più applicazioni. Un'applicazione di questo tipo deve essere un utente singolo e non è un'applicazione Web.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlRoleProvider> istanza e imposta il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> proprietà `MyApplication`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to set the <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> property by a caller that does not have <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> ASP.NET hosting permission.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> to a string that is longer than 256 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="sqlRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to create.</param>
        <summary>Adds a new role to the role database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.CreateRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per creare un ruolo nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 La lunghezza massima per il nome del ruolo è 256 caratteri. I nomi dei ruoli non sono rilevanti. Le virgole non consentite nei nomi di ruolo.  
  
   
  
## Examples  
 Esempio di codice seguente crea un nuovo ruolo del database. Per un esempio di un file Web. config che abilita la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string or contains a comma.  -or-  <paramref name="roleName" /> is longer than 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> already exists in the database.  -or-  An unknown error occurred while communicating with the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="sqlRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to delete.</param>
        <param name="throwOnPopulatedRole">If <see langword="true" />, throws an exception if <c>roleName</c> has one or more members.</param>
        <summary>Removes a role from the role database.</summary>
        <returns>
          <see langword="true" /> if the role was successfully deleted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.DeleteRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> (classe) per eliminare un ruolo dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). Quando viene eliminato un ruolo, l'elenco degli utenti associati a tale ruolo viene eliminato anche dal database. Le informazioni utente nel database non sono interessate.  
  
 Se `throwOnPopulatedRole` viene `true`, quindi verrà generata un'eccezione e il ruolo non verrà eliminato se il ruolo è identificato dal `roleName` parametro ha uno o più membri. Se `throwOnPopulatedRole` è `false`, se è vuoto o non verrà eliminato il ruolo.  
  
   
  
## Examples  
 Nell'esempio seguente elimina un ruolo dal database. Per un esempio di un file Web. config che abilita la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string or contains a comma.  -or-  <paramref name="roleName" /> is longer than 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> has one or more members and <paramref name="throwOnPopulatedRole" /> is <see langword="true" />.  -or-  An unknown error occurred while communicating with the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="sqlRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The role to search in.</param>
        <param name="usernameToMatch">The user name to search for.</param>
        <summary>Gets an array of user names in a role where the user name contains the specified user name to match.</summary>
        <returns>A string array containing the names of all the users where the user name matches <paramref name="usernameToMatch" /> and the user is a member of the specified role.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.FindUsersInRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe e restituisce un elenco di utenti in un ruolo in cui il nome utente contiene una corrispondenza dell'oggetto fornito `usernameToMatch` per l'applicazione configurata `applicationName`. Il <xref:System.Web.Security.SqlRoleProvider> esegue la ricerca di un nome utente che corrisponda il `usernameToMatch` valore del parametro utilizzando i LIKE (parola chiave) e supporta SQL Server caratteri jolly. Ad esempio, se il `usernameToMatch` parametro è impostato su "user1", quindi vengono restituite informazioni di appartenenza per l'utente con il nome utente "User1", se esistente. Se il `usernameToMatch` parametro è impostato su "user %", quindi vengono restituite le informazioni sull'appartenenza per gli utenti con il nome utente di "user1", "user2", "user_admin" e così via.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.Roles.FindUsersInRole%2A> metodo per visualizzare l'appartenenza al ruolo in base all'input. Per un esempio di un file Web. config che abilita la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).  -or-  <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string or contains a comma.  -or-  <paramref name="usernameToMatch" /> is an empty string.  -or-  <paramref name="roleName" /> is longer than 256 characters.  -or-  <paramref name="usernameToMatch" /> is longer than 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> was not found in the database.  -or-  An unknown error occurred while communicating with the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="sqlRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a list of all the roles for the application.</summary>
        <returns>A string array containing the names of all the roles stored in the database for a particular application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.GetAllRoles%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per recuperare un elenco di tutti i ruoli nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetAllRoles%2A> metodo per ottenere l'elenco dei ruoli per un'applicazione e associare i risultati in un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che abilita la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unknown error occurred while communicating with the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="sqlRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to return a list of roles for.</param>
        <summary>Gets a list of the roles that a user is in.</summary>
        <returns>A string array containing the names of all the roles that the specified user is in.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.GetRolesForUser%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per recuperare un elenco di ruoli dell'utente specificato dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodo per recuperare un elenco dei ruoli per un utente specificato e li associa a un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che abilita la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contains a comma.  -or-  <paramref name="username" /> is longer than 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unknown error occurred while communicating with the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="sqlRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to get the list of users for.</param>
        <summary>Gets a list of users in the specified role.</summary>
        <returns>A string array containing the names of all the users who are members of the specified role.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.GetUsersInRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per recuperare l'elenco di utenti associati al ruolo specificato nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetUsersInRole%2A> metodo per ottenere un elenco degli utenti in un determinato ruolo e associare i risultati in un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che abilita la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string or contains a comma.  -or-  <paramref name="roleName" /> is longer than 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="rolename" /> was not found in the database.  -or-  An unknown error occurred while communicating with the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.SqlRoleProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the role provider.</param>
        <summary>Initializes the SQL Server role provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo inizializza la <xref:System.Web.Security.SqlRoleProvider> con la proprietà i valori specificati nel file di configurazione dell'applicazione ASP.NET (Web. config) e non può essere utilizzato direttamente dal codice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The ASP.NET application is not running at <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> trust or higher.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="connectionStringName" /> attribute is empty or does not exist in the application configuration file for this <see cref="T:System.Web.Security.SqlRoleProvider" /> instance.  -or-  The <see langword="applicationName" /> attribute exceeds 256 characters.  -or-  The application configuration file for this <see cref="T:System.Web.Security.SqlRoleProvider" /> instance contains an unrecognized attribute.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="sqlRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name to search for.</param>
        <param name="roleName">The role to search in.</param>
        <summary>Gets a value indicating whether the specified user is in the specified role.</summary>
        <returns>
          <see langword="true" /> if the specified user name is in the specified role; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.IsUserInRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe e il <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metodo il <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> proprietà per determinare se un utente è associato a un ruolo nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Esempio di codice seguente controlla a livello di codice per vedere se l'utente connesso è nel ruolo Administrators prima di consentire all'utente di visualizzare i ruoli utente. Per un esempio di un file Web. config che abilita la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> is <see langword="null" />.  -or-  <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string or contains a comma.  -or-  <paramref name="username" /> is contains a comma.  -or-  <paramref name="roleName" /> is longer than 256 characters.  -or-  <paramref name="username" /> is longer than 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unknown error occurred while communicating with the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">A string array of user names to be removed from the specified roles.</param>
        <param name="roleNames">A string array of role names to remove the specified user names from.</param>
        <summary>Removes the specified user names from the specified roles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per rimuovere uno o più utenti da uno o più ruoli nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). Questo metodo viene chiamato dal <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, e <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> metodi il <xref:System.Web.Security.Roles> classe.  
  
 Gli aggiornamenti di database che vengono eseguiti durante la chiamata a <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> sono effettuate all'interno di una transazione. Se si verifica un errore, ad esempio un nome utente che non esiste o un nome utente che è già in un ruolo specificato, viene eseguito il rollback della transazione e viene eseguito alcun aggiornamento.  
  
 I nomi utente e i nomi dei ruoli non può contenere virgole.  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge uno o più utenti a un ruolo o rimuove un utente da un ruolo. Per un esempio di un file Web. config che abilita la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">One of the roles in <paramref name="roleNames" /> is <see langword="null" />.  -or-  One of the users in <paramref name="usernames" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">One of the roles in <paramref name="roleNames" /> is an empty string or contains a comma.  -or-  One of the users in <paramref name="usernames" /> is an empty string or contains a comma.  -or-  One of the roles in <paramref name="roleNames" /> is longer than 256 characters.  -or-  One of the users in <paramref name="usernames" /> is longer than 256 characters.  -or-  <paramref name="roleNames" /> contains a duplicate element.  -or-  <paramref name="usernames" /> contains a duplicate element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">One or more of the specified user names was not found.  -or-  One or more of the specified role names was not found.  -or-  One or more of the specified user names is not associated with one or more of the specified role names.  -or-  An unknown error occurred while communicating with the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="sqlRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to search for in the database.</param>
        <summary>Gets a value indicating whether the specified role name already exists in the role database.</summary>
        <returns>
          <see langword="true" /> if the role name already exists in the database; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.RoleExists%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per determinare la presenza di un nome di ruolo nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.Roles.RoleExists%2A> metodo per determinare se un nome di ruolo è già presente prima di creare il ruolo. Per un esempio di un file Web. config che abilita la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string or contains a comma.  -or-  <paramref name="roleName" /> is longer than 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unknown error occurred while communicating with the database.</exception>
      </Docs>
    </Member>
  </Members>
</Type>