<Type Name="SqlRoleProvider" FullName="System.Web.Security.SqlRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3821267f02c4232ad9472ffac2f25dee0e18de19" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39946153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type SqlRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gestisce l'archiviazione delle informazioni sull'appartenenza ai ruoli per un'applicazione ASP.NET in un database SQL Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe viene utilizzata per la <xref:System.Web.Security.Roles> e <xref:System.Web.Security.RolePrincipal> classi per fornire servizi di gestione dei ruoli per un'applicazione ASP.NET usando un database di SQL Server. È possibile usare la gestione dei ruoli per specificare diversi livelli di autorizzazione per l'applicazione.  
  
 Usare la <xref:System.Web.Security.SqlRoleProvider> (classe), è necessario creare innanzitutto il database di SQL Server usato dal <xref:System.Web.Security.SqlRoleProvider>. Per creare il database utilizzato dal <xref:System.Web.Security.SqlRoleProvider> (classe), eseguire il `aspnet_regsql.exe` sono stati trovati eseguibili nel C:\WINDOWS\Microsoft.NET\Framework\ `versionNumber` cartella e specificare il `-Ar` opzione (ad esempio, `aspnet_regsql.exe -Ar`). Il database creato è denominato Aspnetdb. In alternativa, eseguire blocca la modalità di configurazione GUI aspnet_regsql.exe e scegliere di configurare tutte le funzionalità ASP.NET.  
  
 Se il provider di ruoli è configurato con una stringa di connessione che utilizza la sicurezza integrata, l'account di processo dell'applicazione ASP.NET deve disporre dei diritti per connettersi al database di SQL Server.  
  
 Il file Machine. config è configurato con un <xref:System.Web.Security.SqlRoleProvider> istanza denominata AspNetSqlProvider che si connette a SQL Server nel computer locale. È possibile utilizzare questa istanza del provider, o specificarne uno personale nel file Web. config per l'applicazione ASP.NET. Per usare l'istanza AspNetSqlProvider, specificare AspNetSqlProvider come il `defaultProvider` nella configurazione.  
  
 È possibile configurare il <xref:System.Web.Security.SqlRoleProvider> usare le stesse informazioni di database e l'utente di <xref:System.Web.Security.SqlMembershipProvider> per poter usare un singolo database per l'autenticazione e autorizzazione. Per usare lo stesso database per l'appartenenza e le informazioni sui ruoli, eseguire aspnet_regsql.exe. exe e installare la funzionalità di appartenenza. Quindi, specificare la stessa stringa di connessione nella configurazione per entrambe le <xref:System.Web.Security.SqlRoleProvider> e <xref:System.Web.Security.SqlMembershipProvider> istanze. Assicurarsi inoltre che vengono configurate entrambe le istanze del provider con lo stesso <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>.  
  
   
  
## Examples  
 L'esempio seguente illustra il file Web. config per un'applicazione ASP.NET configurato per usare un <xref:System.Web.Security.SqlRoleProvider> oggetto e il <xref:System.Web.Security.SqlMembershipProvider>. L'elemento viene configurato per consentire solo l'accesso agli utenti autenticati nel ruolo Administrators.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="logincs.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
         <allow roles="Administrators" />  
         <deny users="*" />  
    </authorization>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="false"  
          requiresQuestionAndAnswer="false"   
          passwordFormat="Hashed"   
          applicationName="SampleApplication" />  
      </providers>  
    </membership>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"   
          applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crea un'istanza della classe <see cref="T:System.Web.Security.SqlRoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.%23ctor%2A> costruttore viene chiamato da ASP.NET per creare un'istanza del <xref:System.Web.Security.SqlRoleProvider> classe come specificato nella configurazione per l'applicazione. Questo costruttore non deve essere utilizzato dal codice.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matrice di stringhe di nomi utente da aggiungere ai ruoli specificati.</param>
        <param name="roleNames">Matrice di stringhe di nomi di ruoli a cui aggiungere i nomi utente specificati.</param>
        <summary>Aggiunge i nomi utente specificati a ognuno dei ruoli specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per associare uno o più utenti a uno o più ruoli nel database di SQL Server specificata nel file di configurazione dell'applicazione ASP.NET (Web. config). Questo metodo viene chiamato il <xref:System.Web.Security.Roles.AddUserToRole%2A>, <xref:System.Web.Security.Roles.AddUserToRoles%2A>, <xref:System.Web.Security.Roles.AddUsersToRole%2A>, e <xref:System.Web.Security.Roles.AddUsersToRoles%2A> metodi del <xref:System.Web.Security.Roles> classe.  
  
 Gli aggiornamenti di database che vengono eseguiti durante la chiamata di <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> metodo eseguite all'interno di una transazione. Se viene rilevato un errore, ad esempio un nome utente che è già in un ruolo specificato, viene eseguito il rollback della transazione e viene eseguito alcun aggiornamento.  
  
 Se il <xref:System.Web.Security.SqlRoleProvider> viene utilizzato con il <xref:System.Web.Security.SqlMembershipProvider>e uno dei nomi utente specificato non esiste nel database, il nome utente verrà automaticamente aggiunto al database.  
  
 I nomi utente e i nomi di ruolo non possono contenere virgole.  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge uno o più utenti a un ruolo o rimuove un utente da un ruolo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno dei ruoli in <paramref name="roleNames" /> è <see langword="null" />.  
  
oppure 
Uno degli utenti in <paramref name="usernames" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno dei ruoli in <paramref name="roleNames" /> è una stringa vuota o contiene una virgola.  
  
oppure 
Uno degli utenti in <paramref name="usernames" /> è una stringa vuota o contiene una virgola.  
  
oppure 
Uno dei ruoli in <paramref name="roleNames" /> è di lunghezza superiore a 256 caratteri.  
  
oppure 
Uno degli utenti in <paramref name="usernames" /> è di lunghezza superiore a 256 caratteri.  
  
oppure 
 <paramref name="roleNames" /> contiene un elemento duplicato.  
  
oppure 
 <paramref name="usernames" /> contiene un elemento duplicato.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Impossibile trovare uno o più nomi di ruoli specificati.  
  
oppure 
Impossibile trovare uno o più nomi utente specificati.  
  
oppure 
Uno o più nomi utente specificati sono già associati a uno o più nomi di ruoli specificati.  
  
oppure 
Si è verificato un errore sconosciuto durante la comunicazione con il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'applicazione per cui archiviare e recuperare le informazioni sui ruoli.</summary>
        <value>Nome dell'applicazione per cui archiviare e recuperare le informazioni sui ruoli. Il valore predefinito è il valore della proprietà <see cref="P:System.Web.HttpRequest.ApplicationPath" /> per la proprietà <see cref="P:System.Web.HttpContext.Request" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> viene usato per il <xref:System.Web.Security.SqlRoleProvider> per associare gli utenti e ruoli con diverse applicazioni. Ciò consente a più applicazioni di usare lo stesso database per archiviare le informazioni sui ruoli e utenti senza incorrere in conflitti tra nomi utente duplicati o i nomi dei ruoli. Più applicazioni ASP.NET possono utilizzare lo stesso database, specificando lo stesso valore nel <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> proprietà. Il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> può essere impostata a livello di codice, o può essere impostata in modo dichiarativo nel file di configurazione dell'applicazione Web usando il `applicationName` attributo.  
  
 Se non viene specificato un valore per il `applicationName` attributo nel file di configurazione per l'applicazione Web, il <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> valore della proprietà corrente <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> oggetto viene usato.  
  
> [!CAUTION]
>  Poiché un'istanza del provider predefinito solo ruolo viene usata per tutte le richieste servite da un <xref:System.Web.HttpApplication> dell'oggetto, è possibile che più richieste in esecuzione contemporaneamente e si tenta di impostare il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> valore della proprietà. Il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> proprietà non è thread-safe per più operazioni di scrittura e la modifica di <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> valore della proprietà può produrre risultati imprevisti per più utenti di un'applicazione. È consigliabile evitare di scrivere codice che consente agli utenti di impostare il <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> proprietà solo se necessario. Un esempio di un'applicazione in cui l'impostazione di <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> proprietà potrebbe essere necessaria un'applicazione amministrativa che gestisce i dati del ruolo per più applicazioni. Questo tipo di applicazione deve essere un utente singolo e non è un'applicazione Web.  
  
   
  
## Examples  
 L'esempio seguente illustra l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica dell'applicazione <xref:System.Web.Security.SqlRoleProvider> istanza e imposta la <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> proprietà `MyApplication`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">È stato effettuato un tentativo di impostare la proprietà <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> da parte di un chiamante che non dispone dell'autorizzazione host ASP.NET <see cref="F:System.Web.AspNetHostingPermissionLevel.High" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">È stato effettuato un tentativo di impostare la proprietà <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> su una stringa di lunghezza superiore a 256 caratteri.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="sqlRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da creare.</param>
        <summary>Aggiunge un nuovo ruolo al database dei ruoli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.CreateRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per creare un ruolo nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 La lunghezza massima per il nome del ruolo è 256 caratteri. I nomi dei ruoli non sono tra maiuscole e minuscole. Le virgole non sono consentite nei nomi di ruolo.  
  
   
  
## Examples  
 Esempio di codice seguente crea un nuovo ruolo del database. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola.  
  
oppure 
 La lunghezza di <paramref name="roleName" /> supera i 256 caratteri.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> esiste già nel database.  
  
oppure 
Si è verificato un errore sconosciuto durante la comunicazione con il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="sqlRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da eliminare.</param>
        <param name="throwOnPopulatedRole">Se <see langword="true" /> e <c>roleName</c> ha uno o più membri, viene generata un'eccezione.</param>
        <summary>Rimuove un ruolo dal database dei ruoli.</summary>
        <returns>
          <see langword="true" /> se il ruolo è stato eliminato correttamente. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.DeleteRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per eliminare un ruolo dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). Quando viene eliminato un ruolo, l'elenco degli utenti associati a tale ruolo viene eliminato anche dal database. Le informazioni sull'utente nel database non è interessati.  
  
 Se `throwOnPopulatedRole` viene `true`, quindi verrà generata un'eccezione e il ruolo non verrà eliminato se il ruolo è identificato dal `roleName` parametro ha uno o più membri. Se `throwOnPopulatedRole` è `false`, il ruolo verrà eliminato se è vuota o meno.  
  
   
  
## Examples  
 Nell'esempio seguente elimina un ruolo dal database. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola.  
  
oppure 
 La lunghezza di <paramref name="roleName" /> supera i 256 caratteri.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> ha uno o più membri e <paramref name="throwOnPopulatedRole" /> è <see langword="true" />.  
  
oppure 
Si è verificato un errore sconosciuto durante la comunicazione con il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="sqlRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Ruolo in cui eseguire la ricerca.</param>
        <param name="usernameToMatch">Nome utente da cercare.</param>
        <summary>Ottiene una matrice di nomi utente con un ruolo in cui il nome utente contiene il nome utente specificato di cui verificare la corrispondenza.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti gli utenti in cui il nome utente corrisponde a <paramref name="usernameToMatch" /> e l'utente è un membro del ruolo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.FindUsersInRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe e restituisce un elenco di utenti in un ruolo in cui il nome utente contiene una corrispondenza dell'oggetto fornito `usernameToMatch` dell'applicazione configurata `applicationName`. Il <xref:System.Web.Security.SqlRoleProvider> Cerca un nome utente che corrisponde il `usernameToMatch` valore del parametro utilizzando i LIKE (parola chiave) e supporta SQL Server caratteri jolly. Ad esempio, se il `usernameToMatch` parametro è impostato su "user1", quindi vengono restituite informazioni di appartenenza per l'utente con il nome utente "User1", se presente. Se il `usernameToMatch` parametro è impostato su "user %", quindi vengono restituite le informazioni sull'appartenenza per gli utenti con il nome utente di "user1", "user2", "user_admin" e così via.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.FindUsersInRole%2A> metodo per visualizzare l'appartenenza al ruolo in base all'input. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).  
  
oppure 
 <paramref name="usernameToMatch" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola.  
  
oppure 
 Il parametro <paramref name="usernameToMatch" /> è una stringa vuota.  
  
oppure 
 La lunghezza di <paramref name="roleName" /> supera i 256 caratteri.  
  
oppure 
 La lunghezza di <paramref name="usernameToMatch" /> supera i 256 caratteri.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Impossibile trovare <paramref name="roleName" /> nel database.  
  
oppure 
Si è verificato un errore sconosciuto durante la comunicazione con il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="sqlRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un elenco di tutti i ruoli per l'applicazione.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti i ruoli memorizzati nel database per una determinata applicazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.GetAllRoles%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe da cui recuperare un elenco di tutti i ruoli nel database di SQL Server specificata nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetAllRoles%2A> metodo per ottenere l'elenco dei ruoli per un'applicazione e associare i risultati in un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Si è verificato un errore sconosciuto durante la comunicazione con il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="sqlRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utente per il quale restituire un elenco di ruoli.</param>
        <summary>Ottiene un elenco di ruoli a cui appartiene un utente.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti i ruoli a cui appartiene l'utente specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.GetRolesForUser%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe da cui recuperare un elenco di ruoli dell'utente specificato dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodo per recuperare un elenco di ruoli per un utente specificato e li associa a un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contiene una virgola.  
  
oppure 
 La lunghezza di <paramref name="username" /> supera i 256 caratteri.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Si è verificato un errore sconosciuto durante la comunicazione con il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="sqlRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo per il quale ottenere l'elenco di utenti.</param>
        <summary>Ottiene un elenco di utenti appartenenti al ruolo specificato.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti gli utenti membri del ruolo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.GetUsersInRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe da cui recuperare l'elenco degli utenti associati al ruolo specificato nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetUsersInRole%2A> metodo per ottenere un elenco degli utenti in un determinato ruolo e associare i risultati a un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola.  
  
oppure 
 La lunghezza di <paramref name="roleName" /> supera i 256 caratteri.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Impossibile trovare <paramref name="rolename" /> nel database.  
  
oppure 
Si è verificato un errore sconosciuto durante la comunicazione con il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'istanza dell'oggetto <see cref="T:System.Web.Security.SqlRoleProvider" /> da inizializzare.</param>
        <param name="config">Oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> che contiene i nomi e i valori delle opzioni di configurazione per il provider di ruoli.</param>
        <summary>Inizializza il provider di ruoli SQL Server con i valori delle proprietà specificati nel file di configurazione dell'applicazione ASP.NET. Questo metodo non deve essere usato direttamente dal codice.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo inizializza la <xref:System.Web.Security.SqlRoleProvider> con la proprietà valori specificati nel file di configurazione dell'applicazione ASP.NET (Web. config) e non deve essere usato direttamente dal codice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">L'applicazione ASP.NET non è in esecuzione al livello di attendibilità <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> o superiore.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'attributo <see langword="connectionStringName" /> è vuoto o non è presente nel file di configurazione dell'applicazione per questa istanza di <see cref="T:System.Web.Security.SqlRoleProvider" />.  
  
oppure 
L'attributo <see langword="applicationName" /> è di lunghezza superiore a 256 caratteri.  
  
oppure 
Il file di configurazione dell'applicazione per questa istanza dell'oggetto <see cref="T:System.Web.Security.SqlRoleProvider" /> contiene un attributo non riconosciuto.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="sqlRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nome utente da cercare.</param>
        <param name="roleName">Ruolo in cui eseguire la ricerca.</param>
        <summary>Ottiene un valore che indica se l'utente specificato appartiene al ruolo specificato.</summary>
        <returns>
          <see langword="true" /> se il nome utente specificato appartiene al ruolo specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.IsUserInRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe e il <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metodo il <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> proprietà per determinare se un utente è associato a un ruolo nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Esempio di codice seguente a livello di codice verifica se l'utente connesso è nel ruolo Administrators prima di consentire all'utente di visualizzare i ruoli utente. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.  
  
oppure 
 <paramref name="username" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola.  
  
oppure 
 <paramref name="username" /> contiene una virgola.  
  
oppure 
 La lunghezza di <paramref name="roleName" /> supera i 256 caratteri.  
  
oppure 
 La lunghezza di <paramref name="username" /> supera i 256 caratteri.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Si è verificato un errore sconosciuto durante la comunicazione con il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matrice di stringhe di nomi utente da rimuovere dai ruoli specificati.</param>
        <param name="roleNames">Matrice di stringhe di nomi di ruoli da cui rimuovere i nomi utente specificati.</param>
        <summary>Consente di rimuovere i nomi utente specificati dai ruoli specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per rimuovere uno o più utenti da uno o più ruoli nel database di SQL Server specificata nel file di configurazione dell'applicazione ASP.NET (Web. config). Questo metodo viene chiamato il <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, e <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> metodi del <xref:System.Web.Security.Roles> classe.  
  
 Gli aggiornamenti di database che vengono eseguiti durante la chiamata a <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> eseguite all'interno di una transazione. Se viene rilevato un errore, ad esempio un nome utente che non esiste o un nome utente che è già in un ruolo specificato, viene eseguito il rollback della transazione e viene eseguito alcun aggiornamento.  
  
 I nomi utente e i nomi di ruolo non possono contenere virgole.  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge uno o più utenti a un ruolo o rimuove un utente da un ruolo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno dei ruoli in <paramref name="roleNames" /> è <see langword="null" />.  
  
oppure 
Uno degli utenti in <paramref name="usernames" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno dei ruoli in <paramref name="roleNames" /> è una stringa vuota o contiene una virgola.  
  
oppure 
Uno degli utenti in <paramref name="usernames" /> è una stringa vuota o contiene una virgola.  
  
oppure 
Uno dei ruoli in <paramref name="roleNames" /> è di lunghezza superiore a 256 caratteri.  
  
oppure 
Uno degli utenti in <paramref name="usernames" /> è di lunghezza superiore a 256 caratteri.  
  
oppure 
 <paramref name="roleNames" /> contiene un elemento duplicato.  
  
oppure 
 <paramref name="usernames" /> contiene un elemento duplicato.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Impossibile trovare uno o più nomi utente specificati.  
  
oppure 
Impossibile trovare uno o più nomi di ruoli specificati.  
  
oppure 
Uno o più nomi utente specificati non sono associati a uno o più nomi di ruoli specificati.  
  
oppure 
Si è verificato un errore sconosciuto durante la comunicazione con il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="sqlRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo di cui eseguire la ricerca nel database.</param>
        <summary>Ottiene un valore che indica se il nome del ruolo specificato esiste già nel database dei ruoli.</summary>
        <returns>
          <see langword="true" /> se il nome del ruolo esiste già nel database; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlRoleProvider.RoleExists%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe per determinare la presenza di un nome di ruolo nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Security.Roles.RoleExists%2A> metodo per determinare se un nome di ruolo esiste già prima di creare il ruolo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> è una stringa vuota o contiene una virgola.  
  
oppure 
 La lunghezza di <paramref name="roleName" /> supera i 256 caratteri.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Si è verificato un errore sconosciuto durante la comunicazione con il database.</exception>
      </Docs>
    </Member>
  </Members>
</Type>