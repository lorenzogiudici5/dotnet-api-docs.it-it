<Type Name="AuthorizationStoreRoleProvider" FullName="System.Web.Security.AuthorizationStoreRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0fcd501cfb76d52f5637a2f15d84ca5dd63a262" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550745" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationStoreRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AuthorizationStoreRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationStoreRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationStoreRoleProvider : System::Web::Security::RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gestisce l'archiviazione delle informazioni relative all'appartenenza del ruolo per un'applicazione ASP.NET in un archivio criteri di gestione autorizzazioni, o in un file XML, in Active Directory o su un server Active Directory Application Mode.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe viene utilizzata per la <xref:System.Web.Security.Roles> e <xref:System.Web.Security.RolePrincipal> classi per fornire servizi di gestione dei ruoli per un'applicazione ASP.NET viene utilizzato un archivio di gestione autorizzazioni. È possibile utilizzare la gestione dei ruoli per specificare diversi livelli di autorizzazione per l'applicazione. Gestione autorizzazioni è possibile accedere tramite la Console di gestione di Microsoft.  
  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider> oggetto funziona con entrambi l'autenticazione di Windows e le modalità di autenticazione form.  
  
 È possibile configurare il <xref:System.Web.Security.AuthorizationStoreRoleProvider> oggetto per utilizzare un file XML locale o un server Active Directory o Active Directory applicazione Mode (ADAM). Quando si utilizza un file locale, la stringa di connessione dovrebbe essere analogo al seguente.  
  
```  
msxml://<path to xml file>  
```  
  
 Se il file locale è archiviato nell'albero della directory di un'applicazione Web ASP.NET, è possibile utilizzare la tilde ("~") per indicare la directory radice. Ad esempio, per indicare che il file locale è archiviato nella directory dei dati dell'applicazione Web, utilizzare una stringa di connessione simile all'esempio seguente.  
  
 `msxml://~\App_Data\datafilename.xml`  
  
> [!IMPORTANT]
>  L'archiviazione di un file di dati XML nella directory dell'applicazione Web è una potenziale minaccia alla sicurezza. Per impostazione predefinita, IIS verrà utilizzato il file di dati XML per il Web. Per migliorare la sicurezza quando si utilizza un file di dati locale in un'applicazione ASP.NET, è consigliabile archiviare i file di dati di `App_Data` directory. I file archiviati nel `App_Data` directory non verrà utilizzata per il Web.  
  
 Se si utilizza un server Active Directory o ADAM per l'archivio criteri, è possibile che la stringa di connessione dovrebbe essere simile all'esempio seguente.  
  
 `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  
  
 Le eccezioni elencate nella documentazione relativa a <xref:System.Web.Security.AuthorizationStoreRoleProvider> metodi dell'oggetto sono le eccezioni che vengono generate i <xref:System.Web.Security.AuthorizationStoreRoleProvider> oggetto. Poiché il provider si basa sul runtime di gestore di autenticazione sottostante, un <xref:System.Runtime.InteropServices.COMException> eccezione venga generata ogni volta che il <xref:System.Web.Security.AuthorizationStoreRoleProvider> oggetto inoltra una chiamata al metodo al runtime di gestore di autenticazione.  
  
> [!IMPORTANT]
>  Il <xref:System.Web.Security.AuthorizationStoreRoleProvider> oggetto ha i seguenti requisiti per l'esecuzione in ambienti parzialmente attendibili:  
>   
>  Quando si utilizza un archivio criteri basati su file in un'applicazione ASP.NET, le autorizzazioni dei / o file concesse dal livello di attendibilità corrente determinano se lettura e scrittura sono consentite dal provider. L'applicazione ASP.NET deve disporre dell'autorizzazione per il file per leggere i dati dall'archivio criteri di lettura e deve disporre dell'autorizzazione di scrittura per salvare le nuove informazioni o aggiornare le informazioni esistenti nell'archivio criteri. Il file di criteri di attendibilità media predefinito offre un autorizzazioni di lettura/scrittura dell'applicazione ASP.NET nella directory di applicazione. Il file di criteri di attendibilità bassa predefinito fornisce solo a un'applicazione ASP.NET nella directory di applicazione autorizzazione di lettura. Inoltre, l'identità del processo con cui viene eseguito l'applicazione ASP.NET necessario disporre delle autorizzazioni di file system in lettura e/o scrivere il file dei criteri.  
>   
>  Quando si utilizza un server Active Directory o ADAM, l'applicazione ASP.NET necessita dell'autorizzazione del codice non gestito perché l'interno <xref:System.Web.Security.AuthorizationStoreRoleProvider> codice oggetto utilizza l'interoperabilità COM.  
>   
>  Quando si utilizza il <xref:System.Web.Security.AuthorizationStoreRoleProvider> oggetto all'esterno di ASP.NET, il codice chiamante richiede l'autorizzazione di codice non gestito.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un file Web. config impostato per l'utilizzo di <xref:System.Web.Security.AuthorizationStoreRoleProvider> per la gestione dei ruoli.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="AuthorizationServices" connectionString="msxml://~\App_Data\SampleStore.xml" />  
  </connectionStrings>  
  
  <system.web>  
  
    <authentication mode="Windows" />  
    <identity impersonate="true" />  
  
    <roleManager defaultProvider="AuthorizationStoreRoleProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="false"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <clear />  
          <add  
            name="AuthorizationStoreRoleProvider"  
            type="System.Web.Security.AuthorizationStoreRoleProvider"  
            connectionStringName="AuthorizationServices"  
            applicationName="SampleApplication"   
            cacheRefreshInterval="60"  
            scopeName="" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationStoreRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationStoreRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.%23ctor%2A> costruttore viene chiamato da ASP.NET per creare un'istanza di <xref:System.Web.Security.AuthorizationStoreRoleProvider> classe come specificato nella configurazione per l'applicazione. Questo costruttore non deve essere utilizzato dal codice.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matrice di stringhe di nomi utente da aggiungere ai ruoli specificati.</param>
        <param name="roleNames">Matrice di stringhe di nomi di ruoli a cui aggiungere i nomi utente specificati.</param>
        <summary>Aggiunge i nomi utente specificati a ognuno dei ruoli specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles%2A> metodo viene chiamato dalla <xref:System.Web.Security.Roles> classe da associare a uno o più utenti con uno o più ruoli nell'archivio dati di gestione di autorizzazioni specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). Questo metodo viene chiamato dal <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=nameWithType>, e <xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=nameWithType> metodi di <xref:System.Web.Security.Roles> classe.  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge uno o più utenti a un ruolo o rimuove un utente da un ruolo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno dei nomi utente specificati è <see langword="null" />.  
  
 oppure  
  
 Uno dei nomi dei ruoli specificati è <see langword="null" />.  
  
 oppure  
  
 <paramref name="usernames" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="roleNames" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno dei nomi utente specificati è una stringa vuota o contiene una virgola (,).  
  
 oppure  
  
 Uno dei nomi dei ruoli specificati è una stringa vuota o contiene una virgola (,).  
  
 oppure  
  
 <paramref name="usernames" /> contiene un elemento duplicato.  
  
 oppure  
  
 <paramref name="roleNames" /> contiene un elemento duplicato.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'applicazione <see langword="applicationName" /> configurata non è stata trovata.  
  
 oppure  
  
 L'applicazione <see langword="scopeName" /> configurata non è stata trovata.  
  
 oppure  
  
 Il runtime di gestione autorizzazioni non è installato sul server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attributo <see langword="connectionStringName" /> crea riferimenti tra una stringa di connessione e un file che non esiste.</exception>
        <exception cref="T:System.Web.HttpException">L'istanza di <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> è configurata con un archivio criteri basato su file e l'accesso alla lettura del file non è consentito al livello di attendibilità corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'applicazione dell'archivio autorizzazioni per cui archiviare e recuperare le informazioni sui ruoli.</summary>
        <value>Nome dell'applicazione dell'archivio autorizzazioni per cui archiviare e recuperare le informazioni sui ruoli. Il valore predefinito è il valore della proprietà <see cref="P:System.Web.HttpRequest.ApplicationPath" /> per la proprietà <see cref="P:System.Web.HttpContext.Request" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> viene utilizzato il <xref:System.Web.Security.AuthorizationStoreRoleProvider> per associare gli utenti e ruoli alle applicazioni di gestione di autorizzazioni diverso, che consente ad ASP.NET di più applicazioni di utilizzare gli stessi criteri di gestione autorizzazioni archiviano per archiviare le informazioni sui ruoli senza è in esecuzione in conflitti tra nomi di ruoli duplicati. In alternativa, più applicazioni ASP.NET possono utilizzare allo stesso archivio criteri specificando lo stesso valore nel <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> proprietà. Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> proprietà può essere impostata a livello di codice o possibile impostare in modo dichiarativo nel file Web. config dell'applicazione utilizzando il `applicationName` attributo.  
  
 Se non è stato specificato un valore per il `applicationName` attributo nel file Web. config, il <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> valore della proprietà per l'oggetto corrente <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> viene utilizzato l'oggetto.  
  
> [!NOTE]
>  I nomi delle applicazioni di gestione autorizzazioni non può contenere il carattere "/" che fa il <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> proprietà. Di conseguenza, il valore predefinito per il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> proprietà non può essere utilizzata come nome di un'applicazione di gestione autorizzazioni e nel file Web. config dell'applicazione, è necessario specificare sempre un `applicationName` attributo il `provider` elemento per configurare il <xref:System.Web.Security.AuthorizationStoreRoleProvider> istanza.  
  
> [!CAUTION]
>  Poiché un'istanza del provider predefinito singolo ruolo viene utilizzata per tutte le richieste gestite da un <xref:System.Web.HttpApplication> oggetto, è possibile disporre di più richieste contemporaneamente e si tenta di impostare il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> valore della proprietà. Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> proprietà non è thread-safe per più operazioni di scrittura e la modifica di <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> valore della proprietà può causare un comportamento imprevisto quando sono presenti più utenti di un'applicazione. Si consiglia di evitare di scrivere codice che consente agli utenti di impostare il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> proprietà solo se necessario. Un esempio di un'applicazione in cui l'impostazione di <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> proprietà potrebbe essere necessario un'applicazione amministrativa che gestisce i dati del ruolo per più applicazioni. Questo tipo di applicazione deve essere un utente singolo e non è un'applicazione Web.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.AuthorizationStoreRoleProvider> istanza e imposta il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> proprietà `MyApplication`.  
  
```  
<roleManager defaultProvider="AuthorizationStoreProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.AuthorizationStoreRoleProvider"  
      connectionStringName="AuthorizationStoreServices"   
      scopeName="MyScope"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">È stato effettuato un tentativo di impostare la proprietà <see cref="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" /> su una stringa di lunghezza superiore a 256 caratteri.</exception>
      </Docs>
    </Member>
    <Member MemberName="CacheRefreshInterval">
      <MemberSignature Language="C#" Value="public int CacheRefreshInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheRefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheRefreshInterval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheRefreshInterval { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di minuti tra gli aggiornamenti della cache dei dati dell'archivio criteri.</summary>
        <value>Numero di minuti tra gli aggiornamenti dei dati dell'archivio criteri memorizzati nella cache. Il valore predefinito è 60.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da creare.</param>
        <summary>Aggiunge un nuovo ruolo all'archivio criteri di gestione autorizzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole%2A> metodo viene chiamato dalla <xref:System.Web.Security.Roles> classe per creare un ruolo nell'archivio dati di gestione di autorizzazioni specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 I nomi dei ruoli non sono tra maiuscole e minuscole.  
  
   
  
## Examples  
 Esempio di codice seguente crea un nuovo ruolo nell'archivio criteri di gestione autorizzazioni. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Il parametro <paramref name="roleName" /> è una stringa vuota.  
  
 oppure  
  
 <paramref name="roleName" /> contiene una virgola.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'applicazione <see langword="applicationName" /> configurata non è stata trovata.  
  
 oppure  
  
 L'applicazione <see langword="scopeName" /> configurata non è stata trovata.  
  
 oppure  
  
 Il runtime di gestione autorizzazioni non è installato sul server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attributo <see langword="connectionStringName" /> crea riferimenti tra una stringa di connessione e un file che non esiste.</exception>
        <exception cref="T:System.Web.HttpException">L'istanza di <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> è configurata con un archivio criteri basato su file e l'accesso alla lettura del file non è consentito al livello di attendibilità corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da eliminare.</param>
        <param name="throwOnPopulatedRole">Se <see langword="true" /> e <c>roleName</c> ha uno o più membri, viene generata un'eccezione.</param>
        <summary>Rimuove un ruolo dall'archivio criteri di gestione autorizzazioni.</summary>
        <returns>
          <see langword="true" /> se il ruolo è stato eliminato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole%2A> metodo viene chiamato dalla <xref:System.Web.Security.Roles> classe per eliminare un ruolo nell'archivio criteri di gestione di autorizzazioni specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). Quando viene eliminato un ruolo, l'elenco di utenti associati a tale ruolo viene anche eliminato dall'archivio criteri. Le informazioni utente nel database non sono interessate.  
  
 Se `throwOnPopulatedRole` è `true`, verrà generata un'eccezione e il ruolo non viene eliminato se il ruolo è identificato dal `roleName` parametro ha uno o più membri. Se `throwOnPopulatedRole` è `false`, se non è vuoto o non verrà eliminato il ruolo.  
  
   
  
## Examples  
 Nell'esempio seguente viene eliminato un ruolo dall'archivio criteri di gestione autorizzazioni. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Il parametro <paramref name="roleName" /> è una stringa vuota.  
  
 oppure  
  
 <paramref name="roleName" /> contiene una virgola.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> ha uno o più membri e <paramref name="throwOnPopulatedRole" /> è <see langword="true" />.  
  
 oppure  
  
 L'applicazione <see langword="applicationName" /> configurata non è stata trovata.  
  
 oppure  
  
 L'applicazione <see langword="scopeName" /> configurata non è stata trovata.  
  
 oppure  
  
 Il runtime di gestione autorizzazioni non è installato sul server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attributo <see langword="connectionStringName" /> crea riferimenti tra una stringa di connessione e un file che non esiste.</exception>
        <exception cref="T:System.Web.HttpException">L'istanza di <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> è configurata con un archivio criteri basato su file e l'accesso alla lettura del file non è consentito al livello di attendibilità corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Ruolo in cui eseguire la ricerca.</param>
        <param name="usernameToMatch">Nome utente da cercare.</param>
        <summary>Questo metodo non è supportato dal provider di ruoli dell'archivio autorizzazioni.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti gli utenti il cui nome utente corrisponde a <paramref name="usernameToMatch" /> e che sono membri del ruolo specificato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">È stato chiamato un metodo non supportato.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un elenco di tutti i ruoli per l'applicazione.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti i ruoli memorizzati nell'archivio di gestione autorizzazioni per una determinata applicazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles%2A> metodo viene chiamato dalla <xref:System.Web.Security.Roles> classe per recuperare un elenco di tutti i ruoli nell'archivio criteri di gestione di autorizzazioni specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetAllRoles%2A> metodo per ottenere l'elenco di ruoli per un'applicazione e i risultati in un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'applicazione <see langword="applicationName" /> configurata non è stata trovata.  
  
 oppure  
  
 L'applicazione <see langword="scopeName" /> configurata non è stata trovata.  
  
 oppure  
  
 Il runtime di gestione autorizzazioni non è installato sul server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attributo <see langword="connectionStringName" /> crea riferimenti tra una stringa di connessione e un file che non esiste.</exception>
        <exception cref="T:System.Web.HttpException">L'istanza di <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> è configurata con un archivio criteri basato su file e l'accesso alla lettura del file non è consentito al livello di attendibilità corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utente per il quale restituire un elenco di ruoli.</param>
        <summary>Ottiene un elenco di ruoli a cui appartiene un utente.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti i ruoli a cui appartiene l'utente specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser%2A> metodo viene chiamato dalla <xref:System.Web.Security.Roles> classe per recuperare un elenco di ruoli dell'utente specificato dall'archivio criteri di gestione di autorizzazioni specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodo per recuperare un elenco di ruoli per un utente specificato e li associa a un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contiene una virgola.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'applicazione <see langword="applicationName" /> configurata non è stata trovata.  
  
 oppure  
  
 L'applicazione <see langword="scopeName" /> configurata non è stata trovata.  
  
 oppure  
  
 Il runtime di gestione autorizzazioni non è installato sul server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attributo <see langword="connectionStringName" /> crea riferimenti tra una stringa di connessione e un file che non esiste.</exception>
        <exception cref="T:System.Web.HttpException">L'istanza di <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> è configurata con un archivio criteri basato su file e l'accesso alla lettura del file non è consentito al livello di attendibilità corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo per il quale ottenere l'elenco di utenti.</param>
        <summary>Ottiene un elenco di utenti appartenenti al ruolo specificato.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti gli utenti membri del ruolo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> metodo viene chiamato dalla <xref:System.Web.Security.Roles> classe per recuperare l'elenco di utenti associati al ruolo specificato nell'archivio criteri di gestione di autorizzazioni specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> metodo restituisce solo i nomi utente contenuti direttamente nel ruolo di gestione autorizzazioni specificato per il `roleName` parametro. Autorizzazione di gestione sottostante chiamato dall'API di <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> metodo non supporta l'espansione del gruppo, in modo non verranno restituiti gli utenti contenuti nei gruppi NT nidificati, gruppi di gestione autorizzazioni annidati e gruppi di query LDAP.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.Roles.GetUsersInRole%2A> metodo per ottenere un elenco degli utenti in un determinato ruolo e associare i risultati in un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> controllo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Il parametro <paramref name="roleName" /> è una stringa vuota.  
  
 oppure  
  
 <paramref name="roleName" /> contiene una virgola.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'applicazione <see langword="applicationName" /> configurata non è stata trovata.  
  
 oppure  
  
 L'applicazione <see langword="scopeName" /> configurata non è stata trovata.  
  
 oppure  
  
 Il runtime di gestione autorizzazioni non è installato sul server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attributo <see langword="connectionStringName" /> crea riferimenti tra una stringa di connessione e un file che non esiste.</exception>
        <exception cref="T:System.Web.HttpException">L'istanza di <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> è configurata con un archivio criteri basato su file e l'accesso alla lettura del file non è consentito al livello di attendibilità corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'istanza dell'oggetto <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> da inizializzare.</param>
        <param name="config">Oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> che contiene i nomi e i valori delle opzioni di configurazione per il provider di ruoli.</param>
        <summary>Inizializza il provider di ruoli di gestione autorizzazioni con i valori delle proprietà specificati nel file di configurazione dell'applicazione ASP.NET. Questo metodo non deve essere usato direttamente dal codice.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.Initialize%2A> metodo inizializza la <xref:System.Web.Security.AuthorizationStoreRoleProvider> con la proprietà i valori specificati nel file di configurazione dell'applicazione ASP.NET (Web. config) e non deve essere utilizzato direttamente dal codice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'attributo <see langword="connectionStringName" /> è vuoto o non esiste nella sezione di configurazione dell'[elemento connectionStrings (schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de).  
  
 oppure  
  
 La lunghezza di <see langword="applicationName" /> configurata è superiore ai 256 caratteri.  
  
 oppure  
  
 La configurazione per questa istanza di <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> contiene un attributo non riconosciuto.</exception>
        <exception cref="T:System.Web.HttpException">L'applicazione ASP.NET non è in esecuzione al livello di attendibilità <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> o superiore.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nome utente da cercare.</param>
        <param name="roleName">Ruolo in cui eseguire la ricerca.</param>
        <summary>Ottiene un valore che indica se l'utente specificato appartiene al ruolo specificato.</summary>
        <returns>
          <see langword="true" /> se il nome utente specificato appartiene al ruolo specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe e <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metodo il <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> proprietà per determinare se un utente è associato a un ruolo nell'archivio dati di gestione di autorizzazioni specificato nella finestra dell'applicazione ASP.NET file di configurazione (Web. config).  
  
   
  
## Examples  
 Esempio di codice seguente controlla a livello di codice per verificare se l'utente connesso è nel ruolo Administrators prima di consentire all'utente di visualizzare i ruoli utente. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.  
  
 -oppure–  
  
 <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Il parametro <paramref name="roleName" /> è una stringa vuota.  
  
 oppure  
  
 <paramref name="roleName" /> contiene una virgola.  
  
 oppure  
  
 <paramref name="username" /> contiene una virgola.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'applicazione <see langword="applicationName" /> configurata non è stata trovata.  
  
 oppure  
  
 L'applicazione <see langword="scopeName" /> configurata non è stata trovata.  
  
 oppure  
  
 Il runtime di gestione autorizzazioni non è installato sul server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attributo <see langword="connectionStringName" /> crea riferimenti tra una stringa di connessione e un file che non esiste.</exception>
        <exception cref="T:System.Web.HttpException">L'istanza di <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> è configurata con un archivio criteri basato su file e l'accesso alla lettura del file non è consentito al livello di attendibilità corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] userNames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (userNames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ userNames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userNames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="userNames">Matrice di stringhe di nomi utente da rimuovere dai ruoli specificati.</param>
        <param name="roleNames">Matrice di stringhe di nomi di ruoli da cui rimuovere i nomi utente specificati.</param>
        <summary>Consente di rimuovere i nomi utente specificati dai ruoli specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles%2A> metodo viene chiamato dalla <xref:System.Web.Security.Roles> classe per rimuovere uno o più utenti da uno o più ruoli nell'archivio criteri di gestione di autorizzazioni specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). Questo metodo viene chiamato dal <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, e <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> metodi di <xref:System.Web.Security.Roles> classe.  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge uno o più utenti a un ruolo o rimuove un utente da un ruolo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno dei nomi utente specificati è <see langword="null" />.  
  
 oppure  
  
 Uno dei nomi dei ruoli specificati è <see langword="null" />.  
  
 oppure  
  
 <paramref name="userNames" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="roleNames" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno dei nomi utente specificati è una stringa vuota o contiene una virgola.  
  
 oppure  
  
 Uno dei nomi dei ruoli specificati è una stringa vuota o contiene una virgola.  
  
 oppure  
  
 <paramref name="userNames" /> contiene un elemento duplicato.  
  
 oppure  
  
 <paramref name="roleNames" /> contiene un elemento duplicato.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'applicazione <see langword="applicationName" /> configurata non è stata trovata.  
  
 oppure  
  
 L'applicazione <see langword="scopeName" /> configurata non è stata trovata.  
  
 oppure  
  
 Il runtime di gestione autorizzazioni non è installato sul server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attributo <see langword="connectionStringName" /> crea riferimenti tra una stringa di connessione e un file che non esiste.</exception>
        <exception cref="T:System.Web.HttpException">L'istanza di <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> è configurata con un archivio criteri basato su file e l'accesso alla lettura del file non è consentito al livello di attendibilità corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Il nome del ruolo da ricercare nell'archivio criteri di gestione autorizzazione.</param>
        <summary>Ottiene un valore che indica se il nome del ruolo specificato esiste già nell'archivio criteri di gestione autorizzazioni.</summary>
        <returns>
          <see langword="true" /> se il nome del ruolo già esiste nell'archivio criteri di gestione autorizzazioni; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists%2A> metodo viene chiamato dalla <xref:System.Web.Security.Roles> classe per determinare se un nome di ruolo esiste nell'archivio dati di gestione di autorizzazioni specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.Roles.RoleExists%2A> metodo per determinare se un nome di ruolo è già presente prima di creare il ruolo. Per un esempio di un file Web. config che consente la gestione dei ruoli, vedere <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Il parametro <paramref name="roleName" /> è una stringa vuota.  
  
 oppure  
  
 <paramref name="roleName" /> contiene una virgola.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'applicazione <see langword="applicationName" /> configurata non è stata trovata.  
  
 oppure  
  
 L'applicazione <see langword="scopeName" /> configurata non è stata trovata.  
  
 oppure  
  
 Il runtime di gestione autorizzazioni non è installato sul server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attributo <see langword="connectionStringName" /> crea riferimenti tra una stringa di connessione e un file che non esiste.</exception>
        <exception cref="T:System.Web.HttpException">L'istanza di <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> è configurata con un archivio criteri basato su file e l'accesso alla lettura del file non è consentito al livello di attendibilità corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public string ScopeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScopeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'ambito per l'archivio autorizzazioni.</summary>
        <value>Nome dell'ambito per l'archivio autorizzazioni.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> proprietà può essere impostata utilizzando il `scopeName` attributo di configurazione per l'istanza del provider nel `providers` della sezione di configurazione.  
  
> [!CAUTION]
>  Poiché un'istanza del provider predefinito singolo ruolo viene utilizzata per tutte le richieste gestite da un <xref:System.Web.HttpApplication> oggetto, è possibile disporre di più richieste contemporaneamente e si tenta di impostare il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> valore della proprietà. Il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> proprietà non è thread-safe per più operazioni di scrittura e la modifica di <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> valore della proprietà può causare un comportamento imprevisto quando sono presenti più utenti di un'applicazione. Si consiglia di evitare di scrivere codice che consente agli utenti di impostare il <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> proprietà solo se necessario. Un esempio di un'applicazione in cui l'impostazione di <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> proprietà potrebbe essere necessario un'applicazione amministrativa che gestisce i dati del ruolo per più applicazioni. Questo tipo di applicazione deve essere un utente singolo e non è un'applicazione Web.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>