<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6723654dc533dc63a8edae0e09dcb2f446aac910" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39880224" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definisce il contratto implementato da ASP.NET per fornire servizi di gestione dei ruoli usando provider di ruoli personalizzati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestione dei ruoli ASP.NET è progettato per consentire di usare facilmente un numero di provider di ruoli diversi per le applicazioni ASP.NET. È possibile usare i provider di ruoli specificati che sono inclusi in .NET Framework oppure è possibile implementare un provider personalizzato.  
  
 Quando si implementa un provider di ruoli personalizzati, è necessario ereditare il <xref:System.Web.Security.RoleProvider> classe astratta.  
  
 Esistono due motivi principali per la creazione di un provider del ruoli personalizzato.  
  
-   È necessario archiviare le informazioni sui ruoli in un'origine dati che non è supportata dai provider di ruoli, incluso in .NET Framework, ad esempio un database di FoxPro, un database Oracle o altre origini dati.  
  
-   È necessario gestire le informazioni sui ruoli usando uno schema di database che è diverso dallo schema del database utilizzato dai provider forniti con .NET Framework. Un esempio comune di questo sarebbe i dati del ruolo già esistente in un database di SQL Server per una società o un sito Web.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Security.RoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario implementare un costruttore per una classe che eredita il <xref:System.Web.Security.RoleProvider> classe astratta. Valori di inizializzazione per un <xref:System.Web.Security.RoleProvider> implementazione vengono passati al <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> implementazione del metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matrice di stringhe di nomi utente da aggiungere ai ruoli specificati.</param>
        <param name="roleNames">Matrice di stringhe di nomi di ruoli a cui aggiungere i nomi utente specificati.</param>
        <summary>Aggiunge i nomi utente specificati ai ruoli specificati per l'applicazione <see langword="applicationName" /> configurata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> viene chiamato dal <xref:System.Web.Security.Roles> classe per associare gli utenti specificati ai ruoli specificati nell'origine dati. I ruoli vengono aggiunti da configurati <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Se uno dei nomi dei ruoli specificati è non trovato per l'applicazione configurata `applicationName`, è consigliabile che il provider di generare un <xref:System.Configuration.Provider.ProviderException>.  
  
 Se uno qualsiasi dei nomi utente specificati non sono associato a uno qualsiasi dei nomi dei ruoli specificati per l'applicazione configurata `applicationName`, è consigliabile che il provider di generare un <xref:System.Configuration.Provider.ProviderException>.  
  
 Se uno qualsiasi dei nomi utente specificati è `null` o è una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
 Se uno qualsiasi dei nomi dei ruoli specificati è `null` o è una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
 Se l'origine dati supporta le transazioni, è consigliabile includere ogni operazione di aggiunta in una transazione e il rollback della transazione e genera un'eccezione se uno qualsiasi aggiunge l'operazione ha esito negativo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio di implementazione del <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> (metodo).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'applicazione per cui archiviare e recuperare informazioni sui ruoli.</summary>
        <value>Nome dell'applicazione per cui archiviare e recuperare informazioni sui ruoli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.RoleProvider.ApplicationName%2A> viene usato per il <xref:System.Web.Security.Roles> classe per associare gli utenti e ruoli con diverse applicazioni. Ciò consente a più applicazioni di usare lo stesso database per archiviare le informazioni sui ruoli e utenti senza incorrere in conflitti tra nomi utente duplicati o i nomi dei ruoli. Più applicazioni ASP.NET possono utilizzare lo stesso database, specificando lo stesso valore nel <xref:System.Web.Security.Roles.ApplicationName%2A> proprietà. Il <xref:System.Web.Security.Roles.ApplicationName%2A> può essere impostata a livello di codice, o può essere impostata in modo dichiarativo nel file di configurazione dell'applicazione Web usando il `applicationName` attributo.  
  
 Se nessun <xref:System.Web.Security.RoleProvider.ApplicationName%2A> è specificata la proprietà, è consigliabile che il <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> valore della proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio di implementazione del <xref:System.Web.Security.RoleProvider.ApplicationName%2A> proprietà.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da creare.</param>
        <summary>Aggiunge un nuovo ruolo all'origine dati per l'oggetto <see langword="applicationName" /> configurato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A> viene chiamato dal <xref:System.Web.Security.Roles.CreateRole%2A> metodo per il <xref:System.Web.Security.Roles> classe da aggiungere al ruolo specificato per l'origine dati dell'applicazione configurata <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Se il nome del ruolo specificato esiste già per l'applicazione configurata `applicationName`, è `null`, o è una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
 Se il nome del ruolo specificato contiene una virgola, è consigliabile che la generazione di provider un'eccezione.  
  
 Se l'origine dati limita la lunghezza del nome del ruolo, ad esempio, tramite una colonna a lunghezza fissa di una tabella in un database, è consigliabile generare un'eccezione se il nome del ruolo supera la lunghezza massima consentita per l'origine dati.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio di implementazione del <xref:System.Web.Security.RoleProvider.CreateRole%2A> (metodo).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da eliminare.</param>
        <param name="throwOnPopulatedRole">Se <see langword="true" /> genera un'eccezione se <c>roleName</c> ha uno o più membri e non elimina <c>roleName</c>.</param>
        <summary>Rimuove un ruolo dall'origine dati per l'oggetto <see langword="applicationName" /> configurato.</summary>
        <returns>
          <see langword="true" /> se il ruolo è stato eliminato correttamente. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> viene chiamato dal <xref:System.Web.Security.Roles.DeleteRole%2A> e il <xref:System.Web.Security.Roles.DeleteRole%2A> metodi delle <xref:System.Web.Security.Roles> classe per eliminare l'oggetto role specificato dall'origine dati dell'applicazione configurata <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Quando si elimina un ruolo dall'origine dati, assicurarsi di eliminare anche tutte le associazioni tra un nome utente e il ruolo dell'applicazione configurata eliminato `applicationName`.  
  
 Se `throwOnPopulatedRole` viene `true`e il ruolo identificato dalle `roleName` parametro dispone di uno o più membri, generare un <xref:System.Configuration.Provider.ProviderException> e non elimina il ruolo. Se `throwOnPopulatedRole` è `false`, quindi eliminare il ruolo se è vuota o meno.  
  
 Se il nome del ruolo specificato non esiste, viene `null`, o è una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio di implementazione del <xref:System.Web.Security.RoleProvider.DeleteRole%2A> (metodo).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Ruolo in cui eseguire la ricerca.</param>
        <param name="usernameToMatch">Nome utente da cercare.</param>
        <summary>Ottiene una matrice di nomi utente con un ruolo in cui il nome utente contiene il nome utente specificato di cui verificare la corrispondenza.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti gli utenti in cui il nome utente corrisponde a <paramref name="usernameToMatch" /> e l'utente è un membro del ruolo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles> classe e restituisce un elenco di utenti in un ruolo in cui il nome utente contiene una corrispondenza dell'oggetto fornito `usernameToMatch` dell'applicazione configurata `applicationName`. Supporto dei caratteri jolly è incluso in base all'origine dati. Gli utenti vengono restituiti in ordine alfabetico per nome utente.  
  
 È consigliabile che genera una <xref:System.Configuration.Provider.ProviderException> se `roleName` non esiste nell'origine dati.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> implementazione.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un elenco di tutti i ruoli per l'applicazione <see langword="applicationName" /> configurata.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti i ruoli memorizzati nell'origine dati per l'applicazione<see langword="applicationName" /> configurata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> viene chiamato dal <xref:System.Web.Security.Roles.GetAllRoles%2A> metodo di <xref:System.Web.Security.Roles> classe da cui recuperare un elenco di nomi di ruolo dall'origine dati. Solo i ruoli per l'oggetto specificato <xref:System.Web.Security.RoleProvider.ApplicationName%2A> vengono recuperati.  
  
 Se non esiste alcun ruolo per l'applicazione configurata `applicationName`, è consigliabile che il provider restituisce una matrice di stringhe senza elementi.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio di implementazione del <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> (metodo).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utente per il quale restituire un elenco di ruoli.</param>
        <summary>Ottiene un elenco dei ruoli a cui appartiene un utente specificato per l'applicazione <see langword="applicationName" /> configurata.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti i ruoli a cui appartiene l'utente specificato per l'applicazione <see langword="applicationName" /> configurata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> viene chiamato dal <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodo di <xref:System.Web.Security.Roles> classe da cui recuperare i nomi di ruolo associato all'utente specificato dall'origine dati. Solo i ruoli dell'applicazione configurata <xref:System.Web.Security.RoleProvider.ApplicationName%2A> vengono recuperati.  
  
 Se non esiste alcun ruolo per l'utente specificato per l'applicazione configurata `applicationName`, è consigliabile che il provider restituisce una matrice di stringhe senza elementi.  
  
 Se il nome utente specificato è `null` o è una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio di implementazione del <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> (metodo).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo per il quale ottenere l'elenco di utenti.</param>
        <summary>Ottiene un elenco di utenti appartenenti al ruolo specificato per l'applicazione <see langword="applicationName" /> configurata.</summary>
        <returns>Matrice di stringhe contenente i nomi di tutti gli utenti membri del ruolo specificato per l'applicazione <see langword="applicationName" /> configurata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> viene chiamato dal <xref:System.Web.Security.Roles.GetUsersInRole%2A> metodo di <xref:System.Web.Security.Roles> classe da cui recuperare i nomi utente associati a un ruolo dall'origine dati. Solo i ruoli dell'applicazione configurata <xref:System.Web.Security.RoleProvider.ApplicationName%2A> vengono recuperati.  
  
 Se il nome del ruolo specificato non esiste per l'applicazione configurata `applicationName` oppure se è `null` o una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
 Se gli utenti non sono associati al ruolo specificato per l'applicazione configurata `applicationName`, è consigliabile che il provider restituisce una matrice di stringhe senza elementi.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio di implementazione del <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> (metodo).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nome utente da cercare.</param>
        <param name="roleName">Ruolo in cui eseguire la ricerca.</param>
        <summary>Ottiene un valore che indica se l'utente specificato appartiene al ruolo specificato per l'applicazione <see langword="applicationName" /> configurata.</summary>
        <returns>
          <see langword="true" /> se l'utente specificato appartiene al ruolo specificato per l'applicazione <see langword="applicationName" /> configurata; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> metodo viene chiamato dal <xref:System.Web.Security.Roles.IsUserInRole%2A> metodo per il <xref:System.Web.Security.Roles> classe per determinare se l'utente corrente connesso è associato a un ruolo dall'origine dati dell'applicazione configurata <xref:System.Web.Security.Roles.ApplicationName%2A>.  
  
 Se il nome utente specificato è `null` o è una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
 Se il nome del ruolo specificato è `null` o è una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio di implementazione del <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> (metodo).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matrice di stringhe di nomi utente da rimuovere dai ruoli specificati.</param>
        <param name="roleNames">Matrice di stringhe di nomi di ruoli da cui rimuovere i nomi utente specificati.</param>
        <summary>Rimuove i nomi utente specificati dai ruoli specificati per l'applicazione <see langword="applicationName" /> configurata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> viene chiamato da <xref:System.Web.Security.Roles.RemoveUserFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> , e <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> metodi del <xref:System.Web.Security.Roles> classe da rimuovere gli utenti specificati dai ruoli specificati nell'origine dati. Solo i ruoli dell'applicazione configurata <xref:System.Web.Security.RoleProvider.ApplicationName%2A> vengono modificati.  
  
 Se uno dei nomi dei ruoli specificati è non trovato per l'applicazione configurata `applicationName`, è consigliabile che il provider di generare un <xref:System.Configuration.Provider.ProviderException>.  
  
 Se uno qualsiasi dei nomi utente specificati non sono associato a uno qualsiasi dei nomi dei ruoli specificati per l'applicazione configurata `applicationName`, è consigliabile che il provider di generare un <xref:System.Configuration.Provider.ProviderException>.  
  
 Se uno qualsiasi dei nomi utente specificati è `null` o è una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
 Se uno qualsiasi dei nomi dei ruoli specificati è `null` o è una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
 Se l'origine dati supporta le transazioni, è consigliabile includere ogni operazione di rimozione in una transazione e che il rollback della transazione e genera un'eccezione se qualsiasi operazione di rimozione ha esito negativo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio di implementazione del <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> (metodo).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nome del ruolo da cercare nell'origine dati.</param>
        <summary>Ottiene un valore che indica se il nome del ruolo specificato esiste già nell'origine dati del ruolo per l'applicazione <see langword="applicationName" /> configurata.</summary>
        <returns>
          <see langword="true" /> se il nome del ruolo già esiste nell'origine dati per l'applicazione <see langword="applicationName" /> configurata; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A> viene chiamato dal <xref:System.Web.Security.Roles.RoleExists%2A> metodo per il <xref:System.Web.Security.Roles> classe per determinare se un nome di ruolo esiste nell'origine dati dell'applicazione configurata <xref:System.Web.Security.Roles.ApplicationName%2A>.  
  
 Se il nome del ruolo specificato è `null` o è una stringa vuota, è consigliabile che il provider di generare un'eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un esempio di implementazione del <xref:System.Web.Security.RoleProvider.RoleExists%2A> (metodo).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>