<Type Name="FormsAuthentication" FullName="System.Web.Security.FormsAuthentication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54ad5cda80aad2282cb59a046abadc6ed576ea4b" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48636343" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FormsAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FormsAuthentication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.FormsAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormsAuthentication" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormsAuthentication sealed" />
  <TypeSignature Language="F#" Value="type FormsAuthentication = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gestisce i servizi di autenticazione basata su form per le applicazioni Web. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Autenticazione basata su form consente a utenti e la convalida della password per le applicazioni Web che non richiedono l'autenticazione di Windows. Con autenticazione basata su form, informazioni utente vengono archiviate in un'origine dati esterna, ad esempio un <xref:System.Web.Security.Membership> database, o nel file di configurazione per un'applicazione. Quando un utente viene autenticato, autenticazione basata su form gestisce un ticket di autenticazione in un cookie o nell'URL in modo che un utente autenticato non è necessario specificare le credenziali con ogni richiesta.  
  
 Autenticazione basata su form viene abilitata impostando il `mode` attributo dell'elemento di configurazione da `Forms`. È possibile richiedere che tutte le richieste a un'applicazione contengano un ticket di autenticazione valido usando l'elemento di configurazione per negare la richiesta di qualsiasi utente sconosciuto, come illustrato nell'esempio seguente.  
  
```  
<system.web>  
  <authentication mode="Forms">  
    <forms loginUrl="login.aspx" />  
  </authentication>  
  <authorization>  
    <deny users="?" />  
  </authorization>  
</system.web>  
```  
  
 Nell'esempio precedente, qualsiasi richiesta per una pagina ASP.NET che fa parte dell'applicazione richiede un nome utente valido che viene fornito dall'autenticazione basata su form. Se non esiste alcun nome utente e quindi la richiesta viene reindirizzata da configurati <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 Il <xref:System.Web.Security.FormsAuthentication> classe fornisce l'accesso ai metodi e proprietà che è possibile usare in un'applicazione che autentica gli utenti. Il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metodo reindirizza un browser da configurati <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> per gli utenti di accedere a un'applicazione. Il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo reindirizza un utente autenticato all'URL protetto originale che è stato richiesto o per il <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. Sono disponibili anche metodi che consentono di gestire i ticket di autenticazione basata su form, se necessario.  
  
   
  
## Examples  
 Esempio di codice seguente illustra il file Web. config per un'applicazione ASP.NET che usa il provider di appartenenze ASP.NET per l'autenticazione basata su form e richiede tutti gli utenti da autenticare.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 Esempio di codice seguente mostra la pagina di accesso per un'applicazione ASP.NET che usa l'autenticazione basata su form e le appartenenze di ASP.NET.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">Usare il <see cref="T:System.Web.Security.FormsAuthentication" /> classe in un ambiente ospitato. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Valore dell'autorizzazione: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <related type="Article" href="http://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">Provider di autenticazione form</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormsAuthentication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Security.FormsAuthentication" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore non deve essere utilizzato dal codice.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static bool Authenticate (string name, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Authenticate(string name, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (name As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Authenticate(System::String ^ name, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * string -&gt; bool" Usage="System.Web.Security.FormsAuthentication.Authenticate (name, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.ValidateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome utente.</param>
        <param name="password">Password dell'utente.</param>
        <summary>Convalida un nome utente e una password mediante un confronto con le credenziali memorizzate nel file di configurazione di un'applicazione.</summary>
        <returns>
          <see langword="true" /> se nome utente e password sono validi; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo Authenticate consente di verificare le credenziali utente archiviate nella sezione del file di configurazione dell'applicazione. In alternativa, è possibile utilizzare l'appartenenza ASP.NET per archiviare le credenziali dell'utente e chiamare il <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> per verificare le credenziali. Per altre informazioni, vedere [gestione degli utenti tramite l'appartenenza](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 Per migliorare la sicurezza, è possibile crittografare le password archiviate nel file di configurazione per un'applicazione usando il <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> (metodo).  
  
   
  
## Examples  
 Esempio di codice seguente mostra le credenziali utente archiviate nel file Web. config per un'applicazione. I valori della password sono stato eseguito l'hashing usando il <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> (metodo).  
  
 `<authentication mode="Forms">`  
  
 `<forms loginUrl="login.aspx">`  
  
 `<credentials passwordFormat="SHA1">`  
  
 `<user name="user1"   password="27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C" />`  
  
 `<user name="user2"   password="D108F80936F78DFDD333141EBC985B0233A30C7A" />`  
  
 `<user name="user3" password="7BDB09781A3F23885CD43177C0508B375CB1B7E9"/>`  
  
 `</credentials>`  
  
 `</forms>`  
  
 `</authentication>`  
  
 Esempio di codice seguente mostra una pagina di accesso che utilizza il <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> metodo per convalidare le credenziali dell'utente.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieDomain">
      <MemberSignature Language="C#" Value="public static string CookieDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookieDomain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieDomain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookieDomain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieDomain : string" Usage="System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore del dominio del cookie di autenticazione basata su form.</summary>
        <value>Valore della proprietà <see cref="P:System.Web.HttpCookie.Domain" /> del cookie di autenticazione basata su form. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> valore della proprietà è impostato nel file di configurazione per un'applicazione ASP.NET usando il `domain` attributo dell'elemento di configurazione. Il <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> valore della proprietà determina il <xref:System.Web.HttpCookie.Domain%2A> che verrà usato per il cookie.  
  
   
  
## Examples  
 Il codice seguente viene impostata la `domain` attributo nel file Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    domain="contoso.com" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'applicazione è configurata per l'autenticazione basata su form senza cookie.</summary>
        <value>Uno dei valori <see cref="T:System.Web.HttpCookieMode" /> che indica se l'applicazione è configurata per l'autenticazione basata su form senza cookie. Il valore predefinito è <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> proprietà riflette il valore per il `cookieless` attributo dell'elemento di configurazione. Il <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> proprietà determina se il <xref:System.Web.Security.FormsAuthenticationTicket> verrà archiviato in un cookie di sessione nel browser o archiviato nel valore il <xref:System.Web.HttpRequest.QueryString%2A> proprietà.  
  
> [!NOTE]
>  Quando il <xref:System.Web.Security.FormsAuthenticationTicket> viene archiviato nell'URI, la lunghezza dell'URI generato potrebbe superare la lunghezza massima consentita. Ciò è probabilmente si verifichi quando il <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> viene impostata sul nome dell'applicazione e il nome dell'applicazione è lungo (40 o più caratteri), quando i nomi utente nell'applicazione sono lunghi o quando lunghe <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> le stringhe vengono archiviate nel <xref:System.Web.Security.FormsAuthenticationTicket> valore. Se l'URI generato è troppo lungo, il server Web restituirà un `400 - Bad Request` errore.  
  
   
  
## Examples  
 I seguente esempio di codice impostare il `cookieless` dell'attributo `AutoDetect` nel file Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="AutoDetect" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieSameSite">
      <MemberSignature Language="C#" Value="public static System.Web.SameSiteMode CookieSameSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.SameSiteMode CookieSameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieSameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SameSiteMode CookieSameSite { System::Web::SameSiteMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieSameSite : System.Web.SameSiteMode" Usage="System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore dell'attributo SameSite del cookie.</summary>
        <value>Uno dei valori di enumerazione che rappresenta la modalità di imposizione del cookie. Il valore predefinito è <see cref="F:System.Web.SameSiteMode.Lax" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiesSupported">
      <MemberSignature Language="C#" Value="public static bool CookiesSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookiesSupported" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookiesSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookiesSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiesSupported : bool" Usage="System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'applicazione è configurata per il supporto dell'autenticazione basata su form senza cookie.</summary>
        <value>
          <see langword="false" /> se l'applicazione è configurata per supportare l'autenticazione basata su form senza cookie; in caso contrario, <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> proprietà restituisce un valore basato di <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> valore e le funzionalità del browser.  
  
-   Se il <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> è impostata su <xref:System.Web.HttpCookieMode.UseCookies>, il <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> proprietà restituirà `true`.  
  
-   Se il <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> è impostata su <xref:System.Web.HttpCookieMode.UseUri>, il <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> proprietà restituirà `false`.  
  
-   Se il <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> è impostata su <xref:System.Web.HttpCookieMode.AutoDetect>, il <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> proprietà restituirà `true` se il browser supporta i cookie e i cookie sono abilitati; in caso contrario, il <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> restituisce proprietà `false`.  
  
-   Se il <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> è impostata su <xref:System.Web.HttpCookieMode.UseDeviceProfile>, il <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> proprietà restituirà `true` se la <xref:System.Web.HttpRequest.Browser%2A> corrente <xref:System.Web.HttpContext.Request%2A> supporta i cookie e il reindirizzamento tramite cookie; in caso contrario, il <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> proprietà restituirà `false`.  
  
   
  
## Examples  
 I seguente esempio di codice impostare il `cookieless` dell'attributo <xref:System.Web.HttpCookieMode.UseUri> nel file Web. config. Questa configurazione comporterà la <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> proprietà restituzione `false`.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket Decrypt(string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Decrypt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrypt (encryptedTicket As String) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ Decrypt(System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="static member Decrypt : string -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.Decrypt encryptedTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedTicket">Ticket di autenticazione crittografato.</param>
        <summary>Crea un oggetto <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> basato sul ticket crittografato di autenticazione basata su form passato al metodo.</summary>
        <returns>Un oggetto <see cref="T:System.Web.Security.FormsAuthenticationTicket" />. Se il parametro <paramref name="encryptedTicket" /> non è un ticket valido, viene restituito <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="encryptedTicket" /> è <see langword="null" />.  
  
\- oppure - 
 <paramref name="encryptedTicket" /> è una stringa vuota ("").  
  
\- oppure - 
La lunghezza del parametro <paramref name="encryptedTicket" /> è maggiore di 4096 caratteri.  
  
\- oppure - 
 <paramref name="encryptedTicket" /> presenta un formato non valido.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultUrl">
      <MemberSignature Language="C#" Value="public static string DefaultUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUrl : string" Usage="System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'URL verso cui la classe <see cref="T:System.Web.Security.FormsAuthentication" /> effettuerà il reindirizzamento se non viene specificato alcun URL di reindirizzamento.</summary>
        <value>URL verso cui la classe <see cref="T:System.Web.Security.FormsAuthentication" /> effettuerà il reindirizzamento se non viene specificato alcun URL di reindirizzamento. Il valore predefinito è "default.aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> valore della proprietà è impostato nel file di configurazione per un'applicazione ASP.NET usando il `defaultUrl` attributo dell'elemento di configurazione. Il <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> proprietà viene usata dal <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo se nessun URL restituito è incluso nella richiesta. Analogamente, il <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metodo restituirà il <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> se nessun URL restituito è incluso nella richiesta.  
  
   
  
## Examples  
 Il codice seguente viene impostata la `defaultUrl` attributo nel file Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCrossAppRedirects">
      <MemberSignature Language="C#" Value="public static bool EnableCrossAppRedirects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCrossAppRedirects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnableCrossAppRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCrossAppRedirects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableCrossAppRedirects : bool" Usage="System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se gli utenti autenticati possono essere reindirizzati a URL in altre applicazioni.</summary>
        <value>
          <see langword="true" /> se gli utenti autenticati possono essere reindirizzati a URL in altre applicazioni. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> valore della proprietà viene impostato utilizzando il `enableCrossAppRedirects` attributo dell'elemento di configurazione.  
  
 Il <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> proprietà viene verificata la <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo quando l'URL di reindirizzamento non punta a una pagina nell'applicazione corrente. Se <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> viene `true`, quindi viene eseguito il reindirizzamento; se <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> viene `false`, il browser viene reindirizzato alla pagina definita nel <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> proprietà.  
  
> [!NOTE]
>  Quando si reindirizzano le pagine tutte le applicazioni, è necessario assicurarsi che gli attributi specifici nell'elemento di configurazione vengano duplicati tra le applicazioni autenticate. Per altre informazioni e un esempio, vedere [form autenticazione tutte le applicazioni](http://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7).  
  
> [!IMPORTANT]
>  Quando si effettua il reindirizzamento tra applicazioni è consentito, il sito è vulnerabile a un potenziale exploit che indirizza gli utenti a un sito Web dannoso, ma usa la pagina di accesso per il sito. Verificare sempre che l'URL di reindirizzamento restituito dal <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metodo è un URL che si prevede in modo che è possibile assicurarsi di consentire i reindirizzamenti solo per siti Web approvati. È inoltre necessario verificare che l'URL di reindirizzamento Usa il protocollo appropriato (HTTP o HTTPS). Per eseguire queste verifiche, è possibile aggiungere un gestore di evento di postback per la pagina di accesso oppure è possibile aggiungere un gestore per il <xref:System.Web.UI.WebControls.Login.LoggedIn> eventi del <xref:System.Web.UI.WebControls.Login> controllo.  
  
   
  
## Examples  
 I seguente esempio di codice impostare il `enableCrossAppRedirects` dell'attributo `true` nel file Web. config per un'applicazione ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri"  
    requireSSL="true"   
    enableCrossAppRedirects="true" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableFormsAuthentication">
      <MemberSignature Language="C#" Value="public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableFormsAuthentication(class System.Collections.Specialized.NameValueCollection configurationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableFormsAuthentication (configurationData As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableFormsAuthentication(System::Collections::Specialized::NameValueCollection ^ configurationData);" />
      <MemberSignature Language="F#" Value="static member EnableFormsAuthentication : System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="System.Web.Security.FormsAuthentication.EnableFormsAuthentication configurationData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationData" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="configurationData">Raccolta nome/valore che contiene i valori per "defaultUrl" e/o "loginUrl". Il parametro può essere null se non sono presenti valori per l'URL predefinito o per l'URL di accesso.</param>
        <summary>Abilita l'autenticazione basata su form.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> proprietà viene `null`, che sia impostata sul valore dell'URL predefinito dal `configurationData` parametro. Se il <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> proprietà viene `null`, che sia impostata sul valore dell'URL di accesso dal `configurationData` parametro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'applicazione non è nella fase di inizializzazione di pre-avvio.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encrypt(class System.Web.Security.FormsAuthenticationTicket ticket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encrypt (ticket As FormsAuthenticationTicket) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encrypt(System::Web::Security::FormsAuthenticationTicket ^ ticket);" />
      <MemberSignature Language="F#" Value="static member Encrypt : System.Web.Security.FormsAuthenticationTicket -&gt; string" Usage="System.Web.Security.FormsAuthentication.Encrypt ticket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticket" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="ticket">Oggetto <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> con cui creare il ticket crittografato di autenticazione basata su form.</param>
        <summary>Produce una stringa contenente un ticket crittografato di autenticazione basata su form che è possibile utilizzare in un cookie HTTP.</summary>
        <returns>Stringa contenente un ticket crittografato di autenticazione basata su form.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente archivia il risultato del <xref:System.Web.Security.FormsAuthentication.Encrypt%2A> metodo in un cookie utilizzando la <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> proprietà e reindirizzare l'utente all'URL restituito dal <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> (metodo).  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ticket" /> è <see langword="null" />.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookieName">
      <MemberSignature Language="C#" Value="public static string FormsCookieName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookieName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookieName : string" Usage="System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del cookie utilizzato per memorizzare il ticket di autenticazione basata su form.</summary>
        <value>Nome del cookie utilizzato per memorizzare il ticket di autenticazione basata su form. Il valore predefinito è ".ASPXAUTH".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> valore della proprietà è impostato nel file di configurazione per un'applicazione ASP.NET usando il `name` attributo dell'elemento di configurazione. Il <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> viene utilizzato per fare riferimento al cookie che memorizza il <xref:System.Web.Security.FormsAuthenticationTicket> informazioni.  
  
   
  
## Examples  
 I seguente esempio di codice impostare il <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> valore della proprietà usando la `name` attributo nel file Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    name=".ASPXFORMSAUTH" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookiePath">
      <MemberSignature Language="C#" Value="public static string FormsCookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookiePath : string" Usage="System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il percorso del cookie di autenticazione basata su form.</summary>
        <value>Percorso del cookie utilizzato per memorizzare il ticket di autenticazione basata su form. L'impostazione predefinita è "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> valore della proprietà è impostato nel file di configurazione per un'applicazione ASP.NET usando il `path` attributo dell'elemento di configurazione. Il <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> consente di specificare il <xref:System.Web.HttpCookie.Path%2A> per il cookie che memorizza il <xref:System.Web.Security.FormsAuthenticationTicket> informazioni.  
  
   
  
## Examples  
 I seguente esempio di codice impostare il <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> valore della proprietà usando la `path` attributo nel file Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un cookie di autenticazione per un nome utente specifico.</summary>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nome dell'utente autenticato.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> per creare un cookie permanente, ovvero un cookie salvato in più sessioni del browser; in caso contrario, <see langword="false" />.</param>
        <summary>Crea un cookie di autenticazione per un nome utente specifico. I cookie non vengono impostati come parte della risposta in uscita, in modo da consentire all’applicazione un maggiore controllo sulle modalità di emissione dei cookie.</summary>
        <returns>Oggetto <see cref="T:System.Web.HttpCookie" /> contenente le informazioni sul ticket crittografato di autenticazione basata su form. Viene utilizzato il valore predefinito della proprietà <see cref="P:System.Web.Security.FormsAuthentication.FormsCookiePath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il percorso del cookie è determinato dal <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool * string -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nome dell'utente autenticato.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> per creare un cookie permanente, ovvero un cookie salvato in più sessioni del browser; in caso contrario, <see langword="false" />.</param>
        <param name="strCookiePath">Valore della proprietà <see cref="P:System.Web.HttpCookie.Path" /> del cookie di autenticazione.</param>
        <summary>Crea un cookie di autenticazione per un nome utente specifico. Tuttavia, non imposta il cookie come parte della risposta in uscita.</summary>
        <returns>Oggetto <see cref="T:System.Web.HttpCookie" /> contenente le informazioni sul ticket crittografato di autenticazione basata su form.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRedirectUrl">
      <MemberSignature Language="C#" Value="public static string GetRedirectUrl (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRedirectUrl(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRedirectUrl (userName As String, createPersistentCookie As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRedirectUrl(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetRedirectUrl : string * bool -&gt; string" Usage="System.Web.Security.FormsAuthentication.GetRedirectUrl (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nome dell'utente autenticato.</param>
        <param name="createPersistentCookie">Questo parametro viene ignorato.</param>
        <summary>Restituisce l'URL di reindirizzamento della richiesta originale che ha provocato il reindirizzamento alla pagina di accesso.</summary>
        <returns>Stringa contenente l'URL di reindirizzamento oppure Null se <paramref name="userName" /> è Null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questo metodo quando si desidera eseguire il reindirizzamento nel codice dell'applicazione invece di usare il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> (metodo).  
  
 Il <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metodo viene restituito l'URL specificato nella stringa di query utilizzando il `ReturnURL` nome della variabile. Ad esempio, nell'URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, il <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metodo restituisce l'URL restituito `caller.aspx`. Se il `ReturnURL` variabile non esiste, il <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metodo restituisce l'URL nel <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> proprietà.  
  
 ASP.NET aggiunge automaticamente l'URL restituito quando il browser viene reindirizzato alla pagina di accesso.  
  
 Per impostazione predefinita, il `ReturnUrl` variabile deve fare riferimento a una pagina all'interno dell'applicazione corrente. Se `ReturnUrl` fa riferimento a una pagina di un'altra applicazione o in un server diverso, il <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metodi restituisce l'URL nel <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> proprietà. Se si desidera consentire l'URL restituito fare riferimento a una pagina all'esterno dell'applicazione corrente, è necessario impostare il <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> proprietà `true` usando il `enableCrossAppRedirects` attributo dell'elemento di configurazione.  

Questo metodo non crea un cookie.
  
> [!IMPORTANT]
>  Impostando il <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> proprietà `true` per consentire i reindirizzamenti tra applicazioni è una potenziale minaccia alla sicurezza. Per altre informazioni, vedere la proprietà <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
   
  
## Examples  
 Nell'esempio di codice i reindirizzamenti di esempio utenti autenticati all'URL restituiti dal <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> (metodo).  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="HashPasswordForStoringInConfigFile">
      <MemberSignature Language="C#" Value="public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HashPasswordForStoringInConfigFile(string password, string passwordFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashPasswordForStoringInConfigFile (password As String, passwordFormat As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HashPasswordForStoringInConfigFile(System::String ^ password, System::String ^ passwordFormat);" />
      <MemberSignature Language="F#" Value="static member HashPasswordForStoringInConfigFile : string * string -&gt; string" Usage="System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (password, passwordFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.CreateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="passwordFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">Password per cui generare l'hash.</param>
        <param name="passwordFormat">Algoritmo hash da utilizzare. <c>passwordFormat</c> è un elemento <see langword="String" /> che rappresenta uno dei valori dell'enumerazione <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" />.</param>
        <summary>Produce una password con hash che è possibile memorizzare in un file di configurazione in base alla password e all'algoritmo hash specificati.</summary>
        <returns>Password per cui è stato generato l' hash.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> metodo crea un valore hash delle password che può essere utilizzato quando l'autenticazione basata su form di archiviazione delle credenziali nel file di configurazione per un'applicazione.  
  
 Vengono utilizzate credenziali di autenticazione archiviate nel file di configurazione per un'applicazione per il <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> metodo per la verifica delle password per gli utenti di un'applicazione. In alternativa, è possibile utilizzare l'appartenenza ASP.NET per archiviare le credenziali dell'utente. Per altre informazioni, vedere [gestione degli utenti tramite l'appartenenza](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
   
  
## Examples  
 Esempio di codice seguente accetta un nome utente, password e un tipo di hash e consente di visualizzare la sezione della configurazione che include la definizione di utente e password con hash.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationHashPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationHashPassword/CS/formsauthenticationhashpasswordcs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationHashPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationHashPassword/VB/formsauthenticationhashpasswordvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="password" /> è <see langword="null" />  
  
oppure 
 <paramref name="passwordFormat" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="passwordFormat" /> non è un valore valido di <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" />.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Initialize();" />
      <MemberSignature Language="F#" Value="static member Initialize : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza l'oggetto <see cref="T:System.Web.Security.FormsAuthentication" /> in base alle impostazioni di configurazione dell'applicazione</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.Initialize%2A> metodo viene chiamato quando il <xref:System.Web.Security.FormsAuthenticationModule> crea un'istanza del <xref:System.Web.Security.FormsAuthentication> classe. Questo metodo non è destinato a essere chiamato dal codice dell'utente.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public static bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'autenticazione basata su form è abilitata o meno.</summary>
        <value>
          <see langword="true" /> se l'autenticazione basata su moduli è abilitata; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginUrl">
      <MemberSignature Language="C#" Value="public static string LoginUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string LoginUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoginUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LoginUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoginUrl : string" Usage="System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'URL della pagina di accesso verso cui la classe <see cref="T:System.Web.Security.FormsAuthentication" /> effettuerà il reindirizzamento.</summary>
        <value>URL della pagina di accesso verso cui la classe <see cref="T:System.Web.Security.FormsAuthentication" /> effettuerà il reindirizzamento. Il valore predefinito è "login.aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> valore della proprietà è impostato nel file di configurazione per un'applicazione ASP.NET usando il `loginUrl` attributo dell'elemento di configurazione. Il <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> viene usato per il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (metodo).  
  
   
  
## Examples  
 Il codice seguente viene impostata la `loginUrl` attributo nel file Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectFromLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Reindirizza un utente autenticato all'URL inizialmente richiesto o all'URL predefinito.</summary>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nome dell'utente autenticato.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> per creare un cookie permanente, ovvero un cookie salvato in più sessioni del browser; in caso contrario, <see langword="false" />.</param>
        <summary>Reindirizza un utente autenticato all'URL inizialmente richiesto o all'URL predefinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo reindirizza all'URL specificato nella stringa di query utilizzando il `ReturnURL` nome della variabile. Ad esempio, nell'URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo reindirizza all'URL restituito `caller.aspx`. Se il `ReturnURL` variabile non esiste, il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> reindirizza all'URL nel metodo il <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> proprietà.  
  
 ASP.NET aggiunge automaticamente l'URL restituito quando il browser viene reindirizzato alla pagina di accesso.  
  
 Per impostazione predefinita, il `ReturnUrl` variabile deve fare riferimento a una pagina all'interno dell'applicazione corrente. Se `ReturnUrl` fa riferimento a una pagina di un'altra applicazione o in un server diverso, il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodi reindirizza all'URL nel <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> proprietà. Se si desidera consentire reindirizza a una pagina all'esterno dell'applicazione corrente, è necessario impostare il <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> proprietà `true` usando il `enableCrossAppRedirects` attributo dell'elemento di configurazione.  
  
> [!IMPORTANT]
>  Impostando il <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> proprietà `true` per consentire i reindirizzamenti tra applicazioni è una potenziale minaccia alla sicurezza. Per altre informazioni, vedere la proprietà <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
 Se il <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> proprietà è `true`e il `ReturnUrl` variabile si trova all'interno dell'applicazione corrente o il <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> proprietà è `true`, il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo rilascia un ticket di autenticazione e lo inserisce nel utilizzo di cookie predefinito di <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> (metodo).  
  
 Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> è `false` e il percorso di reindirizzamento corrisponde a un URL nell'applicazione corrente, il ticket viene rilasciato come parte dell'URL di reindirizzamento. Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> viene `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> viene `true`e il reindirizzamento URL non fa riferimento a una pagina all'interno dell'applicazione corrente, il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo rilascia un ticket di autenticazione e lo inserisce nel <xref:System.Web.HttpRequest.QueryString%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente reindirizza gli utenti convalidati all'URL inizialmente richiesto o <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. L'esempio di codice Usa le appartenenze di ASP.NET per convalidare gli utenti. Per altre informazioni sull'appartenenza ASP.NET, vedere [gestione degli utenti tramite l'appartenenza](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">L'URL restituito specificato nella stringa di query contiene un protocollo diverso da HTTP: o HTTPS:.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nome dell'utente autenticato.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> per creare un cookie permanente, ovvero un cookie salvato in più sessioni del browser; in caso contrario, <see langword="false" />.</param>
        <param name="strCookiePath">Percorso del cookie del ticket di autenticazione basata su form.</param>
        <summary>Reindirizza un utente autenticato all'URL inizialmente richiesto o all'URL predefinito utilizzando il percorso del cookie specificato per il cookie di autenticazione basata su form.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo reindirizza all'URL restituito specificato nella stringa di query utilizzando il `ReturnURL` nome della variabile. Ad esempio, nell'URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo reindirizza all'URL restituito `caller.aspx`. Se il `ReturnURL` variabile non esiste, il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> reindirizza all'URL nel metodo il <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> proprietà.  
  
 ASP.NET aggiunge automaticamente l'URL restituito quando il browser viene reindirizzato alla pagina di accesso.  
  
 Per impostazione predefinita, il `ReturnUrl` variabile deve fare riferimento a una pagina all'interno dell'applicazione corrente. Se `ReturnUrl` fa riferimento a una pagina di un'altra applicazione o in un server diverso, il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> reindirizza all'URL nel metodo il <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> proprietà. Se si desidera consentire reindirizza a una pagina all'esterno dell'applicazione corrente, è necessario impostare il <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> proprietà `true` usando il `enableCrossAppRedirects` attributo dell'elemento di configurazione.  
  
> [!IMPORTANT]
>  Impostando il <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> proprietà `true` per consentire i reindirizzamenti tra applicazioni è una potenziale minaccia alla sicurezza. Per altre informazioni, vedere la proprietà <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
 Se il <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> proprietà è `true`e il `ReturnUrl` variabile si trova all'interno dell'applicazione corrente o il <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> proprietà è `true`, il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo rilascia un ticket di autenticazione e lo inserisce nel cookie specificato per il `strCookiePath` parametro usando il <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> (metodo).  
  
 Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> è `false` e il percorso di reindirizzamento corrisponde a un URL nell'applicazione corrente, il ticket viene rilasciato come parte dell'URL di reindirizzamento. Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> viene `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> viene `true`e il reindirizzamento URL non fa riferimento a una pagina all'interno dell'applicazione corrente, il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo rilascia un ticket di autenticazione e lo inserisce nel <xref:System.Web.HttpRequest.QueryString%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">L'URL restituito specificato nella stringa di query contiene un protocollo diverso da HTTP: o HTTPS:.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Reindirizza il browser all'URL di accesso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metodo reindirizza il browser per il <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 Il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (metodo) non cancella il cookie di autenticazione basata su form. È possibile usare la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metodo in combinazione con il <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo per disconnettere un utente e consentire a un utente diverso per l'accesso.  
  
 A differenza di <xref:System.Web.HttpResponse.Redirect%2A?displayProperty=nameWithType> metodo, questo metodo non termina la richiesta chiamando <xref:System.Web.HttpResponse.End%2A?displayProperty=nameWithType>. Ciò significa che il codice che segue il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> chiamata al metodo verrà eseguito.  
  
   
  
## Examples  
 Esempio di codice seguente consente di cancellare i cookie di autenticazione basata su form mediante la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo e reindirizza l'utente all'account di accesso di pagina usando il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (metodo).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage();" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reindirizza il browser all'URL di accesso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metodo reindirizza il browser per il <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 Il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (metodo) non cancella il cookie di autenticazione basata su form. È possibile usare la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metodo in combinazione con il <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo per disconnettere un utente e consentire a un utente diverso per l'accesso.  
  
   
  
## Examples  
 Esempio di codice seguente consente di cancellare i cookie di autenticazione basata su form mediante la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo e reindirizza l'utente all'account di accesso di pagina usando il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (metodo).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage (string extraQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage(string extraQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage (extraQueryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage(System::String ^ extraQueryString);" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage extraQueryString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extraQueryString">Stringa di query da includere nell'URL di reindirizzamento.</param>
        <summary>Reindirizza il browser all'URL di accesso con la stringa di query specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metodo reindirizza il browser per il <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> e include le `extraQueryString` valore come la <xref:System.Management.ManagementQuery.QueryString%2A> dell'URL di reindirizzamento.  
  
 Il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (metodo) non cancella il cookie di autenticazione basata su form. È possibile usare la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metodo in combinazione con il <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo per disconnettere un utente e consentire a un utente diverso per l'accesso.  
  
   
  
## Examples  
 Esempio di codice seguente consente di cancellare i cookie di autenticazione basata su form mediante la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo e reindirizza l'utente all'account di accesso di pagina usando il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (metodo).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signout2cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signout2vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RenewTicketIfOld">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld(class System.Web.Security.FormsAuthenticationTicket tOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RenewTicketIfOld (tOld As FormsAuthenticationTicket) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ RenewTicketIfOld(System::Web::Security::FormsAuthenticationTicket ^ tOld);" />
      <MemberSignature Language="F#" Value="static member RenewTicketIfOld : System.Web.Security.FormsAuthenticationTicket -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.RenewTicketIfOld tOld" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tOld" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="tOld">Ticket di autenticazione basata su form da aggiornare.</param>
        <summary>Aggiorna in modo condizionale la data e l'ora di emissione e di scadenza di un oggetto <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</summary>
        <returns>Classe <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> aggiornata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.RenewTicketIfOld%2A> metodo aggiorna la data di scadenza e l'ora dell'oggetto fornito <xref:System.Web.Security.FormsAuthenticationTicket> se la data e ora correnti meno il <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> valore è maggiore di <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> valore meno la data e ora correnti.  
  
 Il ticket viene aggiornato con le <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> proprietà è impostata per la data e ora correnti e il <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> proprietà è impostata sulla data corrente e ora originale <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> valore meno originale <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> valore.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RequireSSL">
      <MemberSignature Language="C#" Value="public static bool RequireSSL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequireSSL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequireSSL : bool" Usage="System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il cookie di autenticazione basata su form richiede SSL per essere restituito al server.</summary>
        <value>
          <see langword="true" /> se è richiesta la crittografia SSL per restituire il cookie di autenticazione basata su form al server; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> valore della proprietà è impostato nel file di configurazione per un'applicazione ASP.NET usando il `requireSSL` attributo dell'elemento di configurazione. È possibile specificare nel file Web. config per l'applicazione ASP.NET se SSL (Secure Sockets Layer) è obbligatorio per restituire il cookie di autenticazione basata su form al server impostando la `requireSSL` attributo. Per ulteriori informazioni, vedere <xref:System.Web.HttpCookie.Secure%2A>.  
  
 È consigliabile che se si configurano `requireSSL` come `false`, è anche possibile configurare `slidingExpiration` come `false`, per ridurre la quantità di tempo per cui un ticket è valido.  
  
   
  
## Examples  
 Il codice seguente viene impostata la `requireSSL` attributo nel file Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    requireSSL="true"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un ticket di autenticazione per il nome utente fornito e lo aggiunge all'insieme di cookie della risposta o all'URL se si utilizza l'autenticazione senza cookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metodo aggiunge un ticket di autenticazione basata su form per la raccolta di cookie o l'URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> è `false`. Il ticket di autenticazione basata su form fornisce le informazioni di autenticazione basata su form per la successiva richiesta effettuata dal browser. Con autenticazione basata su form, è possibile usare il <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metodo quando si desidera autenticare un utente, ma comunque mantenere il controllo della navigazione con reindirizzamenti.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=197376">Spiegazione: Autenticazione basata su form in ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=197377">Procedura: Usare l'appartenenza in ASP.NET 2.0</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nome di un utente autenticato. Non è necessario che sia associato a un account di Windows.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> per creare un cookie permanente, ovvero un cookie salvato in più sessioni del browser. In caso contrario, <see langword="false" />.</param>
        <summary>Crea un ticket di autenticazione per il nome utente fornito e lo aggiunge all'insieme di cookie della risposta o all'URL se si utilizza l'autenticazione senza cookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metodo aggiunge un ticket di autenticazione basata su form per l'insieme di cookie o l'URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> è `false`. Il ticket di autenticazione basata su form fornisce le informazioni di autenticazione basata su form per la successiva richiesta effettuata dal browser. Con autenticazione basata su form, è possibile usare il <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metodo quando si desidera autenticare un utente, ma comunque mantenere il controllo della navigazione con reindirizzamenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> è <see langword="true" /> e <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> è <see langword="false" />.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nome di un utente autenticato.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> per creare un cookie permanente, ovvero un cookie salvato in più sessioni del browser; in caso contrario, <see langword="false" />.</param>
        <param name="strCookiePath">Percorso del cookie del ticket di autenticazione basata su form.</param>
        <summary>Crea un ticket di autenticazione per il nome utente fornito e lo aggiunge all'insieme di cookie della risposta utilizzando il percorso del cookie fornito o utilizzando l'URL se si utilizza l'autenticazione senza cookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metodo aggiunge un ticket di autenticazione basata su form per la raccolta di cookie o l'URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> è `false`. Il ticket di autenticazione basata su form fornisce le informazioni di autenticazione basata su form per la successiva richiesta effettuata dal browser. Con autenticazione basata su form, è possibile usare il <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metodo quando si desidera autenticare un utente, ma comunque mantenere il controllo della navigazione con reindirizzamenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> è <see langword="true" /> e <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> è <see langword="false" />.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=197376">Spiegazione: Autenticazione basata su form in ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=197377">Procedura: Usare l'appartenenza in ASP.NET 2.0</related>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut();" />
      <MemberSignature Language="F#" Value="static member SignOut : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove dal browser il ticket di autenticazione basata su form.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo rimuove le informazioni di ticket di autenticazione basata su form dal cookie o l'URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> è `false`. È possibile usare la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo in combinazione con il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metodo per disconnettere un utente e consentire a un utente diverso per l'accesso.  
  
 Se si esegue esclusivamente in modalità senza cookie, o se si supportano utenti sia autenticati e anonimi, deve esplicitamente controllare il reindirizzamento alla pagina di accesso se è necessaria la logica di business speciali da eseguire in seguito a rimuovendo l'identificatore anonimo.  
  
 Quando la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> viene chiamato il metodo, un reindirizzamento alla pagina di accesso dell'applicazione viene eseguito chiamando il <xref:System.Web.HttpResponse.Redirect%2A> metodo con il `endResponse` parametro impostato su `false`. Il reindirizzamento non viene eseguita fino a quando la pagina corrente è stata eseguita, in modo da poter eseguire il codice aggiuntivo. Se il codice non contiene un reindirizzamento esplicito in un'altra pagina, l'utente viene reindirizzato alla pagina di accesso configurata nel file di configurazione dell'applicazione.  
  
 La chiamata di <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo rimuove solo il cookie di autenticazione form. Il server Web non vengono archiviati i ticket di autenticazione valido e scaduti per confronti successivi. In questo modo, il sito vulnerabile agli attacchi di tipo replay se un utente malintenzionato ottiene un cookie di autenticazione valido. Per migliorare la sicurezza quando si usa un cookie di autenticazione, è necessario eseguire le operazioni seguenti:  
  
-   Usare la scadenza assoluta per i cookie di autenticazione form impostando la <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> proprietà `false`. Questo limita la finestra in cui un cookie di cui può essere riprodotte.  
  
-   Solo inviare e accettare i cookie di autenticazione tramite Secure Sockets Layer (SSL), impostando il <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> proprietà `true` ed eseguendo l'intero sito Web in una connessione SSL. Impostando il <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> proprietà `true` assicura che ASP.NET non invierà mai un cookie di autenticazione per il browser tramite una connessione non SSL, tuttavia, il client potrebbe non rispettano l'impostazione protetta nel cookie. Ciò significa che il client può inviare il cookie di autenticazione form tramite una connessione non SSL, pertanto lasciandolo vulnerabile ad assumere il controllo. È possibile impedire che un client invia il cookie di autenticazione form in chiaro eseguendo l'intero sito Web in una connessione SSL.  
  
-   Usare un archivio permanente nel server per registrare quando un utente si disconnette il sito Web e quindi usare un evento di applicazione, ad esempio <xref:System.Web.HttpApplication.PostAuthenticateRequest> evento per determinare se l'utente corrente è stato autenticato con autenticazione basata su form. Se l'utente è stato autenticato con autenticazione basata su form, e se le informazioni contenute in un archivio permanente indicano l'utente viene disconnesso, immediatamente Cancella il cookie di autenticazione e reindirizzare il browser torna alla pagina di accesso. Dopo l'accesso, aggiornare l'archiviazione in modo da riflettere che l'utente è connesso. Quando si usa questo metodo, l'applicazione deve tenere traccia dello stato ha eseguito l'accesso dell'utente e deve imporre inattivo agli utenti di effettuare la disconnessione.  
  
   
  
## Examples  
 Esempio di codice seguente consente di cancellare i cookie di autenticazione basata su form mediante la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metodo e reindirizza l'utente all'account di accesso di pagina usando il <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (metodo).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=197376">Spiegazione: Autenticazione basata su form in ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=197377">Procedura: Usare l'appartenenza in ASP.NET 2.0</related>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public static bool SlidingExpiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SlidingExpiration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : bool" Usage="System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se è abilitata la scadenza variabile.</summary>
        <value>Il valore è <see langword="true" /> se la scadenza variabile è abilitata; in caso contrario è <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> valore della proprietà viene impostato utilizzando il `slidingExpiration` attributo dell'elemento di configurazione.  
  
 Scadenza con scorrimento Reimposta l'ora di scadenza per un cookie di autenticazione valido se viene effettuata una richiesta e più della metà dell'intervallo di timeout è trascorso. Se il cookie scade, l'utente deve ripetere l'autenticazione. Impostando il <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> proprietà `false` può migliorare la sicurezza di un'applicazione riducendo il tempo per cui è valido, un cookie di autenticazione base configurato `timeout` valore.  
  
 È consigliabile che se si configurano `requireSSL` come `false`, è anche possibile configurare `slidingExpiration` come `false`, per ridurre la quantità di tempo per cui un ticket è valido.  
  
   
  
## Examples  
 I seguente esempio di codice impostare il `slidingExpiration` dell'attributo `false` nel file Web. config per un'applicazione ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    name=".ASPXFORMSAUTH"  
    cookieless="UseCookies"  
    requireSSL="true"   
    slidingExpiration="false" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicurezza delle applicazioni Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TicketCompatibilityMode">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TicketCompatibilityMode As TicketCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::TicketCompatibilityMode TicketCompatibilityMode { System::Web::Configuration::TicketCompatibilityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TicketCompatibilityMode : System.Web.Configuration.TicketCompatibilityMode" Usage="System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TicketCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se utilizzare lo standard Coordinated Universal Time (UTC) o l'ora locale per la data di scadenza del ticket.</summary>
        <value>Valore che indica se utilizzare lo standard Coordinated Universal Time (UTC) o l'ora locale per la data di scadenza del ticket.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public static TimeSpan Timeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan Timeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan" Usage="System.Web.Security.FormsAuthentication.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la quantità di tempo disponibile prima che un ticket di autenticazione scada.</summary>
        <value>La quantità di tempo disponibile prima che un ticket di autenticazione scada.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>