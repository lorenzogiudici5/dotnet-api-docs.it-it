<Type Name="MachineKey" FullName="System.Web.Security.MachineKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a04e54870e931f46132f91064b0a0660e9d9ea4e" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48621646" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MachineKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MachineKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MachineKey" />
  <TypeSignature Language="VB.NET" Value="Public Class MachineKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class MachineKey abstract sealed" />
  <TypeSignature Language="F#" Value="type MachineKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Consente di crittografare o sottoporre a hashing i dati (o entrambi) tramite gli stessi algoritmi e valori chiave utilizzati per l'autenticazione e lo stato di visualizzazione dei form di ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.MachineKey> classe fornisce metodi che espongono l'hash e crittografia per la logica fornita da ASP.NET. Per informazioni su quali crittografia e algoritmi di hash in ASP.NET viene utilizzato e i valori chiave utilizzato con essi, vedere [machineKey Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
> [!WARNING]
>  Le API di <xref:System.Web.Security.MachineKey> devono essere utilizzate solo in un'applicazione ASP.NET. Il comportamento delle API MachineKey all'esterno del contesto di un'applicazione ASP.NET Ã¨ non definito  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.ArgumentNullException">I dati da crittografare, codificare in hash, decrittografare o convalidare non esistono</exception>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static byte[] Decode (string encodedData, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Decode(string encodedData, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (encodedData As String, protectionOption As MachineKeyProtection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Decode(System::String ^ encodedData, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Decode : string * System.Web.Security.MachineKeyProtection -&gt; byte[]" Usage="System.Web.Security.MachineKey.Decode (encodedData, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedData" Type="System.String" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="encodedData">I dati crittografati per decrittografare e/o convalidare.</param>
        <param name="protectionOption">Indica se il parametro <c>encodedData</c> deve essere crittografato e/o sottoposto a hashing.</param>
        <summary>Decodifica e/o convalida dati crittografati o forniti con un codice HMAC (Hash-based Message Authentication Code).</summary>
        <returns>Matrice <see cref="T:System.Byte" /> che rappresenta i dati decrittografati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per informazioni su quali algoritmi hash e crittografia ASP.NET utilizza per decrittografare e convalidare i dati che viene passati, vedere [machineKey Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Web.Security.MachineKey> Cenni preliminari sulla classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] data, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] data, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (data As Byte(), protectionOption As MachineKeyProtection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encode(cli::array &lt;System::Byte&gt; ^ data, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] * System.Web.Security.MachineKeyProtection -&gt; string" Usage="System.Web.Security.MachineKey.Encode (data, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="data">Dati da crittografare.</param>
        <param name="protectionOption">Indica se il parametro <c>data</c> deve essere crittografato e/o sottoposto a hashing.</param>
        <summary>Crittografa dati e/o aggiunge un codice HMAC (Hash-based Message Authentication).</summary>
        <returns>Il valore crittografato, il valore di input con un HMAC accodato o il risultato della crittografia del valore di input con un HMAC accodato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per informazioni su quali algoritmi hash e crittografia ASP.NET utilizza per decrittografare e convalidare i dati che viene passati, vedere [machineKey Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Web.Security.MachineKey> Cenni preliminari sulla classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Protect (userData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="purposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="userData">Dati da proteggere. Questi dati vengono passati come testo normale.</param>
        <param name="purposes">Elenco di scopi per i dati. Se questo valore Ã¨ specificato, lo stesso elenco deve essere passato al metodo <see cref="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" /> per decifrare il testo crittografato restituito.</param>
        <summary>Protegge i dati specificati crittografandoli o firmandoli.</summary>
        <returns>I dati di testo crittografato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo sostituisce il <xref:System.Web.Security.MachineKey.Encode%2A> metodo, che il chiamante deve specificare se i dati non crittografati devono essere crittografati, firmato, o entrambi. Il <xref:System.Web.Security.MachineKey.Protect%2A> metodo esegue l'operazione appropriata e in modo sicuro protegge i dati. Dati del testo crittografato generati da questo metodo possono solo essere decifrati dal <xref:System.Web.Security.MachineKey.Unprotect%2A> (metodo).  
  
 Il `purposes` parametro Ã¨ un elenco facoltativo di motivi per cui Ã¨ possibile bloccare il testo crittografato per uno scopo specifico. Questo parametro consente di isolare le operazioni di crittografia eseguite da sottosistemi diversi all'interno di un'applicazione. Un client dannoso non deve essere in grado di ottenere il risultato di un sottosistema <xref:System.Web.Security.MachineKey.Protect%2A> metodo e feed come input a un altro sottosistema <xref:System.Web.Security.MachineKey.Unprotect%2A> metodo, che potrebbe compromettere la protezione dell'applicazione. Il `purposes` parametro consente di verificare che i dati protetti possono essere utilizzati solo dal componente che lo ha generato inizialmente. Le applicazioni devono assicurarsi che ogni sottosistema usi un valore univoco `purposes` elenco.  
  
 Ad esempio, per proteggere o rimuovere la protezione di un token di autenticazione, Ã¨ possibile chiamare il metodo usando codice simile al seguente:  
  
```csharp  
MachineKey.Protect(..., "Authentication token");  
MachineKey.Unprotect(..., "Authentication token");  
```  
  
```vb  
MachineKey.Protect(..., "Authentication token")  
MachineKey.Unprotect(..., "Authentication token")  
```  
  
 Le applicazioni possono generare in modo dinamico il `purposes` parametro. In tal caso, come prefisso nei valori specificati dall'utente con un valore fisso (ad esempio "`Username:` " + *username*) per ridurre al minimo il rischio di un client dannoso alla creazione di input che corrisponde a un token che viene usato da altre parti del sistema. Dopo aver stringhe fisse devono provenire tutte le stringhe generato dinamicamente. Ad esempio, per proteggere o rimuovere la protezione di un messaggio privato che Ã¨ associato a un utente specifico, usare codice simile al seguente:  
  
```csharp  
MachineKey.Protect(..., "Private message", "Recipient: " + username);  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username);  
```  
  
```vb  
MachineKey.Protect(..., "Private message", "Recipient: " + username)  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username)  
```  
  
 Quando la <xref:System.Web.Security.MachineKey.Unprotect%2A> metodo viene chiamato, il valore fornito per il `purposes` parametro deve essere lo stesso valore fornito per il <xref:System.Web.Security.MachineKey.Protect%2A> (metodo). In caso contrario, l'operazione avrÃ  esito negativo con un <xref:System.Security.Cryptography.CryptographicException> eccezione.  
  
 Le impostazioni di configurazione necessari per il <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45?displayProperty=nameWithType> opzione sono necessarie per questo metodo anche se il <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=nameWithType> non Ã¨ impostata il <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45> opzione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="userData" /> Ã¨ null.</exception>
        <exception cref="T:System.ArgumentException">La matrice degli scopi contiene una o piÃ¹ voci costituite solo da spazi vuoti.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] protectedData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] protectedData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (protectedData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ protectedData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Unprotect (protectedData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectedData" Type="System.Byte[]" />
        <Parameter Name="purposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="protectedData">Dati del testo crittografato da cui rimuovere la protezione.</param>
        <param name="purposes">Elenco di scopi che descrivono la funzione dei dati. Questo valore deve essere uguale al valore passato al metodo <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" /> quando i dati sono stati protetti.</param>
        <summary>Consente di rimuovere la protezione dei dati specificati protetti dal metodo <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />.</summary>
        <returns>I dati non crittografati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per informazioni su questo metodo, vedere il <xref:System.Web.Security.MachineKey.Protect%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="protectedData" /> Ã¨ null.</exception>
        <exception cref="T:System.ArgumentException">La matrice degli scopi contiene una o piÃ¹ voci costituite solo da spazi vuoti.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Ecco alcune possibili cause: 
-   I dati protetti sono stati alterati.  
  
- Il valore del parametro <paramref name="purposes" /> non Ã¨ lo stesso del valore specificato quando sono stati protetti i dati.  
  
- L'applicazione viene distribuita in piÃ¹ server e usa chiavi di crittografia generate automaticamente.</exception>
      </Docs>
    </Member>
  </Members>
</Type>